Search.setIndex({"alltitles": {"API and modules": [[0, null]], "Accessing data": [[7, "accessing-data"]], "Acknowledgements": [[125, "acknowledgements"]], "Adapter": [[126, "adapter"]], "Adapters and Estimators": [[126, "adapters-and-estimators"]], "Advanced DA pipeline": [[21, "advanced-da-pipeline"]], "Adversarial domain adaptation methods.": [[6, null]], "Comparison of DA classification methods": [[22, null]], "Comparison of score between reweighting methods:": [[18, "comparison-of-score-between-reweighting-methods"]], "Comparison of score between subspace methods:": [[19, "comparison-of-score-between-subspace-methods"]], "Computation times": [[5, null], [11, null], [20, null], [24, null], [28, null], [129, null]], "Contents": [[125, "contents"]], "Contributing to SKADA": [[29, null]], "Creation": [[7, "creation"]], "DA Adapter pipeline": [[21, "da-adapter-pipeline"]], "DA Classifier estimator": [[21, "da-classifier-estimator"]], "DA dataset": [[21, "da-dataset"]], "DA estimator in a pipeline": [[21, "da-estimator-in-a-pipeline"]], "DA estimator with grid search": [[21, "da-estimator-with-grid-search"]], "DA estimators with score cross-validation": [[21, "da-estimators-with-score-cross-validation"]], "DA methods": [[12, "da-methods"]], "DA metrics": [[125, "da-metrics"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "DA pipeline": [[0, "da-pipeline"]], "DA validation procedures": [[12, "da-validation-procedures"]], "DASVM classifier example": [[13, null]], "Dataset": [[126, "dataset"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Deep Domain Aware Datasets": [[7, null]], "Deep learning DA methods": [[0, "deep-learning-da-methods"], [12, "deep-learning-da-methods"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "Deep learning domain adaptation algorithms": [[125, "deep-learning-domain-adaptation-algorithms"]], "Different OTDA methods": [[17, "different-otda-methods"]], "Divergence domain adaptation methods.": [[8, null]], "Documentation": [[29, "documentation"]], "Domain Adaptation Datasets": [[12, "domain-adaptation-datasets"]], "Domain adaptation algorithms": [[125, "domain-adaptation-algorithms"]], "Examples gallery": [[12, null]], "Examples using skada.CORAL": [[30, "examples-using-skada-coral"]], "Examples using skada.CORALAdapter": [[31, "examples-using-skada-coraladapter"]], "Examples using skada.ClassRegularizerOTMapping": [[32, "examples-using-skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMappingAdapter": [[33, "examples-using-skada-classregularizerotmappingadapter"]], "Examples using skada.DASVMClassifier": [[34, "examples-using-skada-dasvmclassifier"]], "Examples using skada.DensityReweight": [[35, "examples-using-skada-densityreweight"]], "Examples using skada.DiscriminatorReweight": [[37, "examples-using-skada-discriminatorreweight"]], "Examples using skada.EntropicOTMapping": [[39, "examples-using-skada-entropicotmapping"]], "Examples using skada.EntropicOTMappingAdapter": [[40, "examples-using-skada-entropicotmappingadapter"]], "Examples using skada.GaussianReweight": [[41, "examples-using-skada-gaussianreweight"]], "Examples using skada.GaussianReweightAdapter": [[42, "examples-using-skada-gaussianreweightadapter"]], "Examples using skada.JDOTClassifier": [[44, "examples-using-skada-jdotclassifier"]], "Examples using skada.JDOTRegressor": [[45, "examples-using-skada-jdotregressor"]], "Examples using skada.KLIEPReweight": [[46, "examples-using-skada-kliepreweight"]], "Examples using skada.KMMReweight": [[48, "examples-using-skada-kmmreweight"]], "Examples using skada.KMMReweightAdapter": [[49, "examples-using-skada-kmmreweightadapter"]], "Examples using skada.LinearOTMapping": [[50, "examples-using-skada-linearotmapping"]], "Examples using skada.LinearOTMappingAdapter": [[51, "examples-using-skada-linearotmappingadapter"]], "Examples using skada.MMDLSConSMapping": [[52, "examples-using-skada-mmdlsconsmapping"]], "Examples using skada.MMDTarSReweight": [[54, "examples-using-skada-mmdtarsreweight"]], "Examples using skada.MultiLinearMongeAlignmentAdapter": [[57, "examples-using-skada-multilinearmongealignmentadapter"]], "Examples using skada.NearestNeighborReweight": [[58, "examples-using-skada-nearestneighborreweight"]], "Examples using skada.OTLabelProp": [[60, "examples-using-skada-otlabelprop"]], "Examples using skada.OTMapping": [[61, "examples-using-skada-otmapping"]], "Examples using skada.OTMappingAdapter": [[62, "examples-using-skada-otmappingadapter"]], "Examples using skada.PerDomain": [[63, "examples-using-skada-perdomain"]], "Examples using skada.SelectSource": [[64, "examples-using-skada-selectsource"]], "Examples using skada.SelectSourceTarget": [[65, "examples-using-skada-selectsourcetarget"]], "Examples using skada.Shared": [[67, "examples-using-skada-shared"]], "Examples using skada.SubspaceAlignment": [[68, "examples-using-skada-subspacealignment"]], "Examples using skada.TransferComponentAnalysis": [[70, "examples-using-skada-transfercomponentanalysis"]], "Examples using skada.TransferJointMatching": [[72, "examples-using-skada-transferjointmatching"]], "Examples using skada.TransferSubspaceLearning": [[74, "examples-using-skada-transfersubspacelearning"]], "Examples using skada.datasets.DomainAwareDataset": [[76, "examples-using-skada-datasets-domainawaredataset"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[77, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_shifted_datasets": [[79, "examples-using-skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[80, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.deep.DANN": [[87, "examples-using-skada-deep-dann"]], "Examples using skada.deep.DeepCoral": [[89, "examples-using-skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoralLoss": [[90, "examples-using-skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepJDOT": [[91, "examples-using-skada-deep-deepjdot"]], "Examples using skada.make_da_pipeline": [[106, "examples-using-skada-make-da-pipeline"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[109, "examples-using-skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[112, "examples-using-skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.SupervisedScorer": [[114, "examples-using-skada-metrics-supervisedscorer"]], "Examples using skada.model_selection.DomainShuffleSplit": [[115, "examples-using-skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[116, "examples-using-skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[117, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[118, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "Examples using skada.source_target_split": [[120, "examples-using-skada-source-target-split"]], "Examples using skada.utils.extract_source_indices": [[123, "examples-using-skada-utils-extract-source-indices"]], "Filing bugs": [[29, "filing-bugs"]], "Generate classification classification dataset and plot it": [[15, "generate-classification-classification-dataset-and-plot-it"]], "Generate conditional shift classification dataset and plot it": [[14, "generate-conditional-shift-classification-dataset-and-plot-it"], [15, "generate-conditional-shift-classification-dataset-and-plot-it"], [16, "generate-conditional-shift-classification-dataset-and-plot-it"]], "Generate conditional shift dataset": [[17, "generate-conditional-shift-dataset"]], "Generate conditional shift regression dataset and plot it": [[14, "generate-conditional-shift-regression-dataset-and-plot-it"], [15, "generate-conditional-shift-regression-dataset-and-plot-it"]], "How does OTDA works?": [[17, "how-does-otda-works"]], "How to contribute": [[29, "how-to-contribute"]], "How to use SKADA": [[21, null]], "Illustration of the DA problem": [[17, "illustration-of-the-da-problem"]], "Illustration of the Density Reweighting method": [[18, "illustration-of-the-density-reweighting-method"]], "Illustration of the Discr. reweighting method": [[18, "illustration-of-the-discr-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[18, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the KLIEPReweight method": [[18, "illustration-of-the-kliepreweight-method"]], "Illustration of the Kernel Mean Matching method": [[18, "illustration-of-the-kernel-mean-matching-method"]], "Illustration of the Nearest Neighbor reweighting method": [[18, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the OT plan": [[14, "illustration-of-the-ot-plan"]], "Illustration of the Subspace Alignment method": [[19, "illustration-of-the-subspace-alignment-method"]], "Illustration of the Transfer Component Analysis method": [[19, "illustration-of-the-transfer-component-analysis-method"]], "Illustration of the Transfer Joint Matching method": [[19, "illustration-of-the-transfer-joint-matching-method"]], "Illustration of the Transfer Subspace Learning method": [[19, "illustration-of-the-transfer-subspace-learning-method"]], "Illustration of the problem with no domain adaptation": [[18, "illustration-of-the-problem-with-no-domain-adaptation"], [19, "illustration-of-the-problem-with-no-domain-adaptation"]], "Illustration of the propagated labels": [[15, "illustration-of-the-propagated-labels"], [15, "id3"]], "Implemented algorithms": [[125, "implemented-algorithms"]], "Indices and tables": [[125, "indices-and-tables"]], "Installation": [[125, "installation"]], "JDOT Regressor and Classifier examples": [[14, null]], "Label Propagation methods": [[15, null]], "Labeling the target dataset": [[13, "labeling-the-target-dataset"]], "License": [[125, "license"]], "Load the image datasets": [[6, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"], [10, "load-the-image-datasets"]], "Main module skada": [[0, "module-skada"]], "Metrics for DA": [[126, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[128, null]], "Model Selection": [[126, "model-selection"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Multi-domain Linear Monge Alignment": [[16, null]], "New Contributors": [[127, "new-contributors"]], "New contributor tips": [[29, "new-contributor-tips"]], "Optimal Transport Domain Adaptation": [[17, "optimal-transport-domain-adaptation"]], "Optimal Transport Domain Adaptation (OTDA)": [[17, null]], "Optimal transport domain adaptation methods.": [[9, null]], "Other DA methods": [[0, "other-da-methods"]], "Pipeline": [[126, "pipeline"]], "Plot dataset source domain and shifted target domain": [[1, null], [2, null], [3, null], [4, null]], "Plot of the dataset:": [[18, "plot-of-the-dataset"], [19, "plot-of-the-dataset"]], "Plots of the dataset": [[13, "plots-of-the-dataset"]], "Pull Request Checklist": [[29, "pull-request-checklist"]], "References": [[125, "references"]], "Release of SKADA": [[127, null]], "Reweighting Methods": [[18, "reweighting-methods"]], "Reweighting method example on covariate shift dataset": [[18, null]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[125, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "SKADA deep learning DA losses": [[0, "skada-deep-learning-da-losses"]], "SKADA logo generation": [[23, null]], "SKADA: SciKit Adaptation": [[125, null]], "Sample Domain": [[126, "sample-domain"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Scoring": [[126, "scoring"]], "Selector": [[126, "selector"]], "Short examples": [[125, "short-examples"]], "Skada v0.4.0": [[127, "skada-v0-4-0"]], "Skada v0.5.0": [[127, "skada-v0-5-0"]], "Splitters": [[126, "splitters"]], "Subspace method example on subspace shift dataset": [[19, null]], "Test-time Domain Adaptation": [[126, "test-time-domain-adaptation"]], "The subspaces methods": [[19, "the-subspaces-methods"]], "Torch compatible DA losses in skada.deep.losses": [[0, "module-skada.deep.losses"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Train a DeepCoral model": [[8, "train-a-deepcoral-model"]], "Train a DeepJDOT model": [[9, "train-a-deepjdot-model"]], "Train a classic model": [[6, "train-a-classic-model"], [8, "train-a-classic-model"], [9, "train-a-classic-model"]], "Train a classifier on adapted data": [[16, "train-a-classifier-on-adapted-data"], [16, "id1"]], "Train a classifier on source data": [[14, "train-a-classifier-on-source-data"], [15, "train-a-classifier-on-source-data"], [16, "train-a-classifier-on-source-data"]], "Train a regressor on source data": [[14, "train-a-regressor-on-source-data"], [15, "train-a-regressor-on-source-data"]], "Train the full Labe Propagation model": [[15, "train-the-full-labe-propagation-model"]], "Train with JDOT classifier": [[14, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[14, "train-with-jdot-classifier-with-svc"]], "Train with JDOT regressor": [[14, "train-with-jdot-regressor"]], "Train with LabelProp + classifier": [[15, "train-with-labelprop-classifier"]], "Train with LabelProp and JCPOT + classifier": [[15, "train-with-labelprop-and-jcpot-classifier"]], "Training parameters": [[10, "training-parameters"]], "Training setup for deep DA method.": [[10, null]], "Training with skorch": [[10, "training-with-skorch"]], "Training with skorch with dataset": [[10, "training-with-skorch-with-dataset"]], "Training with torch": [[10, "training-with-torch"]], "Usage of the DASVMClassifier": [[13, "usage-of-the-dasvmclassifier"]], "Users Guide": [[126, null]], "Using GridSearchCV with skada": [[27, null]], "Using cross_val_score with skada": [[25, null]], "Utilities": [[0, "utilities"]], "Utilities skada.utils": [[0, "module-skada.utils"]], "Visualizing cross-validation behavior in skada": [[26, null]], "We generate our 2D dataset with 2 classes": [[13, "we-generate-our-2d-dataset-with-2-classes"], [18, "we-generate-our-2d-dataset-with-2-classes"], [19, "we-generate-our-2d-dataset-with-2-classes"]], "What's Changed": [[127, "what-s-changed"], [127, "id1"]], "skada.CORAL": [[30, null]], "skada.CORALAdapter": [[31, null]], "skada.ClassRegularizerOTMapping": [[32, null]], "skada.ClassRegularizerOTMappingAdapter": [[33, null]], "skada.DASVMClassifier": [[34, null]], "skada.DensityReweight": [[35, null]], "skada.DensityReweightAdapter": [[36, null]], "skada.DiscriminatorReweight": [[37, null]], "skada.DiscriminatorReweightAdapter": [[38, null]], "skada.EntropicOTMapping": [[39, null]], "skada.EntropicOTMappingAdapter": [[40, null]], "skada.GaussianReweight": [[41, null]], "skada.GaussianReweightAdapter": [[42, null]], "skada.JCPOTLabelProp": [[43, null]], "skada.JDOTClassifier": [[44, null]], "skada.JDOTRegressor": [[45, null]], "skada.KLIEPReweight": [[46, null]], "skada.KLIEPReweightAdapter": [[47, null]], "skada.KMMReweight": [[48, null]], "skada.KMMReweightAdapter": [[49, null]], "skada.LinearOTMapping": [[50, null]], "skada.LinearOTMappingAdapter": [[51, null]], "skada.MMDLSConSMapping": [[52, null]], "skada.MMDLSConSMappingAdapter": [[53, null]], "skada.MMDTarSReweight": [[54, null]], "skada.MMDTarSReweightAdapter": [[55, null]], "skada.MultiLinearMongeAlignment": [[56, null]], "skada.MultiLinearMongeAlignmentAdapter": [[57, null]], "skada.NearestNeighborReweight": [[58, null]], "skada.NearestNeighborReweightAdapter": [[59, null]], "skada.OTLabelProp": [[60, null]], "skada.OTMapping": [[61, null]], "skada.OTMappingAdapter": [[62, null]], "skada.PerDomain": [[63, null]], "skada.SelectSource": [[64, null]], "skada.SelectSourceTarget": [[65, null]], "skada.SelectTarget": [[66, null]], "skada.Shared": [[67, null]], "skada.SubspaceAlignment": [[68, null]], "skada.SubspaceAlignmentAdapter": [[69, null]], "skada.TransferComponentAnalysis": [[70, null]], "skada.TransferComponentAnalysisAdapter": [[71, null]], "skada.TransferJointMatching": [[72, null]], "skada.TransferJointMatchingAdapter": [[73, null]], "skada.TransferSubspaceLearning": [[74, null]], "skada.TransferSubspaceLearningAdapter": [[75, null]], "skada.datasets.DomainAwareDataset": [[76, null]], "skada.datasets.make_dataset_from_moons_distribution": [[77, null]], "skada.datasets.make_shifted_blobs": [[78, null]], "skada.datasets.make_shifted_datasets": [[79, null]], "skada.datasets.make_variable_frequency_dataset": [[80, null]], "skada.deep.CAN": [[81, null]], "skada.deep.CANLoss": [[82, null]], "skada.deep.CDAN": [[83, null]], "skada.deep.CDANLoss": [[84, null]], "skada.deep.DAN": [[85, null]], "skada.deep.DANLoss": [[86, null]], "skada.deep.DANN": [[87, null]], "skada.deep.DANNLoss": [[88, null]], "skada.deep.DeepCoral": [[89, null]], "skada.deep.DeepCoralLoss": [[90, null]], "skada.deep.DeepJDOT": [[91, null]], "skada.deep.DeepJDOTLoss": [[92, null]], "skada.deep.MCC": [[93, null]], "skada.deep.MCCLoss": [[94, null]], "skada.deep.MDD": [[95, null]], "skada.deep.MDDLoss": [[96, null]], "skada.deep.SPA": [[97, null]], "skada.deep.SPALoss": [[98, null]], "skada.deep.losses.cdd_loss": [[99, null]], "skada.deep.losses.dan_loss": [[100, null]], "skada.deep.losses.deepcoral_loss": [[101, null]], "skada.deep.losses.deepjdot_loss": [[102, null]], "skada.deep.losses.gda_loss": [[103, null]], "skada.deep.losses.mcc_loss": [[104, null]], "skada.deep.losses.nap_loss": [[105, null]], "skada.make_da_pipeline": [[106, null]], "skada.metrics.CircularValidation": [[107, null]], "skada.metrics.DeepEmbeddedValidation": [[108, null]], "skada.metrics.ImportanceWeightedScorer": [[109, null]], "skada.metrics.MaNoScorer": [[110, null]], "skada.metrics.MixValScorer": [[111, null]], "skada.metrics.PredictionEntropyScorer": [[112, null]], "skada.metrics.SoftNeighborhoodDensity": [[113, null]], "skada.metrics.SupervisedScorer": [[114, null]], "skada.model_selection.DomainShuffleSplit": [[115, null]], "skada.model_selection.LeaveOneDomainOut": [[116, null]], "skada.model_selection.SourceTargetShuffleSplit": [[117, null]], "skada.model_selection.StratifiedDomainShuffleSplit": [[118, null]], "skada.per_domain_split": [[119, null]], "skada.source_target_split": [[120, null]], "skada.utils.check_X_y_domain": [[121, null]], "skada.utils.extract_domains_indices": [[122, null]], "skada.utils.extract_source_indices": [[123, null]], "skada.utils.source_target_merge": [[124, null]]}, "docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_deepdadataset", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_label_prop_da", "auto_examples/methods/plot_monge_alignment_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/plot_subspace", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "contributing", "gen_modules/skada.CORAL", "gen_modules/skada.CORALAdapter", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.ClassRegularizerOTMappingAdapter", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DensityReweightAdapter", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.DiscriminatorReweightAdapter", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.EntropicOTMappingAdapter", "gen_modules/skada.GaussianReweight", "gen_modules/skada.GaussianReweightAdapter", "gen_modules/skada.JCPOTLabelProp", "gen_modules/skada.JDOTClassifier", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.KLIEPReweightAdapter", "gen_modules/skada.KMMReweight", "gen_modules/skada.KMMReweightAdapter", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.LinearOTMappingAdapter", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDLSConSMappingAdapter", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.MMDTarSReweightAdapter", "gen_modules/skada.MultiLinearMongeAlignment", "gen_modules/skada.MultiLinearMongeAlignmentAdapter", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.NearestNeighborReweightAdapter", "gen_modules/skada.OTLabelProp", "gen_modules/skada.OTMapping", "gen_modules/skada.OTMappingAdapter", "gen_modules/skada.PerDomain", "gen_modules/skada.SelectSource", "gen_modules/skada.SelectSourceTarget", "gen_modules/skada.SelectTarget", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.SubspaceAlignmentAdapter", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.TransferComponentAnalysisAdapter", "gen_modules/skada.TransferJointMatching", "gen_modules/skada.TransferJointMatchingAdapter", "gen_modules/skada.TransferSubspaceLearning", "gen_modules/skada.TransferSubspaceLearningAdapter", "gen_modules/skada.datasets.DomainAwareDataset", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CAN", "gen_modules/skada.deep.CANLoss", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DAN", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DANNLoss", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.deep.MCC", "gen_modules/skada.deep.MCCLoss", "gen_modules/skada.deep.MDD", "gen_modules/skada.deep.MDDLoss", "gen_modules/skada.deep.SPA", "gen_modules/skada.deep.SPALoss", "gen_modules/skada.deep.losses.cdd_loss", "gen_modules/skada.deep.losses.dan_loss", "gen_modules/skada.deep.losses.deepcoral_loss", "gen_modules/skada.deep.losses.deepjdot_loss", "gen_modules/skada.deep.losses.gda_loss", "gen_modules/skada.deep.losses.mcc_loss", "gen_modules/skada.deep.losses.nap_loss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.MaNoScorer", "gen_modules/skada.metrics.MixValScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "gen_modules/skada.per_domain_split", "gen_modules/skada.source_target_split", "gen_modules/skada.utils.check_X_y_domain", "gen_modules/skada.utils.extract_domains_indices", "gen_modules/skada.utils.extract_source_indices", "gen_modules/skada.utils.source_target_merge", "index", "quickstart", "releases", "scorer", "sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_deepdadataset.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_label_prop_da.rst", "auto_examples/methods/plot_monge_alignment_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/plot_subspace.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "contributing.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.CORALAdapter.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.ClassRegularizerOTMappingAdapter.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DensityReweightAdapter.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.DiscriminatorReweightAdapter.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.EntropicOTMappingAdapter.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.GaussianReweightAdapter.rst", "gen_modules/skada.JCPOTLabelProp.rst", "gen_modules/skada.JDOTClassifier.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.KLIEPReweightAdapter.rst", "gen_modules/skada.KMMReweight.rst", "gen_modules/skada.KMMReweightAdapter.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.LinearOTMappingAdapter.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDLSConSMappingAdapter.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.MMDTarSReweightAdapter.rst", "gen_modules/skada.MultiLinearMongeAlignment.rst", "gen_modules/skada.MultiLinearMongeAlignmentAdapter.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.NearestNeighborReweightAdapter.rst", "gen_modules/skada.OTLabelProp.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.OTMappingAdapter.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.SelectSource.rst", "gen_modules/skada.SelectSourceTarget.rst", "gen_modules/skada.SelectTarget.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.SubspaceAlignmentAdapter.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.TransferComponentAnalysisAdapter.rst", "gen_modules/skada.TransferJointMatching.rst", "gen_modules/skada.TransferJointMatchingAdapter.rst", "gen_modules/skada.TransferSubspaceLearning.rst", "gen_modules/skada.TransferSubspaceLearningAdapter.rst", "gen_modules/skada.datasets.DomainAwareDataset.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CAN.rst", "gen_modules/skada.deep.CANLoss.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DAN.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DANNLoss.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.deep.MCC.rst", "gen_modules/skada.deep.MCCLoss.rst", "gen_modules/skada.deep.MDD.rst", "gen_modules/skada.deep.MDDLoss.rst", "gen_modules/skada.deep.SPA.rst", "gen_modules/skada.deep.SPALoss.rst", "gen_modules/skada.deep.losses.cdd_loss.rst", "gen_modules/skada.deep.losses.dan_loss.rst", "gen_modules/skada.deep.losses.deepcoral_loss.rst", "gen_modules/skada.deep.losses.deepjdot_loss.rst", "gen_modules/skada.deep.losses.gda_loss.rst", "gen_modules/skada.deep.losses.mcc_loss.rst", "gen_modules/skada.deep.losses.nap_loss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.MaNoScorer.rst", "gen_modules/skada.metrics.MixValScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "gen_modules/skada.per_domain_split.rst", "gen_modules/skada.source_target_split.rst", "gen_modules/skada.utils.check_X_y_domain.rst", "gen_modules/skada.utils.extract_domains_indices.rst", "gen_modules/skada.utils.extract_source_indices.rst", "gen_modules/skada.utils.source_target_merge.rst", "index.rst", "quickstart.md", "releases.rst", "scorer.rst", "sg_execution_times.rst"], "indexentries": {"add_domain() (skada.datasets.domainawaredataset method)": [[76, "skada.datasets.DomainAwareDataset.add_domain", false]], "can() (in module skada.deep)": [[81, "skada.deep.CAN", false]], "canloss (class in skada.deep)": [[82, "skada.deep.CANLoss", false]], "cdan() (in module skada.deep)": [[83, "skada.deep.CDAN", false]], "cdanloss (class in skada.deep)": [[84, "skada.deep.CDANLoss", false]], "cdd_loss() (in module skada.deep.losses)": [[99, "skada.deep.losses.cdd_loss", false]], "check_x_y_domain() (in module skada.utils)": [[121, "skada.utils.check_X_y_domain", false]], "circularvalidation (class in skada.metrics)": [[107, "skada.metrics.CircularValidation", false]], "classregularizerotmapping() (in module skada)": [[32, "skada.ClassRegularizerOTMapping", false]], "classregularizerotmappingadapter() (in module skada)": [[33, "skada.ClassRegularizerOTMappingAdapter", false]], "coral() (in module skada)": [[30, "skada.CORAL", false]], "coraladapter() (in module skada)": [[31, "skada.CORALAdapter", false]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[108, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss", false]], "dan() (in module skada.deep)": [[85, "skada.deep.DAN", false]], "dan_loss() (in module skada.deep.losses)": [[100, "skada.deep.losses.dan_loss", false]], "danloss (class in skada.deep)": [[86, "skada.deep.DANLoss", false]], "dann() (in module skada.deep)": [[87, "skada.deep.DANN", false]], "dannloss (class in skada.deep)": [[88, "skada.deep.DANNLoss", false]], "dasvmclassifier() (in module skada)": [[34, "skada.DASVMClassifier", false]], "deepcoral() (in module skada.deep)": [[89, "skada.deep.DeepCoral", false]], "deepcoral_loss() (in module skada.deep.losses)": [[101, "skada.deep.losses.deepcoral_loss", false]], "deepcoralloss (class in skada.deep)": [[90, "skada.deep.DeepCoralLoss", false]], "deepembeddedvalidation (class in skada.metrics)": [[108, "skada.metrics.DeepEmbeddedValidation", false]], "deepjdot() (in module skada.deep)": [[91, "skada.deep.DeepJDOT", false]], "deepjdot_loss() (in module skada.deep.losses)": [[102, "skada.deep.losses.deepjdot_loss", false]], "deepjdotloss (class in skada.deep)": [[92, "skada.deep.DeepJDOTLoss", false]], "densityreweight() (in module skada)": [[35, "skada.DensityReweight", false]], "densityreweightadapter (class in skada)": [[36, "skada.DensityReweightAdapter", false]], "discriminatorreweight() (in module skada)": [[37, "skada.DiscriminatorReweight", false]], "discriminatorreweightadapter (class in skada)": [[38, "skada.DiscriminatorReweightAdapter", false]], "domainawaredataset (class in skada.datasets)": [[76, "skada.datasets.DomainAwareDataset", false]], "domainshufflesplit (class in skada.model_selection)": [[115, "skada.model_selection.DomainShuffleSplit", false]], "entropicotmapping() (in module skada)": [[39, "skada.EntropicOTMapping", false]], "entropicotmappingadapter() (in module skada)": [[40, "skada.EntropicOTMappingAdapter", false]], "extract_domains_indices() (in module skada.utils)": [[122, "skada.utils.extract_domains_indices", false]], "extract_source_indices() (in module skada.utils)": [[123, "skada.utils.extract_source_indices", false]], "fit() (skada.densityreweightadapter method)": [[36, "skada.DensityReweightAdapter.fit", false]], "fit() (skada.discriminatorreweightadapter method)": [[38, "skada.DiscriminatorReweightAdapter.fit", false]], "fit() (skada.gaussianreweightadapter method)": [[42, "skada.GaussianReweightAdapter.fit", false]], "fit() (skada.kliepreweightadapter method)": [[47, "skada.KLIEPReweightAdapter.fit", false]], "fit() (skada.kmmreweightadapter method)": [[49, "skada.KMMReweightAdapter.fit", false]], "fit() (skada.mmdtarsreweightadapter method)": [[55, "skada.MMDTarSReweightAdapter.fit", false]], "fit() (skada.nearestneighborreweightadapter method)": [[59, "skada.NearestNeighborReweightAdapter.fit", false]], "forward() (skada.deep.canloss method)": [[82, "skada.deep.CANLoss.forward", false]], "forward() (skada.deep.cdanloss method)": [[84, "skada.deep.CDANLoss.forward", false]], "forward() (skada.deep.danloss method)": [[86, "skada.deep.DANLoss.forward", false]], "forward() (skada.deep.dannloss method)": [[88, "skada.deep.DANNLoss.forward", false]], "forward() (skada.deep.deepcoralloss method)": [[90, "skada.deep.DeepCoralLoss.forward", false]], "forward() (skada.deep.deepjdotloss method)": [[92, "skada.deep.DeepJDOTLoss.forward", false]], "forward() (skada.deep.mccloss method)": [[94, "skada.deep.MCCLoss.forward", false]], "forward() (skada.deep.mddloss method)": [[96, "skada.deep.MDDLoss.forward", false]], "forward() (skada.deep.spaloss method)": [[98, "skada.deep.SPALoss.forward", false]], "gaussianreweight() (in module skada)": [[41, "skada.GaussianReweight", false]], "gaussianreweightadapter (class in skada)": [[42, "skada.GaussianReweightAdapter", false]], "gda_loss() (in module skada.deep.losses)": [[103, "skada.deep.losses.gda_loss", false]], "get_domain() (skada.datasets.domainawaredataset method)": [[76, "skada.datasets.DomainAwareDataset.get_domain", false]], "get_estimator() (skada.perdomain method)": [[63, "skada.PerDomain.get_estimator", false]], "get_estimator() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.get_estimator", false]], "get_estimator() (skada.shared method)": [[67, "skada.Shared.get_estimator", false]], "get_metadata_routing() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.get_metadata_routing", false]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[116, "skada.model_selection.LeaveOneDomainOut.get_n_splits", false]], "get_params() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.get_params", false]], "importanceweightedscorer (class in skada.metrics)": [[109, "skada.metrics.ImportanceWeightedScorer", false]], "jcpotlabelprop() (in module skada)": [[43, "skada.JCPOTLabelProp", false]], "jdotclassifier() (in module skada)": [[44, "skada.JDOTClassifier", false]], "jdotregressor() (in module skada)": [[45, "skada.JDOTRegressor", false]], "kliepreweight() (in module skada)": [[46, "skada.KLIEPReweight", false]], "kliepreweightadapter (class in skada)": [[47, "skada.KLIEPReweightAdapter", false]], "kmmreweight() (in module skada)": [[48, "skada.KMMReweight", false]], "kmmreweightadapter (class in skada)": [[49, "skada.KMMReweightAdapter", false]], "leaveonedomainout (class in skada.model_selection)": [[116, "skada.model_selection.LeaveOneDomainOut", false]], "linearotmapping() (in module skada)": [[50, "skada.LinearOTMapping", false]], "linearotmappingadapter() (in module skada)": [[51, "skada.LinearOTMappingAdapter", false]], "make_da_pipeline() (in module skada)": [[106, "skada.make_da_pipeline", false]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[77, "skada.datasets.make_dataset_from_moons_distribution", false]], "make_shifted_blobs() (in module skada.datasets)": [[78, "skada.datasets.make_shifted_blobs", false]], "make_shifted_datasets() (in module skada.datasets)": [[79, "skada.datasets.make_shifted_datasets", false]], "make_variable_frequency_dataset() (in module skada.datasets)": [[80, "skada.datasets.make_variable_frequency_dataset", false]], "manoscorer (class in skada.metrics)": [[110, "skada.metrics.MaNoScorer", false]], "mcc() (in module skada.deep)": [[93, "skada.deep.MCC", false]], "mcc_loss() (in module skada.deep.losses)": [[104, "skada.deep.losses.mcc_loss", false]], "mccloss (class in skada.deep)": [[94, "skada.deep.MCCLoss", false]], "mdd() (in module skada.deep)": [[95, "skada.deep.MDD", false]], "mddloss (class in skada.deep)": [[96, "skada.deep.MDDLoss", false]], "merge() (skada.datasets.domainawaredataset method)": [[76, "skada.datasets.DomainAwareDataset.merge", false]], "mixvalscorer (class in skada.metrics)": [[111, "skada.metrics.MixValScorer", false]], "mmdlsconsmapping() (in module skada)": [[52, "skada.MMDLSConSMapping", false]], "mmdlsconsmappingadapter() (in module skada)": [[53, "skada.MMDLSConSMappingAdapter", false]], "mmdtarsreweight() (in module skada)": [[54, "skada.MMDTarSReweight", false]], "mmdtarsreweightadapter (class in skada)": [[55, "skada.MMDTarSReweightAdapter", false]], "module": [[0, "module-skada", false], [0, "module-skada.datasets", false], [0, "module-skada.deep", false], [0, "module-skada.deep.losses", false], [0, "module-skada.metrics", false], [0, "module-skada.model_selection", false], [0, "module-skada.utils", false]], "multilinearmongealignment() (in module skada)": [[56, "skada.MultiLinearMongeAlignment", false]], "multilinearmongealignmentadapter() (in module skada)": [[57, "skada.MultiLinearMongeAlignmentAdapter", false]], "nap_loss() (in module skada.deep.losses)": [[105, "skada.deep.losses.nap_loss", false]], "nearestneighborreweight() (in module skada)": [[58, "skada.NearestNeighborReweight", false]], "nearestneighborreweightadapter (class in skada)": [[59, "skada.NearestNeighborReweightAdapter", false]], "otlabelprop() (in module skada)": [[60, "skada.OTLabelProp", false]], "otmapping() (in module skada)": [[61, "skada.OTMapping", false]], "otmappingadapter() (in module skada)": [[62, "skada.OTMappingAdapter", false]], "pack() (skada.datasets.domainawaredataset method)": [[76, "skada.datasets.DomainAwareDataset.pack", false]], "pack_lodo() (skada.datasets.domainawaredataset method)": [[76, "skada.datasets.DomainAwareDataset.pack_lodo", false]], "pack_test() (skada.datasets.domainawaredataset method)": [[76, "skada.datasets.DomainAwareDataset.pack_test", false]], "pack_train() (skada.datasets.domainawaredataset method)": [[76, "skada.datasets.DomainAwareDataset.pack_train", false]], "per_domain_split() (in module skada)": [[119, "skada.per_domain_split", false]], "perdomain (class in skada)": [[63, "skada.PerDomain", false]], "predictionentropyscorer (class in skada.metrics)": [[112, "skada.metrics.PredictionEntropyScorer", false]], "select_domain() (skada.datasets.domainawaredataset method)": [[76, "skada.datasets.DomainAwareDataset.select_domain", false]], "selectsource (class in skada)": [[64, "skada.SelectSource", false]], "selectsourcetarget (class in skada)": [[65, "skada.SelectSourceTarget", false]], "selecttarget (class in skada)": [[66, "skada.SelectTarget", false]], "set_decision_function_request() (skada.perdomain method)": [[63, "skada.PerDomain.set_decision_function_request", false]], "set_decision_function_request() (skada.selectsource method)": [[64, "skada.SelectSource.set_decision_function_request", false]], "set_decision_function_request() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_decision_function_request", false]], "set_decision_function_request() (skada.selecttarget method)": [[66, "skada.SelectTarget.set_decision_function_request", false]], "set_decision_function_request() (skada.shared method)": [[67, "skada.Shared.set_decision_function_request", false]], "set_fit_request() (skada.densityreweightadapter method)": [[36, "skada.DensityReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.discriminatorreweightadapter method)": [[38, "skada.DiscriminatorReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.gaussianreweightadapter method)": [[42, "skada.GaussianReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kliepreweightadapter method)": [[47, "skada.KLIEPReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kmmreweightadapter method)": [[49, "skada.KMMReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.mmdtarsreweightadapter method)": [[55, "skada.MMDTarSReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.nearestneighborreweightadapter method)": [[59, "skada.NearestNeighborReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.perdomain method)": [[63, "skada.PerDomain.set_fit_request", false]], "set_fit_request() (skada.selectsource method)": [[64, "skada.SelectSource.set_fit_request", false]], "set_fit_request() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_fit_request", false]], "set_fit_request() (skada.selecttarget method)": [[66, "skada.SelectTarget.set_fit_request", false]], "set_fit_request() (skada.shared method)": [[67, "skada.Shared.set_fit_request", false]], "set_params() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_params", false]], "set_partial_fit_request() (skada.perdomain method)": [[63, "skada.PerDomain.set_partial_fit_request", false]], "set_partial_fit_request() (skada.selectsource method)": [[64, "skada.SelectSource.set_partial_fit_request", false]], "set_partial_fit_request() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_partial_fit_request", false]], "set_partial_fit_request() (skada.selecttarget method)": [[66, "skada.SelectTarget.set_partial_fit_request", false]], "set_partial_fit_request() (skada.shared method)": [[67, "skada.Shared.set_partial_fit_request", false]], "set_predict_log_proba_request() (skada.perdomain method)": [[63, "skada.PerDomain.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.selectsource method)": [[64, "skada.SelectSource.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.selecttarget method)": [[66, "skada.SelectTarget.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.shared method)": [[67, "skada.Shared.set_predict_log_proba_request", false]], "set_predict_proba_request() (skada.perdomain method)": [[63, "skada.PerDomain.set_predict_proba_request", false]], "set_predict_proba_request() (skada.selectsource method)": [[64, "skada.SelectSource.set_predict_proba_request", false]], "set_predict_proba_request() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_predict_proba_request", false]], "set_predict_proba_request() (skada.selecttarget method)": [[66, "skada.SelectTarget.set_predict_proba_request", false]], "set_predict_proba_request() (skada.shared method)": [[67, "skada.Shared.set_predict_proba_request", false]], "set_predict_request() (skada.perdomain method)": [[63, "skada.PerDomain.set_predict_request", false]], "set_predict_request() (skada.selectsource method)": [[64, "skada.SelectSource.set_predict_request", false]], "set_predict_request() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_predict_request", false]], "set_predict_request() (skada.selecttarget method)": [[66, "skada.SelectTarget.set_predict_request", false]], "set_predict_request() (skada.shared method)": [[67, "skada.Shared.set_predict_request", false]], "set_score_request() (skada.metrics.circularvalidation method)": [[107, "skada.metrics.CircularValidation.set_score_request", false]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[108, "skada.metrics.DeepEmbeddedValidation.set_score_request", false]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[109, "skada.metrics.ImportanceWeightedScorer.set_score_request", false]], "set_score_request() (skada.metrics.manoscorer method)": [[110, "skada.metrics.MaNoScorer.set_score_request", false]], "set_score_request() (skada.metrics.mixvalscorer method)": [[111, "skada.metrics.MixValScorer.set_score_request", false]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[112, "skada.metrics.PredictionEntropyScorer.set_score_request", false]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[113, "skada.metrics.SoftNeighborhoodDensity.set_score_request", false]], "set_score_request() (skada.metrics.supervisedscorer method)": [[114, "skada.metrics.SupervisedScorer.set_score_request", false]], "set_score_request() (skada.perdomain method)": [[63, "skada.PerDomain.set_score_request", false]], "set_score_request() (skada.selectsource method)": [[64, "skada.SelectSource.set_score_request", false]], "set_score_request() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_score_request", false]], "set_score_request() (skada.selecttarget method)": [[66, "skada.SelectTarget.set_score_request", false]], "set_score_request() (skada.shared method)": [[67, "skada.Shared.set_score_request", false]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[115, "skada.model_selection.DomainShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[116, "skada.model_selection.LeaveOneDomainOut.set_split_request", false]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[117, "skada.model_selection.SourceTargetShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[118, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request", false]], "set_transform_request() (skada.densityreweightadapter method)": [[36, "skada.DensityReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.discriminatorreweightadapter method)": [[38, "skada.DiscriminatorReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.gaussianreweightadapter method)": [[42, "skada.GaussianReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kliepreweightadapter method)": [[47, "skada.KLIEPReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kmmreweightadapter method)": [[49, "skada.KMMReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.mmdtarsreweightadapter method)": [[55, "skada.MMDTarSReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.nearestneighborreweightadapter method)": [[59, "skada.NearestNeighborReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.perdomain method)": [[63, "skada.PerDomain.set_transform_request", false]], "set_transform_request() (skada.selectsource method)": [[64, "skada.SelectSource.set_transform_request", false]], "set_transform_request() (skada.selectsourcetarget method)": [[65, "skada.SelectSourceTarget.set_transform_request", false]], "set_transform_request() (skada.selecttarget method)": [[66, "skada.SelectTarget.set_transform_request", false]], "set_transform_request() (skada.shared method)": [[67, "skada.Shared.set_transform_request", false]], "shared (class in skada)": [[67, "skada.Shared", false]], "skada": [[0, "module-skada", false]], "skada.datasets": [[0, "module-skada.datasets", false]], "skada.deep": [[0, "module-skada.deep", false]], "skada.deep.losses": [[0, "module-skada.deep.losses", false]], "skada.metrics": [[0, "module-skada.metrics", false]], "skada.model_selection": [[0, "module-skada.model_selection", false]], "skada.utils": [[0, "module-skada.utils", false]], "softneighborhooddensity (class in skada.metrics)": [[113, "skada.metrics.SoftNeighborhoodDensity", false]], "source_target_merge() (in module skada.utils)": [[124, "skada.utils.source_target_merge", false]], "source_target_split() (in module skada)": [[120, "skada.source_target_split", false]], "sourcetargetshufflesplit (class in skada.model_selection)": [[117, "skada.model_selection.SourceTargetShuffleSplit", false]], "spa() (in module skada.deep)": [[97, "skada.deep.SPA", false]], "spaloss (class in skada.deep)": [[98, "skada.deep.SPALoss", false]], "split() (skada.model_selection.leaveonedomainout method)": [[116, "skada.model_selection.LeaveOneDomainOut.split", false]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[118, "skada.model_selection.StratifiedDomainShuffleSplit.split", false]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[118, "skada.model_selection.StratifiedDomainShuffleSplit", false]], "subspacealignment() (in module skada)": [[68, "skada.SubspaceAlignment", false]], "subspacealignmentadapter() (in module skada)": [[69, "skada.SubspaceAlignmentAdapter", false]], "supervisedscorer (class in skada.metrics)": [[114, "skada.metrics.SupervisedScorer", false]], "transfercomponentanalysis() (in module skada)": [[70, "skada.TransferComponentAnalysis", false]], "transfercomponentanalysisadapter() (in module skada)": [[71, "skada.TransferComponentAnalysisAdapter", false]], "transferjointmatching() (in module skada)": [[72, "skada.TransferJointMatching", false]], "transferjointmatchingadapter() (in module skada)": [[73, "skada.TransferJointMatchingAdapter", false]], "transfersubspacelearning() (in module skada)": [[74, "skada.TransferSubspaceLearning", false]], "transfersubspacelearningadapter() (in module skada)": [[75, "skada.TransferSubspaceLearningAdapter", false]]}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[30, 1, 1, "", "CORAL"], [31, 1, 1, "", "CORALAdapter"], [32, 1, 1, "", "ClassRegularizerOTMapping"], [33, 1, 1, "", "ClassRegularizerOTMappingAdapter"], [34, 1, 1, "", "DASVMClassifier"], [35, 1, 1, "", "DensityReweight"], [36, 2, 1, "", "DensityReweightAdapter"], [37, 1, 1, "", "DiscriminatorReweight"], [38, 2, 1, "", "DiscriminatorReweightAdapter"], [39, 1, 1, "", "EntropicOTMapping"], [40, 1, 1, "", "EntropicOTMappingAdapter"], [41, 1, 1, "", "GaussianReweight"], [42, 2, 1, "", "GaussianReweightAdapter"], [43, 1, 1, "", "JCPOTLabelProp"], [44, 1, 1, "", "JDOTClassifier"], [45, 1, 1, "", "JDOTRegressor"], [46, 1, 1, "", "KLIEPReweight"], [47, 2, 1, "", "KLIEPReweightAdapter"], [48, 1, 1, "", "KMMReweight"], [49, 2, 1, "", "KMMReweightAdapter"], [50, 1, 1, "", "LinearOTMapping"], [51, 1, 1, "", "LinearOTMappingAdapter"], [52, 1, 1, "", "MMDLSConSMapping"], [53, 1, 1, "", "MMDLSConSMappingAdapter"], [54, 1, 1, "", "MMDTarSReweight"], [55, 2, 1, "", "MMDTarSReweightAdapter"], [56, 1, 1, "", "MultiLinearMongeAlignment"], [57, 1, 1, "", "MultiLinearMongeAlignmentAdapter"], [58, 1, 1, "", "NearestNeighborReweight"], [59, 2, 1, "", "NearestNeighborReweightAdapter"], [60, 1, 1, "", "OTLabelProp"], [61, 1, 1, "", "OTMapping"], [62, 1, 1, "", "OTMappingAdapter"], [63, 2, 1, "", "PerDomain"], [64, 2, 1, "", "SelectSource"], [65, 2, 1, "", "SelectSourceTarget"], [66, 2, 1, "", "SelectTarget"], [67, 2, 1, "", "Shared"], [68, 1, 1, "", "SubspaceAlignment"], [69, 1, 1, "", "SubspaceAlignmentAdapter"], [70, 1, 1, "", "TransferComponentAnalysis"], [71, 1, 1, "", "TransferComponentAnalysisAdapter"], [72, 1, 1, "", "TransferJointMatching"], [73, 1, 1, "", "TransferJointMatchingAdapter"], [74, 1, 1, "", "TransferSubspaceLearning"], [75, 1, 1, "", "TransferSubspaceLearningAdapter"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [106, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"], [119, 1, 1, "", "per_domain_split"], [120, 1, 1, "", "source_target_split"], [0, 0, 0, "-", "utils"]], "skada.DensityReweightAdapter": [[36, 3, 1, "", "fit"], [36, 3, 1, "", "set_fit_request"], [36, 3, 1, "", "set_transform_request"]], "skada.DiscriminatorReweightAdapter": [[38, 3, 1, "", "fit"], [38, 3, 1, "", "set_fit_request"], [38, 3, 1, "", "set_transform_request"]], "skada.GaussianReweightAdapter": [[42, 3, 1, "", "fit"], [42, 3, 1, "", "set_fit_request"], [42, 3, 1, "", "set_transform_request"]], "skada.KLIEPReweightAdapter": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "set_fit_request"], [47, 3, 1, "", "set_transform_request"]], "skada.KMMReweightAdapter": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "set_fit_request"], [49, 3, 1, "", "set_transform_request"]], "skada.MMDTarSReweightAdapter": [[55, 3, 1, "", "fit"], [55, 3, 1, "", "set_fit_request"], [55, 3, 1, "", "set_transform_request"]], "skada.NearestNeighborReweightAdapter": [[59, 3, 1, "", "fit"], [59, 3, 1, "", "set_fit_request"], [59, 3, 1, "", "set_transform_request"]], "skada.PerDomain": [[63, 3, 1, "", "get_estimator"], [63, 3, 1, "", "set_decision_function_request"], [63, 3, 1, "", "set_fit_request"], [63, 3, 1, "", "set_partial_fit_request"], [63, 3, 1, "", "set_predict_log_proba_request"], [63, 3, 1, "", "set_predict_proba_request"], [63, 3, 1, "", "set_predict_request"], [63, 3, 1, "", "set_score_request"], [63, 3, 1, "", "set_transform_request"]], "skada.SelectSource": [[64, 3, 1, "", "set_decision_function_request"], [64, 3, 1, "", "set_fit_request"], [64, 3, 1, "", "set_partial_fit_request"], [64, 3, 1, "", "set_predict_log_proba_request"], [64, 3, 1, "", "set_predict_proba_request"], [64, 3, 1, "", "set_predict_request"], [64, 3, 1, "", "set_score_request"], [64, 3, 1, "", "set_transform_request"]], "skada.SelectSourceTarget": [[65, 3, 1, "", "get_estimator"], [65, 3, 1, "", "get_metadata_routing"], [65, 3, 1, "", "get_params"], [65, 3, 1, "", "set_decision_function_request"], [65, 3, 1, "", "set_fit_request"], [65, 3, 1, "", "set_params"], [65, 3, 1, "", "set_partial_fit_request"], [65, 3, 1, "", "set_predict_log_proba_request"], [65, 3, 1, "", "set_predict_proba_request"], [65, 3, 1, "", "set_predict_request"], [65, 3, 1, "", "set_score_request"], [65, 3, 1, "", "set_transform_request"]], "skada.SelectTarget": [[66, 3, 1, "", "set_decision_function_request"], [66, 3, 1, "", "set_fit_request"], [66, 3, 1, "", "set_partial_fit_request"], [66, 3, 1, "", "set_predict_log_proba_request"], [66, 3, 1, "", "set_predict_proba_request"], [66, 3, 1, "", "set_predict_request"], [66, 3, 1, "", "set_score_request"], [66, 3, 1, "", "set_transform_request"]], "skada.Shared": [[67, 3, 1, "", "get_estimator"], [67, 3, 1, "", "set_decision_function_request"], [67, 3, 1, "", "set_fit_request"], [67, 3, 1, "", "set_partial_fit_request"], [67, 3, 1, "", "set_predict_log_proba_request"], [67, 3, 1, "", "set_predict_proba_request"], [67, 3, 1, "", "set_predict_request"], [67, 3, 1, "", "set_score_request"], [67, 3, 1, "", "set_transform_request"]], "skada.datasets": [[76, 2, 1, "", "DomainAwareDataset"], [77, 1, 1, "", "make_dataset_from_moons_distribution"], [78, 1, 1, "", "make_shifted_blobs"], [79, 1, 1, "", "make_shifted_datasets"], [80, 1, 1, "", "make_variable_frequency_dataset"]], "skada.datasets.DomainAwareDataset": [[76, 3, 1, "", "add_domain"], [76, 3, 1, "", "get_domain"], [76, 3, 1, "", "merge"], [76, 3, 1, "", "pack"], [76, 3, 1, "", "pack_lodo"], [76, 3, 1, "", "pack_test"], [76, 3, 1, "", "pack_train"], [76, 3, 1, "", "select_domain"]], "skada.deep": [[81, 1, 1, "", "CAN"], [82, 2, 1, "", "CANLoss"], [83, 1, 1, "", "CDAN"], [84, 2, 1, "", "CDANLoss"], [85, 1, 1, "", "DAN"], [86, 2, 1, "", "DANLoss"], [87, 1, 1, "", "DANN"], [88, 2, 1, "", "DANNLoss"], [89, 1, 1, "", "DeepCoral"], [90, 2, 1, "", "DeepCoralLoss"], [91, 1, 1, "", "DeepJDOT"], [92, 2, 1, "", "DeepJDOTLoss"], [93, 1, 1, "", "MCC"], [94, 2, 1, "", "MCCLoss"], [95, 1, 1, "", "MDD"], [96, 2, 1, "", "MDDLoss"], [97, 1, 1, "", "SPA"], [98, 2, 1, "", "SPALoss"], [0, 0, 0, "-", "losses"]], "skada.deep.CANLoss": [[82, 3, 1, "", "forward"]], "skada.deep.CDANLoss": [[84, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[86, 3, 1, "", "forward"]], "skada.deep.DANNLoss": [[88, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[90, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[92, 3, 1, "", "forward"]], "skada.deep.MCCLoss": [[94, 3, 1, "", "forward"]], "skada.deep.MDDLoss": [[96, 3, 1, "", "forward"]], "skada.deep.SPALoss": [[98, 3, 1, "", "forward"]], "skada.deep.losses": [[99, 1, 1, "", "cdd_loss"], [100, 1, 1, "", "dan_loss"], [101, 1, 1, "", "deepcoral_loss"], [102, 1, 1, "", "deepjdot_loss"], [103, 1, 1, "", "gda_loss"], [104, 1, 1, "", "mcc_loss"], [105, 1, 1, "", "nap_loss"]], "skada.metrics": [[107, 2, 1, "", "CircularValidation"], [108, 2, 1, "", "DeepEmbeddedValidation"], [109, 2, 1, "", "ImportanceWeightedScorer"], [110, 2, 1, "", "MaNoScorer"], [111, 2, 1, "", "MixValScorer"], [112, 2, 1, "", "PredictionEntropyScorer"], [113, 2, 1, "", "SoftNeighborhoodDensity"], [114, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[107, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[108, 3, 1, "", "cross_entropy_loss"], [108, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[109, 3, 1, "", "set_score_request"]], "skada.metrics.MaNoScorer": [[110, 3, 1, "", "set_score_request"]], "skada.metrics.MixValScorer": [[111, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[112, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[113, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[114, 3, 1, "", "set_score_request"]], "skada.model_selection": [[115, 2, 1, "", "DomainShuffleSplit"], [116, 2, 1, "", "LeaveOneDomainOut"], [117, 2, 1, "", "SourceTargetShuffleSplit"], [118, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[115, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[116, 3, 1, "", "get_n_splits"], [116, 3, 1, "", "set_split_request"], [116, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[117, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[118, 3, 1, "", "set_split_request"], [118, 3, 1, "", "split"]], "skada.utils": [[121, 1, 1, "", "check_X_y_domain"], [122, 1, 1, "", "extract_domains_indices"], [123, 1, 1, "", "extract_source_indices"], [124, 1, 1, "", "source_target_merge"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [3, 4, 8, 13, 18, 19, 22, 23, 25, 26, 27, 29, 53, 58, 59, 62, 74, 75, 76, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 103, 109, 110, 111, 114, 119, 120, 124, 125, 126, 128], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 58, 59, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 95, 96, 99, 110, 111, 113, 115, 118, 122, 124, 125, 126, 128, 129], "00": [5, 8, 11, 17, 20, 24, 28, 129], "0000ff": 22, "0003": 8, "001": [10, 18, 22, 26], "00e": 22, "01": [6, 8, 9, 11, 13, 14, 20, 21, 22, 24, 25, 26, 27, 72, 73, 74, 75, 129], "0113": 9, "019": [7, 11, 129], "02": [5, 19, 20, 24, 26, 129], "0221": 8, "02291": 125, "03": [8, 27], "0334": 9, "0347085036337376": 10, "0349": 6, "04": [21, 25], "0412": 8, "0422": 9, "05": [3, 22, 27, 44, 45, 52, 53, 113], "0502": 10, "0516": 6, "0595": 8, "06": [8, 11, 14, 15, 20, 22, 44, 46, 47, 48, 49, 54, 55, 129], "060_4_0699": 18, "0654": 6, "07": [82, 86, 94, 99, 100, 104, 129], "0704": 8, "071": [6, 11, 129], "07117994f0971b2fc2df95adb373c31c3d313442": 125, "075493682966016": 14, "0777": 9, "078": [13, 20, 129], "0787": 6, "08": [22, 27, 32, 33, 39, 40, 50, 51, 56, 57], "081": [21, 24, 129], "09": [8, 43, 106], "0902": 8, "0914": 6, "0956": 6, "0977": 10, "0983": 9, "0mb": 8, "0x7f797d71de40": 13, "1": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 54, 55, 58, 59, 63, 64, 65, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 125, 126, 127], "10": [1, 2, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 32, 33, 43, 44, 45, 52, 53, 54, 55, 77, 78, 80, 115, 116, 117, 118, 124, 125], "100": [4, 8, 13, 14, 15, 16, 18, 19, 22, 23, 44, 45, 46, 47, 48, 49, 52, 53, 72, 73, 74, 75, 77, 78, 79, 80, 97], "1000": [4, 18, 22, 34, 39, 40, 46, 47, 48, 49, 54, 55], "100000": [22, 61, 62], "1004": [19, 22], "1009": 125, "100_000": [61, 62], "10155": [51, 56, 57, 125], "1027": 22, "10288": 125, "1044": 125, "1048": 15, "105": [1, 125], "1060": 8, "10e": [32, 33, 39, 40], "11": [6, 8, 9, 23, 34, 107, 125], "1100": 4, "12": [6, 8, 9, 10, 17, 18, 19, 89, 90, 101, 125], "121": 17, "1215": 8, "122": 17, "125": 18, "128": [6, 8, 9, 10], "13": [9, 91, 92, 102, 125], "131": 17, "132": [6, 7, 8, 9, 10, 17], "1321138905671275": 17, "133": 17, "14": [1, 2, 3, 6, 8, 9, 17, 85, 86, 100, 125], "1410": [19, 72, 73, 125], "1417": [19, 72, 73, 125], "141mb": 8, "1443686989830857": 16, "1483": 9, "15": [1, 2, 3, 4, 13, 14, 18, 19, 22, 26, 87, 88, 108, 125], "153": 125, "1534": 10, "15th": [91, 92, 102], "16": [8, 11, 18, 19, 20, 83, 84, 125], "164k": 8, "16785": [56, 57, 125], "16793": [56, 57, 125], "16e": 22, "17": [10, 11, 23, 109, 125, 129], "171": 125, "1711": 125, "1773": 6, "1796": 6, "18": [23, 112, 125], "180": 127, "182799418703954": 14, "18530735809550555": 14, "18mb": 8, "19": [22, 24, 113, 125, 129], "1905": [51, 56, 57, 125], "190kb": 8, "191": 1, "1928": 6, "1952": 10, "1964": 8, "1985": 9, "199": 125, "1d": [58, 59], "1e": [6, 8, 9, 10, 22, 25, 32, 33, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 72, 73, 82, 86, 94, 99, 100, 104, 106, 108], "1nn": [18, 22], "2": [1, 2, 3, 4, 6, 8, 9, 10, 14, 15, 16, 17, 21, 22, 23, 26, 29, 58, 59, 72, 73, 74, 75, 77, 78, 79, 101, 104, 110, 113, 115, 118, 120, 124, 125, 126], "20": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 27, 108, 125, 126, 128], "200": [22, 23, 32, 33, 60], "2000": [18, 37, 38, 41, 42, 125], "2005": 125, "2007": [18, 46, 47, 48, 49, 109, 125], "2008": [18, 125], "2009": [34, 107, 125], "2010": [19, 74, 75, 125], "2011": [19, 70, 71], "2012": [2, 3, 18, 58, 59, 79, 125], "2013": [19, 52, 53, 54, 55, 68, 69, 125], "2014": [15, 19, 60, 72, 73, 125], "2015": [85, 86, 100, 125], "2016": [8, 83, 84, 87, 88, 89, 90, 101, 125], "2017": [14, 30, 31, 44, 45, 125], "2018": [91, 92, 102, 112, 125], "2019": [43, 51, 56, 57, 81, 82, 95, 96, 99, 108, 125], "2020": [93, 94, 104, 125], "2021": [56, 57, 113, 125], "2023": [97, 98, 111, 125], "2024": [56, 57, 110, 125], "21": [8, 13, 27, 28, 52, 53, 54, 55, 125, 129], "210": 125, "2102": 125, "2142044526662074": 14, "216": 127, "217": 127, "218866137683906": 17, "2195": 6, "22": [28, 125, 129], "220": 127, "221": 127, "222": 127, "222mb": 8, "223": 127, "225": 127, "226": 127, "227": [125, 127], "2298312955459269": 14, "22nd": [43, 125], "23": [23, 24, 48, 49, 125], "230": 127, "232": 127, "233": 127, "234": 127, "235": 127, "2364aa": 23, "24": [18, 58, 59, 125], "240px": 126, "241": [17, 127], "242": [17, 127], "243": [17, 127], "24385251477360725": 10, "244": [17, 125, 127], "245": 17, "245kb": 8, "246": [17, 127], "247": [17, 127], "248": [17, 127], "249": 125, "25": [10, 18, 19, 80, 125], "250": 127, "251": 127, "256": [10, 127], "2567": 6, "257": 127, "258": 127, "259": 127, "26": [19, 72, 73, 125], "260": 127, "261": 127, "2613": 8, "263": 127, "265": 127, "266": 127, "267": 127, "268": 127, "269": 127, "27": [19, 22, 74, 75, 79, 125], "270": 127, "271": 127, "274": 127, "275": 127, "276": 127, "277": 127, "279": [125, 127], "28": [8, 15, 60, 125], "280": 127, "282": 127, "288146109474553": 17, "289": 127, "29": [56, 57, 125], "290": [10, 11, 129], "292": 127, "294": 127, "2952": 10, "295k": 8, "2960": 125, "2967": 125, "297": 127, "298": 127, "299": 127, "2993": 6, "2d": [14, 15, 16, 21, 127], "2f": [14, 15, 17, 18, 19, 21, 22, 25], "2x1": 79, "2x2": 79, "3": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 42, 46, 47, 48, 49, 54, 55, 59, 63, 64, 65, 66, 67, 78, 80, 81, 82, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128], "30": [14, 22, 23, 25, 27, 56, 57, 58, 59, 125, 126, 128], "300": 23, "3017": 9, "302": 127, "3023": 9, "303": 127, "306": [15, 60, 125], "307": 127, "3070": 6, "31": [43, 125], "310098338155625": 16, "314": [15, 60, 125], "316": 127, "317": 127, "318": 127, "319": 127, "32": [8, 10, 111, 125], "320": 127, "321": 127, "322": 127, "324": 127, "325": 127, "327": 127, "329": 127, "33": [81, 82, 93, 94, 99, 104, 125], "330": 127, "331": 127, "332": 127, "333": 127, "335": 127, "336": 127, "336863129384494": [14, 15, 16], "337": 127, "34": 125, "340": 127, "343": 127, "344": [25, 28, 129], "346": 127, "347": 127, "349": 127, "35": [6, 11, 23, 95, 96, 125, 129], "352": 127, "352173719537829": 15, "3566": 8, "36": [56, 57, 97, 98, 125], "367467726151268": 15, "3676169789533272": [14, 15, 16], "36th": 125, "37": [110, 125], "375": 18, "395kb": 8, "3964": 8, "3985": 6, "3999": 9, "3k": 8, "3mb": 8, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 27, 53, 95, 96, 101, 104, 110, 115, 118, 124, 125, 126, 128], "40": [8, 125], "4006": 6, "400px": 126, "406": [1, 5, 129], "4096": 83, "41": [8, 11, 129], "41m": 8, "42": [2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 27, 129], "4269298070320042": 15, "43": 16, "442": [18, 20, 129], "443": 125, "4460": 9, "447": 125, "45": [2, 3, 8, 79], "450": 125, "451": 129, "455": [23, 24, 129], "45933195939893": [14, 15], "463": 125, "464886123797522": 16, "48": 26, "4893": [81, 82, 99, 125], "4902": [81, 82, 99, 125], "4f": 10, "5": [1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 30, 31, 44, 45, 46, 47, 52, 53, 81, 82, 98, 99, 105, 110, 115, 118, 124, 125, 126, 128], "50": [1, 14, 15, 16, 19], "500": 13, "5007": 9, "5009": 8, "51": [1, 14], "520": [15, 22], "521": [2, 3, 79], "524": 24, "5244703189443227": 17, "530": [2, 3, 79], "5313": 6, "53817259426296": [14, 15, 16], "54k": 8, "55": 111, "5512": 8, "5516": 9, "555": [9, 11, 129], "5585726101363702": 15, "5612": 10, "57": 15, "570318895725525": [14, 15], "58": 25, "58mb": 8, "59": 125, "590k": 8, "5952": 10, "5991": 8, "6": [6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 23, 25, 26, 32, 33, 39, 40, 44, 46, 47, 48, 49, 50, 54, 55, 58, 59, 61, 62, 110, 115, 118, 124, 125], "60": [18, 125], "6013": 6, "603": 19, "610": [17, 20, 129], "6240": 6, "625": 18, "634": 5, "6364": 9, "64": [10, 125], "656": [26, 28, 129], "65m": 8, "662": [2, 5, 129], "6628": 9, "665": 20, "666": 17, "68": 10, "686": [19, 20, 129], "689": 11, "699": [18, 125], "6c4c7c": [18, 19], "6kb": 8, "7": [4, 9, 13, 14, 15, 17, 18, 19, 20, 26, 50, 51, 56, 57, 58, 79, 82, 86, 94, 99, 100, 104, 115, 118, 124, 125], "70": 23, "7021": 9, "7022": 9, "7039": 10, "707": [4, 5, 129], "71": 10, "7124": 125, "7133": 125, "72": [6, 8, 9, 10], "72222222": [126, 128], "7404": 125, "7413": 125, "744989537549497": [14, 15], "746": [18, 125], "75": 18, "754": [8, 11, 129], "756925382279493": 16, "76": 15, "769kb": 8, "77": [8, 14, 15], "770": 125, "7808": 9, "787": 125, "7944": 8, "7964573229829714": [14, 15, 16], "8": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 22, 23, 26, 27, 68, 69, 79, 115, 118, 124, 125], "80": [3, 18, 19], "8011": 6, "819": 125, "81944444": [126, 128], "819k": 8, "82": 14, "8235": 6, "827": 125, "83333333": [126, 128], "83m": 8, "84": [8, 14], "84375": 21, "849": [43, 125], "85": [3, 23], "858": [43, 125], "8585209003215434": 9, "859": [3, 5, 129], "87": 15, "8778": 8, "8906752411575563": 9, "8933": 9, "8938906752411575": 6, "8971": 6, "8972": 8, "8990": 8, "8k": 8, "9": [1, 8, 13, 14, 15, 16, 17, 19, 21, 22, 23, 32, 33, 39, 40, 43, 70, 71, 79, 115, 118, 124, 125], "90": [19, 125], "903kb": 8, "9051": 8, "9067524115755627": 6, "9163987138263665": 8, "9184": 125, "9193": 125, "9196141479099679": 8, "91m": 8, "92": 19, "9216": 10, "924": [14, 20, 129], "929": [19, 74, 75], "939": 28, "940": [4, 27, 28, 129], "942": [19, 74, 75], "949": [16, 20, 129], "95625": [126, 128], "9610814126500358": [14, 15], "97": [14, 125], "975": [126, 128], "977": [15, 20, 129], "98": [8, 13, 18, 25], "9875": 16, "988": [22, 24, 129], "99": [14, 15, 18], "9946": 9, "9991666666666666": 16, "999c81": 23, "9k": 8, "A": [2, 3, 14, 15, 17, 18, 22, 23, 29, 32, 33, 34, 39, 40, 44, 45, 48, 49, 50, 51, 56, 57, 60, 61, 62, 65, 68, 70, 72, 74, 79, 81, 82, 83, 85, 87, 89, 91, 93, 95, 97, 98, 99, 107, 108, 109, 111, 114, 121, 122, 125, 126], "As": [13, 19, 26], "At": [13, 29, 79], "But": 21, "By": [76, 77, 78, 79, 80, 106], "For": [18, 21, 26, 29, 44, 45, 58, 59, 106, 125, 126], "If": [7, 21, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 65, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 108, 109, 110, 111, 112, 114, 115, 117, 121, 122, 124, 125, 126], "In": [7, 8, 10, 15, 18, 19, 21, 23, 29, 30, 31, 37, 38, 41, 42, 43, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 112, 113, 114, 124, 125, 126, 127, 128], "It": [7, 21, 29, 34, 72, 73, 76, 77, 78, 79, 80, 95, 107, 110, 126], "Its": [18, 46, 47, 126], "No": [1, 25], "On": [7, 10, 15], "One": [1, 21, 76, 80, 116, 125], "Such": [18, 126], "The": [1, 2, 3, 4, 7, 13, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 128], "Then": [17, 21, 25, 27, 107], "These": [18, 29], "To": [6, 8, 9, 10, 19, 22, 25, 29, 76, 110, 126, 128], "Will": [18, 19, 79], "With": 126, "_": [2, 3, 13, 25, 26, 27, 31, 81, 82, 83, 87, 95, 97, 99, 100, 112, 113, 124, 126], "__name__": 26, "__version__": 29, "_barycent": 15, "_call_impl": 6, "_domain": 127, "_mappings_": 57, "_mnist_usp": [6, 8, 9, 10], "_mode": 10, "_network_simplex": [15, 22], "_params_to_valid": 10, "_self_label": 13, "_sign": [110, 111], "_sinkhorn": 17, "_subspac": 19, "ab": [19, 23], "abl": 14, "abort": 29, "about": [13, 29], "abov": [29, 76], "absenc": 126, "absolut": [13, 115, 126], "ac": 18, "acc": [14, 15, 17], "acc_": [14, 15], "acc_classreg": 17, "acc_linear": 17, "acc_s_jcpot": 15, "acc_sinkhorn": 17, "acc_sourc": 17, "acc_t": [14, 15], "acc_target": 17, "accept": [29, 58, 59, 106], "access": [63, 65, 67, 126], "accord": [83, 126], "account": [18, 29, 126], "accur": [19, 108, 125], "accuraci": [10, 14, 15, 16, 17, 18, 19, 21, 22, 25, 110, 125], "achiev": 126, "acquisit": 127, "across": [19, 46, 47, 68, 69, 77, 78, 79, 80, 108, 127], "act": [7, 126], "action": 127, "ad": [13, 19, 29, 34, 36, 38, 42, 47, 49, 50, 51, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 82, 86, 94, 99, 100, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127], "adam": 10, "adapt": [0, 11, 14, 15, 20, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 127, 129], "add": [7, 29, 76, 127], "add_ax": 3, "add_domain": [76, 126], "add_weight": 7, "addit": [29, 58, 59, 121, 126], "address": 29, "adjac": 103, "advanc": [14, 30, 31, 56, 57, 125], "advantag": 106, "adversari": [11, 12, 76, 83, 84, 87, 88, 96, 97, 98, 125, 129], "affect": [58, 59], "after": [126, 127], "again": 21, "aggreg": [76, 110, 126], "aim": 19, "aism": 18, "ajakan": 125, "al": [18, 19, 46, 47, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 100, 108, 109, 110, 111, 112, 113], "alain": 125, "alaiz": [2, 3, 79], "alexandr": [56, 57, 125], "algorithm": [13, 15, 22, 29, 32, 33, 34, 39, 40, 58, 59, 61, 62, 72, 73, 74, 75, 95, 96, 126], "alia": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "align": [8, 12, 14, 20, 22, 30, 31, 50, 51, 56, 57, 68, 69, 79, 89, 90, 97, 98, 101, 106, 112, 120, 125, 127, 129], "all": [4, 7, 12, 16, 19, 21, 26, 29, 34, 58, 59, 68, 69, 76, 77, 78, 79, 80, 119, 120, 121, 126, 129], "allow": [21, 29, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127], "allow_auto_sample_domain": 121, "allow_common_domain_idx": 121, "allow_label_mask": 121, "allow_multi_sourc": 121, "allow_multi_target": 121, "allow_nd": 121, "allow_sourc": [16, 17, 19, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 121, 127], "allow_target": 121, "along": [43, 44, 45], "alpha": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 22, 23, 27, 44, 45, 111], "alpha_": [47, 55], "alreadi": [106, 126], "also": [7, 10, 14, 15, 16, 17, 21, 25, 26, 29, 83, 87, 95, 97, 115, 125, 126], "altern": 29, "alternat": [44, 45], "although": [83, 87, 95, 97], "alwai": [29, 76, 77, 78, 79, 80, 110, 116, 126], "amazon": 126, "ambrois": 125, "ambroiseodt": 127, "among": [77, 78, 79, 80], "amsterdam": 125, "an": [6, 17, 18, 19, 21, 29, 36, 38, 42, 46, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 68, 69, 76, 77, 78, 79, 80, 96, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 128], "anal": 125, "analogi": 126, "analysi": [17, 29, 32, 33, 34, 39, 40, 50, 61, 62, 70, 71, 107, 125, 126], "angl": 23, "angle_step": 23, "ani": [7, 13, 18, 21, 29, 34, 44, 45, 65, 110, 125, 126], "annal": [18, 125], "anoth": [29, 76], "antoin": [18, 19, 125], "antoinecolla": [19, 127], "antoinedemathelin": 127, "api": [21, 29, 125, 126, 127, 128], "apmellot": 127, "apollin": 125, "append": 23, "appli": [112, 127], "applic": [18, 46, 47, 125], "appreci": 29, "approach": [18, 44, 45, 55, 110], "appropri": [29, 58, 59], "approv": 29, "approxim": [18, 38, 41, 42], "ar": [2, 3, 7, 13, 15, 17, 18, 19, 21, 25, 26, 29, 30, 31, 36, 38, 42, 47, 48, 49, 53, 55, 58, 59, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 128], "arang": 26, "arbitrari": [58, 59], "architectur": 95, "area": 29, "arecriterion": 10, "arg": [6, 127], "argmin": 23, "argument": [6, 7, 26, 58, 59, 126], "around": 126, "arrai": [7, 13, 18, 21, 23, 26, 31, 36, 38, 42, 46, 47, 49, 53, 54, 55, 58, 59, 71, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 99, 100, 108, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128], "array_lik": [77, 78, 79, 80], "arraylik": 76, "arthurdrk": 127, "artifici": [43, 125], "arxiv": [51, 56, 57, 125], "as_integer_ratio": [44, 45], "as_sourc": [6, 8, 9, 10, 19, 22, 25, 26, 27, 76, 126], "as_target": [6, 8, 9, 10, 19, 22, 25, 26, 27, 76, 126], "aset": 10, "ask": 29, "assign": [76, 121, 126], "assist": 29, "associ": [7, 76, 77, 78, 79, 80, 126], "assum": [18, 19, 44, 45, 58, 59], "assume_cent": [22, 30, 31, 89, 90, 101], "assumpt": [18, 55, 56, 57], "attempt": [58, 59], "attribut": [7, 31, 33, 36, 38, 40, 42, 44, 45, 47, 49, 51, 53, 55, 57, 62, 65, 69, 71, 73, 75, 76, 77, 78, 79, 80, 106, 109, 111], "author": [3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 125], "auto": [10, 21, 22, 30, 31, 41, 42, 58, 59, 76], "auto_exampl": [5, 11, 20, 24, 28], "auto_examples_jupyt": 12, "auto_examples_python": 12, "autogener": 76, "automat": [7, 21, 25, 29, 30, 31, 41, 42, 106, 115, 121, 126, 127], "autumn": [3, 13], "avail": [17, 21, 29, 48, 49, 76, 106, 125, 126, 128], "averag": [16, 110, 111], "avoid": [29, 39, 40, 61, 62, 108, 121, 126, 128], "awai": [58, 59], "awar": [11, 12, 76, 79, 126, 129], "ax": [4, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "axi": [13, 14, 15, 16, 17, 21, 23], "axvlin": 25, "b": [8, 18, 19, 29, 48, 49, 53, 74, 75, 118, 125, 126], "b_": 53, "back": 29, "backward": 10, "badg": 127, "bai": 125, "balanced_accuracy_scor": 107, "ball_tre": [58, 59], "balltre": [58, 59], "band": [13, 80], "band_siz": [4, 80], "bandwidth": [18, 22], "baochen": [8, 30, 31, 89, 90, 101, 125], "barh": 25, "barnech": 7, "barycent": [56, 57, 125], "barycenter_": 57, "base": [7, 10, 13, 14, 17, 18, 19, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 81, 83, 85, 87, 89, 91, 92, 93, 95, 97, 99, 100, 107, 108, 109, 112, 113, 124, 125, 126], "base_classifi": [18, 19], "base_criterion": [81, 83, 85, 87, 89, 91, 93, 95, 97, 127], "base_estim": [13, 14, 18, 21, 22, 25, 27, 30, 32, 34, 35, 37, 39, 41, 43, 44, 45, 46, 48, 50, 52, 54, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 74, 106, 126, 128], "base_method": [22, 74, 75], "base_module_": 10, "baseadapt": 126, "baseestim": [34, 63, 64, 65, 66, 67, 106], "baseselector": 106, "basura": [19, 68, 69], "batch": [105, 127], "batch_siz": [6, 8, 9, 10], "batchnormfix2": 127, "bbox_inch": 23, "bceloss": [83, 84, 87, 88, 97, 98], "becaus": [15, 126, 128], "been": [6, 13, 125, 126], "befor": [15, 22, 29, 30, 31, 32, 33, 39, 40, 46, 47, 48, 49, 52, 53, 54, 55, 61, 62, 72, 73, 74, 75, 89, 90, 101, 106], "behav": 26, "behavior": [12, 28, 29, 44, 45, 76, 79, 115, 116, 117, 118, 129], "being": [29, 124], "belong": [76, 122], "below": [17, 21, 76, 77, 78, 79, 80, 125, 126, 128], "benchmark": [0, 29], "benefit": [29, 125], "benjamin": [91, 92, 102], "best": [21, 27, 29, 46, 47, 126, 128], "best_estimator_": 27, "best_gamma_": 47, "best_params_": [21, 27], "best_reg_": 27, "beta": 55, "better": [14, 110, 111], "between": [14, 15, 17, 25, 29, 30, 31, 41, 42, 44, 45, 47, 49, 51, 53, 55, 58, 59, 70, 71, 72, 73, 74, 75, 84, 86, 88, 90, 92, 96, 98, 103, 107, 108, 113, 115, 126, 128], "bezier_curv": 23, "bf": 23, "bharath": [91, 92, 102], "bhushan": [91, 92, 102], "bia": [2, 3, 10, 18, 22, 48, 49, 50, 51, 53, 56, 57, 79, 125], "bibtex": 125, "binari": [22, 25, 26, 27, 79, 126, 128], "bit": 126, "black": [13, 23], "blob": 78, "block": [29, 126], "blue": 26, "bo": 125, "bonu": 29, "bool": [30, 31, 34, 36, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 73, 74, 75, 76, 78, 79, 89, 90, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122], "boolean": [76, 77, 78, 79, 80, 123], "borgwardt": [18, 48, 49, 125], "bot": 127, "both": [7, 18, 19, 55, 111, 115, 125, 126], "bottom": [1, 2, 3, 4], "bound": [48, 49, 51, 56, 57, 125], "boundari": [13, 14, 15, 16, 22, 58, 59], "branch": [29, 127], "break_ti": 22, "bregman": [15, 17, 19, 74, 75, 125], "bridg": [95, 96, 125], "bring": 127, "broad": 29, "browser": 29, "brute": [58, 59], "bruzzon": [34, 107, 125], "bsd": [3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 125], "bueno": [3, 13, 18, 19, 125], "bug": 127, "build": [29, 126], "built": [10, 126], "bump": 127, "bunch": [76, 77, 78, 79, 80, 126], "bure": [56, 57], "butscher": [15, 60, 125], "button": 29, "b\u00e9zier": 23, "b\u00fcnau": [18, 125], "c": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26, 27, 125], "c0": 14, "c1": 14, "c7": 17, "c84630": 23, "c_": [14, 15], "cach": 106, "cache_s": 22, "calcul": [79, 82, 86, 94, 99, 100, 104], "call": [1, 2, 3, 4, 6, 17, 21, 22, 46, 47, 68, 69, 77, 78, 79, 80, 108, 116, 126], "callabl": [58, 59, 106, 107, 108, 109, 111, 114], "callb": 10, "callback": [10, 81, 97, 127], "callbacks__epoch_tim": 10, "callbacks__print_log": 10, "callbacks__print_log__floatfmt": 10, "callbacks__print_log__keys_ignor": 10, "callbacks__print_log__sink": 10, "callbacks__print_log__stralign": 10, "callbacks__print_log__tablefmt": 10, "callbacks__train_loss": 10, "callbacks__train_loss__lower_is_bett": 10, "callbacks__train_loss__nam": 10, "callbacks__train_loss__on_train": 10, "callbacks__valid_acc": 10, "callbacks__valid_acc__lower_is_bett": 10, "callbacks__valid_acc__nam": 10, "callbacks__valid_acc__on_train": 10, "callbacks__valid_acc__scor": 10, "callbacks__valid_acc__target_extractor": 10, "callbacks__valid_acc__use_cach": 10, "callbacks__valid_loss": 10, "callbacks__valid_loss__lower_is_bett": 10, "callbacks__valid_loss__nam": 10, "callbacks__valid_loss__on_train": 10, "came": 13, "can": [7, 13, 14, 15, 17, 21, 26, 27, 29, 34, 39, 40, 43, 44, 45, 56, 57, 58, 59, 60, 61, 62, 65, 76, 82, 116, 121, 125, 126, 127, 128], "cannot": 106, "cao": 125, "captur": 84, "carri": [22, 76], "case": [7, 13, 14, 15, 18, 19, 21, 29, 58, 59, 107, 108, 109, 112, 113, 114, 126, 127], "cast": 125, "categor": [77, 78, 79, 80], "caution": 76, "cavazza": 125, "cax": 3, "cb": 3, "cbar_ax": 3, "cd": 29, "cdan": [84, 125], "cdd": 82, "ceil_mod": 10, "cell": 10, "center": [26, 30, 31, 46, 47, 77, 78, 79, 89, 90, 101], "center_cov_shift": 79, "centers_": 47, "centroid": [81, 82, 99, 127], "chain": 106, "chan": 4, "chanc": [126, 128], "chang": [6, 7, 14, 29, 36, 38, 42, 43, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126], "changelog": 127, "channel": 80, "chawla": [2, 3, 79], "check": [29, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127], "check_": 127, "check_arrai": 127, "check_result": [15, 22], "checkout": 29, "chen": 125, "choic": [6, 21, 126], "choos": [21, 46, 47, 79], "chosen": [47, 82], "circl": 13, "circleci": [1, 6, 7, 8, 9, 10, 15, 17, 19, 22], "circular": [34, 107, 125], "citat": 125, "cite": 125, "citeseerx": 125, "clariti": 126, "class": [4, 10, 15, 17, 21, 22, 26, 32, 33, 34, 36, 38, 42, 43, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127], "class_threshold": [81, 82, 99], "class_weight": 22, "classfic": 126, "classic": 19, "classif": [2, 3, 6, 8, 9, 10, 12, 17, 24, 25, 27, 30, 32, 34, 35, 37, 39, 41, 43, 44, 46, 50, 52, 54, 58, 59, 60, 61, 68, 70, 74, 76, 79, 107, 125, 129], "classifi": [12, 17, 18, 19, 20, 22, 34, 37, 38, 44, 45, 77, 79, 83, 84, 87, 88, 95, 97, 98, 108, 120, 125, 129], "classificationtechniqu": 125, "classregularizedotmap": 32, "classregularizerotmap": 22, "classregularizerotmappingadapt": [17, 22, 126], "claus": [3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 125], "clf": [14, 15, 16, 17, 18, 19, 21, 22], "clf_jcpot": 15, "clf_on_subspac": 19, "clf_otda": 17, "clf_otda_linear": 17, "clf_otda_sinkhorn": 17, "clf_otds_classreg": 17, "click": 29, "clone": [6, 8, 9, 10, 13, 19, 22, 29, 106, 126], "close": 13, "closer": [18, 58, 59], "closest": [23, 126], "closest_point": 23, "cluster": [77, 78, 79, 80, 82, 99, 111], "cluster_std": 78, "cm": [18, 19, 22, 26], "cm_bright": 22, "cmap": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26], "cmap_cv": 26, "cmap_data": 26, "cmap_domain": 26, "co": 23, "code": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 125, 126], "codecov": 127, "coef0": [22, 48, 49], "colla": [19, 125], "collabor": 29, "collect": [81, 83, 85, 87, 89, 91, 93, 95, 97], "color": [13, 18, 19, 22, 23, 25, 26], "color_": 23, "color_0": 23, "color_1": 23, "color_unlabel": 23, "colorbar": 3, "colormap": [1, 18, 19], "com": [18, 19, 29, 103, 105, 125, 127], "comb": 23, "combin": [7, 126], "come": [26, 29, 115], "command": 29, "commit": 29, "committ": 29, "common": [29, 126], "compar": [14, 25, 29, 126, 127], "comparison": [12, 24, 30, 32, 35, 37, 39, 41, 44, 46, 50, 52, 54, 58, 60, 61, 68, 70, 74, 76, 79, 129], "compat": [21, 43, 44, 60, 76, 110, 116, 125, 126, 127], "compil": 10, "complement": 115, "complet": [29, 106, 127], "compli": 29, "complic": 126, "compon": [68, 69, 70, 71, 72, 73, 74, 75, 125], "compos": [26, 115], "compromis": 29, "comput": [14, 15, 17, 18, 19, 23, 25, 30, 31, 46, 47, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 111, 113, 114, 125, 126, 127], "compute_weight": 18, "con": 125, "concaten": [7, 13, 126], "concentr": [29, 51, 56, 57, 125], "concept": 126, "condit": [2, 3, 21, 52, 53, 54, 55, 79, 83, 84, 125], "conditional_shift": [2, 3, 14, 15, 16, 17, 21, 22, 25, 26, 27, 79], "confer": [15, 19, 43, 56, 57, 60, 68, 69, 72, 73, 81, 82, 91, 92, 95, 96, 99, 102, 113, 125], "configur": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127], "confus": [93, 94, 104, 125], "consid": [29, 58, 59, 81, 82, 99, 124], "consider": 126, "consist": [1, 2, 3, 4, 13, 29, 110, 111], "constant": [19, 72, 73, 79, 82, 86, 94, 99, 100, 104, 108], "construct": [6, 8, 9, 10, 19, 22, 58, 59, 106], "constructor": [65, 106], "consum": 106, "contact": 19, "contain": [7, 30, 32, 35, 37, 39, 41, 46, 48, 50, 52, 54, 56, 58, 59, 61, 65, 68, 70, 72, 74, 76, 119, 120, 124, 126], "context": [58, 59], "contour": 18, "contrast": [81, 82, 99, 125], "contribut": [125, 127], "control": [23, 111, 115], "conv1": 10, "conv2": 10, "conv2d": 10, "convei": 22, "conveni": 126, "convent": [76, 77, 78, 79, 80, 126], "converg": [15, 17, 22, 32, 33, 39, 40, 44, 45, 61, 62], "convolut": [56, 57, 125], "coolwarm": 26, "copi": [6, 8, 9, 10, 19, 22, 29, 106], "coral": [8, 21, 22, 52, 89, 90, 101, 125, 127], "coraladapt": [21, 22, 125, 126], "coraladapter__reg": [21, 125], "core": [29, 126], "correct": [18, 29, 48, 49, 125], "correl": [8, 30, 31, 89, 90, 101, 112, 125], "correspond": [7, 15, 43, 44, 45, 60, 80, 122], "cost": [43, 44, 60], "could": [17, 76, 126], "count": 18, "coupl": [60, 119, 120], "coupling_": 17, "courti": [14, 17, 32, 33, 39, 40, 43, 44, 45, 50, 61, 62, 91, 92, 102, 125], "cov": 57, "cov_means_sources_": 57, "cov_means_targets_": 57, "cov_source_": 42, "cov_source_inv_sqrt_": 31, "cov_target_": 42, "cov_target_sqrt_": 31, "covari": [2, 3, 12, 13, 20, 30, 31, 35, 37, 38, 41, 42, 46, 47, 48, 49, 50, 51, 56, 57, 58, 74, 75, 79, 90, 109, 120, 123, 125, 129], "covariate_shift": [2, 3, 22, 79, 126, 128], "cover": 126, "coverag": 29, "cpu": 10, "creat": [7, 10, 13, 18, 19, 21, 23, 25, 26, 27, 29, 83, 87, 95, 97, 102, 111, 125, 126], "creation": [46, 47, 68, 69, 77, 78, 79, 80], "criterion": [6, 8, 9, 10, 46, 47, 48, 49, 52, 53, 54, 55, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 97, 98, 102], "criterion__adapt_criterion": 10, "criterion__base_criterion": 10, "criterion__reg": 10, "cross": [12, 25, 27, 28, 44, 46, 47, 76, 79, 108, 109, 115, 116, 117, 118, 125, 126, 129], "cross_entropy_loss": 108, "cross_val_scor": [12, 21, 28, 39, 76, 79, 106, 114, 120, 125, 126, 128, 129], "cross_valid": 126, "crosscovari": 84, "crossentropyloss": [6, 8, 9, 10, 81, 83, 85, 87, 89, 91, 93, 95, 97, 102], "crownx": [103, 105], "cuda": 10, "current": [13, 29, 125], "curv": 23, "custom": [76, 106], "cv": [21, 22, 25, 26, 27, 46, 47, 116, 125, 126, 127, 128], "cv_arg": 26, "cv_results_": 27, "cvf": [56, 57, 81, 82, 99, 125], "cvpr": [19, 72, 73, 125], "d": [17, 19, 22, 23, 32, 33, 39, 40, 50, 61, 62, 74, 75, 125], "da": [9, 11, 13, 15, 18, 19, 24, 25, 26, 27, 30, 32, 35, 37, 39, 41, 44, 46, 50, 52, 54, 58, 60, 61, 68, 70, 74, 76, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 121, 127, 128, 129], "da_dataset": 126, "da_shufflesplit": 118, "daestim": 0, "damodaran": [91, 92, 102, 125], "dan": [86, 125, 127], "dann": [88, 125], "dapeng": 111, "darrel": 125, "dasvm": [12, 20, 34, 77, 107, 120, 125, 129], "data": [1, 2, 3, 4, 13, 18, 19, 21, 22, 25, 26, 29, 30, 31, 33, 36, 38, 40, 42, 47, 48, 49, 51, 53, 55, 56, 57, 59, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 99, 101, 102, 108, 109, 110, 115, 116, 117, 119, 120, 124, 125, 126, 127, 128], "datafram": 7, "dataload": 10, "datapoint": 13, "datas": 26, "dataset": [5, 11, 20, 22, 25, 26, 27, 30, 32, 35, 37, 39, 41, 46, 47, 48, 49, 50, 52, 56, 58, 61, 68, 69, 70, 72, 74, 112, 113, 114, 115, 116, 120, 123, 127, 128, 129], "dataset2": [7, 26], "dataset_from_df": 7, "dataset_from_dict": 7, "dataset_from_list": 7, "dataset_from_tensor": 7, "dataset_from_tupl": 7, "dataset_with_weight": 7, "dataset_with_weights_from_dict": 7, "de": [18, 125], "deal": [19, 126, 127], "decid": [58, 59], "decis": [13, 14, 15, 16, 22, 58, 59], "decision_boundari": 13, "decision_funct": [13, 34, 43, 60, 63, 64, 65, 66, 67], "decision_function_shap": 22, "decisionboundarydisplai": [17, 18, 19, 22, 27], "decomposit": 21, "deep": [6, 8, 9, 11, 65, 79, 108, 112, 126, 127, 129], "deep_da_dataset": 76, "deepcor": [10, 90, 101, 104, 125, 127], "deepcoralloss": 10, "deepdadataset": [7, 76, 127], "deepjdot": [92, 102, 125, 127], "def": [2, 3, 16, 18, 19, 23, 26], "default": [14, 18, 21, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126], "default_selector": [21, 106], "defin": [18, 23, 26, 46, 47, 58, 59, 99, 100, 126, 128], "degre": [22, 48, 49], "delta_f": [4, 80], "demonstr": [29, 126], "deng": 125, "denot": 126, "densiti": [22, 35, 36, 47, 49, 55, 58, 109, 113, 125], "densityratio": 125, "densityreweight": [18, 22, 54, 58, 126, 128], "densityreweightadapt": [22, 126], "depend": [26, 29, 58, 59, 110, 115, 124, 125, 126, 127], "dependabot": 127, "dependency_nam": 29, "deprec": [6, 7, 8, 9, 10, 76], "deriv": [18, 126], "describ": [19, 29, 76, 82], "descript": [2, 3, 29, 76, 77, 78, 79, 80, 126], "design": [21, 117, 126, 127], "desir": [29, 126], "detach": [6, 8, 9, 10, 19, 22], "detail": [2, 3, 18, 19, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 52, 53, 54, 55, 58, 59, 61, 62, 68, 69, 70, 71, 73, 75, 76, 79, 88, 96, 98, 107, 108, 109, 110, 111, 112, 113, 125, 126], "determin": [46, 47, 68, 69, 77, 78, 79, 80, 108, 110], "dev": [125, 127], "develop": 29, "devi": [43, 91, 92, 102, 125], "deviat": [77, 78, 79, 80], "devic": 10, "df": 7, "diagon": [50, 51, 56, 57], "dict": [7, 18, 19, 57, 58, 59, 65, 76, 77, 78, 79, 80, 119, 122], "dict_kei": 126, "dict_raw_data": 7, "dictionari": [7, 21, 57, 76, 77, 78, 79, 80, 122, 126], "did": [15, 17, 22], "differ": [13, 15, 21, 22, 26, 55, 73, 74, 75, 80, 116, 126, 128], "dilat": 10, "dim": 6, "dimens": [6, 7], "dimension": [19, 121], "ding": [19, 72, 73, 125], "direct": [18, 46, 47, 125], "directli": [27, 65, 106, 110], "directori": [29, 106, 127], "disc_classifi": 95, "discard": [34, 81, 82, 99], "discr": 22, "discrep": [19, 49, 53, 55, 82, 92, 95, 96, 99], "discrimin": [37, 95, 96, 125], "discriminatorreweight": [18, 22], "discriminatorreweightadapt": [22, 126], "disi": 125, "disk": 29, "dispar": [95, 96], "dissimilar": 127, "distanc": [43, 56, 57, 58, 59, 60, 62, 71, 81, 82, 86, 90, 91, 92, 94, 99, 100, 102, 104], "distance_metr": [58, 59], "distance_threshold": [81, 82, 99], "distinct": 126, "distribut": [1, 2, 3, 4, 13, 14, 17, 18, 19, 22, 26, 44, 45, 51, 55, 79, 91, 92, 102, 110, 125, 126, 128], "diverg": [11, 12, 18, 19, 47, 49, 55, 74, 75, 76, 84, 88, 89, 92, 98, 102, 125, 129], "divid": [78, 101, 104], "do": [13, 25, 27, 29, 110, 126, 127, 128], "doc": [29, 127], "docstr": [29, 118, 127], "doctest": 29, "document": [26, 58, 59, 109, 111, 114, 125, 127], "doe": [15, 21, 22, 29, 106, 126, 128], "doesn": [58, 59], "doi": 125, "domain": [0, 5, 11, 14, 15, 20, 21, 26, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129], "domain_1_sampl": 7, "domain_classifi": [22, 37, 38, 83, 87, 95, 97, 108], "domain_classifier_": 38, "domain_criterion": [83, 84, 87, 88, 97, 98], "domain_label": 63, "domain_nam": [76, 77, 78, 79, 80, 126], "domain_names_": 76, "domain_pred_": [82, 84, 88, 96, 98], "domain_pred_t": [82, 84, 88, 96, 98], "domain_sourc": 1, "domain_target": 1, "domainandlabelstratifiedsubsampletransform": 127, "domainawar": 126, "domainawarecriterion": 10, "domainawaredataset": [77, 78, 79, 80, 126, 127], "domainawareestim": 126, "domainawaremodul": 10, "domainawarenet": [10, 127], "domainawarenetifit": 10, "domainbalanceddataload": 10, "domainonlydataload": 127, "domainonlysampl": 127, "domains_": 76, "domains_idx": 122, "domainshufflesplit": 26, "domainstratifiedsubsampletransform": 127, "domainsubsampl": 127, "don": 126, "done": [15, 17, 21, 23, 25, 125, 126, 128], "dot": 23, "dots_class": 23, "dots_keep": 23, "dots_rot": 23, "download": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 127], "dpi": 23, "draw_": 23, "drawn": 26, "dropout": 10, "dropout1": 10, "dropout2": 10, "ds_cnt": 22, "dslr": 126, "dtype": [19, 22], "due": [14, 15, 16], "duplic": 29, "dur": [6, 8, 9, 10], "dure": [21, 27, 56, 57, 58, 59, 76, 81, 83, 85, 87, 89, 91, 93, 95, 97, 126], "dynam": 76, "e": [13, 19, 29, 44, 45, 83, 84, 87, 88, 95, 97, 98, 110, 121, 125], "each": [1, 2, 3, 4, 21, 26, 34, 36, 38, 42, 44, 45, 47, 49, 55, 57, 58, 59, 63, 64, 65, 66, 67, 73, 76, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126], "earth": 62, "easier": 126, "eccv": [8, 89, 90, 91, 92, 93, 94, 101, 102, 104, 125], "eddataload": 10, "edg": 127, "edit": 29, "editor": 29, "editsec": 18, "edu": [3, 18, 19, 125], "eduardo": [56, 57, 125], "effect": [18, 19, 126], "effici": [58, 59], "eigenvalu": 19, "eigenvector": [19, 71], "eigvects_": 71, "either": [7, 78], "elaps": 106, "element": [7, 58, 59, 77, 78, 79, 80], "elig": 29, "els": [10, 13, 18, 19, 22, 23, 60, 110], "email": 29, "embed": [83, 125], "emd": 23, "empir": 51, "empti": [76, 124, 126, 127], "enabl": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126], "enable_metadata_rout": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "encapsul": [65, 106], "encod": [21, 96], "end": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 79], "engin": [19, 74, 75, 125], "enhanc": [29, 127], "ensur": [1, 2, 3, 4, 18, 22, 29, 76, 110], "ensure_all_finit": [6, 7, 8, 9, 10], "entiti": 126, "entitl": [58, 59], "entrop": [22, 32, 33, 39, 40, 43, 60], "entropi": [21, 27, 44, 60, 108, 112, 113, 125], "entropicotmap": [22, 25, 27, 126, 128], "entropicotmappingadapt": [17, 22, 126], "entropicotmappingadapter__reg_": 27, "enumer": [22, 23, 26, 118], "environ": 10, "ep": [17, 18, 19, 22, 27, 48, 49, 82, 86, 94, 99, 100, 104], "epoch": [6, 8, 9, 10, 97, 98], "epsilon": [13, 108, 127], "eq": [110, 113], "equal": [55, 58, 59, 70, 71, 72, 73, 74, 75, 78], "equip": [13, 34], "equival": [58, 59, 76], "error": [21, 29, 32, 33, 36, 38, 39, 40, 42, 47, 49, 55, 59, 61, 62, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 127], "estim": [13, 14, 15, 18, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 96, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 125, 128], "estimator_": [44, 45], "estimator_no_da": 25, "et": [18, 19, 46, 47, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 100, 108, 109, 110, 111, 112, 113], "etc": [13, 29, 125], "euc": 103, "euclidean": [43, 58, 59, 60], "euclidean_dist": [58, 59], "european": [91, 92, 102, 125], "evalu": [14, 15, 16, 25, 27, 109, 111, 114, 126, 128], "even": [45, 106, 124, 126], "everi": [29, 78], "evolut": 13, "exact": [60, 107], "exactli": 126, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59, 124, 126, 129], "except": [29, 119, 120], "execut": [5, 11, 20, 24, 28, 126, 129], "exercis": 76, "exist": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 79, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "expect": [29, 58, 59], "experienc": 29, "explan": 29, "explicit": 126, "exploit": 125, "explor": 19, "expos": 126, "extend": 76, "extens": [56, 57], "extent": [14, 15], "extract": [122, 123], "extract_source_indic": 18, "extractor": [87, 95, 97], "f": [1, 2, 3, 4, 13, 14, 15, 17, 18, 19, 21, 25, 26, 27, 79, 118, 125], "factori": 23, "fail": [29, 126], "fals": [6, 8, 9, 10, 18, 19, 21, 22, 23, 25, 26, 27, 30, 31, 34, 36, 38, 42, 43, 44, 45, 47, 48, 49, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126], "famili": 23, "far": [81, 82, 99], "fc1": [6, 8, 9, 10], "fc2": 10, "featur": [1, 2, 3, 17, 18, 19, 29, 44, 45, 72, 73, 76, 78, 82, 84, 85, 86, 87, 88, 90, 95, 97, 98, 99, 100, 101, 102, 103, 105, 108, 116, 119, 120, 121, 125, 127], "features_": [82, 84, 86, 90, 92, 98, 99, 100, 102], "features_t": [82, 84, 86, 90, 92, 98, 99, 100, 102, 105], "features_target": 101, "feel": [29, 126], "fei": 125, "fellow": 125, "feng": [30, 31, 125], "feofanov": 125, "fernand": [56, 57, 125], "fernando": [19, 68, 69, 125], "ferrari": [51, 56, 57, 125], "fetch": 126, "fetch_all_office31_surf": 126, "fetch_office31_surf_al": 126, "fetcher": 126, "few": [125, 126], "ff0000": 22, "ffa056": [18, 19], "fig": [1, 2, 3, 4, 23, 26], "figsiz": [1, 2, 3, 4, 13, 17, 18, 19, 22, 23, 25, 26], "figur": [13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 29], "file": [5, 11, 12, 20, 24, 28, 129], "fill": 26, "filterwarn": 27, "final": [21, 22, 74, 75, 125], "final_angl": 23, "financ": 125, "find": [15, 18, 27, 47, 49, 53, 55], "first": [7, 13, 18, 22, 25, 26, 27, 29, 117, 124, 125, 126, 127], "first_five_sampl": 7, "first_sampl": 7, "fisher": 19, "fit": [6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 106, 109, 125, 126, 128], "fit_param": [126, 128], "fit_predict": 126, "fit_transform": 15, "five": 7, "fix": [29, 30, 31, 41, 42, 44, 45, 74, 75, 78, 127], "fixtur": 127, "flag": 127, "flamari": [14, 15, 16, 17, 21, 32, 33, 39, 40, 43, 44, 45, 50, 51, 56, 57, 61, 62, 91, 92, 102, 125], "flda": [22, 74, 75], "flip": [107, 108, 109, 112, 113, 114], "float": [30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 108, 110, 111, 112, 113, 115], "float64": [14, 15, 16, 17, 19, 22], "florent": 125, "flow": 126, "fluctuat": 126, "fly": 126, "fold": [26, 46, 47, 115, 118], "folder": 29, "follow": [17, 18, 19, 21, 26, 29, 76, 77, 78, 79, 80, 83, 87, 95, 96, 97, 110, 117, 125, 126], "font": 23, "fontsiz": [1, 2, 3, 13, 18, 19, 23, 26], "forc": [58, 59], "force_all_finit": [6, 7, 8, 9, 10], "fork": 29, "form": [26, 106, 107, 117], "format": [26, 29, 76, 125], "former": 7, "forward": [10, 82, 84, 86, 88, 90, 92, 94, 96, 98], "found": [29, 126], "four": 7, "fr": 19, "framework": [125, 126], "frank": [18, 48, 49], "fred": [56, 57, 125], "free": [29, 126], "frequenc": [4, 80], "friend": 29, "frobeniu": [101, 104], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 44, 45, 55, 58, 60, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 95, 97, 99, 106, 111, 115, 118, 124, 125, 126, 128, 129], "from_estim": [17, 18, 19, 22, 27], "full": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 125, 127], "function": [10, 18, 19, 21, 26, 29, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 58, 59, 68, 69, 77, 78, 79, 80, 94, 106, 107, 108, 109, 111, 112, 113, 114, 125, 126, 127, 128], "further": [13, 29, 58, 59], "futur": 76, "futurewarn": [6, 7, 8, 9, 10, 127], "g": [2, 3, 17, 19, 44, 45, 72, 73, 79, 81, 82, 83, 87, 95, 97, 99, 110, 121, 125], "g_": 53, "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 125, 129], "gamma": [18, 22, 46, 47, 48, 49, 52, 53, 54, 55, 79, 95, 96], "gang": 125, "ganin": [87, 88, 125], "gaussian": [22, 38, 41, 42, 50, 51, 52, 53, 57, 77, 78, 79, 80, 81, 82, 85, 86, 99, 100, 125], "gaussiannb": 106, "gaussianreweight": [18, 21, 22], "gaussianreweightadapt": [21, 22, 125, 126], "gaussien": [56, 57], "gca": 17, "gda": 103, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 21, 22, 24, 25, 26, 27, 29, 46, 47, 68, 69, 77, 78, 79, 80, 83, 87, 95, 97, 108, 111, 116, 121, 125, 126, 127, 129], "geng": [19, 74, 75, 125], "germain": 125, "get": [18, 21, 23, 65, 126, 127], "get_domain": [22, 76], "get_estim": [17, 18, 19, 63, 65, 67], "get_metadata_rout": 65, "get_multidomain_data": 16, "get_n_split": [116, 118], "get_param": 65, "gist": 29, "git": [29, 125, 127], "github": [10, 29, 103, 105, 125, 127], "give": [17, 29], "given": [2, 3, 13, 36, 38, 39, 40, 42, 43, 44, 46, 47, 49, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 126], "glad": 29, "glossari": [58, 59], "gmail": [18, 19], "gnassoun": [6, 8, 9, 10, 23, 56, 57, 125], "gnassounou2024skada": 125, "go": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 126], "goal": [13, 18, 19], "good": [29, 107, 108, 109, 112, 113, 114], "gradient": [10, 22, 74, 75], "grai": [13, 15], "grain": 22, "gramfort": [56, 57, 125], "grant": 29, "graph": [58, 59, 97, 98, 103, 125], "great": 29, "greater": [58, 59], "greater_is_bett": [107, 108, 109, 110, 111, 112, 113, 114], "greatli": 29, "grei": 1, "gretton": [18, 48, 49, 125], "grid": [27, 125], "grid_search": [21, 27, 125], "gridsearchcv": [12, 21, 28, 39, 76, 79, 109, 112, 125, 126, 128, 129], "ground": [32, 33, 39, 40, 61, 62], "group": [118, 127], "gt": 10, "guarante": [44, 45], "guess": 25, "guiba": [15, 60, 125], "guid": [7, 29, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 127], "guidelin": 29, "h": [18, 125], "h_": 53, "ha": [6, 7, 13, 26, 32, 33, 39, 40, 61, 62, 83, 87, 95, 97, 125, 126], "habrard": [14, 44, 45, 125], "hand": [7, 29], "handl": [13, 21, 29, 127], "haobo": 125, "harder": [84, 88, 98], "harmon": 127, "hauptmann": [81, 82, 99, 125], "have": [7, 13, 19, 26, 29, 58, 59, 76, 77, 78, 79, 80, 95, 119, 120, 124, 126, 127, 128], "height": 126, "help": 29, "helper": [17, 126], "here": [2, 3, 13, 17, 21, 118, 125, 126], "herrera": [2, 3, 79], "hide": 23, "hidetoshi": [18, 37, 38, 41, 42, 125], "hierarch": 117, "high": [29, 107, 108, 109, 112, 113, 114, 126, 128], "higher": [110, 111], "highest": 71, "highlight": [29, 127], "hilbert": 19, "hing": [14, 22, 44], "hisashi": 125, "ho": 125, "hold": 29, "home": [1, 6, 7, 8, 9, 10, 15, 17, 19, 22], "hook": 29, "horizontalalign": [18, 19, 22], "how": [12, 14, 15, 24, 26, 30, 31, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 125, 126, 129], "howev": 13, "hstack": 16, "html": [10, 29], "http": [18, 103, 105, 125, 127], "hu": [111, 125], "huang": [18, 48, 49, 125], "hyperparamet": 125, "i": [1, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29, 34, 35, 36, 37, 38, 42, 44, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128], "ic": 111, "ice_typ": 111, "iclr": 112, "icml": [52, 53, 54, 55, 85, 86, 100, 108], "idea": [17, 18, 47, 49, 55], "ident": [116, 119, 120], "identifi": 76, "idx": 18, "ieee": [17, 18, 19, 32, 33, 34, 39, 40, 50, 56, 57, 58, 59, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 99, 107, 125], "ievgen": [43, 125], "ignor": [1, 27, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126], "ii": 26, "iii": 125, "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 16, 21, 22, 25, 26, 27, 29, 125], "imag": [126, 128], "impact": [58, 59], "implement": [18, 19, 29, 82, 110, 117, 126], "implicit": 6, "import": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 46, 47, 49, 55, 58, 59, 106, 109, 115, 118, 125, 126, 128], "importanceweightedscor": [27, 126, 127], "importantli": 21, "improv": [13, 18, 37, 38, 41, 42, 125, 127], "imshow": [14, 15], "in_featur": 10, "includ": [6, 21, 25, 27, 29, 76, 106, 115, 125, 126, 127], "include_all_target": 126, "inclus": 29, "incomplet": 29, "incorrect": 76, "increas": [15, 17, 22], "independ": [19, 79], "index": [7, 26, 118, 121, 122, 125, 126, 127], "index_source_delet": 34, "index_target_ad": 34, "indic": [26, 29, 58, 59, 76, 77, 78, 79, 80, 105, 115, 116, 117, 122, 123], "indices_source_delet": 13, "indices_target_ad": 13, "indx_sort": 26, "infer": [18, 37, 38, 41, 42, 110, 124, 125], "influenc": [58, 59], "inform": [14, 29, 44, 45, 56, 57, 65, 76, 125], "initi": [10, 76, 84, 88, 98, 126, 128], "inner": [32, 33], "inplac": 10, "input": [10, 18, 21, 47, 49, 55, 58, 59, 83, 87, 95, 97, 119, 120, 121, 125, 127], "inspect": [17, 18, 19, 22, 27, 106], "inspir": [29, 103, 105, 110], "instabl": 108, "instal": 29, "instanc": [7, 19, 21, 44, 45, 46, 47, 65, 68, 69, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 91, 93, 95, 97, 106, 108, 111, 115, 125], "instanti": [83, 87, 95, 97], "instead": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127], "institut": [18, 125], "instruct": 29, "int": [32, 33, 34, 39, 40, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 95, 97, 98, 99, 105, 108, 110, 111, 115, 116, 118, 126], "integ": [21, 76, 77, 78, 79, 80, 108, 116, 126], "integr": [106, 126], "intel": 125, "intellig": [17, 32, 33, 34, 39, 40, 43, 50, 61, 62, 107, 125], "intend": 76, "inter": 111, "interfac": [106, 126], "intern": [15, 18, 19, 43, 58, 59, 60, 68, 69, 76, 95, 96, 113, 125], "intra": 111, "introduc": [126, 127], "intuit": [22, 29], "invers": [31, 58, 59], "involv": 29, "io": 125, "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "is_avail": 10, "is_fit": 10, "ism": 18, "isotrop": 78, "issu": [29, 127], "ist": 125, "item": [10, 18, 19, 29, 118], "iter": [10, 14, 15, 17, 22, 26, 32, 33, 34, 39, 40, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 62, 72, 73, 74, 75, 76, 115, 116, 126], "iterator_train": 10, "iterator_valid": 10, "its": [7, 14, 15, 16, 18, 47, 55, 76, 126], "itself": 7, "j": [2, 3, 13, 14, 15, 17, 18, 19, 48, 49, 60, 72, 73, 79, 125], "januari": [15, 60, 125], "jcpot": [43, 127], "jcpotlabelpropadapt": [15, 43], "jdot": [12, 20, 22, 44, 45, 79, 120, 125, 129], "jdotclassifi": [14, 22], "jdotregressor": 14, "jialin": [19, 70, 71], "jianfeng": 125, "jiang": [81, 82, 99, 125], "jianmin": [93, 94, 104, 125], "jiashi": [30, 31, 125], "jin": [93, 94, 104, 125], "job": [58, 59, 126], "joblib": [58, 59, 106], "joint": [14, 44, 45, 72, 73, 91, 92, 102, 125], "jordan": 125, "journal": [18, 37, 38, 41, 42, 87, 88, 109, 125], "jp": 18, "junbo": 125, "june": 125, "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "just": [7, 22], "k": [13, 14, 18, 19, 23, 25, 34, 48, 49, 51, 56, 57, 98, 105, 125, 127], "k_": 71, "kachaiev": [18, 19, 125], "kachayev": [18, 19], "kaichao": 108, "kanamori": 125, "kang": [81, 82, 99, 125], "kashima": [18, 125], "kate": [8, 30, 31, 89, 90, 101, 125], "kawanab": [18, 125], "kd_tree": [58, 59], "kdtree": [58, 59], "keep": [29, 76], "kei": [7, 18, 19, 65, 122, 126], "kellenberg": [91, 92, 102, 125], "kept": [68, 69], "kernel": [13, 14, 15, 17, 19, 22, 32, 44, 46, 47, 48, 49, 52, 53, 54, 55, 70, 71, 72, 73, 74, 75, 79, 81, 82, 85, 86, 99, 100], "kernel_ridg": [14, 15], "kernel_s": 10, "kerneldens": [18, 22, 35, 36, 109], "kernelridg": [14, 15], "keyword": [58, 59], "kim": 125, "kind": 15, "kl": [18, 47], "klau": 125, "kliepreweight": [22, 47, 125], "kliepreweightadapt": [22, 126], "kmean": [82, 99], "kmmreweight": [18, 49, 125], "knn": [58, 59], "know": 13, "knowledg": [19, 29, 74, 75, 125], "krauledat": 125, "krr": [14, 15], "kullback": [18, 47], "kun": [52, 53, 54, 55], "kuniaki": 113, "kwarg": [6, 34, 44, 45, 47, 63, 64, 65, 66, 67, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108], "kwok": 125, "l": [15, 34, 60, 81, 82, 99, 107, 125], "l1": [32, 33, 58, 59], "l1l2": [32, 33], "l2": [32, 33, 45, 58, 59], "l_p": [58, 59], "label": [2, 3, 4, 7, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 32, 33, 36, 38, 42, 43, 44, 45, 47, 49, 52, 53, 54, 55, 59, 60, 63, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 91, 92, 93, 94, 95, 97, 99, 102, 106, 107, 108, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "label_1_sampl": 7, "lalou": [26, 125], "lambda": 7, "laplac": [58, 59, 103], "laplac1": 103, "laplace_smooth": [18, 22, 58, 59], "laplacian": 103, "larg": [39, 40, 61, 62, 126], "largest": 83, "larochel": 125, "last": [21, 58, 87, 95, 97, 106], "later": 7, "latter": [107, 108, 109, 112, 113, 114], "laviolett": 125, "layer": [81, 82, 83, 85, 87, 89, 91, 93, 95, 97], "layer_nam": [6, 8, 9, 10, 81, 83, 85, 87, 89, 91, 93, 95, 97], "lda": 19, "lead": 76, "leaf": [58, 59], "leaf_siz": [22, 58, 59], "leakag": [76, 127], "learn": [14, 15, 18, 21, 26, 29, 44, 45, 49, 53, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 85, 86, 87, 88, 95, 96, 100, 106, 109, 116, 126, 127, 128], "least": [29, 45, 118, 124], "leav": [76, 116], "leaveonedomainout": [26, 76, 126], "ledoit": [30, 31, 41, 42], "left": [13, 26], "legend": [4, 13, 14, 15, 16, 25, 26], "lei": 125, "leibler": [18, 47], "lemma": [30, 31, 41, 42], "lempitski": 125, "len": [13, 18, 19, 22, 23, 26, 120, 124], "length": [74, 75, 78, 119, 120, 124], "length_scal": [22, 74, 75], "length_step": 23, "less": [58, 59, 70, 71, 72, 73, 74, 75], "let": [26, 126, 128], "level": 126, "lexsort": 26, "liang": 125, "lib": [6, 7, 8, 9, 10, 15, 17, 22], "librari": [125, 126], "licens": [3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26], "liew": 125, "like": [7, 21, 29, 36, 38, 42, 46, 47, 49, 53, 54, 55, 59, 76, 77, 78, 79, 80, 81, 82, 85, 86, 99, 100, 108, 110, 116, 119, 120, 121, 122, 123, 124, 126, 128], "likelihood": [18, 37, 38, 41, 42, 46, 47, 125], "lim": 17, "limit": 126, "line": 13, "line2d": 13, "linear": [10, 12, 13, 17, 20, 22, 44, 50, 51, 53, 56, 57, 79, 106, 120, 125, 129], "linear_model": [14, 15, 16, 18, 21, 125, 126, 128], "linearmong": 125, "linearotmap": 22, "linearotmappingadapt": [17, 22, 126], "linearregress": [43, 45], "linestyl": 25, "linewidth": 23, "link": [29, 127], "linspac": [4, 13, 14, 15, 19, 23], "lint": 29, "linter": 127, "lionelkusch": 127, "list": [7, 13, 19, 26, 29, 44, 45, 47, 58, 59, 65, 76, 81, 97, 106, 120, 124, 126], "listedcolormap": [18, 19, 22], "liter": [65, 76], "literatur": 29, "liu": 125, "live": 29, "ll": [26, 124], "load": [126, 128], "load_mnist_usp": [6, 8, 9, 10], "loc": [13, 22, 26], "local": [6, 7, 8, 9, 10, 15, 17, 22, 29], "locat": [13, 53, 78], "lodo": 26, "log": [18, 37, 38, 39, 40, 41, 42, 61, 62, 125, 127], "logist": [15, 44], "logisticregress": [13, 14, 15, 16, 18, 21, 22, 37, 38, 44, 46, 48, 108, 125, 126, 128], "logit": 110, "loglog": [39, 40, 61, 62], "logo": [12, 24, 127, 129], "logreg": 15, "loison": 125, "long": [19, 72, 73, 83, 84, 85, 86, 93, 94, 100, 104, 125], "longer": 126, "loog": [18, 125], "look": [18, 29, 126], "loop": [10, 32, 33, 125], "loss": [10, 14, 19, 43, 44, 45, 60, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 107, 108, 109, 112, 113, 114, 127], "loss_fn": 10, "loss_func": 108, "loss_ot": 14, "loss_tgt_label": 14, "lounici": [51, 56, 57, 125], "low": [107, 108, 109, 112, 113, 114, 126], "lower": [13, 14, 15, 16, 19, 22], "lowercas": 106, "lp": [15, 22, 32, 33], "lpl1": [22, 32, 33], "lpp": [74, 75], "lr": [6, 8, 9, 10], "lst_loss_ot_": [44, 45], "lst_loss_tgt_labels_": [44, 45], "lstrip": [18, 19, 22], "lt": 10, "lw": 26, "m": [18, 19, 34, 72, 73, 107, 125], "mach": 125, "machin": [15, 17, 18, 32, 33, 34, 39, 40, 50, 58, 59, 60, 61, 62, 87, 88, 95, 96, 107, 109, 125], "made": [115, 118, 127], "magic": 29, "mai": [29, 58, 59, 116, 125], "mail": 29, "main": [13, 29, 126, 127], "maintain": 125, "make": [26, 29, 77, 80, 84, 88, 98, 116, 125, 126, 127, 128], "make_da_pipelin": [15, 16, 17, 21, 25, 125, 126, 127], "make_dataset": [4, 22], "make_dataset_from_moons_distribut": [1, 13], "make_pipelin": 21, "make_shifted_dataset": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 126, 128], "make_variable_frequency_dataset": 4, "manag": 127, "mandat": 126, "mandatori": 126, "manhattan_dist": [58, 59], "manipul": 76, "manner": 29, "mano": [110, 125, 127], "manoscor": 127, "manpow": 125, "map": [17, 19, 22, 50, 51, 52, 53, 56, 57, 65, 76, 125], "marconcini": [34, 107, 125], "margin": [13, 95, 96], "margin_lin": 13, "mark": [19, 126], "markdown": 29, "marker": [13, 16, 19, 23, 26, 126], "markers": 13, "masashi": [18, 46, 47, 109, 125], "mask": [26, 76, 106, 126, 127], "mask_target_label": [6, 8, 9, 10, 19, 21, 22, 25, 26, 27, 63, 64, 65, 66, 67, 76, 106, 126], "match": [14, 49, 72, 73, 125], "math": 23, "mathelin": [18, 125], "mathemat": [18, 29, 125], "matplotlib": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "matrix": [43, 44, 52, 53, 54, 55, 58, 59, 60, 75, 76, 79, 102, 103, 110, 125], "mattia": 125, "matur": 29, "mauric": [56, 57, 125], "max": [3, 14, 17, 18, 19, 22, 23, 39, 40, 44, 45, 61, 62, 127], "max_epoch": [6, 8, 9, 10, 97, 98], "max_featur": 83, "max_inner_it": [22, 32, 33], "max_it": [18, 22, 32, 33, 34, 39, 40, 43, 46, 47, 48, 49, 52, 53, 54, 55, 61, 62, 72, 73, 74, 75], "max_len": [18, 19], "max_n_split": [116, 126], "maxenc": 7, "maxim": [18, 34, 72, 73, 74, 75], "maximum": [19, 22, 43, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 62, 83, 97, 98], "maxpool": 10, "maxpool2d": 10, "mb": [5, 11, 20, 24, 28, 129], "mbarnech": 127, "mboula": [56, 57, 125], "mcc": [94, 127], "md": 127, "mdd": [96, 127], "mean": [14, 15, 16, 19, 21, 23, 25, 42, 49, 53, 55, 57, 58, 59, 79, 107, 108, 109, 112, 113, 114, 126, 127, 128], "mean_source_": [31, 42], "mean_squared_error": [14, 15], "mean_target_": [31, 42], "mean_test_scor": 27, "measur": 92, "mechan": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "median": [39, 40, 61, 62, 82, 86, 94, 99, 100, 104], "mellot": 125, "mellotapollin": 127, "mem": [5, 11, 20, 24, 28, 129], "member": 125, "memori": [58, 59, 105, 106], "memory_featur": [98, 105], "memory_output": [98, 105], "mention": 29, "merg": [7, 26, 29, 76, 124], "meshgrid": [14, 15], "messag": 29, "meta": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126], "metadata": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "metadata_rout": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "metadatarequest": 65, "method": [1, 2, 3, 4, 7, 11, 13, 20, 21, 24, 26, 29, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 79, 81, 84, 85, 87, 88, 89, 90, 91, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127, 128, 129], "metric": [14, 15, 21, 22, 25, 27, 32, 33, 39, 40, 43, 44, 45, 58, 59, 60, 61, 62, 103], "metric_param": [22, 58, 59], "michel": 125, "might": [15, 17, 44, 45], "min": [19, 22, 23, 68, 69], "mingsheng": [83, 84, 85, 86, 93, 94, 100, 104, 125], "minim": [18, 47, 49, 53, 55, 84, 88, 96, 98, 112, 125], "minimum": [32, 33, 39, 40, 81, 82, 93, 94, 99, 104, 125], "minkowski": [22, 58, 59], "minkowski_dist": [58, 59], "minut": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "misc": 125, "miss": 127, "mix": [111, 125], "mixup": 111, "mixval": [111, 127], "mixvalscor": 127, "mline": 13, "mlpregressor": 45, "mmd": [19, 22, 49, 53, 54, 55, 86, 100, 125], "mmdlsconsmap": [22, 53], "mmdlsconsmappingadapt": 22, "mmdtarsreweight": [22, 55], "mmdtarsreweightadapt": [22, 127], "mnist": [6, 8, 9, 10], "mnist_dataset": [6, 8, 9, 10], "mnist_target": [6, 8, 9, 10], "mnisttouspsn": 10, "mnisttouspsnet": [6, 8, 9, 10], "mode": 121, "model": [10, 14, 18, 46, 47, 82, 97, 98, 99, 104, 108, 109, 110, 111, 114, 125, 127], "model_select": [21, 25, 26, 27, 125, 126, 128], "modern": 23, "modif": 29, "modifi": [26, 127], "modified_fil": 29, "modul": [6, 8, 9, 10, 81, 83, 85, 87, 89, 91, 93, 95, 97, 125, 127], "module_": 10, "module__base_modul": 10, "module__layer_nam": 10, "mong": [12, 20, 50, 51, 56, 57, 79, 106, 120, 125, 127, 129], "mongealign": 127, "montesuma": [56, 57, 125], "month": 125, "moon": [13, 77], "more": [13, 15, 18, 21, 29, 58, 59, 76, 110, 125, 126], "moreau": 125, "moreno": [2, 3, 79], "morerio": [112, 125], "most": [19, 26, 58, 59], "mostli": 126, "motoaki": 125, "move": [126, 127], "mover": 62, "mrg": [29, 127], "mse": [14, 15, 43, 44, 45], "mse_": [14, 15], "mse_t": [14, 15], "mu": [19, 22, 70, 71, 74, 75], "mu_regress": 79, "muandet": 125, "much": [14, 15, 16, 29], "multi": [1, 12, 20, 43, 56, 57, 79, 81, 82, 99, 100, 106, 120, 125, 126, 127, 129], "multi_class": 44, "multiclass": [2, 14, 15, 16, 79], "multilinear": 84, "multilinearmongealignmentadapt": 16, "multinomi": [14, 44], "multipl": [1, 2, 3, 4, 13, 21, 22, 46, 47, 56, 57, 68, 69, 76, 77, 78, 79, 80, 108, 119, 121, 126], "multipli": 79, "murino": 125, "must": [7, 21, 58, 59, 78, 110, 112, 118, 124, 125], "my": 29, "m\u00fcller": 125, "n": [2, 3, 14, 16, 17, 18, 19, 23, 26, 32, 33, 39, 40, 44, 45, 50, 61, 62, 79, 101, 104, 121, 125], "n_center": [22, 46, 47, 78], "n_channel": [4, 80], "n_class": [4, 6, 8, 9, 10, 53, 55, 80, 83, 95], "n_compon": [19, 21, 22, 68, 69, 70, 71, 72, 73, 74, 75, 126], "n_dot": 23, "n_featur": [31, 36, 38, 42, 47, 49, 53, 55, 59, 68, 69, 75, 78, 116, 119, 120, 121, 124], "n_frequenc": [4, 80], "n_frequency_sourc": 80, "n_iter_max": [22, 44, 45, 60], "n_job": [22, 58, 59], "n_neighbor": [22, 58, 59], "n_sampl": [6, 8, 9, 10, 17, 36, 38, 42, 47, 49, 53, 55, 59, 68, 69, 78, 79, 112, 116, 119, 120, 121, 122, 123, 124], "n_samples_sourc": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 48, 49, 77, 79, 80, 126, 128], "n_samples_target": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 77, 79, 80, 126, 128], "n_sourc": 16, "n_split": [25, 26, 27, 115, 116, 117, 118, 126, 128], "n_splits_lodo": 26, "n_target": 16, "n_tot_sourc": 17, "n_tot_target": 17, "naive_bay": 106, "nakajima": [18, 125], "name": [18, 19, 21, 22, 36, 38, 42, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 83, 85, 87, 89, 91, 93, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126], "named_step": [17, 106], "names_map": [26, 76], "nan": [26, 76, 121, 124, 126], "nap": [98, 105], "narr": 29, "natur": [22, 58, 59, 79], "nawaremodul": 10, "nbsp": 10, "nbviewer": 10, "nd": 127, "ndarrai": [76, 77, 78, 79, 80, 101, 102, 104, 112, 116, 124], "nearest": [55, 58, 59, 105, 125], "nearestneighborreweight": [18, 22], "nearestneighborreweightadapt": 22, "necessari": [14, 29, 44, 45, 126, 128], "necessarili": 22, "necessit": 126, "need": [21, 29, 108, 126], "neg": [76, 77, 78, 79, 80, 110, 125, 126], "neighbor": [22, 55, 58, 59, 105, 125], "neighborhood": [58, 59, 113, 125], "neither": 126, "netherland": 125, "network": [19, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 96, 99, 100, 110, 125], "neural": [14, 19, 44, 45, 56, 57, 70, 71, 87, 88, 110, 125], "neuralnetclassifi": [6, 8, 9], "neurip": [18, 46, 47, 83, 84, 97, 98, 110, 111, 125], "never": [29, 106], "new": [13, 56, 57, 71, 76, 126], "next": 126, "ngole": [56, 57, 125], "nicola": [43, 91, 92, 102, 125], "nip": [18, 44, 45, 48, 49, 125], "nn": [6, 8, 9, 10, 81, 83, 85, 87, 89, 91, 93, 95, 97], "nois": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 77, 78, 79, 80, 126, 128], "non": [29, 76, 77, 78, 79, 80, 110, 124, 126], "none": [7, 10, 16, 18, 19, 22, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 100, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "nonzero": [58, 59], "noplot": 29, "norm": [22, 32, 33, 39, 40, 61, 62, 74, 75, 101, 104, 110, 125], "normal": [18, 39, 40, 56, 57, 61, 62, 110, 125], "note": [7, 14, 21, 36, 38, 42, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "notic": 13, "now": [13, 14, 26, 126, 128], "np": [1, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 76, 79, 115, 116, 118, 124], "nt": 16, "num_featur": [6, 83, 87, 95, 97], "number": [15, 17, 18, 26, 29, 32, 33, 34, 39, 40, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 95, 97, 98, 99, 105, 108, 111, 115, 116, 118, 124, 126, 127], "numer": [39, 40, 61, 62, 82, 86, 94, 99, 100, 104, 108], "numitermax": [15, 17, 22], "numpi": [1, 4, 7, 13, 14, 15, 16, 18, 19, 21, 23, 25, 26, 29, 76, 115, 118], "o": [13, 16, 23, 125], "object": [13, 26, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 49, 50, 51, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 128], "observ": [35, 36, 109], "occur": [39, 40, 61, 62], "octob": 125, "odonnat": 125, "odot": 53, "off": [23, 29, 44, 45, 72, 73], "offer": [126, 128], "office31": 126, "often": 29, "old": 76, "oleksii": [18, 19, 125], "onc": [19, 26, 76, 117, 126], "one": [1, 7, 19, 21, 29, 44, 58, 59, 76, 77, 79, 80, 112, 124, 125, 126, 127, 128], "ones": [7, 16, 19, 21, 115, 118], "ones_lik": 7, "onli": [13, 21, 25, 26, 36, 38, 42, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 76, 79, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127], "onto": 19, "open": 29, "oper": [29, 51], "optim": [10, 11, 12, 14, 15, 18, 20, 22, 32, 33, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 71, 74, 75, 76, 79, 91, 92, 102, 106, 120, 125, 129], "optimali": [18, 19], "option": [7, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 47, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 85, 86, 89, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126], "orang": 26, "order": [7, 110, 126, 127], "org": [10, 125], "organ": 21, "origin": [14, 15, 29, 36, 38, 42, 47, 49, 55, 59, 60, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126], "ot": [15, 17, 22, 29, 33, 40, 43, 44, 45, 50, 51, 60, 61, 62, 102, 125], "ot_transport_": [17, 33, 40, 51, 62], "otda": [12, 20, 33, 40, 51, 61, 62, 79, 106, 120, 125, 129], "other": [7, 18, 26, 29, 36, 38, 42, 44, 45, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 80, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127], "otherwis": [76, 77, 78, 79, 80, 111, 112, 126], "otlabelprop": 22, "otlabelpropadapt": [15, 22, 60], "otmap": [17, 22], "otmappingadapt": [17, 22, 126], "ou": 127, "our": [26, 58, 59], "out": [13, 76, 116], "out_featur": 10, "outcom": [107, 108, 109, 112, 113, 114], "output": [10, 21, 29, 46, 47, 68, 69, 76, 77, 78, 79, 80, 81, 83, 85, 87, 89, 91, 93, 95, 97, 104, 105, 108, 126], "over": [7, 22, 108], "overfit": [126, 128], "overrid": [58, 59], "overwrit": 21, "ovr": 22, "p": [10, 18, 19, 22, 55, 58, 59, 72, 73, 106, 110, 125], "p_": 18, "p_sourc": [47, 49, 55], "p_target": [47, 49, 55], "pack": [6, 8, 9, 10, 19, 22, 25, 26, 27, 76, 126, 127], "pack_lodo": [26, 76, 126], "pack_test": [76, 127], "pack_train": [76, 127], "packag": [6, 7, 8, 9, 10, 15, 17, 22, 76], "pad": 10, "page": [10, 18, 19, 29, 58, 59, 72, 73, 74, 75, 125], "pair": [77, 78, 79, 80, 124, 126], "pami": 125, "pan": [19, 70, 71, 125], "panda": 7, "paper": [113, 125], "paragraph": 29, "parallel": [58, 59], "parallel_backend": [58, 59], "param": [21, 25, 65, 125, 126, 127], "param_entropicotmappingadapter__reg_": 27, "param_grid": [21, 125], "paramet": [1, 15, 17, 21, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128], "part": [22, 125], "partial_fit": [63, 64, 65, 66, 67], "particularli": 19, "partner": 125, "pass": [10, 21, 25, 29, 36, 38, 42, 46, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 68, 69, 77, 78, 79, 80, 83, 87, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126], "patch": 26, "path": 106, "pattern": [2, 3, 17, 19, 30, 31, 32, 33, 34, 39, 40, 50, 56, 57, 61, 62, 72, 73, 79, 81, 82, 99, 107, 125], "paul": 125, "pca": [19, 21, 68, 69, 70, 71, 72, 73, 74, 75, 126], "pca_source_": 69, "pca_target_": 69, "pd": 7, "pdf": [18, 23, 29, 125], "peak": 80, "pep8": 29, "per": [21, 34, 116, 126], "per_domain": 106, "percentag": [26, 115, 118], "perdomain": [21, 126], "perdomainselector": 126, "perform": [14, 15, 16, 18, 19, 21, 25, 27, 29, 102, 106, 126], "permit": 106, "perspect": [97, 98, 125], "pick": [29, 126], "pietro": 112, "pillow": 29, "pip": [29, 125], "pipe": [21, 125, 126], "pipe_perdomain": 21, "pipe_train_on_sourc": 21, "pipelin": [18, 22, 25, 27, 30, 32, 35, 37, 39, 41, 46, 48, 50, 52, 54, 56, 58, 61, 68, 70, 72, 74, 106, 125], "place": [7, 29], "plai": 126, "plan": [15, 17, 18, 37, 38, 41, 42, 43, 60, 125], "platform": 29, "pleas": [10, 29, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125], "plot": [5, 12, 17, 21, 22, 23, 26, 27, 77, 79, 80, 120, 129], "plot_adversari": [6, 11, 129], "plot_cross_val_score_for_da": [25, 28, 129], "plot_cross_validation_for_da": [26, 28, 129], "plot_cv_indic": 26, "plot_dasvm": [13, 20, 129], "plot_dataset_from_moons_distribut": [1, 5, 129], "plot_deepdadataset": [7, 11, 129], "plot_diverg": [8, 11, 129], "plot_gridsearch_for_da": [27, 28, 129], "plot_how_to_use_skada": [21, 24, 129], "plot_jdot_da": [14, 20, 129], "plot_label_prop_da": [15, 20, 129], "plot_lodo_indic": 26, "plot_method": 18, "plot_method_comparison": [22, 24, 129], "plot_monge_alignment_da": [16, 20, 129], "plot_optimal_transport": [9, 11, 129], "plot_optimal_transport_da": [17, 20, 129], "plot_reweight": [18, 20, 129], "plot_shifted_dataset": [2, 3, 5, 129], "plot_shifted_dataset_regress": [3, 5, 129], "plot_skada_logo": [23, 24, 129], "plot_st_shuffle_indic": 26, "plot_subspac": [19, 20, 129], "plot_subspace_and_classifi": 19, "plot_training_method": [10, 11, 129], "plot_variable_frequency_dataset": [4, 5, 129], "plot_weights_and_classifi": 18, "plt": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "plug": 126, "pmlr": [15, 43, 60, 125], "point": [7, 13, 18, 19, 22, 23, 27, 29, 34, 44, 45, 58, 59, 77, 78, 79, 80], "poli": 13, "polytechniqu": [3, 18, 19], "pos_sourc": [1, 13, 77], "pos_target": [1, 13, 77], "posit": [7, 13, 58, 59, 77, 125, 126], "possibl": [2, 3, 7, 13, 29, 30, 31, 41, 42, 58, 59, 74, 75, 126], "possibli": 126, "pot": [23, 29], "power": [58, 59], "pp": [15, 43, 56, 57, 60, 81, 82, 99, 125], "pr": [29, 127], "practic": [7, 29, 126], "pre": [29, 82, 99], "preced": 7, "precis": [39, 40], "precomput": [58, 59], "predict": [13, 14, 15, 17, 18, 19, 21, 22, 27, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 54, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 72, 82, 84, 94, 105, 107, 108, 110, 112, 125, 126], "predict_log_proba": [63, 64, 65, 66, 67], "predict_nonlinear": 10, "predict_proba": [43, 60, 63, 64, 65, 66, 67, 126, 127], "predictionentropyscor": [21, 27, 125, 126], "prefer": 29, "prefix": 29, "prepar": [25, 26, 27, 126], "preprint": [51, 56, 57, 125], "preprocess": [21, 22, 106, 125], "presenc": 121, "present": [13, 29], "preserv": [7, 14, 26, 115, 118], "prevent": [58, 59, 127], "previou": [19, 29, 126], "previous": 126, "prgn": 26, "print": [1, 4, 10, 14, 15, 16, 18, 19, 21, 22, 25, 27, 29, 43, 44, 45, 73, 74, 75, 106, 115, 118], "print_scores_as_t": [18, 19], "prior": [29, 106], "probabl": [18, 21, 22, 27, 108, 110], "probe": [111, 125], "problem": [13, 26, 32, 33, 34, 39, 40, 43, 44, 45, 47, 58, 59, 60, 61, 62, 70, 71, 74, 75, 107, 116, 125, 126], "procedur": 47, "proceed": [56, 57, 81, 82, 99, 125], "process": [14, 18, 44, 45, 56, 57, 58, 59, 108, 111, 125, 126], "processor": [58, 59], "produc": [0, 115], "profil": 29, "program": 29, "progress": [13, 29], "project": [1, 6, 8, 9, 10, 19, 22, 29, 71, 75, 127], "propag": [12, 20, 22, 43, 60, 79, 80, 106, 120, 125, 129], "properli": 29, "proport": [15, 43, 115], "propos": [15, 43, 44, 45, 50, 51, 56, 57, 60, 81, 82, 99, 100, 113], "provid": [1, 7, 21, 29, 36, 38, 42, 43, 44, 45, 47, 49, 55, 59, 60, 63, 64, 65, 66, 67, 76, 83, 87, 95, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 125, 126], "psd": 4, "psu": 125, "public": 29, "publish": 125, "purpos": [18, 76], "push": 29, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 126, 129], "pypi": 125, "pyplot": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "pyproject": [29, 127], "pytest": [29, 126], "python": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "python3": [6, 7, 8, 9, 10, 15, 17, 22], "pytorch": [81, 83, 85, 87, 89, 91, 93, 95, 97], "q": 125, "quadrat": 45, "queri": [58, 59], "quick": 125, "quickli": 29, "r": [2, 3, 10, 14, 15, 17, 23, 32, 33, 39, 40, 44, 45, 50, 51, 56, 57, 60, 61, 62, 79, 125], "r82": 125, "radian": 23, "raeder": [2, 3, 79], "rais": [21, 29, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "rakotomamonji": [14, 17, 32, 33, 39, 40, 44, 45, 50, 61, 62, 125], "rand": [16, 23], "randint": [1, 4], "randn": 16, "random": [1, 2, 3, 4, 16, 22, 23, 25, 46, 47, 68, 69, 77, 78, 79, 80, 108, 111, 115, 116, 118], "random_se": [1, 4, 13, 18, 19, 22, 25, 26, 27, 126, 128], "random_st": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 46, 47, 68, 69, 77, 78, 79, 80, 108, 111, 115, 116, 117, 118, 126, 128], "randomli": [26, 126], "randomst": [23, 46, 47, 68, 69, 77, 78, 79, 80, 108, 111, 115], "rang": [4, 10, 13, 14, 16, 17, 19, 23, 26, 126], "rather": [6, 8, 9, 10, 19, 22], "ratio": [18, 79, 125], "ravel": [14, 15], "raw_data": 7, "rbf": [14, 15, 17, 19, 22, 32, 46, 47, 48, 49, 70, 71, 72, 73, 74, 75, 79], "rcparam": 23, "rdbu": [18, 19, 22, 26], "re": [35, 36, 37, 38, 41, 42, 58, 59, 115], "reach": [15, 22], "reader": 29, "readi": [25, 29, 126], "readm": 127, "real": 22, "reason": 126, "receiv": 29, "recent": 127, "recognit": [2, 3, 19, 30, 31, 56, 57, 72, 73, 79, 81, 82, 99, 125], "recommend": [6, 8, 9, 10, 19, 22, 29], "reconstruct": 126, "record": 29, "recov": [17, 110], "red": 13, "redko": [43, 125], "reduc": [86, 90, 92, 94, 108], "reduct": [91, 92, 112], "redund": 127, "ref": 19, "refer": [29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 126], "reflect": [126, 128], "reg": [6, 8, 10, 15, 17, 22, 30, 31, 41, 42, 43, 50, 51, 54, 55, 56, 57, 60, 74, 75, 81, 83, 85, 87, 89, 91, 93, 95, 97], "reg_": [17, 22, 25, 27, 32, 33, 39, 40], "reg_adv": [97, 98], "reg_cl": [9, 17, 22, 32, 33, 91, 92, 102], "reg_cor": 21, "reg_dist": [9, 91, 92, 102], "reg_gsa": [97, 98], "reg_k": [22, 52, 53], "reg_m": [22, 52, 53], "reg_nap": [97, 98], "reglog": [14, 15], "regress": [3, 29, 44, 45, 76, 79, 126, 127], "regression_scaling_const": 79, "regressor": [12, 20, 44, 45, 79, 120, 125, 129], "regular": [15, 17, 19, 21, 27, 30, 31, 32, 33, 39, 40, 41, 42, 43, 45, 50, 51, 52, 53, 54, 55, 56, 57, 60, 70, 71, 74, 75, 81, 83, 85, 87, 89, 91, 92, 93, 95, 97, 98, 102, 125], "regulari": [27, 127], "regularizationof": 60, "rel": [7, 44], "relat": 126, "releas": 125, "relev": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "relu": 10, "relu1": 10, "relu2": 10, "relu3": 10, "remain": [26, 117], "rememb": 34, "remi": [14, 15, 16, 17, 21, 91, 92, 102], "remov": [6, 7, 8, 9, 10, 13, 76, 84, 88, 98, 127], "remove_weight": 7, "renam": [6, 7, 8, 9, 10, 127], "renchunzi": [110, 125], "render": 10, "rep1": 125, "repid": 125, "replac": [2, 3], "repo": 29, "report": 29, "repositori": 29, "repres": [13, 19, 58, 59, 115, 126], "represent": [7, 10, 76, 84, 92, 108], "reproduc": [19, 29, 46, 47, 68, 69, 77, 78, 79, 80, 108], "request": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "requir": [21, 39, 40, 58, 59, 76, 106, 125, 126], "requires_grad": [19, 22], "requires_grad_": [6, 8, 9, 10, 19, 22], "rerun": 10, "research": [87, 88, 109, 125], "reshap": [14, 15, 19, 127], "resolv": 29, "respect": [53, 77, 78, 79, 80, 126], "response_method": [17, 18, 19, 22, 27], "rest": 44, "restructuredtext": 29, "result": [26, 27, 29, 58, 59, 76, 116], "result_cod": [15, 22], "result_code_str": [15, 22], "retain": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "retrain": 107, "retriev": 76, "return": [6, 7, 16, 23, 26, 30, 32, 35, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 74, 76, 77, 78, 79, 80, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126], "return_dataset": [6, 8, 9, 10, 19, 22, 25, 26, 27, 77, 78, 79, 80], "return_typ": 76, "return_x_i": [76, 77, 78, 79, 80, 126], "reus": [126, 128], "review": 29, "reweight": [12, 19, 20, 21, 22, 35, 37, 41, 46, 48, 49, 54, 55, 58, 72, 73, 79, 120, 123, 125, 129], "rflamari": 127, "ridg": [14, 15, 45], "right": [3, 10, 18, 19, 22, 26, 29, 113, 125], "risk": [44, 45], "rng": 23, "robert": 125, "robust": 15, "rodriguez": [2, 3, 79], "root": [31, 127], "rotat": 26, "rotated_curv": 23, "rotation_angl": 23, "rotation_cent": 23, "rotation_matrix": 23, "round": 23, "rout": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "row": [1, 2, 3], "rsda": 115, "rslab": 125, "ruben": [3, 13, 18, 19, 125], "rule": 29, "run": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 58, 59, 126], "running_loss": 10, "rustamov": [15, 60, 125], "r\u00e9mi": [43, 56, 57, 125], "s2": [26, 126], "saenko": [8, 30, 31, 89, 90, 101, 125], "saito": [113, 125], "salt": 22, "same": [1, 2, 3, 4, 7, 13, 14, 15, 19, 22, 25, 26, 36, 38, 42, 47, 49, 55, 58, 59, 95, 107, 119, 120, 121, 126], "sampl": [2, 3, 7, 14, 15, 17, 18, 19, 21, 26, 29, 36, 48, 49, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 99, 102, 105, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "sample_domain_": 21, "sample_domain_lodo": 26, "sample_domain_t": 21, "sample_domain_test": [6, 8, 9, 10, 126], "sample_domain_train": [19, 126], "sample_domaini": 16, "sample_idx": 7, "sample_idx_t": [98, 105], "sample_select": 79, "sample_weight": [7, 18, 21, 22, 102, 119, 120, 125, 126, 127], "sampler": 127, "save": 23, "save_estim": [13, 34], "save_indic": [13, 34], "savefig": 23, "scalar": [79, 121, 127], "scale": [22, 53, 74, 75, 93, 94, 104], "scan": 121, "scatter": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27], "scenario": [76, 126], "sch\u00f6lkopf": [18, 48, 49, 125], "scikit": [21, 26, 29, 44, 45, 106, 126, 127, 128], "scipi": [29, 48, 49, 58, 59], "sclaroff": 125, "score": [6, 8, 9, 13, 16, 17, 22, 25, 27, 63, 64, 65, 66, 67, 79, 107, 108, 109, 110, 111, 112, 113, 114, 125], "scorer": [21, 25, 27, 107, 108, 109, 110, 111, 112, 113, 114, 125, 126, 127], "scores_dict": [18, 19], "scores_no_da": 25, "scores_sup": 25, "script": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "search": [27, 58, 59, 125], "sebban": 125, "second": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 124], "section": [53, 54, 55, 126], "see": [2, 3, 13, 14, 15, 18, 19, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 85, 88, 90, 91, 92, 93, 94, 96, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126], "seed": [1, 2, 3, 4, 16, 22], "seek": [19, 29], "seem": 29, "seen": 126, "select": [7, 18, 26, 46, 47, 48, 49, 64, 66, 76, 79, 108, 111, 125, 127, 128], "select_domain": [7, 17, 76, 126], "selector": [21, 65, 106], "selectsourc": 21, "selectsourcetarget": 21, "self": [6, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "semi": [13, 15, 22, 60, 125], "semi_label": 13, "send": 29, "separ": [25, 79, 121, 126, 127], "septemb": [91, 92, 102], "sequenc": [77, 78, 79, 80, 119, 120, 124], "serv": [72, 73, 126], "set": [13, 18, 22, 26, 48, 49, 58, 59, 65, 68, 69, 76, 77, 78, 79, 80, 106, 113, 115, 116, 117, 126, 128], "set_config": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "set_decision_function_request": [63, 64, 65, 66, 67], "set_fit_request": [18, 21, 22, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 125], "set_fit_requir": 125, "set_label": 3, "set_param": 65, "set_partial_fit_request": [63, 64, 65, 66, 67], "set_predict_log_proba_request": [63, 64, 65, 66, 67], "set_predict_proba_request": [63, 64, 65, 66, 67], "set_predict_request": [63, 64, 65, 66, 67], "set_score_request": [63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 126], "set_split_request": [115, 116, 117, 118], "set_titl": [1, 2, 3, 4, 13, 18, 19, 26], "set_transform_request": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67], "set_xlabel": [1, 2, 3, 4], "set_xlim": [13, 18, 19, 22], "set_xtick": [18, 19, 22], "set_ylabel": [1, 2, 3, 4, 22], "set_ylim": [13, 18, 19, 22], "set_ytick": [18, 19, 22], "setup": [11, 12, 89, 90, 129], "sever": [21, 22, 47, 126, 128], "sgd": 10, "shallow": 127, "shape": [13, 14, 15, 16, 17, 18, 19, 21, 23, 29, 31, 36, 38, 42, 47, 49, 53, 55, 58, 59, 75, 78, 79, 112, 116, 119, 120, 121, 122, 123, 124], "share": [22, 106, 126], "sharei": [1, 2, 3, 4, 26], "sharex": [1, 2, 3, 4], "shift": [5, 12, 13, 20, 21, 22, 25, 26, 27, 35, 37, 38, 41, 42, 43, 46, 47, 48, 49, 52, 53, 54, 55, 58, 68, 70, 72, 74, 76, 77, 78, 79, 80, 109, 110, 120, 123, 125, 126, 127, 128, 129], "shimodaira": [18, 37, 38, 41, 42, 125], "shinichi": 125, "ship": 126, "short": 21, "shorthand": 106, "should": [22, 29, 34, 36, 38, 42, 43, 44, 45, 47, 49, 55, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 79, 83, 87, 91, 92, 95, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 126], "show": [1, 2, 3, 4, 10, 13, 14, 15, 18, 19, 22, 25, 26, 27, 58, 59], "showcas": 126, "shown": [126, 128], "shrink": 22, "shrinkag": [30, 31, 41, 42, 74, 75], "shuffl": [7, 78, 115, 117, 118], "shufflesplit": [25, 27, 126, 128], "si": [19, 74, 75, 125], "sigma": [16, 79, 81, 82, 85, 86, 99, 100], "sigma_ch": [4, 80], "sigma_freq": 80, "sigma_regress": 79, "sign": [107, 108, 109, 112, 113, 114, 126], "signal": [4, 18, 58, 59, 80, 125], "signatur": [108, 109, 111, 114], "signific": 127, "similar": [113, 126], "similarli": [21, 126], "simpl": [6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 126], "simplest": 126, "simpli": 126, "simplifi": [56, 57, 126], "simultan": 126, "sin": 23, "sinc": [26, 124, 126], "singl": [21, 108, 117, 121, 126], "singleton": 117, "sinkhorn": [17, 32, 33, 39, 40], "sinno": [19, 70, 71], "site": [6, 7, 8, 9, 10, 15, 17, 22], "size": [18, 19, 22, 58, 59, 80, 83, 87, 95, 97, 115], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 126, 128, 129], "skada_logo": 23, "skada_logo_ful": 23, "skada_logo_full_whit": 23, "skip": 126, "sklearn": [6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 27, 35, 36, 37, 38, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 63, 64, 65, 66, 67, 76, 82, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128], "skorc": 10, "skorch": [6, 8, 9, 125, 127], "sleep": [56, 57, 125], "small": [29, 82, 86, 94, 99, 100, 104, 108], "smola": [18, 48, 49, 125], "smooth": [18, 48, 49, 58, 59, 127], "smooth_weight": [18, 48, 49], "snippet": 29, "so": [7, 13, 19, 21, 76, 126], "soft": [113, 125], "softmax": [6, 94, 110], "softneighborhooddens": 126, "sol_": [14, 44, 45], "solid": 22, "solid_capstyl": 23, "solomon": [15, 60, 125], "solut": [19, 23, 44, 45, 47, 71], "solv": [44, 45, 46, 47, 60], "solver": [17, 18, 23, 32, 33, 43, 48, 49, 60], "some": [0, 7, 19, 36, 38, 42, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127], "someth": 29, "sort": [26, 29], "sourc": [5, 6, 7, 8, 9, 10, 12, 13, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129], "source_dict": 119, "source_estim": 65, "source_idx": [122, 123, 126], "source_mark": [13, 19], "source_scor": 107, "source_target_split": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 25], "source_weights_": [49, 55], "sourceonli": 127, "sourcetargetselector": 126, "sourcetargetshufflesplit": [21, 26, 125, 126], "sourcetensor": [6, 8, 9, 10, 19, 22], "spa": [98, 103, 105, 125, 127], "space": [18, 19, 83, 126], "spars": [58, 59], "spatial": [58, 59], "special": 126, "specif": [21, 29, 80, 84, 88, 98, 122, 126], "specifi": [76, 106, 112, 119, 120, 121, 122, 123, 124], "spectral": [97, 98, 125], "speed": [58, 59], "spheric": 127, "sphericalkmean": 99, "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26], "split": [21, 22, 25, 26, 46, 47, 115, 116, 117, 118, 119, 120, 122, 125, 126, 128], "split_source_target": [119, 122], "splitter": [21, 26, 76, 116], "springer": [91, 92, 102, 125], "sqeuclidean": [22, 32, 33, 39, 40, 43, 60, 61, 62], "sqrt": [48, 49], "squar": [13, 31, 43, 45, 58, 59, 60], "stabil": [82, 86, 94, 99, 100, 104, 127], "stack": 126, "standard": [58, 59, 77, 78, 79, 80, 126], "standardscal": [21, 106, 125, 126], "start": [21, 29, 125, 126, 128], "start_length": 23, "state": 13, "static": 126, "statist": [18, 37, 38, 41, 42, 43, 125], "std": [14, 15, 21, 25, 80], "step": [10, 13, 17, 19, 22, 29, 34, 106, 110], "still": 126, "stop": [32, 33, 39, 40, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 61, 62, 72, 73, 74, 75], "store": [7, 18, 19, 58, 59, 76, 125], "str": [18, 19, 32, 33, 36, 38, 39, 40, 42, 43, 44, 47, 48, 49, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "straightforward": 126, "strategi": [19, 25, 27, 34, 46, 47, 107, 125], "strategylorenzo": 125, "stratifi": 118, "stratifieddomainshufflesplit": 26, "stratifieddomainsubsampl": 127, "stride": 10, "string": [48, 49, 58, 59, 65, 106, 109, 111, 114], "strongli": 29, "structur": [7, 76, 126], "su": [56, 57], "sub": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "subj_1": 126, "subj_12": 126, "subj_3": 126, "subject": [18, 19], "submit": 29, "subplot": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26], "subplots_adjust": [1, 2, 3, 4, 26], "subsampl": 127, "subsequ": [21, 125], "subset": 119, "subspac": [2, 3, 12, 20, 22, 68, 69, 70, 71, 72, 74, 75, 76, 79, 120, 125, 129], "subspace_estim": 19, "subspacealign": [19, 22, 125], "subspacealignmentadapt": [22, 68, 126], "sugiyama": [18, 46, 47, 109, 125], "suit": 126, "suitabl": 18, "sum": [13, 23, 112], "sun": [8, 19, 30, 31, 72, 73, 89, 90, 101, 125], "supervis": [15, 25, 60, 114, 116, 125, 126], "supervisedscor": [25, 126, 128], "support": [14, 91, 92], "supspac": 19, "suptitl": [1, 2, 3, 4, 13, 18, 19, 26], "sure": [13, 29], "suzuki": [18, 125], "svc": [13, 15, 16, 17, 19, 21, 22, 25, 27, 32, 34, 44], "svg": 23, "svm": [13, 14, 15, 17, 19, 21, 22, 25, 27, 44], "swap": 29, "sy": 29, "synthet": 22, "system": [14, 29, 44, 45, 56, 57, 125], "t": [2, 3, 14, 17, 18, 19, 22, 23, 25, 26, 27, 53, 58, 59, 79, 93, 94, 103, 104, 113, 125, 126, 127], "t2": [26, 126], "t_valu": 23, "tab10": [1, 2, 14, 15, 16, 17, 21], "taiji": 125, "tailor": 110, "takafumi": 125, "take": [7, 18, 21, 58, 59, 126, 127], "taken": [13, 22, 47, 76, 77, 78, 79, 80], "tao": [19, 74, 75, 125], "tar": [22, 125], "target": [5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 30, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 86, 90, 92, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129], "target_criterion": [91, 92, 98], "target_dict": 119, "target_estim": 65, "target_idx": [122, 126], "target_kmean": [82, 99], "target_label": [25, 26, 114, 126], "target_mark": [13, 19], "target_sample_weight": 102, "target_shift": [2, 3, 15, 22, 79], "targetaccuracyscor": [25, 126, 128], "targetonli": 127, "task": [6, 8, 9, 10, 14, 17, 29, 43, 44, 45, 60, 76, 96], "tca": [19, 22, 125], "team": [29, 125], "technic": 7, "techniqu": [13, 34, 107, 125], "temperatur": [93, 94, 104, 113], "tensor": [6, 7, 8, 9, 10, 19, 22, 76, 99, 100, 101, 102, 103, 104, 105, 127], "term": [91, 92, 102], "test": [0, 18, 22, 25, 26, 29, 56, 57, 76, 115, 116, 117, 118, 125, 127, 128], "test_cv": 126, "test_index": [115, 118], "test_map": 126, "test_offic": 126, "test_pipelin": 126, "test_reweight": 126, "test_samples_gener": 126, "test_scor": 126, "test_siz": [25, 27, 115, 116, 117, 118, 126, 128], "test_subspac": 126, "test_tim": [56, 57], "teterwak": 125, "text": [13, 14, 16, 17, 18, 19, 21, 22, 23, 26, 29, 127], "textsf": 23, "tgnassou": 127, "than": [6, 8, 9, 10, 14, 18, 19, 22, 58, 59, 76, 95], "thank": [25, 29], "thei": [7, 13, 76, 124, 126], "them": [7, 58, 59, 110, 126], "theme": 126, "theo": [56, 57, 125], "theoret": [44, 45], "theori": [95, 96, 125], "therefor": 106, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 34, 36, 38, 42, 43, 44, 45, 47, 49, 55, 58, 59, 60, 63, 64, 65, 66, 67, 76, 82, 84, 86, 88, 90, 92, 94, 96, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128], "thoma": 125, "those": [7, 13, 21, 58, 59, 126], "though": [7, 126], "thr_weight": 44, "three": [96, 110], "threshold": [32, 33, 44, 73, 74, 75, 81, 82, 99, 110], "through": [7, 92, 96], "throughout": 7, "thu": [13, 18, 19, 26, 58, 59], "th\u00e9o": [6, 8, 9, 10, 23, 125], "tight": 23, "tight_layout": [19, 22, 23, 26], "time": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 56, 57, 76, 106, 124], "titl": [2, 3, 14, 15, 16, 17, 21, 29, 125], "tjm": [19, 72, 73], "to_": 10, "todo": 10, "togeth": [106, 126], "tol": [22, 25, 32, 33, 39, 40, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 72, 73, 74, 75], "toler": [43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55], "tolist": 7, "tom": 127, "toml": [29, 127], "tool": [29, 126], "toolbox": [23, 125], "top": 29, "torch": [6, 7, 8, 9, 19, 22, 76, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 97, 98, 102, 103, 105, 127], "torch_load_kwarg": 10, "torr": [2, 3, 79], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 77, 78, 79, 80, 129], "toward": [108, 125], "tr": 26, "traceback": 29, "track": [29, 76], "tracker": 29, "trade": [44, 45, 72, 73], "tradeoff": [19, 72, 73], "train": [11, 12, 13, 17, 18, 19, 21, 22, 25, 26, 56, 57, 76, 81, 83, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 115, 116, 117, 118, 125, 126, 128, 129], "train_index": [115, 118], "train_loss": [6, 8, 9, 10], "train_siz": [115, 116, 117, 118], "train_split": [6, 8, 9, 10], "train_test_split": 108, "tran": 125, "transact": [17, 19, 32, 33, 34, 39, 40, 50, 61, 62, 70, 71, 74, 75, 107, 125], "transfer": [70, 71, 72, 73, 74, 75, 85, 86, 100, 125], "transfercomponentanalysi": [19, 22], "transfercomponentanalysisadapt": [22, 70, 126], "transferjointmatch": 19, "transferjointmatchingadapt": 72, "transfersubspacelearn": [19, 22], "transfersubspacelearningadapt": 22, "transform": [16, 17, 19, 21, 36, 38, 42, 47, 49, 53, 55, 59, 63, 64, 65, 66, 67, 106, 125, 126, 127], "translat": [78, 79], "transpar": [22, 23], "transport": [11, 12, 14, 20, 32, 33, 39, 40, 43, 44, 45, 50, 51, 56, 57, 60, 61, 62, 76, 79, 91, 92, 102, 106, 120, 125, 129], "tree": [58, 59], "tri": [18, 84, 88, 96, 98], "trigger": 106, "true": [6, 8, 9, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 30, 31, 34, 36, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 78, 79, 80, 82, 89, 90, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 125, 126], "trust": 10, "try": [10, 15, 18, 22, 127], "tsang": 125, "tsl": [19, 22, 75], "tt": 26, "tuia": [17, 32, 33, 39, 40, 43, 50, 61, 62, 91, 92, 102, 125], "tune": [113, 125], "tupl": [7, 57, 76, 77, 78, 79, 80, 106, 119, 126], "tutori": 29, "tuytelaar": 125, "twice": 76, "two": [7, 18, 19, 29, 58, 59, 73, 74, 75, 103, 122, 125, 126, 127, 128], "type": [2, 3, 10, 26, 29, 65, 76, 106, 111, 124, 125], "typic": [83, 126], "typo": 127, "u": [17, 29, 79], "unabl": 10, "unchang": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "uncom": 127, "under": [18, 29, 37, 38, 41, 42, 43, 52, 53, 54, 55, 110, 125], "under_sampl": 115, "understand": 106, "unifi": [2, 3, 7, 76, 79, 125], "uniform": [22, 58, 59, 102], "uniniti": [91, 92], "uninstanti": [83, 87, 95, 97], "uniqu": [1, 76, 122, 126, 127], "unit": 83, "unitn": 125, "unlabel": [18, 48, 49, 125], "unless": [58, 59], "unpredict": [44, 45], "unseen": [56, 57, 126], "unsupervis": [19, 30, 31, 68, 69, 72, 73, 81, 82, 91, 92, 99, 102, 108, 110, 111, 112, 113, 125, 126], "up": [29, 117], "updat": [23, 36, 38, 42, 47, 49, 55, 56, 57, 59, 63, 64, 65, 66, 67, 76, 84, 88, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127], "update_predict": 126, "upper": [48, 49], "url": 125, "us": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 28, 29, 36, 38, 43, 47, 55, 56, 59, 66, 69, 71, 73, 75, 81, 82, 83, 84, 85, 88, 92, 93, 95, 97, 98, 99, 100, 102, 103, 107, 108, 110, 111, 113, 121, 125, 126, 127, 128, 129], "usag": [29, 126], "use_cach": 10, "user": [29, 36, 38, 42, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125], "userwarn": [1, 6, 8, 9, 10, 15, 17, 19, 22], "usetex": 23, "usp": [6, 8, 9, 10], "ustinova": 125, "util": [6, 7, 8, 9, 10, 18, 19, 22, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127], "v": [2, 3, 18, 19, 79, 125], "v2": 127, "v4": 127, "va": 26, "val": 125, "valid": [25, 27, 28, 34, 46, 47, 58, 59, 65, 76, 79, 107, 108, 109, 113, 115, 116, 117, 118, 121, 125, 126, 128, 129], "valid_acc": 10, "valid_loss": 10, "valu": [3, 13, 22, 30, 31, 34, 39, 40, 41, 42, 44, 45, 58, 59, 61, 62, 65, 73, 74, 75, 76, 78, 79, 110, 112, 113, 115, 121, 122, 124, 126, 127], "var_smooth": 106, "variabl": [116, 119, 120, 121], "variat": [43, 44, 45], "variou": 7, "vasilii": 125, "vector": [14, 58, 59], "verbos": [10, 14, 22, 43, 44, 45, 73, 74, 75, 106], "veri": 26, "verifi": 29, "versatil": [93, 94, 104, 125], "version": [26, 29, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 127], "versu": 44, "vertic": 26, "via": [1, 19, 70, 71, 84, 113, 125], "view": [2, 3, 79], "viewabl": 29, "virgini": 125, "vision": [19, 30, 31, 56, 57, 68, 69, 72, 73, 81, 82, 91, 92, 99, 102, 113, 125], "visit": 125, "visual": [12, 19, 21, 28, 68, 69, 76, 79, 115, 116, 117, 118, 125, 129], "visualis": 4, "vloison": 127, "vmax": [1, 2, 3, 13, 14, 15, 16, 17, 21, 26], "vmin": [13, 26], "von": [18, 125], "vstack": 16, "w": [18, 23, 47, 49, 53, 125], "w_": [53, 75], "wa": [1, 4, 6, 7, 8, 9, 10, 15, 43, 56, 57, 60, 76, 77, 78, 79, 80], "wai": [29, 113, 125, 126, 128], "wang": [19, 72, 73, 93, 94, 104, 125], "want": [15, 17, 27, 58, 59], "warm_start": 10, "warn": [6, 7, 8, 9, 10, 15, 17, 19, 22, 27, 127], "wasn": 127, "wasserstein": [15, 32, 33, 39, 40, 56, 57, 60, 61, 62, 125], "wave": 29, "we": [2, 3, 14, 15, 16, 17, 21, 23, 25, 26, 27, 29, 58, 59, 79, 110, 121, 124, 125, 126, 128], "web": 29, "webcam": 126, "webcam_idx": 126, "weight": [7, 18, 21, 22, 35, 36, 37, 38, 41, 42, 44, 48, 49, 55, 58, 59, 60, 84, 88, 98, 102, 108, 109, 125, 126], "weight_estim": [18, 22, 35, 36, 109], "weight_estimator_source_": [36, 109], "weight_estimator_target_": [36, 109], "weighted_dict_raw_data": 7, "weijian": 125, "well": [13, 15, 21, 29, 58, 59, 126], "were": [13, 126], "what": [17, 21, 29], "when": [13, 18, 19, 21, 29, 34, 36, 38, 42, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127], "where": [13, 19, 29, 53, 77, 78, 79, 80, 116, 122, 125, 126, 127], "whether": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126], "which": [7, 13, 17, 18, 19, 21, 26, 29, 58, 59, 79, 80, 110, 125, 126], "while": [13, 14, 26, 44, 45, 106, 116, 117, 126, 128], "white": 23, "whole": 21, "whose": [81, 83, 85, 87, 89, 91, 93, 95, 97], "why": 29, "width": 126, "wip": [29, 127], "wish": 29, "with_mean": 106, "with_std": 106, "within": [36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126], "without": [10, 13, 18, 19, 22, 25, 29, 126], "wolf": [18, 30, 31, 41, 42, 48, 49], "won": [18, 19, 126], "work": [15, 18, 19, 21, 29, 36, 38, 42, 47, 49, 55, 58, 59, 63, 64, 65, 66, 67, 83, 87, 95, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 126, 127], "workflow": [29, 126], "workshop": [8, 18, 58, 59, 89, 90, 101, 125], "would": [125, 126], "wrap": [21, 106], "wrapper": 21, "write": 29, "www": 18, "x": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 36, 38, 42, 47, 49, 53, 55, 58, 59, 76, 77, 78, 79, 80, 109, 111, 114, 115, 116, 118, 121, 124, 125, 126, 128], "x0": [19, 22], "x27": 10, "x7f785fb48340": 10, "x7f785fb48850": 10, "x7f785fb48c10": 10, "x7f785fb49390": 10, "x7f785fb499c0": 10, "x7f785fb4a1a0": 10, "x7f785fb4a2c0": 10, "x7f785fb4a2f0": 10, "x7f785fb4b7c0": 10, "x7f785fb4b910": 10, "x7f787c13c670": 10, "x_": [13, 19], "x_adapt": [16, 17], "x_adapted_classreg": 17, "x_adapted_linear": 17, "x_adapted_sinkhorn": 17, "x_dict": 10, "x_lodo": 26, "x_max": [18, 19, 22], "x_min": [18, 19, 22], "x_point": 13, "x_sourc": [1, 2, 3, 4, 17, 25, 124, 127], "x_source_": [49, 53, 55, 71], "x_source_adapt": 17, "x_source_adapted_classreg": 17, "x_source_adapted_linear": 17, "x_source_adapted_sinkhorn": 17, "x_subj1": 126, "x_subj12": 126, "x_subj3": 126, "x_t": 13, "x_target": [1, 2, 3, 4, 17, 25, 27, 124, 126, 128], "x_target_": 71, "x_test": [6, 8, 9, 10, 126], "x_train": [19, 126], "xi": 16, "xiao": [97, 98, 125], "xie": [110, 125], "ximei": [93, 94, 104, 125], "xlabel": [25, 27], "xlim": [13, 23, 26], "xs_subspac": 19, "xt": [13, 14, 15, 16, 18, 19, 21, 22, 125], "xt_adapt": 19, "xt_subspac": 19, "xue": 125, "xx": [14, 15], "xxx": 118, "y": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 36, 38, 42, 47, 49, 53, 55, 59, 76, 77, 78, 79, 80, 81, 82, 99, 104, 107, 108, 109, 111, 114, 115, 116, 118, 121, 124, 125, 126, 128], "y_": [19, 82, 92, 99, 102], "y_axi": 23, "y_lodo": 26, "y_max": [18, 19, 22], "y_min": [18, 19, 22], "y_point": 13, "y_pred": [107, 108], "y_pred_": [82, 96], "y_pred_t": [82, 92, 94, 96, 98, 102, 105], "y_sourc": [1, 2, 3, 4, 17, 25, 124], "y_subj1": 126, "y_subj12": 126, "y_subj3": 126, "y_target": [1, 2, 3, 4, 17, 25, 27, 124, 126, 128], "y_test": [6, 8, 9, 10, 126], "y_train": [19, 126], "y_true": 108, "yang": [81, 82, 99, 125], "yani": [26, 125], "yanislal": 127, "yaroslav": [87, 88], "year": 125, "yerr": 25, "yet": 125, "yh": 15, "yht": 15, "yi": 16, "yield": 116, "ying": [93, 94, 104, 125], "ylabel": 27, "ylim": [13, 26], "yml": 127, "yneuro": 127, "you": [15, 17, 21, 29, 36, 38, 42, 47, 49, 55, 59, 63, 64, 65, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126], "your": [29, 125, 126], "yourlogin": 29, "ypred": 125, "ys_pred": [14, 15], "yt": [13, 14, 15, 16, 18, 19, 21, 22], "yt_pred": [14, 15, 21], "ytick": [25, 26], "yticklabel": 26, "yu": [19, 72, 73, 125], "yuchen": [95, 96], "yy": [14, 15], "z": [14, 15, 79, 125], "z_jcpot": 15, "zenodo": 127, "zero": 10, "zero_grad": 10, "zhang": [52, 53, 54, 55, 95, 96, 125], "zhao": 125, "zhiqe": 125, "zip": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 118], "zjdot": [14, 15]}, "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Deep Domain Aware Datasets", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Label Propagation methods", "Multi-domain Linear Monge Alignment", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Subspace method example on subspace shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "Contributing to SKADA", "skada.CORAL", "skada.CORALAdapter", "skada.ClassRegularizerOTMapping", "skada.ClassRegularizerOTMappingAdapter", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DensityReweightAdapter", "skada.DiscriminatorReweight", "skada.DiscriminatorReweightAdapter", "skada.EntropicOTMapping", "skada.EntropicOTMappingAdapter", "skada.GaussianReweight", "skada.GaussianReweightAdapter", "skada.JCPOTLabelProp", "skada.JDOTClassifier", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.KLIEPReweightAdapter", "skada.KMMReweight", "skada.KMMReweightAdapter", "skada.LinearOTMapping", "skada.LinearOTMappingAdapter", "skada.MMDLSConSMapping", "skada.MMDLSConSMappingAdapter", "skada.MMDTarSReweight", "skada.MMDTarSReweightAdapter", "skada.MultiLinearMongeAlignment", "skada.MultiLinearMongeAlignmentAdapter", "skada.NearestNeighborReweight", "skada.NearestNeighborReweightAdapter", "skada.OTLabelProp", "skada.OTMapping", "skada.OTMappingAdapter", "skada.PerDomain", "skada.SelectSource", "skada.SelectSourceTarget", "skada.SelectTarget", "skada.Shared", "skada.SubspaceAlignment", "skada.SubspaceAlignmentAdapter", "skada.TransferComponentAnalysis", "skada.TransferComponentAnalysisAdapter", "skada.TransferJointMatching", "skada.TransferJointMatchingAdapter", "skada.TransferSubspaceLearning", "skada.TransferSubspaceLearningAdapter", "skada.datasets.DomainAwareDataset", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CAN", "skada.deep.CANLoss", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DAN", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DANNLoss", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.deep.MCC", "skada.deep.MCCLoss", "skada.deep.MDD", "skada.deep.MDDLoss", "skada.deep.SPA", "skada.deep.SPALoss", "skada.deep.losses.cdd_loss", "skada.deep.losses.dan_loss", "skada.deep.losses.deepcoral_loss", "skada.deep.losses.deepjdot_loss", "skada.deep.losses.gda_loss", "skada.deep.losses.mcc_loss", "skada.deep.losses.nap_loss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.MaNoScorer", "skada.metrics.MixValScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "skada.per_domain_split", "skada.source_target_split", "skada.utils.check_X_y_domain", "skada.utils.extract_domains_indices", "skada.utils.extract_source_indices", "skada.utils.source_target_merge", "SKADA: SciKit Adaptation", "Users Guide", "Release of SKADA", "Metrics: Compute score for domain adaptation problems", "Computation times"], "titleterms": {"": 127, "0": 127, "2": [13, 18, 19], "2d": [13, 18, 19], "4": 127, "5": 127, "The": 19, "access": 7, "acknowledg": 125, "adapt": [6, 8, 9, 12, 16, 17, 18, 19, 21, 125, 126, 128], "advanc": 21, "adversari": 6, "algorithm": 125, "align": [0, 16, 19], "analysi": 19, "api": 0, "awar": 7, "behavior": 26, "between": [18, 19], "bug": 29, "can": 81, "canloss": 82, "cdan": 83, "cdanloss": 84, "cdd_loss": 99, "chang": 127, "check_x_y_domain": 121, "checklist": 29, "circularvalid": 107, "class": [13, 18, 19], "classic": [6, 8, 9], "classif": [14, 15, 16, 22], "classifi": [13, 14, 15, 16, 21], "classregularizerotmap": 32, "classregularizerotmappingadapt": 33, "comparison": [18, 19, 22], "compat": 0, "compon": 19, "comput": [5, 11, 20, 24, 28, 128, 129], "condit": [14, 15, 16, 17], "content": 125, "contribut": 29, "contributor": [29, 127], "coral": 30, "coraladapt": 31, "covari": 18, "creation": 7, "cross": [21, 26], "cross_val_scor": 25, "da": [0, 10, 12, 17, 21, 22, 125, 126], "dan": 85, "dan_loss": 100, "danloss": 86, "dann": [6, 87], "dannloss": 88, "dasvm": 13, "dasvmclassifi": [13, 34], "data": [7, 14, 15, 16], "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 76, 77, 78, 79, 80, 126], "deep": [0, 7, 10, 12, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 125], "deepcor": [8, 89], "deepcoral_loss": 101, "deepcoralloss": 90, "deepembeddedvalid": 108, "deepjdot": [9, 91], "deepjdot_loss": 102, "deepjdotloss": 92, "densiti": 18, "densityreweight": 35, "densityreweightadapt": 36, "differ": 17, "discr": 18, "discriminatorreweight": 37, "discriminatorreweightadapt": 38, "diverg": 8, "document": 29, "doe": 17, "domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 16, 17, 18, 19, 125, 126, 128], "domainawaredataset": 76, "domainshufflesplit": 115, "entropicotmap": 39, "entropicotmappingadapt": 40, "estim": [21, 126], "exampl": [12, 13, 14, 18, 19, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 76, 77, 79, 80, 87, 89, 90, 91, 106, 109, 112, 114, 115, 116, 117, 118, 120, 123, 125], "extract_domains_indic": 122, "extract_source_indic": 123, "file": 29, "full": 15, "galleri": 12, "gaussian": 18, "gaussianreweight": 41, "gaussianreweightadapt": 42, "gda_loss": 103, "gener": [13, 14, 15, 16, 17, 18, 19, 23], "grid": 21, "gridsearchcv": 27, "guid": 126, "how": [17, 21, 29], "illustr": [14, 15, 17, 18, 19], "imag": [6, 8, 9, 10], "implement": 125, "importanceweightedscor": 109, "indic": 125, "instal": 125, "jcpot": 15, "jcpotlabelprop": 43, "jdot": 14, "jdotclassifi": 44, "jdotregressor": 45, "joint": 19, "kernel": 18, "kliepreweight": [18, 46], "kliepreweightadapt": 47, "kmmreweight": 48, "kmmreweightadapt": 49, "labe": 15, "label": [13, 15], "labelprop": 15, "learn": [0, 12, 19, 125], "leaveonedomainout": 116, "licens": 125, "linear": 16, "linearotmap": 50, "linearotmappingadapt": 51, "load": [6, 8, 9, 10], "logo": 23, "loss": [0, 99, 100, 101, 102, 103, 104, 105], "main": 0, "make_da_pipelin": 106, "make_dataset_from_moons_distribut": 77, "make_shifted_blob": 78, "make_shifted_dataset": 79, "make_variable_frequency_dataset": 80, "manoscor": 110, "map": 0, "match": [18, 19], "mcc": 93, "mcc_loss": 104, "mccloss": 94, "mdd": 95, "mddloss": 96, "mean": 18, "method": [0, 6, 8, 9, 10, 12, 15, 17, 18, 19, 22], "metric": [0, 107, 108, 109, 110, 111, 112, 113, 114, 125, 126, 128], "mixvalscor": 111, "mmdlsconsmap": 52, "mmdlsconsmappingadapt": 53, "mmdtarsreweight": 54, "mmdtarsreweightadapt": 55, "model": [0, 6, 8, 9, 15, 126], "model_select": [0, 115, 116, 117, 118], "modul": 0, "mong": 16, "multi": 16, "multilinearmongealign": 56, "multilinearmongealignmentadapt": 57, "nap_loss": 105, "nearest": 18, "nearestneighborreweight": 58, "nearestneighborreweightadapt": 59, "neighbor": 18, "new": [29, 127], "optim": [9, 17], "ot": 14, "otda": 17, "other": 0, "otlabelprop": 60, "otmap": 61, "otmappingadapt": 62, "our": [13, 18, 19], "paramet": 10, "per_domain_split": 119, "perdomain": 63, "pipelin": [0, 21, 126], "plan": 14, "plot": [1, 2, 3, 4, 13, 14, 15, 16, 18, 19], "predictionentropyscor": 112, "problem": [17, 18, 19, 128], "procedur": 12, "propag": 15, "pull": 29, "pytorch": 125, "refer": 125, "regress": [14, 15], "regressor": [14, 15], "releas": 127, "request": 29, "reweight": [0, 18], "sampl": [0, 126], "scikit": 125, "score": [18, 19, 21, 126, 128], "search": 21, "select": [0, 126], "selector": 126, "selectsourc": 64, "selectsourcetarget": 65, "selecttarget": 66, "setup": 10, "share": 67, "shift": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19], "short": 125, "skada": [0, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "skorch": 10, "softneighborhooddens": 113, "sourc": [1, 2, 3, 4, 14, 15, 16], "source_target_merg": 124, "source_target_split": 120, "sourcetargetshufflesplit": 117, "spa": 97, "spaloss": 98, "splitter": 126, "stratifieddomainshufflesplit": 118, "subspac": 19, "subspacealign": 68, "subspacealignmentadapt": 69, "supervisedscor": 114, "svc": 14, "tabl": 125, "target": [1, 2, 3, 4, 13], "test": 126, "time": [5, 11, 20, 24, 28, 126, 129], "tip": 29, "torch": [0, 10], "train": [6, 8, 9, 10, 14, 15, 16], "transfer": 19, "transfercomponentanalysi": 70, "transfercomponentanalysisadapt": 71, "transferjointmatch": 72, "transferjointmatchingadapt": 73, "transfersubspacelearn": 74, "transfersubspacelearningadapt": 75, "transport": [9, 17], "us": [21, 25, 27, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 76, 77, 79, 80, 87, 89, 90, 91, 106, 109, 112, 114, 115, 116, 117, 118, 120, 123], "usag": 13, "user": 126, "util": [0, 121, 122, 123, 124], "v0": 127, "valid": [12, 21, 26], "visual": 26, "we": [13, 18, 19], "what": 127, "work": 17}})