Search.setIndex({"alltitles": {"API and modules": [[0, null]], "Accessing data": [[7, "accessing-data"]], "Acknowledgements": [[112, "acknowledgements"]], "Adapter": [[113, "adapter"]], "Adapters and Estimators": [[113, "adapters-and-estimators"]], "Advanced DA pipeline": [[21, "advanced-da-pipeline"]], "Adversarial domain adaptation methods.": [[6, null]], "Comparison of DA classification methods": [[22, null]], "Comparison of score between reweighting methods:": [[18, "comparison-of-score-between-reweighting-methods"]], "Comparison of score between subspace methods:": [[19, "comparison-of-score-between-subspace-methods"]], "Computation times": [[5, null], [11, null], [20, null], [24, null], [28, null], [116, null]], "Contents": [[112, "contents"]], "Contributing to SKADA": [[29, null]], "Creation": [[7, "creation"]], "DA Adapter pipeline": [[21, "da-adapter-pipeline"]], "DA Classifier estimator": [[21, "da-classifier-estimator"]], "DA dataset": [[21, "da-dataset"]], "DA estimator in a pipeline": [[21, "da-estimator-in-a-pipeline"]], "DA estimator with grid search": [[21, "da-estimator-with-grid-search"]], "DA estimators with score cross-validation": [[21, "da-estimators-with-score-cross-validation"]], "DA methods": [[12, "da-methods"]], "DA metrics": [[112, "da-metrics"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "DA pipeline": [[0, "da-pipeline"]], "DA validation procedures": [[12, "da-validation-procedures"]], "DASVM classifier example": [[13, null]], "Dataset": [[113, "dataset"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Deep Domain Aware Datasets": [[7, null]], "Deep learning DA methods": [[0, "deep-learning-da-methods"], [12, "deep-learning-da-methods"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "Deep learning domain adaptation algorithms": [[112, "deep-learning-domain-adaptation-algorithms"]], "Different OTDA methods": [[17, "different-otda-methods"]], "Divergence domain adaptation methods.": [[8, null]], "Documentation": [[29, "documentation"]], "Domain Adaptation Datasets": [[12, "domain-adaptation-datasets"]], "Domain adaptation algorithms": [[112, "domain-adaptation-algorithms"]], "Examples gallery": [[12, null]], "Examples using skada.CORAL": [[30, "examples-using-skada-coral"]], "Examples using skada.CORALAdapter": [[31, "examples-using-skada-coraladapter"]], "Examples using skada.ClassRegularizerOTMapping": [[32, "examples-using-skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMappingAdapter": [[33, "examples-using-skada-classregularizerotmappingadapter"]], "Examples using skada.DASVMClassifier": [[34, "examples-using-skada-dasvmclassifier"]], "Examples using skada.DensityReweight": [[35, "examples-using-skada-densityreweight"]], "Examples using skada.DiscriminatorReweight": [[37, "examples-using-skada-discriminatorreweight"]], "Examples using skada.EntropicOTMapping": [[39, "examples-using-skada-entropicotmapping"]], "Examples using skada.EntropicOTMappingAdapter": [[40, "examples-using-skada-entropicotmappingadapter"]], "Examples using skada.GaussianReweight": [[41, "examples-using-skada-gaussianreweight"]], "Examples using skada.GaussianReweightAdapter": [[42, "examples-using-skada-gaussianreweightadapter"]], "Examples using skada.JDOTRegressor": [[43, "examples-using-skada-jdotregressor"]], "Examples using skada.KLIEPReweight": [[44, "examples-using-skada-kliepreweight"]], "Examples using skada.KMMReweight": [[46, "examples-using-skada-kmmreweight"]], "Examples using skada.KMMReweightAdapter": [[47, "examples-using-skada-kmmreweightadapter"]], "Examples using skada.LinearOTMapping": [[48, "examples-using-skada-linearotmapping"]], "Examples using skada.LinearOTMappingAdapter": [[49, "examples-using-skada-linearotmappingadapter"]], "Examples using skada.MMDLSConSMapping": [[50, "examples-using-skada-mmdlsconsmapping"]], "Examples using skada.MMDTarSReweight": [[52, "examples-using-skada-mmdtarsreweight"]], "Examples using skada.NearestNeighborReweight": [[54, "examples-using-skada-nearestneighborreweight"]], "Examples using skada.OTMapping": [[56, "examples-using-skada-otmapping"]], "Examples using skada.OTMappingAdapter": [[57, "examples-using-skada-otmappingadapter"]], "Examples using skada.PerDomain": [[58, "examples-using-skada-perdomain"]], "Examples using skada.SelectSource": [[59, "examples-using-skada-selectsource"]], "Examples using skada.Shared": [[61, "examples-using-skada-shared"]], "Examples using skada.SubspaceAlignment": [[62, "examples-using-skada-subspacealignment"]], "Examples using skada.TransferComponentAnalysis": [[64, "examples-using-skada-transfercomponentanalysis"]], "Examples using skada.TransferJointMatching": [[66, "examples-using-skada-transferjointmatching"]], "Examples using skada.TransferSubspaceLearning": [[68, "examples-using-skada-transfersubspacelearning"]], "Examples using skada.datasets.DomainAwareDataset": [[69, "examples-using-skada-datasets-domainawaredataset"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[70, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_shifted_datasets": [[72, "examples-using-skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[73, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.deep.DANN": [[79, "examples-using-skada-deep-dann"]], "Examples using skada.deep.DeepCoral": [[80, "examples-using-skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoralLoss": [[81, "examples-using-skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepJDOT": [[82, "examples-using-skada-deep-deepjdot"]], "Examples using skada.make_da_pipeline": [[93, "examples-using-skada-make-da-pipeline"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[96, "examples-using-skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[99, "examples-using-skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.SupervisedScorer": [[101, "examples-using-skada-metrics-supervisedscorer"]], "Examples using skada.model_selection.DomainShuffleSplit": [[102, "examples-using-skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[103, "examples-using-skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[104, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[105, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "Examples using skada.source_target_split": [[107, "examples-using-skada-source-target-split"]], "Examples using skada.utils.extract_source_indices": [[110, "examples-using-skada-utils-extract-source-indices"]], "Filing bugs": [[29, "filing-bugs"]], "Generate classification classification dataset and plot it": [[15, "generate-classification-classification-dataset-and-plot-it"]], "Generate conditional shift classification dataset and plot it": [[14, "generate-conditional-shift-classification-dataset-and-plot-it"], [15, "generate-conditional-shift-classification-dataset-and-plot-it"], [16, "generate-conditional-shift-classification-dataset-and-plot-it"]], "Generate conditional shift dataset": [[17, "generate-conditional-shift-dataset"]], "Generate conditional shift regression dataset and plot it": [[14, "generate-conditional-shift-regression-dataset-and-plot-it"], [15, "generate-conditional-shift-regression-dataset-and-plot-it"]], "How does OTDA works?": [[17, "how-does-otda-works"]], "How to contribute": [[29, "how-to-contribute"]], "How to use SKADA": [[21, null]], "Illustration of the DA problem": [[17, "illustration-of-the-da-problem"]], "Illustration of the Density Reweighting method": [[18, "illustration-of-the-density-reweighting-method"]], "Illustration of the Discr. reweighting method": [[18, "illustration-of-the-discr-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[18, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the KLIEPReweight method": [[18, "illustration-of-the-kliepreweight-method"]], "Illustration of the Kernel Mean Matching method": [[18, "illustration-of-the-kernel-mean-matching-method"]], "Illustration of the Nearest Neighbor reweighting method": [[18, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the OT plan": [[14, "illustration-of-the-ot-plan"]], "Illustration of the Subspace Alignment method": [[19, "illustration-of-the-subspace-alignment-method"]], "Illustration of the Transfer Component Analysis method": [[19, "illustration-of-the-transfer-component-analysis-method"]], "Illustration of the Transfer Joint Matching method": [[19, "illustration-of-the-transfer-joint-matching-method"]], "Illustration of the Transfer Subspace Learning method": [[19, "illustration-of-the-transfer-subspace-learning-method"]], "Illustration of the problem with no domain adaptation": [[18, "illustration-of-the-problem-with-no-domain-adaptation"], [19, "illustration-of-the-problem-with-no-domain-adaptation"]], "Illustration of the propagated labels": [[15, "illustration-of-the-propagated-labels"], [15, "id3"]], "Implemented algorithms": [[112, "implemented-algorithms"]], "Indices and tables": [[112, "indices-and-tables"]], "Installation": [[112, "installation"]], "JDOT Regressor and Classifier examples": [[14, null]], "Label Propagation methods": [[15, null]], "Labeling the target dataset": [[13, "labeling-the-target-dataset"]], "License": [[112, "license"]], "Load the image datasets": [[6, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"], [10, "load-the-image-datasets"]], "Main module skada": [[0, "module-skada"]], "Metrics for DA": [[113, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[115, null]], "Model Selection": [[113, "model-selection"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Multi-domain Linear Monge Alignment": [[16, null]], "New contributor tips": [[29, "new-contributor-tips"]], "Optimal Transport Domain Adaptation": [[17, "optimal-transport-domain-adaptation"]], "Optimal Transport Domain Adaptation (OTDA)": [[17, null]], "Optimal transport domain adaptation methods.": [[9, null]], "Other DA methods": [[0, "other-da-methods"]], "Pipeline": [[113, "pipeline"]], "Plot dataset source domain and shifted target domain": [[1, null], [2, null], [3, null], [4, null]], "Plot of the dataset:": [[18, "plot-of-the-dataset"], [19, "plot-of-the-dataset"]], "Plots of the dataset": [[13, "plots-of-the-dataset"]], "Pull Request Checklist": [[29, "pull-request-checklist"]], "References": [[112, "references"]], "Release of SKADA": [[114, null]], "Reweighting Methods": [[18, "reweighting-methods"]], "Reweighting method example on covariate shift dataset": [[18, null]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[112, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "SKADA deep learning DA losses": [[0, "skada-deep-learning-da-losses"]], "SKADA logo generation": [[23, null]], "SKADA: SciKit Adaptation": [[112, null]], "Sample Domain": [[113, "sample-domain"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Scoring": [[113, "scoring"]], "Selector": [[113, "selector"]], "Short examples": [[112, "short-examples"]], "Skada v0.4.0": [[114, "skada-v0-4-0"]], "Splitters": [[113, "splitters"]], "Subspace method example on subspace shift dataset": [[19, null]], "Test-time Domain Adaptation": [[113, "test-time-domain-adaptation"]], "The subspaces methods": [[19, "the-subspaces-methods"]], "Torch compatible DA losses in skada.deep.losses": [[0, "module-skada.deep.losses"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Train a DeepCoral model": [[8, "train-a-deepcoral-model"]], "Train a DeepJDOT model": [[9, "train-a-deepjdot-model"]], "Train a classic model": [[6, "train-a-classic-model"], [8, "train-a-classic-model"], [9, "train-a-classic-model"]], "Train a classifier on adapted data": [[16, "train-a-classifier-on-adapted-data"], [16, "id1"]], "Train a classifier on source data": [[14, "train-a-classifier-on-source-data"], [15, "train-a-classifier-on-source-data"], [16, "train-a-classifier-on-source-data"]], "Train a regressor on source data": [[14, "train-a-regressor-on-source-data"], [15, "train-a-regressor-on-source-data"]], "Train the full Labe Propagation model": [[15, "train-the-full-labe-propagation-model"]], "Train with JDOT classifier": [[14, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[14, "train-with-jdot-classifier-with-svc"]], "Train with JDOT regressor": [[14, "train-with-jdot-regressor"]], "Train with LabelProp + classifier": [[15, "train-with-labelprop-classifier"]], "Train with LabelProp and JCPOT + classifier": [[15, "train-with-labelprop-and-jcpot-classifier"]], "Training parameters": [[10, "training-parameters"]], "Training setup for deep DA method.": [[10, null]], "Training with skorch": [[10, "training-with-skorch"]], "Training with skorch with dataset": [[10, "training-with-skorch-with-dataset"]], "Training with torch": [[10, "training-with-torch"]], "Usage of the DASVMClassifier": [[13, "usage-of-the-dasvmclassifier"]], "Users Guide": [[113, null]], "Using GridSearchCV with skada": [[27, null]], "Using cross_val_score with skada": [[25, null]], "Utilities": [[0, "utilities"]], "Utilities skada.utils": [[0, "module-skada.utils"]], "Visualizing cross-validation behavior in skada": [[26, null]], "We generate our 2D dataset with 2 classes": [[13, "we-generate-our-2d-dataset-with-2-classes"], [18, "we-generate-our-2d-dataset-with-2-classes"], [19, "we-generate-our-2d-dataset-with-2-classes"]], "What's Changed": [[114, "what-s-changed"]], "skada.CORAL": [[30, null]], "skada.CORALAdapter": [[31, null]], "skada.ClassRegularizerOTMapping": [[32, null]], "skada.ClassRegularizerOTMappingAdapter": [[33, null]], "skada.DASVMClassifier": [[34, null]], "skada.DensityReweight": [[35, null]], "skada.DensityReweightAdapter": [[36, null]], "skada.DiscriminatorReweight": [[37, null]], "skada.DiscriminatorReweightAdapter": [[38, null]], "skada.EntropicOTMapping": [[39, null]], "skada.EntropicOTMappingAdapter": [[40, null]], "skada.GaussianReweight": [[41, null]], "skada.GaussianReweightAdapter": [[42, null]], "skada.JDOTRegressor": [[43, null]], "skada.KLIEPReweight": [[44, null]], "skada.KLIEPReweightAdapter": [[45, null]], "skada.KMMReweight": [[46, null]], "skada.KMMReweightAdapter": [[47, null]], "skada.LinearOTMapping": [[48, null]], "skada.LinearOTMappingAdapter": [[49, null]], "skada.MMDLSConSMapping": [[50, null]], "skada.MMDLSConSMappingAdapter": [[51, null]], "skada.MMDTarSReweight": [[52, null]], "skada.MMDTarSReweightAdapter": [[53, null]], "skada.NearestNeighborReweight": [[54, null]], "skada.NearestNeighborReweightAdapter": [[55, null]], "skada.OTMapping": [[56, null]], "skada.OTMappingAdapter": [[57, null]], "skada.PerDomain": [[58, null]], "skada.SelectSource": [[59, null]], "skada.SelectTarget": [[60, null]], "skada.Shared": [[61, null]], "skada.SubspaceAlignment": [[62, null]], "skada.SubspaceAlignmentAdapter": [[63, null]], "skada.TransferComponentAnalysis": [[64, null]], "skada.TransferComponentAnalysisAdapter": [[65, null]], "skada.TransferJointMatching": [[66, null]], "skada.TransferJointMatchingAdapter": [[67, null]], "skada.TransferSubspaceLearning": [[68, null]], "skada.datasets.DomainAwareDataset": [[69, null]], "skada.datasets.make_dataset_from_moons_distribution": [[70, null]], "skada.datasets.make_shifted_blobs": [[71, null]], "skada.datasets.make_shifted_datasets": [[72, null]], "skada.datasets.make_variable_frequency_dataset": [[73, null]], "skada.deep.CAN": [[74, null]], "skada.deep.CANLoss": [[75, null]], "skada.deep.CDAN": [[76, null]], "skada.deep.CDANLoss": [[77, null]], "skada.deep.DANLoss": [[78, null]], "skada.deep.DANN": [[79, null]], "skada.deep.DeepCoral": [[80, null]], "skada.deep.DeepCoralLoss": [[81, null]], "skada.deep.DeepJDOT": [[82, null]], "skada.deep.DeepJDOTLoss": [[83, null]], "skada.deep.MCC": [[84, null]], "skada.deep.MCCLoss": [[85, null]], "skada.deep.MDD": [[86, null]], "skada.deep.MDDLoss": [[87, null]], "skada.deep.losses.cdd_loss": [[88, null]], "skada.deep.losses.dan_loss": [[89, null]], "skada.deep.losses.deepcoral_loss": [[90, null]], "skada.deep.losses.deepjdot_loss": [[91, null]], "skada.deep.losses.mcc_loss": [[92, null]], "skada.make_da_pipeline": [[93, null]], "skada.metrics.CircularValidation": [[94, null]], "skada.metrics.DeepEmbeddedValidation": [[95, null]], "skada.metrics.ImportanceWeightedScorer": [[96, null]], "skada.metrics.MaNoScorer": [[97, null]], "skada.metrics.MixValScorer": [[98, null]], "skada.metrics.PredictionEntropyScorer": [[99, null]], "skada.metrics.SoftNeighborhoodDensity": [[100, null]], "skada.metrics.SupervisedScorer": [[101, null]], "skada.model_selection.DomainShuffleSplit": [[102, null]], "skada.model_selection.LeaveOneDomainOut": [[103, null]], "skada.model_selection.SourceTargetShuffleSplit": [[104, null]], "skada.model_selection.StratifiedDomainShuffleSplit": [[105, null]], "skada.per_domain_split": [[106, null]], "skada.source_target_split": [[107, null]], "skada.utils.check_X_y_domain": [[108, null]], "skada.utils.extract_domains_indices": [[109, null]], "skada.utils.extract_source_indices": [[110, null]], "skada.utils.source_target_merge": [[111, null]]}, "docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_deepdadataset", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_label_prop_da", "auto_examples/methods/plot_monge_alignment_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/plot_subspace", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "contributing", "gen_modules/skada.CORAL", "gen_modules/skada.CORALAdapter", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.ClassRegularizerOTMappingAdapter", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DensityReweightAdapter", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.DiscriminatorReweightAdapter", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.EntropicOTMappingAdapter", "gen_modules/skada.GaussianReweight", "gen_modules/skada.GaussianReweightAdapter", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.KLIEPReweightAdapter", "gen_modules/skada.KMMReweight", "gen_modules/skada.KMMReweightAdapter", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.LinearOTMappingAdapter", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDLSConSMappingAdapter", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.MMDTarSReweightAdapter", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.NearestNeighborReweightAdapter", "gen_modules/skada.OTMapping", "gen_modules/skada.OTMappingAdapter", "gen_modules/skada.PerDomain", "gen_modules/skada.SelectSource", "gen_modules/skada.SelectTarget", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.SubspaceAlignmentAdapter", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.TransferComponentAnalysisAdapter", "gen_modules/skada.TransferJointMatching", "gen_modules/skada.TransferJointMatchingAdapter", "gen_modules/skada.TransferSubspaceLearning", "gen_modules/skada.datasets.DomainAwareDataset", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CAN", "gen_modules/skada.deep.CANLoss", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.deep.MCC", "gen_modules/skada.deep.MCCLoss", "gen_modules/skada.deep.MDD", "gen_modules/skada.deep.MDDLoss", "gen_modules/skada.deep.losses.cdd_loss", "gen_modules/skada.deep.losses.dan_loss", "gen_modules/skada.deep.losses.deepcoral_loss", "gen_modules/skada.deep.losses.deepjdot_loss", "gen_modules/skada.deep.losses.mcc_loss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.MaNoScorer", "gen_modules/skada.metrics.MixValScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "gen_modules/skada.per_domain_split", "gen_modules/skada.source_target_split", "gen_modules/skada.utils.check_X_y_domain", "gen_modules/skada.utils.extract_domains_indices", "gen_modules/skada.utils.extract_source_indices", "gen_modules/skada.utils.source_target_merge", "index", "quickstart", "releases", "scorer", "sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_deepdadataset.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_label_prop_da.rst", "auto_examples/methods/plot_monge_alignment_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/plot_subspace.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "contributing.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.CORALAdapter.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.ClassRegularizerOTMappingAdapter.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DensityReweightAdapter.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.DiscriminatorReweightAdapter.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.EntropicOTMappingAdapter.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.GaussianReweightAdapter.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.KLIEPReweightAdapter.rst", "gen_modules/skada.KMMReweight.rst", "gen_modules/skada.KMMReweightAdapter.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.LinearOTMappingAdapter.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDLSConSMappingAdapter.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.MMDTarSReweightAdapter.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.NearestNeighborReweightAdapter.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.OTMappingAdapter.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.SelectSource.rst", "gen_modules/skada.SelectTarget.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.SubspaceAlignmentAdapter.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.TransferComponentAnalysisAdapter.rst", "gen_modules/skada.TransferJointMatching.rst", "gen_modules/skada.TransferJointMatchingAdapter.rst", "gen_modules/skada.TransferSubspaceLearning.rst", "gen_modules/skada.datasets.DomainAwareDataset.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CAN.rst", "gen_modules/skada.deep.CANLoss.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.deep.MCC.rst", "gen_modules/skada.deep.MCCLoss.rst", "gen_modules/skada.deep.MDD.rst", "gen_modules/skada.deep.MDDLoss.rst", "gen_modules/skada.deep.losses.cdd_loss.rst", "gen_modules/skada.deep.losses.dan_loss.rst", "gen_modules/skada.deep.losses.deepcoral_loss.rst", "gen_modules/skada.deep.losses.deepjdot_loss.rst", "gen_modules/skada.deep.losses.mcc_loss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.MaNoScorer.rst", "gen_modules/skada.metrics.MixValScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "gen_modules/skada.per_domain_split.rst", "gen_modules/skada.source_target_split.rst", "gen_modules/skada.utils.check_X_y_domain.rst", "gen_modules/skada.utils.extract_domains_indices.rst", "gen_modules/skada.utils.extract_source_indices.rst", "gen_modules/skada.utils.source_target_merge.rst", "index.rst", "quickstart.md", "releases.rst", "scorer.rst", "sg_execution_times.rst"], "indexentries": {"add_domain() (skada.datasets.domainawaredataset method)": [[69, "skada.datasets.DomainAwareDataset.add_domain", false]], "can() (in module skada.deep)": [[74, "skada.deep.CAN", false]], "canloss (class in skada.deep)": [[75, "skada.deep.CANLoss", false]], "cdan() (in module skada.deep)": [[76, "skada.deep.CDAN", false]], "cdanloss (class in skada.deep)": [[77, "skada.deep.CDANLoss", false]], "cdd_loss() (in module skada.deep.losses)": [[88, "skada.deep.losses.cdd_loss", false]], "check_x_y_domain() (in module skada.utils)": [[108, "skada.utils.check_X_y_domain", false]], "circularvalidation (class in skada.metrics)": [[94, "skada.metrics.CircularValidation", false]], "classregularizerotmapping() (in module skada)": [[32, "skada.ClassRegularizerOTMapping", false]], "classregularizerotmappingadapter() (in module skada)": [[33, "skada.ClassRegularizerOTMappingAdapter", false]], "coral() (in module skada)": [[30, "skada.CORAL", false]], "coraladapter() (in module skada)": [[31, "skada.CORALAdapter", false]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[95, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss", false]], "dan_loss() (in module skada.deep.losses)": [[89, "skada.deep.losses.dan_loss", false]], "danloss (class in skada.deep)": [[78, "skada.deep.DANLoss", false]], "dann() (in module skada.deep)": [[79, "skada.deep.DANN", false]], "dasvmclassifier() (in module skada)": [[34, "skada.DASVMClassifier", false]], "deepcoral() (in module skada.deep)": [[80, "skada.deep.DeepCoral", false]], "deepcoral_loss() (in module skada.deep.losses)": [[90, "skada.deep.losses.deepcoral_loss", false]], "deepcoralloss (class in skada.deep)": [[81, "skada.deep.DeepCoralLoss", false]], "deepembeddedvalidation (class in skada.metrics)": [[95, "skada.metrics.DeepEmbeddedValidation", false]], "deepjdot() (in module skada.deep)": [[82, "skada.deep.DeepJDOT", false]], "deepjdot_loss() (in module skada.deep.losses)": [[91, "skada.deep.losses.deepjdot_loss", false]], "deepjdotloss (class in skada.deep)": [[83, "skada.deep.DeepJDOTLoss", false]], "densityreweight() (in module skada)": [[35, "skada.DensityReweight", false]], "densityreweightadapter (class in skada)": [[36, "skada.DensityReweightAdapter", false]], "discriminatorreweight() (in module skada)": [[37, "skada.DiscriminatorReweight", false]], "discriminatorreweightadapter (class in skada)": [[38, "skada.DiscriminatorReweightAdapter", false]], "domainawaredataset (class in skada.datasets)": [[69, "skada.datasets.DomainAwareDataset", false]], "domainshufflesplit (class in skada.model_selection)": [[102, "skada.model_selection.DomainShuffleSplit", false]], "entropicotmapping() (in module skada)": [[39, "skada.EntropicOTMapping", false]], "entropicotmappingadapter() (in module skada)": [[40, "skada.EntropicOTMappingAdapter", false]], "extract_domains_indices() (in module skada.utils)": [[109, "skada.utils.extract_domains_indices", false]], "extract_source_indices() (in module skada.utils)": [[110, "skada.utils.extract_source_indices", false]], "fit() (skada.densityreweightadapter method)": [[36, "skada.DensityReweightAdapter.fit", false]], "fit() (skada.discriminatorreweightadapter method)": [[38, "skada.DiscriminatorReweightAdapter.fit", false]], "fit() (skada.gaussianreweightadapter method)": [[42, "skada.GaussianReweightAdapter.fit", false]], "fit() (skada.kliepreweightadapter method)": [[45, "skada.KLIEPReweightAdapter.fit", false]], "fit() (skada.kmmreweightadapter method)": [[47, "skada.KMMReweightAdapter.fit", false]], "fit() (skada.mmdtarsreweightadapter method)": [[53, "skada.MMDTarSReweightAdapter.fit", false]], "fit() (skada.nearestneighborreweightadapter method)": [[55, "skada.NearestNeighborReweightAdapter.fit", false]], "forward() (skada.deep.canloss method)": [[75, "skada.deep.CANLoss.forward", false]], "forward() (skada.deep.cdanloss method)": [[77, "skada.deep.CDANLoss.forward", false]], "forward() (skada.deep.danloss method)": [[78, "skada.deep.DANLoss.forward", false]], "forward() (skada.deep.deepcoralloss method)": [[81, "skada.deep.DeepCoralLoss.forward", false]], "forward() (skada.deep.deepjdotloss method)": [[83, "skada.deep.DeepJDOTLoss.forward", false]], "forward() (skada.deep.mccloss method)": [[85, "skada.deep.MCCLoss.forward", false]], "forward() (skada.deep.mddloss method)": [[87, "skada.deep.MDDLoss.forward", false]], "gaussianreweight() (in module skada)": [[41, "skada.GaussianReweight", false]], "gaussianreweightadapter (class in skada)": [[42, "skada.GaussianReweightAdapter", false]], "get_domain() (skada.datasets.domainawaredataset method)": [[69, "skada.datasets.DomainAwareDataset.get_domain", false]], "get_estimator() (skada.perdomain method)": [[58, "skada.PerDomain.get_estimator", false]], "get_estimator() (skada.shared method)": [[61, "skada.Shared.get_estimator", false]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[103, "skada.model_selection.LeaveOneDomainOut.get_n_splits", false]], "importanceweightedscorer (class in skada.metrics)": [[96, "skada.metrics.ImportanceWeightedScorer", false]], "jdotregressor() (in module skada)": [[43, "skada.JDOTRegressor", false]], "kliepreweight() (in module skada)": [[44, "skada.KLIEPReweight", false]], "kliepreweightadapter (class in skada)": [[45, "skada.KLIEPReweightAdapter", false]], "kmmreweight() (in module skada)": [[46, "skada.KMMReweight", false]], "kmmreweightadapter (class in skada)": [[47, "skada.KMMReweightAdapter", false]], "leaveonedomainout (class in skada.model_selection)": [[103, "skada.model_selection.LeaveOneDomainOut", false]], "linearotmapping() (in module skada)": [[48, "skada.LinearOTMapping", false]], "linearotmappingadapter() (in module skada)": [[49, "skada.LinearOTMappingAdapter", false]], "make_da_pipeline() (in module skada)": [[93, "skada.make_da_pipeline", false]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[70, "skada.datasets.make_dataset_from_moons_distribution", false]], "make_shifted_blobs() (in module skada.datasets)": [[71, "skada.datasets.make_shifted_blobs", false]], "make_shifted_datasets() (in module skada.datasets)": [[72, "skada.datasets.make_shifted_datasets", false]], "make_variable_frequency_dataset() (in module skada.datasets)": [[73, "skada.datasets.make_variable_frequency_dataset", false]], "manoscorer (class in skada.metrics)": [[97, "skada.metrics.MaNoScorer", false]], "mcc() (in module skada.deep)": [[84, "skada.deep.MCC", false]], "mcc_loss() (in module skada.deep.losses)": [[92, "skada.deep.losses.mcc_loss", false]], "mccloss (class in skada.deep)": [[85, "skada.deep.MCCLoss", false]], "mdd() (in module skada.deep)": [[86, "skada.deep.MDD", false]], "mddloss (class in skada.deep)": [[87, "skada.deep.MDDLoss", false]], "merge() (skada.datasets.domainawaredataset method)": [[69, "skada.datasets.DomainAwareDataset.merge", false]], "mixvalscorer (class in skada.metrics)": [[98, "skada.metrics.MixValScorer", false]], "mmdlsconsmapping() (in module skada)": [[50, "skada.MMDLSConSMapping", false]], "mmdlsconsmappingadapter() (in module skada)": [[51, "skada.MMDLSConSMappingAdapter", false]], "mmdtarsreweight() (in module skada)": [[52, "skada.MMDTarSReweight", false]], "mmdtarsreweightadapter (class in skada)": [[53, "skada.MMDTarSReweightAdapter", false]], "module": [[0, "module-skada", false], [0, "module-skada.datasets", false], [0, "module-skada.deep", false], [0, "module-skada.deep.losses", false], [0, "module-skada.metrics", false], [0, "module-skada.model_selection", false], [0, "module-skada.utils", false]], "nearestneighborreweight() (in module skada)": [[54, "skada.NearestNeighborReweight", false]], "nearestneighborreweightadapter (class in skada)": [[55, "skada.NearestNeighborReweightAdapter", false]], "otmapping() (in module skada)": [[56, "skada.OTMapping", false]], "otmappingadapter() (in module skada)": [[57, "skada.OTMappingAdapter", false]], "pack() (skada.datasets.domainawaredataset method)": [[69, "skada.datasets.DomainAwareDataset.pack", false]], "pack_lodo() (skada.datasets.domainawaredataset method)": [[69, "skada.datasets.DomainAwareDataset.pack_lodo", false]], "pack_test() (skada.datasets.domainawaredataset method)": [[69, "skada.datasets.DomainAwareDataset.pack_test", false]], "pack_train() (skada.datasets.domainawaredataset method)": [[69, "skada.datasets.DomainAwareDataset.pack_train", false]], "per_domain_split() (in module skada)": [[106, "skada.per_domain_split", false]], "perdomain (class in skada)": [[58, "skada.PerDomain", false]], "predictionentropyscorer (class in skada.metrics)": [[99, "skada.metrics.PredictionEntropyScorer", false]], "select_domain() (skada.datasets.domainawaredataset method)": [[69, "skada.datasets.DomainAwareDataset.select_domain", false]], "selectsource (class in skada)": [[59, "skada.SelectSource", false]], "selecttarget (class in skada)": [[60, "skada.SelectTarget", false]], "set_decision_function_request() (skada.perdomain method)": [[58, "skada.PerDomain.set_decision_function_request", false]], "set_decision_function_request() (skada.selectsource method)": [[59, "skada.SelectSource.set_decision_function_request", false]], "set_decision_function_request() (skada.selecttarget method)": [[60, "skada.SelectTarget.set_decision_function_request", false]], "set_decision_function_request() (skada.shared method)": [[61, "skada.Shared.set_decision_function_request", false]], "set_fit_request() (skada.densityreweightadapter method)": [[36, "skada.DensityReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.discriminatorreweightadapter method)": [[38, "skada.DiscriminatorReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.gaussianreweightadapter method)": [[42, "skada.GaussianReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kliepreweightadapter method)": [[45, "skada.KLIEPReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kmmreweightadapter method)": [[47, "skada.KMMReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.mmdtarsreweightadapter method)": [[53, "skada.MMDTarSReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.nearestneighborreweightadapter method)": [[55, "skada.NearestNeighborReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.perdomain method)": [[58, "skada.PerDomain.set_fit_request", false]], "set_fit_request() (skada.selectsource method)": [[59, "skada.SelectSource.set_fit_request", false]], "set_fit_request() (skada.selecttarget method)": [[60, "skada.SelectTarget.set_fit_request", false]], "set_fit_request() (skada.shared method)": [[61, "skada.Shared.set_fit_request", false]], "set_partial_fit_request() (skada.perdomain method)": [[58, "skada.PerDomain.set_partial_fit_request", false]], "set_partial_fit_request() (skada.selectsource method)": [[59, "skada.SelectSource.set_partial_fit_request", false]], "set_partial_fit_request() (skada.selecttarget method)": [[60, "skada.SelectTarget.set_partial_fit_request", false]], "set_partial_fit_request() (skada.shared method)": [[61, "skada.Shared.set_partial_fit_request", false]], "set_predict_log_proba_request() (skada.perdomain method)": [[58, "skada.PerDomain.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.selectsource method)": [[59, "skada.SelectSource.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.selecttarget method)": [[60, "skada.SelectTarget.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.shared method)": [[61, "skada.Shared.set_predict_log_proba_request", false]], "set_predict_proba_request() (skada.perdomain method)": [[58, "skada.PerDomain.set_predict_proba_request", false]], "set_predict_proba_request() (skada.selectsource method)": [[59, "skada.SelectSource.set_predict_proba_request", false]], "set_predict_proba_request() (skada.selecttarget method)": [[60, "skada.SelectTarget.set_predict_proba_request", false]], "set_predict_proba_request() (skada.shared method)": [[61, "skada.Shared.set_predict_proba_request", false]], "set_predict_request() (skada.perdomain method)": [[58, "skada.PerDomain.set_predict_request", false]], "set_predict_request() (skada.selectsource method)": [[59, "skada.SelectSource.set_predict_request", false]], "set_predict_request() (skada.selecttarget method)": [[60, "skada.SelectTarget.set_predict_request", false]], "set_predict_request() (skada.shared method)": [[61, "skada.Shared.set_predict_request", false]], "set_score_request() (skada.metrics.circularvalidation method)": [[94, "skada.metrics.CircularValidation.set_score_request", false]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[95, "skada.metrics.DeepEmbeddedValidation.set_score_request", false]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[96, "skada.metrics.ImportanceWeightedScorer.set_score_request", false]], "set_score_request() (skada.metrics.manoscorer method)": [[97, "skada.metrics.MaNoScorer.set_score_request", false]], "set_score_request() (skada.metrics.mixvalscorer method)": [[98, "skada.metrics.MixValScorer.set_score_request", false]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[99, "skada.metrics.PredictionEntropyScorer.set_score_request", false]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[100, "skada.metrics.SoftNeighborhoodDensity.set_score_request", false]], "set_score_request() (skada.metrics.supervisedscorer method)": [[101, "skada.metrics.SupervisedScorer.set_score_request", false]], "set_score_request() (skada.perdomain method)": [[58, "skada.PerDomain.set_score_request", false]], "set_score_request() (skada.selectsource method)": [[59, "skada.SelectSource.set_score_request", false]], "set_score_request() (skada.selecttarget method)": [[60, "skada.SelectTarget.set_score_request", false]], "set_score_request() (skada.shared method)": [[61, "skada.Shared.set_score_request", false]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[102, "skada.model_selection.DomainShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[103, "skada.model_selection.LeaveOneDomainOut.set_split_request", false]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[104, "skada.model_selection.SourceTargetShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[105, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request", false]], "set_transform_request() (skada.densityreweightadapter method)": [[36, "skada.DensityReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.discriminatorreweightadapter method)": [[38, "skada.DiscriminatorReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.gaussianreweightadapter method)": [[42, "skada.GaussianReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kliepreweightadapter method)": [[45, "skada.KLIEPReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kmmreweightadapter method)": [[47, "skada.KMMReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.mmdtarsreweightadapter method)": [[53, "skada.MMDTarSReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.nearestneighborreweightadapter method)": [[55, "skada.NearestNeighborReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.perdomain method)": [[58, "skada.PerDomain.set_transform_request", false]], "set_transform_request() (skada.selectsource method)": [[59, "skada.SelectSource.set_transform_request", false]], "set_transform_request() (skada.selecttarget method)": [[60, "skada.SelectTarget.set_transform_request", false]], "set_transform_request() (skada.shared method)": [[61, "skada.Shared.set_transform_request", false]], "shared (class in skada)": [[61, "skada.Shared", false]], "skada": [[0, "module-skada", false]], "skada.datasets": [[0, "module-skada.datasets", false]], "skada.deep": [[0, "module-skada.deep", false]], "skada.deep.losses": [[0, "module-skada.deep.losses", false]], "skada.metrics": [[0, "module-skada.metrics", false]], "skada.model_selection": [[0, "module-skada.model_selection", false]], "skada.utils": [[0, "module-skada.utils", false]], "softneighborhooddensity (class in skada.metrics)": [[100, "skada.metrics.SoftNeighborhoodDensity", false]], "source_target_merge() (in module skada.utils)": [[111, "skada.utils.source_target_merge", false]], "source_target_split() (in module skada)": [[107, "skada.source_target_split", false]], "sourcetargetshufflesplit (class in skada.model_selection)": [[104, "skada.model_selection.SourceTargetShuffleSplit", false]], "split() (skada.model_selection.leaveonedomainout method)": [[103, "skada.model_selection.LeaveOneDomainOut.split", false]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[105, "skada.model_selection.StratifiedDomainShuffleSplit.split", false]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[105, "skada.model_selection.StratifiedDomainShuffleSplit", false]], "subspacealignment() (in module skada)": [[62, "skada.SubspaceAlignment", false]], "subspacealignmentadapter() (in module skada)": [[63, "skada.SubspaceAlignmentAdapter", false]], "supervisedscorer (class in skada.metrics)": [[101, "skada.metrics.SupervisedScorer", false]], "transfercomponentanalysis() (in module skada)": [[64, "skada.TransferComponentAnalysis", false]], "transfercomponentanalysisadapter() (in module skada)": [[65, "skada.TransferComponentAnalysisAdapter", false]], "transferjointmatching() (in module skada)": [[66, "skada.TransferJointMatching", false]], "transferjointmatchingadapter() (in module skada)": [[67, "skada.TransferJointMatchingAdapter", false]], "transfersubspacelearning() (in module skada)": [[68, "skada.TransferSubspaceLearning", false]]}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[30, 1, 1, "", "CORAL"], [31, 1, 1, "", "CORALAdapter"], [32, 1, 1, "", "ClassRegularizerOTMapping"], [33, 1, 1, "", "ClassRegularizerOTMappingAdapter"], [34, 1, 1, "", "DASVMClassifier"], [35, 1, 1, "", "DensityReweight"], [36, 2, 1, "", "DensityReweightAdapter"], [37, 1, 1, "", "DiscriminatorReweight"], [38, 2, 1, "", "DiscriminatorReweightAdapter"], [39, 1, 1, "", "EntropicOTMapping"], [40, 1, 1, "", "EntropicOTMappingAdapter"], [41, 1, 1, "", "GaussianReweight"], [42, 2, 1, "", "GaussianReweightAdapter"], [43, 1, 1, "", "JDOTRegressor"], [44, 1, 1, "", "KLIEPReweight"], [45, 2, 1, "", "KLIEPReweightAdapter"], [46, 1, 1, "", "KMMReweight"], [47, 2, 1, "", "KMMReweightAdapter"], [48, 1, 1, "", "LinearOTMapping"], [49, 1, 1, "", "LinearOTMappingAdapter"], [50, 1, 1, "", "MMDLSConSMapping"], [51, 1, 1, "", "MMDLSConSMappingAdapter"], [52, 1, 1, "", "MMDTarSReweight"], [53, 2, 1, "", "MMDTarSReweightAdapter"], [54, 1, 1, "", "NearestNeighborReweight"], [55, 2, 1, "", "NearestNeighborReweightAdapter"], [56, 1, 1, "", "OTMapping"], [57, 1, 1, "", "OTMappingAdapter"], [58, 2, 1, "", "PerDomain"], [59, 2, 1, "", "SelectSource"], [60, 2, 1, "", "SelectTarget"], [61, 2, 1, "", "Shared"], [62, 1, 1, "", "SubspaceAlignment"], [63, 1, 1, "", "SubspaceAlignmentAdapter"], [64, 1, 1, "", "TransferComponentAnalysis"], [65, 1, 1, "", "TransferComponentAnalysisAdapter"], [66, 1, 1, "", "TransferJointMatching"], [67, 1, 1, "", "TransferJointMatchingAdapter"], [68, 1, 1, "", "TransferSubspaceLearning"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [93, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"], [106, 1, 1, "", "per_domain_split"], [107, 1, 1, "", "source_target_split"], [0, 0, 0, "-", "utils"]], "skada.DensityReweightAdapter": [[36, 3, 1, "", "fit"], [36, 3, 1, "", "set_fit_request"], [36, 3, 1, "", "set_transform_request"]], "skada.DiscriminatorReweightAdapter": [[38, 3, 1, "", "fit"], [38, 3, 1, "", "set_fit_request"], [38, 3, 1, "", "set_transform_request"]], "skada.GaussianReweightAdapter": [[42, 3, 1, "", "fit"], [42, 3, 1, "", "set_fit_request"], [42, 3, 1, "", "set_transform_request"]], "skada.KLIEPReweightAdapter": [[45, 3, 1, "", "fit"], [45, 3, 1, "", "set_fit_request"], [45, 3, 1, "", "set_transform_request"]], "skada.KMMReweightAdapter": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "set_fit_request"], [47, 3, 1, "", "set_transform_request"]], "skada.MMDTarSReweightAdapter": [[53, 3, 1, "", "fit"], [53, 3, 1, "", "set_fit_request"], [53, 3, 1, "", "set_transform_request"]], "skada.NearestNeighborReweightAdapter": [[55, 3, 1, "", "fit"], [55, 3, 1, "", "set_fit_request"], [55, 3, 1, "", "set_transform_request"]], "skada.PerDomain": [[58, 3, 1, "", "get_estimator"], [58, 3, 1, "", "set_decision_function_request"], [58, 3, 1, "", "set_fit_request"], [58, 3, 1, "", "set_partial_fit_request"], [58, 3, 1, "", "set_predict_log_proba_request"], [58, 3, 1, "", "set_predict_proba_request"], [58, 3, 1, "", "set_predict_request"], [58, 3, 1, "", "set_score_request"], [58, 3, 1, "", "set_transform_request"]], "skada.SelectSource": [[59, 3, 1, "", "set_decision_function_request"], [59, 3, 1, "", "set_fit_request"], [59, 3, 1, "", "set_partial_fit_request"], [59, 3, 1, "", "set_predict_log_proba_request"], [59, 3, 1, "", "set_predict_proba_request"], [59, 3, 1, "", "set_predict_request"], [59, 3, 1, "", "set_score_request"], [59, 3, 1, "", "set_transform_request"]], "skada.SelectTarget": [[60, 3, 1, "", "set_decision_function_request"], [60, 3, 1, "", "set_fit_request"], [60, 3, 1, "", "set_partial_fit_request"], [60, 3, 1, "", "set_predict_log_proba_request"], [60, 3, 1, "", "set_predict_proba_request"], [60, 3, 1, "", "set_predict_request"], [60, 3, 1, "", "set_score_request"], [60, 3, 1, "", "set_transform_request"]], "skada.Shared": [[61, 3, 1, "", "get_estimator"], [61, 3, 1, "", "set_decision_function_request"], [61, 3, 1, "", "set_fit_request"], [61, 3, 1, "", "set_partial_fit_request"], [61, 3, 1, "", "set_predict_log_proba_request"], [61, 3, 1, "", "set_predict_proba_request"], [61, 3, 1, "", "set_predict_request"], [61, 3, 1, "", "set_score_request"], [61, 3, 1, "", "set_transform_request"]], "skada.datasets": [[69, 2, 1, "", "DomainAwareDataset"], [70, 1, 1, "", "make_dataset_from_moons_distribution"], [71, 1, 1, "", "make_shifted_blobs"], [72, 1, 1, "", "make_shifted_datasets"], [73, 1, 1, "", "make_variable_frequency_dataset"]], "skada.datasets.DomainAwareDataset": [[69, 3, 1, "", "add_domain"], [69, 3, 1, "", "get_domain"], [69, 3, 1, "", "merge"], [69, 3, 1, "", "pack"], [69, 3, 1, "", "pack_lodo"], [69, 3, 1, "", "pack_test"], [69, 3, 1, "", "pack_train"], [69, 3, 1, "", "select_domain"]], "skada.deep": [[74, 1, 1, "", "CAN"], [75, 2, 1, "", "CANLoss"], [76, 1, 1, "", "CDAN"], [77, 2, 1, "", "CDANLoss"], [78, 2, 1, "", "DANLoss"], [79, 1, 1, "", "DANN"], [80, 1, 1, "", "DeepCoral"], [81, 2, 1, "", "DeepCoralLoss"], [82, 1, 1, "", "DeepJDOT"], [83, 2, 1, "", "DeepJDOTLoss"], [84, 1, 1, "", "MCC"], [85, 2, 1, "", "MCCLoss"], [86, 1, 1, "", "MDD"], [87, 2, 1, "", "MDDLoss"], [0, 0, 0, "-", "losses"]], "skada.deep.CANLoss": [[75, 3, 1, "", "forward"]], "skada.deep.CDANLoss": [[77, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[78, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[81, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[83, 3, 1, "", "forward"]], "skada.deep.MCCLoss": [[85, 3, 1, "", "forward"]], "skada.deep.MDDLoss": [[87, 3, 1, "", "forward"]], "skada.deep.losses": [[88, 1, 1, "", "cdd_loss"], [89, 1, 1, "", "dan_loss"], [90, 1, 1, "", "deepcoral_loss"], [91, 1, 1, "", "deepjdot_loss"], [92, 1, 1, "", "mcc_loss"]], "skada.metrics": [[94, 2, 1, "", "CircularValidation"], [95, 2, 1, "", "DeepEmbeddedValidation"], [96, 2, 1, "", "ImportanceWeightedScorer"], [97, 2, 1, "", "MaNoScorer"], [98, 2, 1, "", "MixValScorer"], [99, 2, 1, "", "PredictionEntropyScorer"], [100, 2, 1, "", "SoftNeighborhoodDensity"], [101, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[94, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[95, 3, 1, "", "cross_entropy_loss"], [95, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[96, 3, 1, "", "set_score_request"]], "skada.metrics.MaNoScorer": [[97, 3, 1, "", "set_score_request"]], "skada.metrics.MixValScorer": [[98, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[99, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[100, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[101, 3, 1, "", "set_score_request"]], "skada.model_selection": [[102, 2, 1, "", "DomainShuffleSplit"], [103, 2, 1, "", "LeaveOneDomainOut"], [104, 2, 1, "", "SourceTargetShuffleSplit"], [105, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[102, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[103, 3, 1, "", "get_n_splits"], [103, 3, 1, "", "set_split_request"], [103, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[104, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[105, 3, 1, "", "set_split_request"], [105, 3, 1, "", "split"]], "skada.utils": [[108, 1, 1, "", "check_X_y_domain"], [109, 1, 1, "", "extract_domains_indices"], [110, 1, 1, "", "extract_source_indices"], [111, 1, 1, "", "source_target_merge"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [3, 4, 8, 13, 18, 19, 22, 23, 25, 26, 27, 29, 51, 54, 55, 57, 68, 69, 72, 74, 76, 79, 80, 82, 84, 86, 96, 97, 98, 101, 106, 107, 111, 112, 113, 115], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 54, 55, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 86, 87, 88, 97, 98, 100, 102, 105, 109, 111, 112, 113, 115, 116], "00": [5, 8, 11, 17, 20, 24, 28, 116], "0000ff": 22, "0004": 9, "001": [10, 18, 22, 26], "00e": 22, "01": [5, 6, 8, 9, 11, 13, 14, 20, 21, 22, 24, 25, 26, 27, 66, 67, 68, 116], "013": [7, 11, 116], "01mb": 8, "02": [8, 19, 20, 21, 26, 116], "02291": 112, "03": 27, "0342": 6, "0349": 6, "04": [11, 25], "0413": 9, "0429": 6, "05": [3, 8, 20, 22, 27, 43, 50, 51, 100, 116], "0536": 6, "06": [14, 15, 22, 44, 45, 46, 47, 52, 53], "060_4_0699": 18, "0668": 8, "0689": 9, "07": [75, 78, 85, 88, 89, 92], "0700": 10, "07117994f0971b2fc2df95adb373c31c3d313442": 112, "0716": 8, "075493682966016": 14, "0774": 6, "0782": 8, "08": [22, 27, 32, 33, 39, 40, 48, 49], "080": [9, 11, 116], "0846": 6, "09": 93, "0975": 9, "0985": 9, "0x7f75ccaa55d0": 13, "1": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 111, 112, 113], "10": [1, 2, 4, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 32, 33, 43, 50, 51, 52, 53, 70, 71, 73, 102, 103, 104, 105, 111, 112], "100": [4, 8, 13, 14, 15, 16, 18, 19, 22, 23, 43, 44, 45, 46, 47, 50, 51, 66, 67, 68, 70, 71, 72, 73], "1000": [4, 18, 22, 34, 39, 40, 44, 45, 46, 47, 52, 53], "100000": [22, 56, 57], "1001": 8, "1002": 8, "1004": [19, 22], "1009": 112, "100_000": [56, 57], "10155": [49, 112], "1027": 22, "10288": 112, "1042": 6, "1044": 112, "1047": 15, "105": [1, 112], "10e": [32, 33, 39, 40], "11": [8, 23, 34, 94, 112], "1100": 4, "12": [8, 17, 18, 19, 80, 81, 90, 112], "121": 17, "122": 17, "1225": 8, "125": 18, "128": [6, 8, 9, 10], "1289": 9, "13": [8, 22, 24, 82, 83, 91, 112, 116], "131": 17, "132": [13, 15, 17, 21, 22], "1321138905671275": 17, "133": 17, "139mb": 8, "14": [1, 2, 3, 6, 11, 17, 78, 89, 112, 116], "1409": 9, "1410": [19, 66, 67, 112], "1417": [19, 66, 67, 112], "1443686989830857": 16, "144kb": 8, "145kb": 8, "1473": 10, "15": [1, 2, 3, 4, 13, 14, 18, 19, 20, 22, 26, 79, 95, 112], "153": 112, "15mb": 8, "15th": [82, 83, 91], "16": [18, 19, 24, 76, 77, 112], "162": 20, "16785": 112, "16793": 112, "16e": 22, "17": [9, 11, 23, 96, 112, 116], "171": 112, "1711": 112, "17273500375449657": 10, "175": [23, 24, 116], "1751": 6, "18": [23, 99, 112], "180": 114, "1815": 6, "182799418703954": 14, "18530735809550555": 14, "19": [27, 28, 100, 112, 116], "1905": [49, 112], "1914": 8, "1943": 10, "199": 112, "1991": 6, "1d": [54, 55], "1e": [6, 8, 9, 10, 22, 25, 32, 33, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66, 67, 75, 78, 85, 88, 89, 92, 93, 95], "1nn": [18, 22], "2": [1, 2, 3, 4, 6, 8, 9, 10, 14, 15, 16, 17, 21, 22, 23, 26, 29, 54, 55, 66, 67, 68, 70, 71, 72, 90, 92, 97, 100, 102, 105, 107, 111, 112, 113], "20": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 27, 28, 95, 112, 113, 115], "200": [22, 23, 32, 33], "2000": [18, 37, 38, 41, 42, 112], "2005": 112, "2007": [18, 44, 45, 46, 47, 96, 112], "2008": [18, 112], "2009": [34, 94, 112], "2010": [19, 68, 112], "2011": [19, 64, 65], "2012": [2, 3, 18, 54, 55, 72, 112], "2013": [19, 50, 51, 52, 53, 62, 63, 112], "2014": [15, 19, 66, 67, 112], "2015": [78, 89, 112], "2016": [8, 76, 77, 79, 80, 81, 90, 112], "2017": [14, 30, 31, 43, 112], "2018": [82, 83, 91, 99, 112], "2019": [49, 74, 75, 86, 87, 88, 95, 112], "2020": [84, 85, 92, 112], "2021": [100, 112], "2023": [98, 112], "2024": [97, 112], "2055": 6, "21": [13, 50, 51, 52, 53, 112], "210": 112, "2102": 112, "213": [18, 22], "2142044526662074": 14, "216": 114, "217": 114, "218866137683906": 17, "22": [8, 11, 112, 116], "220": 114, "221": 114, "222": 114, "223": 114, "225": 114, "226": 114, "227": [112, 114], "2273": 6, "2298312955459269": 14, "229k": 8, "22nd": 112, "23": [23, 46, 47, 112], "230": 114, "232": 114, "233": 114, "2339": 10, "234": 114, "235": 114, "2364aa": 23, "24": [18, 54, 55, 112], "240px": 113, "241": [17, 114], "242": [17, 114], "243": [17, 114], "244": [17, 112, 114], "245": 17, "246": [17, 114], "247": [17, 114], "248": [17, 114], "249": 112, "25": [8, 10, 18, 19, 73, 112], "250": 114, "251": 114, "2510": 10, "256": [10, 114], "257": 114, "258": 114, "259": 114, "26": [19, 66, 67, 112], "260": 114, "261": 114, "263": 114, "265": 114, "266": 114, "267": 114, "268": 114, "269": 114, "27": [19, 22, 68, 72, 112], "270": 114, "271": 114, "274": 114, "275": 114, "276": 114, "277": 114, "279": [112, 114], "28": [8, 15, 112], "280": 114, "282": 114, "284": [1, 5, 116], "288146109474553": 17, "29": 112, "294": [8, 11, 116], "2960": 112, "2961": 6, "2963": 8, "2967": 112, "297mb": 8, "2986": 6, "2996": 8, "2d": [14, 15, 16, 21, 114], "2f": [14, 15, 17, 18, 19, 21, 22, 25], "2mb": 8, "2x1": 72, "2x2": 72, "3": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 42, 44, 45, 46, 47, 52, 53, 55, 58, 59, 60, 61, 71, 73, 74, 75, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115], "30": [14, 22, 23, 25, 27, 54, 55, 112, 113, 115], "300": 23, "3033": 8, "305": [25, 28, 116], "306": [15, 112], "31": 112, "310098338155625": 16, "314": [15, 112], "315kb": 8, "32": [8, 10, 98, 112], "33": [74, 75, 84, 85, 88, 92, 112], "331": [13, 20, 116], "336863129384494": [14, 15, 16], "34": 112, "3422": 10, "35": [23, 86, 87, 112], "352173719537829": 15, "3543": 6, "36": 112, "367467726151268": 15, "3676169789533272": [14, 15, 16], "36th": 112, "37": [97, 112], "373": [19, 20, 116], "375": 18, "3814": 6, "3966": 6, "3k": 8, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 27, 51, 86, 87, 90, 92, 97, 102, 105, 111, 112, 113, 115], "40": 112, "4005": 8, "400px": 113, "4096": 76, "4106": 8, "42": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 27], "422": [18, 20, 116], "4269298070320042": 15, "43": 16, "44": 8, "443": 112, "4434": 9, "447": 112, "45": [2, 3, 72], "450": 112, "45933195939893": [14, 15], "459k": 8, "4607": 9, "463": 112, "464886123797522": 16, "477": [6, 11, 116], "48": [8, 26, 116], "4893": [74, 75, 88, 112], "4902": [74, 75, 88, 112], "499": [2, 5, 116], "4995": 8, "4f": 10, "4mb": 8, "5": [1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 30, 31, 43, 44, 45, 50, 51, 74, 75, 88, 97, 102, 105, 111, 112, 113, 115], "50": [1, 14, 15, 16, 18, 19, 22], "500": 13, "5002": 9, "51": [1, 14], "521": [2, 3, 72], "5244703189443227": 17, "53": 11, "530": [2, 3, 26, 28, 72, 116], "53817259426296": [14, 15, 16], "548": 4, "54k": 8, "55": 98, "5538": 9, "5585726101363702": 15, "563": [4, 5, 116], "566kb": 8, "57": 15, "570318895725525": [14, 15], "5704": 8, "576": [15, 22], "58": 25, "59": [10, 11, 112, 116], "5965": 8, "5978": 9, "5980": 8, "5994": 6, "5996": 8, "5k": 8, "6": [13, 14, 15, 18, 19, 21, 22, 23, 25, 26, 32, 33, 39, 40, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 97, 102, 105, 111, 112], "60": [18, 112], "6026": 6, "603": 19, "625": 18, "626": [14, 20, 116], "627": [3, 5, 116], "64": [10, 112], "641": 24, "6431": 9, "65": 8, "652": [17, 20, 116], "65m": 8, "667": 17, "684": 28, "699": [18, 112], "6990": 9, "6c4c7c": [18, 19], "7": [4, 13, 14, 15, 17, 18, 19, 20, 26, 48, 49, 54, 72, 75, 78, 85, 88, 89, 92, 102, 105, 111, 112], "70": 23, "7124": 112, "7133": 112, "7142": 9, "72": [6, 8, 9, 10], "721": [22, 24, 116], "72222222": [113, 115], "7404": 112, "7413": 112, "744": [21, 24, 116], "744989537549497": [14, 15], "746": [18, 112], "756925382279493": 16, "76": 15, "7600": 6, "7605": 9, "77": [14, 15], "770": 112, "776": 1, "77m": 8, "7803": 9, "787": 112, "7964573229829714": [14, 15, 16], "8": [1, 2, 3, 4, 6, 10, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 62, 63, 72, 102, 105, 111, 112], "80": [3, 18, 19], "8006": 6, "8024": 9, "8030": 10, "819": 112, "81944444": [113, 115], "82": 14, "827": 112, "8299": 8, "83333333": [113, 115], "83m": 8, "84": 14, "843": [16, 20, 116], "84375": 21, "846": 11, "849": [27, 28, 112, 116], "85": [3, 23], "858": 112, "8582": 8, "87": 15, "885k": 8, "8906752411575563": 6, "8994": 8, "8996": 10, "8k": 8, "9": [1, 6, 8, 9, 10, 13, 14, 15, 16, 17, 19, 21, 22, 23, 32, 33, 39, 40, 64, 65, 72, 102, 105, 111, 112], "90": [19, 112], "909967845659164": 9, "915": [15, 20, 116], "9184": 112, "9193": 112, "91m": 8, "9216": 10, "9228295819935691": 8, "929": [19, 68], "9292604501607717": [6, 8], "9344222024083138": 10, "942": [19, 68], "95625": [113, 115], "9579": 9, "96": 19, "9610814126500358": [14, 15], "9678456591639871": 9, "96mb": 8, "97": [8, 14, 112], "972": 5, "975": [113, 115], "98": [8, 13, 18, 25], "983": [10, 11, 116], "9875": 16, "99": [14, 15, 18], "9919": 9, "999c81": 23, "9k": 8, "A": [2, 3, 14, 15, 17, 18, 22, 23, 29, 32, 33, 34, 39, 40, 43, 46, 47, 48, 49, 56, 57, 62, 64, 66, 68, 72, 74, 75, 76, 79, 80, 82, 84, 86, 88, 94, 95, 96, 98, 101, 108, 109, 112, 113], "As": [13, 19, 26], "At": [13, 29, 72], "But": 21, "By": [69, 70, 71, 72, 73, 93], "For": [18, 21, 26, 29, 43, 54, 55, 93, 112, 113], "If": [7, 21, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 54, 55, 56, 57, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 102, 104, 108, 109, 111, 112, 113], "In": [7, 8, 10, 15, 18, 19, 21, 23, 29, 30, 31, 37, 38, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 111, 112, 113, 114, 115], "It": [7, 21, 29, 34, 66, 67, 69, 70, 71, 72, 73, 86, 94, 97, 113], "Its": [18, 44, 45, 113], "No": [1, 25], "On": [7, 10, 15], "One": [1, 21, 69, 73, 103, 112], "Such": [18, 113], "The": [1, 2, 3, 4, 7, 13, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 115], "Then": [17, 21, 25, 27, 94], "These": [18, 29], "To": [6, 8, 9, 10, 19, 22, 25, 69, 97, 113, 115], "Will": [18, 19, 72], "With": 113, "_": [2, 3, 13, 25, 26, 27, 31, 74, 75, 76, 79, 86, 88, 89, 99, 100, 111, 113], "__init__": [15, 22], "__name__": 26, "__version__": 29, "_barycent": 15, "_call_impl": 6, "_domain": 114, "_mnist_usp": [6, 8, 9, 10], "_mode": 10, "_params_to_valid": 10, "_self_label": 13, "_sign": [97, 98], "_sinkhorn": 17, "_subspac": 19, "ab": [19, 23], "abl": 14, "abort": 29, "about": [13, 29], "abov": [29, 69], "absenc": 113, "absolut": [13, 102, 113], "ac": 18, "acc": [14, 15, 17], "acc_": [14, 15], "acc_classreg": 17, "acc_linear": 17, "acc_s_jcpot": 15, "acc_sinkhorn": 17, "acc_sourc": 17, "acc_t": [14, 15], "acc_target": 17, "accept": [29, 54, 55, 93, 113], "access": [58, 61, 113], "accord": 76, "account": [18, 29, 113], "accur": [19, 95, 112], "accuraci": [10, 14, 15, 16, 17, 18, 19, 21, 22, 25, 97, 112], "achiev": 113, "acquisit": 114, "across": [19, 44, 45, 62, 63, 70, 71, 72, 73, 95], "act": [7, 113], "activ": 112, "ad": [13, 19, 29, 34, 36, 38, 42, 45, 47, 48, 49, 53, 54, 55, 58, 59, 60, 61, 69, 70, 71, 72, 73, 75, 78, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114], "adam": 10, "adapt": [0, 11, 14, 15, 20, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 114, 116], "add": [7, 29, 69, 114], "add_ax": 3, "add_domain": [69, 113], "add_weight": 7, "addit": [29, 54, 55, 108, 113], "address": 29, "advanc": [14, 30, 31, 112], "advantag": 93, "adversari": [11, 12, 69, 76, 77, 79, 87, 112, 116], "affect": [54, 55], "after": 113, "again": 21, "aggreg": [69, 97], "aim": 19, "aism": 18, "ajakan": 112, "al": [18, 19, 44, 45, 50, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79, 86, 87, 89, 95, 96, 97, 98, 99, 100], "alain": 112, "alaiz": [2, 3, 72], "alexandr": 112, "algorithm": [13, 15, 22, 29, 32, 33, 34, 39, 40, 54, 55, 56, 57, 66, 67, 68, 86, 87, 113], "alia": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "align": [8, 12, 14, 20, 22, 30, 31, 48, 49, 62, 63, 72, 80, 81, 90, 93, 99, 107, 112, 114, 116], "all": [4, 7, 12, 16, 19, 21, 26, 29, 34, 54, 55, 62, 63, 69, 70, 71, 72, 73, 106, 107, 108, 112, 113, 116], "allow": [21, 29, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 69, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114], "allow_auto_sample_domain": 108, "allow_common_domain_idx": 108, "allow_label_mask": 108, "allow_multi_sourc": 108, "allow_multi_target": 108, "allow_nd": 108, "allow_sourc": [16, 17, 19, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 108, 114], "allow_target": 108, "along": 43, "alpha": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 22, 23, 27, 43, 98], "alpha_": [45, 53], "alreadi": [93, 113], "also": [7, 10, 14, 15, 16, 17, 21, 25, 26, 29, 76, 79, 86, 102, 112, 113], "altern": 29, "alternat": 43, "although": [76, 79, 86], "alwai": [29, 69, 70, 71, 72, 73, 97, 103, 113], "amazon": 113, "ambrois": 112, "ambroiseodt": 114, "among": [70, 71, 72, 73], "amsterdam": 112, "an": [6, 17, 18, 19, 21, 29, 36, 38, 42, 44, 45, 47, 53, 54, 55, 58, 59, 60, 61, 62, 63, 70, 71, 72, 73, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 115], "anal": 112, "analogi": 113, "analysi": [17, 29, 32, 33, 34, 39, 40, 48, 56, 57, 64, 65, 94, 112], "angl": 23, "angle_step": 23, "ani": [7, 13, 18, 21, 29, 34, 43, 97, 112, 113], "annal": [18, 112], "anoth": [29, 69], "antoin": [18, 19, 112], "antoinecolla": [19, 114], "antoinedemathelin": 114, "api": [21, 29, 112, 113, 115], "apmellot": 114, "apollin": 112, "append": 23, "appli": [99, 114], "applic": [18, 44, 45, 112], "appreci": 29, "approach": [18, 43, 53, 97], "appropri": [29, 54, 55], "approv": 29, "approxim": [18, 38, 41, 42], "ar": [2, 3, 7, 13, 15, 17, 18, 19, 21, 25, 26, 29, 30, 31, 36, 38, 42, 45, 46, 47, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 84, 86, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 115], "arang": 26, "arbitrari": [54, 55], "architectur": 86, "area": 29, "arecriterion": 10, "arg": [6, 114], "argmin": 23, "argument": [6, 7, 54, 55, 113], "around": 113, "arrai": [7, 13, 18, 21, 23, 26, 31, 36, 38, 42, 44, 45, 47, 51, 52, 53, 54, 55, 65, 69, 70, 71, 72, 73, 74, 75, 78, 88, 89, 95, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 115], "array_lik": [70, 71, 72, 73], "artifici": 112, "arxiv": [49, 112], "as_integer_ratio": 43, "as_sourc": [6, 8, 9, 10, 19, 22, 25, 26, 27, 69, 113], "as_target": [6, 8, 9, 10, 19, 22, 25, 26, 27, 69, 113], "aset": 10, "ask": 29, "assign": [69, 108, 113], "assist": 29, "associ": [7, 69, 70, 71, 72, 73], "assum": [18, 19, 43, 54, 55], "assume_cent": [22, 30, 31, 80, 81, 90], "assumpt": [18, 53], "attempt": [54, 55], "attribut": [7, 31, 33, 36, 38, 40, 42, 43, 45, 47, 49, 51, 53, 57, 63, 65, 67, 69, 70, 71, 72, 73, 93, 96, 98], "author": [3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 112], "auto": [10, 21, 22, 30, 31, 41, 42, 54, 55], "auto_exampl": [5, 11, 20, 24, 28], "auto_examples_jupyt": 12, "auto_examples_python": 12, "autogener": 69, "automat": [7, 21, 25, 29, 30, 31, 41, 42, 93, 102, 108, 113], "autumn": [3, 13], "avail": [17, 21, 29, 46, 47, 69, 93, 112, 113, 115], "averag": [16, 97, 98], "avoid": [29, 39, 40, 56, 57, 95, 108, 113, 115], "awai": [54, 55], "awar": [11, 12, 69, 72, 113, 116], "ax": [4, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "axi": [13, 14, 15, 16, 17, 21, 23], "axvlin": 25, "b": [8, 18, 19, 29, 46, 47, 51, 68, 105, 112, 113], "b_": 51, "back": 29, "backward": 10, "badg": 114, "bai": 112, "balanced_accuracy_scor": 94, "ball_tre": [54, 55], "balltre": [54, 55], "band": [13, 73], "band_siz": [4, 73], "bandwidth": [18, 22], "baochen": [8, 30, 31, 80, 81, 90, 112], "barh": 25, "barnech": 7, "barycent": 112, "base": [7, 10, 13, 14, 17, 18, 19, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 68, 74, 76, 79, 80, 82, 83, 84, 86, 88, 89, 94, 95, 96, 99, 100, 111, 112, 113], "base_classifi": [18, 19], "base_criterion": [74, 76, 79, 80, 82, 84, 86, 114], "base_estim": [13, 14, 18, 21, 22, 25, 27, 30, 32, 34, 35, 37, 39, 41, 43, 44, 46, 48, 50, 52, 54, 56, 58, 59, 60, 61, 62, 64, 66, 68, 93, 113, 115], "base_method": [22, 68], "base_module_": 10, "baseadapt": 113, "baseestim": [34, 58, 59, 60, 61, 93], "baseselector": 93, "basura": [19, 62, 63], "batch": 114, "batch_siz": [6, 8, 9, 10], "batchnormfix2": 114, "bbox_inch": 23, "bceloss": [76, 77, 79], "becaus": [15, 113, 115], "been": [6, 13, 112], "befor": [15, 22, 29, 30, 31, 32, 33, 39, 40, 44, 45, 46, 47, 50, 51, 52, 53, 56, 57, 66, 67, 68, 80, 81, 90, 93], "behav": 26, "behavior": [12, 28, 29, 43, 69, 72, 102, 103, 104, 105, 116], "being": [29, 111, 113], "belong": [69, 109], "below": [17, 21, 69, 70, 71, 72, 73, 112, 113, 115], "benchmark": [0, 29], "benefit": [29, 112], "benjamin": [82, 83, 91], "best": [21, 27, 29, 44, 45, 113, 115], "best_estimator_": 27, "best_gamma_": 45, "best_params_": [21, 27], "best_reg_": 27, "beta": 53, "better": [14, 97, 98], "between": [14, 15, 17, 25, 29, 30, 31, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 64, 65, 66, 67, 68, 77, 78, 81, 83, 87, 94, 95, 100, 102, 113, 115], "bezier_curv": 23, "bf": 23, "bharath": [82, 83, 91], "bhushan": [82, 83, 91], "bia": [2, 3, 10, 18, 22, 46, 47, 48, 49, 51, 72, 112], "bibtex": 112, "binari": [22, 25, 26, 27, 72, 113, 115], "bit": 113, "black": [13, 23], "blob": 71, "block": [29, 113], "blue": 26, "bo": 112, "bonu": 29, "bool": [30, 31, 34, 36, 38, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 58, 59, 60, 61, 67, 68, 69, 71, 72, 80, 81, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109], "boolean": [69, 70, 71, 72, 73, 110], "borgwardt": [18, 46, 47, 112], "both": [7, 18, 19, 53, 98, 102, 112, 113], "bottom": [1, 2, 3, 4], "bound": [46, 47, 49, 112], "boundari": [13, 14, 15, 16, 22, 54, 55], "branch": 29, "break_ti": 22, "bregman": [15, 17, 19, 68, 112], "bridg": [86, 87, 112], "bring": 114, "broad": 29, "browser": 29, "brute": [54, 55], "bruzzon": [34, 94, 112], "bsd": [3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 112], "bueno": [3, 13, 18, 19, 112], "bug": 114, "build": [29, 113], "built": [10, 113], "bunch": [69, 70, 71, 72, 73, 113], "butscher": [15, 112], "button": 29, "b\u00e9zier": 23, "b\u00fcnau": [18, 112], "c": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26, 27, 112], "c0": 14, "c1": 14, "c7": 17, "c84630": 23, "c_": [14, 15], "cach": 93, "cache_s": 22, "calcul": [72, 75, 78, 85, 88, 89, 92], "call": [1, 2, 3, 4, 6, 17, 21, 22, 44, 45, 62, 63, 70, 71, 72, 73, 95, 103, 113], "callabl": [54, 55, 93, 94, 95, 96, 98, 101], "callb": 10, "callback": [10, 74, 114], "callbacks__epoch_tim": 10, "callbacks__print_log": 10, "callbacks__print_log__floatfmt": 10, "callbacks__print_log__keys_ignor": 10, "callbacks__print_log__sink": 10, "callbacks__print_log__stralign": 10, "callbacks__print_log__tablefmt": 10, "callbacks__train_loss": 10, "callbacks__train_loss__lower_is_bett": 10, "callbacks__train_loss__nam": 10, "callbacks__train_loss__on_train": 10, "callbacks__valid_acc": 10, "callbacks__valid_acc__lower_is_bett": 10, "callbacks__valid_acc__nam": 10, "callbacks__valid_acc__on_train": 10, "callbacks__valid_acc__scor": 10, "callbacks__valid_acc__target_extractor": 10, "callbacks__valid_acc__use_cach": 10, "callbacks__valid_loss": 10, "callbacks__valid_loss__lower_is_bett": 10, "callbacks__valid_loss__nam": 10, "callbacks__valid_loss__on_train": 10, "came": 13, "can": [7, 13, 14, 15, 17, 21, 26, 27, 29, 34, 39, 40, 43, 54, 55, 56, 57, 69, 75, 103, 108, 112, 113, 114, 115], "cannot": 93, "cao": 112, "captur": 77, "carri": [22, 69], "case": [7, 13, 14, 15, 18, 19, 21, 29, 54, 55, 94, 95, 96, 99, 100, 101, 113, 114], "cast": 112, "categor": [70, 71, 72, 73], "caution": 69, "cavazza": 112, "cax": 3, "cb": 3, "cbar_ax": 3, "cd": 29, "cdan": [77, 112], "cdd": 75, "ceil_mod": 10, "cell": 10, "center": [26, 30, 31, 44, 45, 70, 71, 72, 80, 81, 90], "center_cov_shift": 72, "centers_": 45, "centroid": [74, 75, 88, 114], "chain": 93, "chan": 4, "chanc": [113, 115], "chang": [6, 7, 14, 29, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112], "changelog": 114, "channel": 73, "chawla": [2, 3, 72], "check": [29, 114], "check_": 114, "check_result": [15, 22], "checkout": 29, "chen": 112, "choic": [6, 21, 113], "choos": [21, 44, 45, 72], "chosen": [45, 75], "circl": 13, "circleci": [1, 6, 8, 9, 10, 13, 15, 17, 18, 19, 21, 22], "circular": [34, 94, 112], "citat": 112, "cite": 112, "citeseerx": 112, "clariti": 113, "class": [4, 10, 15, 17, 21, 22, 26, 32, 33, 34, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113], "class_threshold": [74, 75, 88], "class_weight": 22, "classic": 19, "classif": [2, 3, 6, 8, 9, 10, 12, 17, 24, 25, 27, 30, 32, 34, 35, 37, 39, 41, 44, 48, 50, 52, 54, 55, 56, 62, 64, 68, 69, 72, 94, 112, 116], "classifi": [12, 17, 18, 19, 20, 22, 34, 37, 38, 43, 70, 72, 76, 77, 79, 86, 95, 107, 112, 116], "classificationtechniqu": 112, "classregularizedotmap": 32, "classregularizerotmap": 22, "classregularizerotmappingadapt": [17, 22, 113], "claus": [3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 112], "clf": [14, 15, 16, 17, 18, 19, 21, 22], "clf_jcpot": 15, "clf_on_subspac": 19, "clf_otda": 17, "clf_otda_linear": 17, "clf_otda_sinkhorn": 17, "clf_otds_classreg": 17, "click": 29, "clone": [6, 8, 9, 10, 13, 19, 22, 29, 93, 113], "close": 13, "closer": [18, 54, 55], "closest": [23, 113], "closest_point": 23, "cluster": [70, 71, 72, 73, 75, 88, 98], "cluster_std": 71, "cm": [18, 19, 22, 26], "cm_bright": 22, "cmap": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26], "cmap_cv": 26, "cmap_data": 26, "cmap_domain": 26, "co": 23, "code": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 112, 113], "coef0": [22, 46, 47], "colla": [19, 112], "collabor": [29, 112], "collect": [74, 76, 79, 80, 82, 84, 86], "color": [13, 18, 19, 22, 23, 25, 26], "color_": 23, "color_0": 23, "color_1": 23, "color_unlabel": 23, "colorbar": 3, "colormap": [1, 18, 19], "com": [18, 19, 29, 112, 114], "comb": 23, "combin": [7, 113], "come": [26, 29, 102], "command": 29, "commit": 29, "committ": 29, "common": [29, 113], "compar": [14, 25, 29, 113, 114], "comparison": [12, 24, 30, 32, 35, 37, 39, 41, 44, 48, 50, 52, 54, 56, 62, 64, 68, 69, 72, 116], "compat": [21, 69, 97, 103, 112, 113, 114], "compil": 10, "complement": 102, "complet": [29, 93, 114], "compli": 29, "complic": 113, "compon": [62, 63, 64, 65, 66, 67, 68, 112], "compos": [26, 102], "compromis": 29, "comput": [14, 15, 17, 18, 19, 23, 25, 30, 31, 44, 45, 53, 54, 55, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 100, 101, 112, 113, 114], "compute_weight": 18, "con": 112, "concaten": [7, 13, 113], "concentr": [29, 49, 112], "concept": 113, "condit": [2, 3, 21, 50, 51, 52, 53, 72, 76, 77, 112], "conditional_shift": [2, 3, 14, 15, 16, 17, 21, 22, 25, 26, 27, 72], "confer": [15, 19, 62, 63, 66, 67, 74, 75, 82, 83, 86, 87, 88, 91, 100, 112], "confus": [84, 85, 92, 112], "consid": [29, 54, 55, 74, 75, 88, 111, 113], "consider": 113, "consist": [1, 2, 3, 4, 13, 29, 97, 98], "constant": [19, 66, 67, 72, 75, 78, 85, 88, 89, 92, 95], "construct": [6, 8, 9, 10, 19, 22, 54, 55, 93], "constructor": 93, "consum": 93, "contact": 19, "contain": [7, 30, 32, 35, 37, 39, 41, 44, 46, 48, 50, 52, 54, 55, 56, 62, 64, 66, 68, 69, 106, 107, 111, 113], "context": [54, 55], "contour": 18, "contrast": [74, 75, 88, 112], "contribut": 112, "contributor": 114, "control": [23, 98, 102], "conv1": 10, "conv2": 10, "conv2d": 10, "convei": 22, "conveni": 113, "convent": [69, 70, 71, 72, 73, 113], "converg": [15, 17, 22, 32, 33, 39, 40, 43, 56, 57], "convolut": 112, "coolwarm": 26, "copi": [6, 8, 9, 10, 19, 22, 29, 93], "coral": [8, 21, 22, 50, 80, 81, 90, 112, 114], "coraladapt": [21, 22, 112, 113], "coraladapter__reg": [21, 112], "core": [29, 113], "correct": [18, 29, 46, 47, 112], "correl": [8, 30, 31, 80, 81, 90, 99, 112], "correspond": [7, 15, 43, 73, 109], "could": [17, 69, 113], "count": 18, "coupl": [106, 107], "coupling_": 17, "courti": [14, 17, 32, 33, 39, 40, 43, 48, 56, 57, 82, 83, 91, 112], "cov_source_": 42, "cov_source_inv_sqrt_": 31, "cov_target_": 42, "cov_target_sqrt_": 31, "covari": [2, 3, 12, 13, 20, 30, 31, 35, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 54, 68, 72, 81, 96, 107, 110, 112, 116], "covariate_shift": [2, 3, 22, 72, 113, 115], "cover": 113, "coverag": 29, "cpu": 10, "creat": [7, 10, 13, 18, 19, 21, 23, 25, 26, 27, 29, 76, 79, 86, 91, 98, 112, 113], "creation": [44, 45, 62, 63, 70, 71, 72, 73], "criterion": [6, 8, 9, 10, 44, 45, 46, 47, 50, 51, 52, 53, 74, 76, 77, 79, 80, 82, 83, 84, 86, 91], "criterion__adapt_criterion": 10, "criterion__base_criterion": 10, "criterion__reg": 10, "cross": [12, 25, 27, 28, 44, 45, 69, 72, 95, 96, 102, 103, 104, 105, 112, 113, 116], "cross_entropy_loss": 95, "cross_val_scor": [12, 21, 28, 39, 69, 72, 93, 101, 107, 112, 113, 115, 116], "cross_valid": 113, "crosscovari": 77, "crossentropyloss": [6, 8, 9, 10, 74, 76, 79, 80, 82, 84, 86, 91], "cuda": 10, "current": [13, 29, 112], "curv": 23, "custom": [69, 93], "cv": [21, 22, 25, 26, 27, 44, 45, 103, 112, 113, 114, 115], "cv_arg": 26, "cv_results_": 27, "cvf": [74, 75, 88, 112], "cvpr": [19, 66, 67, 112], "d": [17, 19, 22, 23, 32, 33, 39, 40, 48, 56, 57, 68, 112], "da": [9, 11, 13, 15, 18, 19, 24, 25, 26, 27, 30, 32, 35, 37, 39, 41, 44, 48, 50, 52, 54, 56, 62, 64, 68, 69, 72, 74, 76, 79, 80, 81, 82, 84, 86, 108, 114, 115, 116], "da_dataset": 113, "da_shufflesplit": 105, "daestim": 0, "damodaran": [82, 83, 91, 112], "dan": [78, 112, 114], "dann": 112, "dapeng": 98, "darrel": 112, "dasvm": [12, 20, 34, 70, 94, 107, 112, 116], "data": [1, 2, 3, 4, 13, 18, 19, 21, 22, 25, 26, 29, 30, 31, 33, 36, 38, 40, 42, 45, 46, 47, 49, 51, 53, 55, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 80, 81, 88, 90, 91, 95, 96, 97, 102, 103, 104, 106, 107, 111, 112, 113, 115], "datafram": 7, "dataload": 10, "datapoint": 13, "datas": 26, "dataset": [5, 11, 20, 22, 25, 26, 27, 30, 32, 35, 37, 39, 41, 44, 45, 46, 47, 48, 50, 54, 56, 62, 63, 64, 66, 68, 99, 100, 101, 102, 103, 107, 110, 115, 116], "dataset2": [7, 26], "dataset_from_df": 7, "dataset_from_dict": 7, "dataset_from_list": 7, "dataset_from_tensor": 7, "dataset_from_tupl": 7, "dataset_with_weight": 7, "dataset_with_weights_from_dict": 7, "de": [18, 112], "deal": [19, 113], "decid": [54, 55], "decis": [13, 14, 15, 16, 22, 54, 55], "decision_boundari": 13, "decision_funct": [13, 34, 58, 59, 60, 61], "decision_function_shap": 22, "decisionboundarydisplai": [17, 18, 19, 22, 27], "decomposit": 21, "deep": [6, 8, 9, 11, 72, 95, 99, 113, 114, 116], "deepcor": [10, 81, 90, 92, 112, 114], "deepcoralloss": 10, "deepdadataset": 7, "deepjdot": [83, 91, 112, 114], "def": [2, 3, 16, 18, 19, 23, 26], "default": [14, 18, 21, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113], "default_selector": [21, 93], "defin": [18, 23, 26, 44, 45, 54, 55, 88, 89, 113, 115], "degre": [22, 46, 47], "delta_f": [4, 73], "demonstr": [29, 113], "deng": 112, "densiti": [22, 35, 36, 45, 47, 53, 54, 96, 100, 112], "densityratio": 112, "densityreweight": [18, 22, 52, 54, 113, 115], "densityreweightadapt": [22, 113], "depend": [26, 54, 55, 97, 102, 111, 112], "deprec": [6, 13, 15, 21, 22], "deriv": [18, 113], "describ": [19, 29, 69, 75], "descript": [2, 3, 29, 69, 70, 71, 72, 73, 113], "design": [21, 104, 113, 114], "desir": 29, "detach": [6, 8, 9, 10, 19, 22], "detail": [2, 3, 18, 19, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 67, 69, 72, 87, 94, 95, 96, 97, 98, 99, 100, 112, 113], "determin": [44, 45, 62, 63, 70, 71, 72, 73, 95, 97], "dev": [112, 114], "develop": [29, 112], "devi": [82, 83, 91, 112], "deviat": [70, 71, 72, 73], "devic": 10, "df": 7, "diagon": [48, 49], "dict": [7, 18, 19, 54, 55, 69, 70, 71, 72, 73, 106, 109], "dict_kei": 113, "dict_raw_data": 7, "dictionari": [7, 21, 69, 70, 71, 72, 73, 109, 113], "did": [15, 17, 22], "differ": [13, 15, 21, 22, 26, 53, 67, 68, 73, 103, 113, 115], "dilat": 10, "dim": 6, "dimens": [6, 7], "dimension": [19, 108], "ding": [19, 66, 67, 112], "direct": [18, 44, 45, 112], "directli": [27, 93, 97], "directori": [29, 93], "disc_classifi": 86, "discard": [34, 74, 75, 88], "discr": 22, "discrep": [19, 47, 51, 53, 75, 83, 86, 87, 88], "discrimin": [37, 86, 87, 112], "discriminatorreweight": [18, 22], "discriminatorreweightadapt": [22, 113], "discuss": 112, "disi": 112, "disk": 29, "dispar": [86, 87], "dissimilar": 114, "distanc": [54, 55, 57, 65, 74, 75, 78, 81, 82, 83, 85, 88, 89, 91, 92], "distance_metr": [54, 55], "distance_threshold": [74, 75, 88], "distinct": 113, "distribut": [1, 2, 3, 4, 13, 14, 17, 18, 19, 22, 26, 43, 49, 53, 72, 82, 83, 91, 97, 112, 113, 115], "diverg": [11, 12, 18, 19, 45, 47, 53, 68, 69, 77, 80, 83, 91, 112, 116], "divid": [71, 90, 92], "do": [13, 25, 27, 29, 97, 113, 114, 115], "doc": [29, 114], "docstr": [29, 105, 114], "doctest": 29, "document": [26, 54, 55, 96, 98, 101, 112, 114], "doe": [15, 21, 22, 29, 93, 113, 115], "doesn": [54, 55], "doi": 112, "domain": [0, 5, 11, 14, 15, 20, 21, 26, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116], "domain_1_sampl": 7, "domain_classifi": [22, 37, 38, 76, 79, 86, 95], "domain_classifier_": 38, "domain_criterion": [76, 77, 79], "domain_label": 58, "domain_nam": [69, 70, 71, 72, 73, 113], "domain_names_": 69, "domain_pred_": [75, 77, 87], "domain_pred_t": [75, 77, 87], "domain_sourc": 1, "domain_target": 1, "domainandlabelstratifiedsubsampletransform": 114, "domainawar": 113, "domainawarecriterion": 10, "domainawaredataset": [70, 71, 72, 73, 113], "domainawareestim": 113, "domainawaremodul": 10, "domainawarenet": [10, 114], "domainawarenetifit": 10, "domainbalanceddataload": 10, "domainonlydataload": 114, "domainonlysampl": 114, "domains_": 69, "domains_idx": 109, "domainshufflesplit": 26, "domainstratifiedsubsampletransform": 114, "domainsubsampl": 114, "don": 113, "done": [15, 17, 21, 23, 25, 112, 113, 115], "dot": 23, "dots_class": 23, "dots_keep": 23, "dots_rot": 23, "download": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "dpi": 23, "draw_": 23, "drawn": 26, "dropout": 10, "dropout1": 10, "dropout2": 10, "ds_cnt": 22, "dslr": 113, "dtype": [19, 22], "due": [14, 15, 16], "duplic": 29, "dur": [6, 8, 9, 10], "dure": [21, 27, 54, 55, 69, 74, 76, 79, 80, 82, 84, 86, 113], "dynam": 69, "e": [13, 19, 36, 38, 42, 43, 45, 47, 53, 55, 58, 59, 60, 61, 76, 77, 79, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112], "each": [1, 2, 3, 4, 21, 26, 34, 36, 38, 42, 43, 45, 47, 53, 54, 55, 58, 59, 60, 61, 67, 69, 70, 71, 72, 73, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "earth": 57, "easier": 113, "eccv": [8, 80, 81, 82, 83, 84, 85, 90, 91, 92, 112], "eddataload": 10, "edg": 114, "edit": 29, "editor": 29, "editsec": 18, "edu": [3, 18, 19, 112], "eduardo": 112, "effect": [18, 19, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113], "effici": [54, 55], "eigenvalu": 19, "eigenvector": [19, 65], "eigvects_": 65, "either": [7, 71], "elaps": 93, "element": [7, 54, 55, 70, 71, 72, 73], "elig": 29, "els": [10, 13, 18, 19, 22, 23, 97], "email": 29, "embed": [76, 112], "emd": 23, "empir": 49, "empti": [111, 114], "enabl": [69, 93], "enable_metadata_rout": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "encapsul": 93, "encod": [21, 87], "end": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 72], "engin": [19, 68, 112], "enhanc": [29, 114], "ensur": [1, 2, 3, 4, 18, 22, 29, 69, 97], "ensure_all_finit": [13, 15, 21, 22], "entiti": 113, "entitl": [54, 55], "entrop": [22, 32, 33, 39, 40], "entropi": [21, 27, 95, 99, 100, 112], "entropicotmap": [22, 25, 27, 113, 115], "entropicotmappingadapt": [17, 22, 113], "entropicotmappingadapter__reg_": 27, "enumer": [22, 23, 26, 105], "environ": 10, "ep": [17, 18, 19, 22, 27, 46, 47, 75, 78, 85, 88, 89, 92], "epoch": [6, 8, 9, 10], "epsilon": [13, 95, 114], "eq": [97, 100], "equal": [53, 54, 55, 64, 65, 66, 67, 68, 71], "equip": [13, 34], "equival": [54, 55, 69], "error": [21, 29, 32, 33, 36, 38, 39, 40, 42, 45, 47, 53, 55, 56, 57, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112], "estim": [13, 14, 15, 18, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 68, 69, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 115], "estimator_": 43, "estimator_no_da": 25, "et": [18, 19, 44, 45, 50, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79, 86, 87, 89, 95, 96, 97, 98, 99, 100], "etc": [13, 29, 112], "euclidean": [54, 55], "euclidean_dist": [54, 55], "european": [82, 83, 91, 112], "evalu": [14, 15, 16, 25, 27, 96, 98, 101, 113, 115], "even": [43, 93, 111, 113], "everi": [29, 71], "evolut": 13, "exact": 94, "exactli": 113, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 55, 111, 113, 116], "except": [29, 106, 107], "execut": [5, 11, 20, 24, 28, 113, 116], "exercis": 69, "exist": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 72, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "expect": [29, 54, 55], "experienc": 29, "explan": 29, "explicit": 113, "exploit": 112, "explor": 19, "expos": 113, "extent": [14, 15], "extract": [109, 110], "extract_source_indic": 18, "extractor": [79, 86], "f": [1, 2, 3, 4, 13, 14, 15, 17, 18, 19, 21, 25, 26, 27, 72, 105, 112], "factori": 23, "fail": [29, 113], "fals": [6, 8, 9, 10, 18, 19, 22, 23, 25, 26, 30, 31, 34, 36, 38, 42, 43, 45, 46, 47, 53, 54, 55, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 80, 81, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 113], "famili": 23, "far": [74, 75, 88], "fc1": [6, 8, 9, 10], "fc2": 10, "featur": [1, 2, 3, 17, 18, 19, 29, 43, 66, 67, 69, 71, 75, 77, 78, 79, 81, 86, 88, 89, 90, 91, 95, 103, 106, 107, 108, 112, 114], "features_": [75, 77, 78, 81, 83, 88, 89, 91], "features_t": [75, 77, 78, 81, 83, 88, 89, 91], "features_target": 90, "feel": [29, 112, 113], "fei": 112, "fellow": 112, "feng": [30, 31, 112], "feofanov": 112, "fernand": 112, "fernando": [19, 62, 63, 112], "ferrari": [49, 112], "fetch": 113, "fetch_all_office31_surf": 113, "fetch_office31_surf_al": 113, "fetcher": 113, "few": [112, 113], "ff0000": 22, "ffa056": [18, 19], "fig": [1, 2, 3, 4, 23, 26], "figsiz": [1, 2, 3, 4, 13, 17, 18, 19, 22, 23, 25, 26], "figur": [13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 29], "file": [5, 11, 12, 20, 24, 28, 116], "fill": 26, "filterwarn": 27, "final": [21, 22, 68, 112], "final_angl": 23, "financ": 112, "find": [15, 18, 27, 45, 47, 51, 53], "first": [7, 13, 18, 22, 25, 26, 27, 29, 104, 111, 112, 113], "first_five_sampl": 7, "first_sampl": 7, "fisher": 19, "fit": [6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 93, 96, 112, 113, 115], "fit_param": [113, 115], "fit_predict": 113, "fit_transform": 15, "five": 7, "fix": [29, 30, 31, 41, 42, 43, 68, 71, 114], "fixtur": 114, "flamari": [14, 15, 16, 17, 21, 32, 33, 39, 40, 43, 48, 49, 56, 57, 82, 83, 91, 112], "flda": [22, 68], "flip": [94, 95, 96, 99, 100, 101], "float": [30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 97, 98, 99, 100, 102], "float64": [14, 15, 16, 17, 19, 22], "florent": 112, "flow": 113, "fluctuat": 113, "fly": 113, "fold": [26, 44, 45, 102, 105], "folder": 29, "follow": [17, 18, 19, 21, 26, 29, 69, 70, 71, 72, 73, 76, 79, 86, 87, 97, 104, 112, 113], "font": 23, "fontsiz": [1, 2, 3, 13, 18, 19, 23, 26], "forc": [54, 55], "force_all_finit": [13, 15, 21, 22], "fork": 29, "form": [26, 93, 94, 104], "format": [26, 29, 69, 112], "former": 7, "forward": [10, 75, 77, 78, 81, 83, 85, 87], "found": [29, 113], "four": 7, "fr": 19, "framework": [112, 113], "frank": [18, 46, 47], "fred": 112, "free": [29, 112, 113], "frequenc": [4, 73], "friend": 29, "frobeniu": [90, 92], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 88, 93, 98, 102, 105, 111, 112, 113, 115, 116], "from_estim": [17, 18, 19, 22, 27], "full": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 112, 114], "function": [10, 18, 19, 21, 26, 29, 37, 38, 41, 42, 43, 44, 45, 46, 47, 54, 55, 62, 63, 70, 71, 72, 73, 85, 93, 94, 95, 96, 98, 99, 100, 101, 112, 113, 114, 115], "further": [13, 29, 54, 55], "futurewarn": [13, 15, 21, 22], "g": [2, 3, 17, 19, 36, 38, 42, 43, 45, 47, 53, 55, 58, 59, 60, 61, 66, 67, 72, 74, 75, 76, 79, 86, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112], "g_": 51, "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 112, 116], "gamma": [18, 22, 44, 45, 46, 47, 50, 51, 52, 53, 72, 86, 87], "gang": 112, "ganin": [79, 112], "gaussian": [22, 38, 41, 42, 48, 49, 50, 51, 70, 71, 72, 73, 74, 75, 78, 88, 89, 112], "gaussiannb": 93, "gaussianreweight": [18, 21, 22], "gaussianreweightadapt": [21, 22, 112, 113], "gca": 17, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 21, 22, 24, 25, 26, 27, 29, 44, 45, 62, 63, 70, 71, 72, 73, 76, 79, 86, 95, 98, 103, 108, 112, 113, 114, 116], "geng": [19, 68, 112], "germain": 112, "get": [18, 21, 23, 113], "get_domain": [22, 69], "get_estim": [17, 18, 19, 58, 61], "get_multidomain_data": 16, "get_n_split": [103, 105], "gist": 29, "git": [29, 112], "github": [10, 29, 112, 114], "give": [17, 29], "given": [2, 3, 13, 36, 38, 39, 40, 42, 44, 45, 47, 53, 55, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113], "glad": 29, "glossari": [54, 55], "gmail": [18, 19], "gnassoun": [6, 8, 9, 10, 23, 112], "gnassounou2024skada": 112, "go": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 113], "goal": [13, 18, 19], "good": [29, 94, 95, 96, 99, 100, 101], "gradient": [10, 22, 68], "grai": [13, 15], "grain": 22, "gramfort": 112, "grant": 29, "graph": [54, 55, 112], "great": 29, "greater": [18, 22, 54, 55], "greater_is_bett": [94, 95, 96, 97, 98, 99, 100, 101], "greatli": 29, "grei": 1, "gretton": [18, 46, 47, 112], "grid": [27, 112], "grid_search": [21, 27, 112], "gridsearchcv": [12, 21, 28, 39, 69, 72, 96, 99, 112, 113, 115, 116], "ground": [32, 33, 39, 40, 56, 57], "group": 105, "gt": 10, "guarante": 43, "guess": 25, "guiba": [15, 112], "guid": [7, 29, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114], "guidelin": 29, "h": [18, 112], "h_": 51, "ha": [6, 7, 13, 26, 32, 33, 36, 38, 39, 40, 42, 45, 47, 53, 55, 56, 57, 58, 59, 60, 61, 76, 79, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113], "habrard": [14, 43, 112], "hand": [7, 29], "handl": [13, 21, 29, 114], "haobo": 112, "harder": 77, "harmon": 114, "hauptmann": [74, 75, 88, 112], "have": [7, 13, 19, 26, 29, 54, 55, 69, 70, 71, 72, 73, 86, 106, 107, 111, 113, 114, 115], "height": 113, "help": 29, "helper": [17, 113], "here": [2, 3, 13, 17, 21, 105, 112], "herrera": [2, 3, 72], "hide": 23, "hidetoshi": [18, 37, 38, 41, 42, 112], "hierarch": 104, "high": [29, 94, 95, 96, 99, 100, 101, 113, 115], "higher": [97, 98], "highest": 65, "highlight": 29, "hilbert": 19, "hing": [14, 22], "hisashi": 112, "ho": 112, "hold": 29, "home": [1, 6, 8, 9, 10, 13, 15, 17, 18, 19, 21, 22], "hook": 29, "horizontalalign": [18, 19, 22], "how": [12, 14, 15, 24, 26, 30, 31, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 72, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 112, 113, 116], "howev": 13, "hstack": 16, "html": [10, 29], "http": [18, 112, 114], "hu": [98, 112], "huang": [18, 46, 47, 112], "hyperparamet": 112, "i": [1, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 53, 54, 55, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 84, 85, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115], "ic": 98, "ice_typ": 98, "iclr": 99, "icml": [50, 51, 52, 53, 78, 89, 95], "idea": [17, 18, 45, 47, 53], "ident": [103, 106, 107], "identifi": 69, "idx": 18, "ieee": [17, 18, 19, 32, 33, 34, 39, 40, 48, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 74, 75, 88, 94, 112], "ievgen": 112, "ignor": [1, 27, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113], "ii": 26, "iii": 112, "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 16, 21, 22, 25, 26, 27, 29, 112], "imag": [113, 115], "impact": [54, 55], "implement": [18, 19, 29, 75, 97, 104, 113], "implicit": 6, "import": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 44, 45, 47, 53, 54, 55, 93, 96, 102, 105, 112, 113, 115], "importanceweightedscor": [27, 113, 114], "importantli": 21, "improv": [13, 18, 37, 38, 41, 42, 112, 114], "imshow": [14, 15], "in_featur": 10, "includ": [6, 21, 25, 27, 29, 69, 93, 102, 112, 113], "include_all_target": 113, "inclus": 29, "incomplet": 29, "incorrect": 69, "increas": [15, 17, 22], "independ": [19, 72], "index": [7, 26, 105, 108, 109, 112, 113, 114], "index_source_delet": 34, "index_target_ad": 34, "indic": [26, 29, 54, 55, 69, 70, 71, 72, 73, 102, 103, 104, 109, 110], "indices_source_delet": 13, "indices_target_ad": 13, "indx_sort": 26, "infer": [18, 37, 38, 41, 42, 97, 111, 112], "influenc": [54, 55], "inform": [14, 29, 43, 69, 112], "initi": [10, 69, 77, 113, 115], "inner": [32, 33], "inplac": 10, "input": [10, 18, 21, 45, 47, 53, 54, 55, 76, 79, 86, 106, 107, 108, 112, 114], "input_nam": [18, 22], "insid": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "inspect": [17, 18, 19, 22, 27, 93], "inspir": [29, 97], "instabl": 95, "instal": 29, "instanc": [7, 19, 21, 43, 44, 45, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 84, 86, 93, 95, 98, 102, 112], "instanti": [76, 79, 86], "instead": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114], "institut": [18, 112], "instruct": 29, "int": [32, 33, 34, 39, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 86, 88, 95, 97, 98, 102, 103, 105], "integ": [21, 69, 70, 71, 72, 73, 95, 103, 113], "integr": [93, 113], "intel": 112, "intellig": [17, 32, 33, 34, 39, 40, 48, 56, 57, 94, 112], "intend": 69, "inter": 98, "interest": 112, "interfac": [93, 113], "intern": [15, 18, 19, 54, 55, 62, 63, 69, 86, 87, 100, 112], "intra": 98, "introduc": [113, 114], "intuit": [22, 29], "invers": [31, 54, 55], "involv": 29, "io": 112, "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "is_avail": 10, "is_fit": 10, "ism": 18, "isotrop": 71, "issu": [29, 112, 114], "ist": 112, "item": [10, 18, 19, 29, 105], "iter": [10, 14, 15, 17, 22, 26, 32, 33, 34, 39, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 57, 66, 67, 68, 69, 102, 103, 113], "iterator_train": 10, "iterator_valid": 10, "its": [7, 14, 15, 16, 18, 45, 53, 69, 113], "itself": 7, "j": [2, 3, 13, 14, 15, 17, 18, 19, 46, 47, 66, 67, 72, 112], "januari": [15, 112], "jcpot": 114, "jcpotlabelpropadapt": 15, "jdot": [12, 20, 22, 43, 72, 107, 112, 116], "jdotclassifi": [14, 22], "jdotregressor": 14, "jialin": [19, 64, 65], "jianfeng": 112, "jiang": [74, 75, 88, 112], "jianmin": [84, 85, 92, 112], "jiashi": [30, 31, 112], "jin": [84, 85, 92, 112], "job": [54, 55, 113], "joblib": [54, 55, 93], "joint": [14, 43, 66, 67, 82, 83, 91, 112], "jordan": 112, "journal": [18, 37, 38, 41, 42, 79, 96, 112], "jp": 18, "junbo": 112, "june": 112, "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "just": [7, 22], "k": [13, 14, 18, 19, 23, 25, 34, 46, 47, 49, 112, 114], "k_": 65, "kachaiev": [18, 19, 112], "kachayev": [18, 19], "kaichao": 95, "kanamori": 112, "kang": [74, 75, 88, 112], "kashima": [18, 112], "kate": [8, 30, 31, 80, 81, 90, 112], "kawanab": [18, 112], "kd_tree": [54, 55], "kdtree": [54, 55], "keep": [29, 69], "kei": [7, 18, 19, 109, 113], "kellenberg": [82, 83, 91, 112], "kept": [62, 63], "kernel": [13, 14, 15, 17, 19, 22, 32, 44, 45, 46, 47, 50, 51, 52, 53, 64, 65, 66, 67, 68, 72, 74, 75, 78, 88, 89], "kernel_ridg": [14, 15], "kernel_s": 10, "kerneldens": [18, 22, 35, 36, 96], "kernelridg": [14, 15], "keyword": [54, 55], "kim": 112, "kind": 15, "kl": [18, 45], "klau": 112, "kliepreweight": [22, 45, 112], "kliepreweightadapt": [22, 113], "kmean": [75, 88], "kmmreweight": [18, 47, 112], "knn": [54, 55], "know": 13, "knowledg": [19, 29, 68, 112], "krauledat": 112, "krr": [14, 15], "kullback": [18, 45], "kun": [50, 51, 52, 53], "kuniaki": 100, "kwarg": [6, 34, 43, 45, 58, 59, 60, 61, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 95], "kwok": 112, "l": [15, 34, 74, 75, 88, 94, 112], "l1": [32, 33, 54, 55], "l1l2": [32, 33], "l2": [32, 33, 43, 54, 55], "l_p": [54, 55], "label": [2, 3, 4, 7, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 32, 33, 36, 38, 42, 43, 45, 47, 50, 51, 52, 53, 55, 58, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 88, 91, 93, 94, 95, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "label_1_sampl": 7, "lalou": [26, 112], "lambda": 7, "laplac": [54, 55], "laplace_smooth": [18, 22, 54, 55], "larg": [39, 40, 56, 57, 113], "largest": 76, "larochel": 112, "last": [21, 54, 79, 86, 93], "later": 7, "latter": [94, 95, 96, 99, 100, 101], "laviolett": 112, "layer": [74, 75, 76, 79, 80, 82, 84, 86], "layer_nam": [6, 8, 9, 10, 74, 76, 79, 80, 82, 84, 86], "lda": 19, "lead": 69, "leaf": [54, 55], "leaf_siz": [22, 54, 55], "leakag": 69, "learn": [14, 15, 18, 21, 26, 29, 43, 47, 51, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 78, 79, 86, 87, 89, 93, 96, 103, 113, 114, 115], "least": [29, 43, 105, 111], "leav": [69, 103], "leaveonedomainout": [26, 69, 113], "ledoit": [30, 31, 41, 42], "left": [13, 26], "legend": [4, 13, 14, 15, 16, 25, 26], "lei": 112, "leibler": [18, 45], "lemma": [30, 31, 41, 42], "lempitski": 112, "len": [13, 18, 19, 22, 23, 26, 107, 111], "length": [68, 71, 106, 107, 111], "length_scal": [22, 68], "length_step": 23, "less": [54, 55, 64, 65, 66, 67, 68], "let": [26, 113, 115], "level": 113, "lexsort": 26, "liang": 112, "lib": [6, 13, 15, 17, 18, 21, 22], "librari": [112, 113], "licens": [3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26], "liew": 112, "like": [7, 21, 29, 36, 38, 42, 44, 45, 47, 51, 52, 53, 55, 69, 70, 71, 72, 73, 74, 75, 78, 88, 89, 95, 97, 103, 106, 107, 108, 109, 110, 111, 113, 115], "likelihood": [18, 37, 38, 41, 42, 44, 45, 112], "lim": 17, "limit": 113, "line": 13, "line2d": 13, "linear": [10, 12, 13, 17, 20, 22, 48, 49, 51, 72, 93, 107, 112, 116], "linear_model": [14, 15, 16, 18, 21, 112, 113, 115], "linearmong": 112, "linearotmap": 22, "linearotmappingadapt": [17, 22, 113], "linearregress": 43, "linestyl": 25, "linewidth": 23, "link": 29, "linspac": [4, 13, 14, 15, 19, 23], "lint": 29, "list": [7, 13, 19, 26, 29, 43, 45, 54, 55, 69, 74, 93, 107, 111, 113], "listedcolormap": [18, 19, 22], "literatur": 29, "liu": 112, "live": 29, "ll": [26, 111], "load": [113, 115], "load_mnist_usp": [6, 8, 9, 10], "loc": [13, 22, 26], "local": [6, 13, 15, 17, 18, 21, 22, 29], "locat": [13, 51, 71], "lodo": 26, "log": [18, 37, 38, 39, 40, 41, 42, 56, 57, 112, 114], "logist": 15, "logisticregress": [13, 14, 15, 16, 18, 21, 22, 37, 38, 44, 46, 95, 112, 113, 115], "logit": 97, "loglog": [39, 40, 56, 57], "logo": [12, 24, 114, 116], "logreg": 15, "loison": 112, "long": [19, 66, 67, 76, 77, 78, 84, 85, 89, 92, 112], "longer": 113, "loog": [18, 112], "look": [18, 29, 113], "loop": [10, 32, 33, 112], "loss": [10, 14, 19, 43, 67, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 99, 100, 101, 114], "loss_fn": 10, "loss_func": 95, "loss_ot": 14, "loss_tgt_label": 14, "lounici": [49, 112], "low": [94, 95, 96, 99, 100, 101, 113], "lower": [13, 14, 15, 16, 19, 22], "lowercas": 93, "lp": [15, 22, 32, 33], "lpl1": [22, 32, 33], "lpp": 68, "lr": [6, 8, 9, 10], "lst_loss_ot_": 43, "lst_loss_tgt_labels_": 43, "lstrip": [18, 19, 22], "lt": 10, "lw": 26, "m": [18, 19, 34, 66, 67, 94, 112], "mach": 112, "machin": [15, 17, 18, 32, 33, 34, 39, 40, 48, 54, 55, 56, 57, 79, 86, 87, 94, 96, 112], "made": [102, 105], "magic": 29, "mai": [29, 54, 55, 103, 112], "mail": 29, "main": [13, 29], "maintain": 112, "make": [26, 29, 70, 73, 77, 103, 112, 113, 115], "make_da_pipelin": [15, 16, 17, 21, 25, 112, 113, 114], "make_dataset": [4, 22], "make_dataset_from_moons_distribut": [1, 13], "make_pipelin": 21, "make_shifted_dataset": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 113, 115], "make_variable_frequency_dataset": 4, "mandat": 113, "manhattan_dist": [54, 55], "manipul": 69, "manner": 29, "mano": [97, 112], "manpow": 112, "map": [17, 19, 22, 48, 49, 50, 51, 69, 112], "marconcini": [34, 94, 112], "margin": [13, 86, 87], "margin_lin": 13, "mark": [19, 113], "markdown": 29, "marker": [13, 16, 19, 23, 26, 113], "markers": 13, "masashi": [18, 44, 45, 96, 112], "mask": [26, 69, 113], "match": [14, 47, 66, 67, 112], "math": 23, "mathelin": [18, 112], "mathemat": [18, 29, 112], "matplotlib": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "matrix": [50, 51, 52, 53, 54, 55, 69, 72, 91, 97, 112], "mattia": 112, "matur": 29, "mauric": 112, "max": [3, 14, 17, 18, 19, 22, 23, 39, 40, 43, 56, 57, 114], "max_epoch": [6, 8, 9, 10], "max_featur": 76, "max_inner_it": [22, 32, 33], "max_it": [18, 22, 32, 33, 34, 39, 40, 44, 45, 46, 47, 50, 51, 52, 53, 56, 57, 66, 67, 68], "max_len": [18, 19], "max_n_split": [103, 113], "maxenc": 7, "maxim": [18, 34, 66, 67, 68], "maximum": [19, 22, 44, 45, 46, 47, 50, 51, 52, 53, 56, 57, 76], "maxpool": 10, "maxpool2d": 10, "mb": [5, 11, 20, 24, 28, 116], "mboula": 112, "mcc": [85, 114], "md": 114, "mdd": [87, 114], "mean": [14, 15, 16, 19, 21, 23, 25, 42, 47, 51, 53, 54, 55, 72, 94, 95, 96, 99, 100, 101, 113, 114, 115], "mean_source_": [31, 42], "mean_squared_error": [14, 15], "mean_target_": [31, 42], "mean_test_scor": 27, "measur": 83, "mechan": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "median": [39, 40, 56, 57, 75, 78, 85, 88, 89, 92], "mellot": 112, "mem": [5, 11, 20, 24, 28, 116], "member": 112, "memori": [54, 55, 93], "mention": 29, "merg": [7, 26, 29, 69, 111], "meshgrid": [14, 15], "messag": 29, "meta": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113], "metadata": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "metadata_rout": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "method": [1, 2, 3, 4, 7, 11, 13, 20, 21, 24, 26, 29, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 68, 69, 72, 74, 77, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 112, 113, 114, 115, 116], "metric": [14, 15, 21, 22, 25, 27, 32, 33, 39, 40, 43, 54, 55, 56, 57], "metric_param": [22, 54, 55], "michel": 112, "might": [15, 17, 43], "min": [19, 22, 23, 62, 63], "mingsheng": [76, 77, 78, 84, 85, 89, 92, 112], "minim": [18, 45, 47, 51, 53, 77, 87, 99, 112], "minimum": [32, 33, 39, 40, 74, 75, 84, 85, 88, 92, 112], "minkowski": [22, 54, 55], "minkowski_dist": [54, 55], "minut": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "misc": 112, "mix": [98, 112], "mixup": 98, "mixval": [98, 114], "mixvalscor": 114, "mline": 13, "mlpregressor": 43, "mmd": [19, 22, 47, 51, 52, 53, 78, 89, 112], "mmdlsconsmap": [22, 51], "mmdlsconsmappingadapt": 22, "mmdtarsreweight": [22, 53], "mmdtarsreweightadapt": [22, 114], "mnist": [6, 8, 9, 10], "mnist_dataset": [6, 8, 9, 10], "mnist_target": [6, 8, 9, 10], "mnisttouspsn": 10, "mnisttouspsnet": [6, 8, 9, 10], "mode": 108, "model": [10, 14, 18, 44, 45, 75, 88, 92, 95, 96, 97, 98, 101, 112, 114], "model_select": [21, 25, 26, 27, 112, 113, 115], "modern": 23, "modif": 29, "modifi": [26, 114], "modified_fil": 29, "modul": [6, 8, 9, 10, 74, 76, 79, 80, 82, 84, 86, 112, 114], "module_": 10, "module__base_modul": 10, "module__layer_nam": 10, "mong": [12, 20, 48, 49, 72, 93, 107, 112, 114, 116], "mongealign": 114, "montesuma": 112, "month": 112, "moon": [13, 70], "more": [13, 15, 18, 21, 29, 54, 55, 69, 97, 112, 113], "moreau": 112, "moreno": [2, 3, 72], "morerio": [99, 112], "most": [19, 26, 54, 55], "mostli": 113, "motoaki": 112, "move": 113, "mover": 57, "mrg": [29, 114], "mse": [14, 15, 43], "mse_": [14, 15], "mse_t": [14, 15], "mu": [19, 22, 64, 65, 68], "mu_regress": 72, "muandet": 112, "much": [14, 15, 16, 29], "multi": [1, 12, 20, 72, 74, 75, 88, 89, 93, 107, 112, 113, 114, 116], "multiclass": [2, 14, 15, 16, 18, 22, 72], "multilinear": 77, "multilinearmongealignmentadapt": 16, "multinomi": 14, "multipl": [1, 2, 3, 4, 13, 21, 22, 44, 45, 62, 63, 69, 70, 71, 72, 73, 95, 106, 108, 113], "multipli": 72, "murino": 112, "must": [7, 21, 54, 55, 71, 97, 99, 105, 111, 112], "my": 29, "m\u00fcller": 112, "n": [2, 3, 14, 16, 17, 18, 19, 23, 26, 32, 33, 39, 40, 43, 48, 56, 57, 72, 90, 92, 108, 112], "n_center": [22, 44, 45, 71], "n_channel": [4, 73], "n_class": [4, 6, 8, 9, 10, 51, 53, 73, 76, 86], "n_compon": [19, 21, 22, 62, 63, 64, 65, 66, 67, 68, 113], "n_dot": 23, "n_featur": [31, 36, 38, 42, 45, 47, 51, 53, 55, 62, 63, 71, 103, 106, 107, 108, 111], "n_frequenc": [4, 73], "n_frequency_sourc": 73, "n_iter_max": [22, 43], "n_job": [22, 54, 55], "n_neighbor": [22, 54, 55], "n_sampl": [6, 8, 9, 10, 17, 36, 38, 42, 45, 47, 51, 53, 55, 62, 63, 71, 72, 99, 103, 106, 107, 108, 109, 110, 111], "n_samples_sourc": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 46, 47, 70, 72, 73, 113, 115], "n_samples_target": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 70, 72, 73, 113, 115], "n_sourc": 16, "n_split": [25, 26, 27, 102, 103, 104, 105, 113, 115], "n_splits_lodo": 26, "n_target": 16, "n_tot_sourc": 17, "n_tot_target": 17, "naive_bay": 93, "nakajima": [18, 112], "name": [18, 19, 21, 22, 36, 38, 42, 45, 47, 53, 54, 55, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 76, 79, 80, 82, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113], "named_step": [17, 93], "names_map": [26, 69], "nan": [26, 69, 108, 111], "narr": 29, "natur": [22, 54, 55, 72], "nawaremodul": 10, "nbsp": 10, "nbviewer": 10, "nd": 114, "ndarrai": [69, 70, 71, 72, 73, 90, 91, 92, 99, 103, 111], "nearest": [53, 54, 55, 112], "nearestneighborreweight": [18, 22], "nearestneighborreweightadapt": 22, "necessari": [14, 29, 43, 113, 115], "necessarili": 22, "necessit": 113, "need": [21, 29, 95, 113], "neg": [69, 70, 71, 72, 73, 97, 112, 113], "neighbor": [22, 53, 54, 55, 112], "neighborhood": [54, 55, 100, 112], "neither": 113, "netherland": 112, "network": [19, 64, 65, 74, 75, 76, 77, 78, 79, 87, 88, 89, 97, 112], "neural": [14, 19, 43, 64, 65, 79, 97, 112], "neuralnetclassifi": [6, 8, 9], "neurip": [18, 44, 45, 76, 77, 97, 98, 112], "never": [29, 93], "new": [13, 65, 69, 113, 114], "next": 113, "ngole": 112, "nicola": [82, 83, 91, 112], "nip": [18, 43, 46, 47, 112], "nn": [6, 8, 9, 10, 74, 76, 79, 80, 82, 84, 86], "nois": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 70, 71, 72, 73, 113, 115], "non": [29, 69, 70, 71, 72, 73, 97, 111, 113], "none": [7, 10, 16, 18, 19, 22, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115], "nonzero": [54, 55], "noplot": 29, "norm": [22, 32, 33, 39, 40, 56, 57, 68, 90, 92, 97, 112], "normal": [18, 39, 40, 56, 57, 97, 112], "note": [7, 14, 21, 36, 38, 42, 45, 47, 53, 54, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "notic": [13, 112], "now": [13, 14, 26, 113, 115], "np": [1, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 69, 72, 102, 103, 105, 111], "nt": 16, "num_featur": [6, 76, 79, 86], "number": [15, 17, 18, 22, 26, 29, 32, 33, 34, 39, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 86, 88, 95, 98, 102, 103, 105, 111, 113], "numer": [39, 40, 56, 57, 75, 78, 85, 88, 89, 92, 95], "numitermax": [15, 17, 22], "numpi": [1, 4, 7, 13, 14, 15, 16, 18, 19, 21, 23, 25, 26, 29, 102, 105], "o": [13, 16, 23, 112], "object": [13, 26, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 115], "observ": [35, 36, 96], "occur": [39, 40, 56, 57], "octob": 112, "odonnat": 112, "odot": 51, "off": [23, 29, 43, 66, 67], "offer": [113, 115], "office31": 113, "often": 29, "old": 69, "oleksii": [18, 19, 112], "onc": [19, 26, 69, 104, 113], "one": [1, 7, 19, 21, 29, 54, 55, 69, 70, 72, 73, 99, 111, 112, 113, 115], "ones": [7, 16, 19, 21, 102, 105], "ones_lik": 7, "onli": [13, 21, 25, 26, 36, 38, 42, 45, 47, 53, 54, 55, 58, 59, 60, 61, 69, 72, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114], "onto": 19, "open": [29, 112], "oper": [29, 49], "optim": [10, 11, 12, 14, 15, 18, 20, 22, 32, 33, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 68, 69, 72, 82, 83, 91, 93, 107, 112, 116], "optimali": [18, 19], "option": [7, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 78, 80, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113], "orang": 26, "order": [7, 97, 113, 114], "org": [10, 112], "organ": 21, "origin": [14, 15, 29, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113], "ot": [15, 17, 22, 29, 33, 40, 43, 48, 49, 56, 57, 91, 112], "ot_transport_": [17, 33, 40, 49, 57], "otda": [12, 20, 33, 40, 49, 56, 57, 72, 93, 107, 112, 116], "other": [7, 18, 26, 29, 36, 38, 42, 43, 45, 47, 53, 55, 58, 59, 60, 61, 69, 73, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113], "otherwis": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 69, 70, 71, 72, 73, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113], "otlabelprop": 22, "otlabelpropadapt": [15, 22], "otmap": [17, 22], "otmappingadapt": [17, 22, 113], "ou": 114, "our": [26, 54, 55], "out": [13, 69, 103, 112], "out_featur": 10, "outcom": [94, 95, 96, 99, 100, 101], "output": [10, 21, 29, 44, 45, 62, 63, 69, 70, 71, 72, 73, 74, 76, 79, 80, 82, 84, 86, 92, 95, 113], "over": [7, 22, 95], "overfit": [113, 115], "overrid": [54, 55], "overwrit": 21, "ovr": 22, "p": [10, 18, 19, 22, 53, 54, 55, 66, 67, 93, 97, 112], "p_": 18, "p_sourc": [45, 47, 53], "p_target": [45, 47, 53], "pack": [19, 25, 26, 69, 113], "pack_lodo": [26, 69, 113], "pack_test": [6, 8, 9, 10, 26, 27, 69, 113], "pack_train": [6, 8, 9, 10, 19, 22, 25, 26, 27, 69, 113], "packag": [6, 13, 15, 17, 18, 21, 22, 69], "pad": 10, "page": [10, 18, 19, 29, 54, 55, 66, 67, 68, 112], "pair": [70, 71, 72, 73, 111, 113], "pami": 112, "pan": [19, 64, 65, 112], "panda": 7, "paper": [100, 112], "paragraph": 29, "parallel": [54, 55], "parallel_backend": [54, 55], "param": [21, 25, 112, 113, 114], "param_entropicotmappingadapter__reg_": 27, "param_grid": [21, 112], "paramet": [1, 15, 17, 21, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115], "part": [22, 112], "partial_fit": [58, 59, 60, 61], "particularli": 19, "partner": 112, "pass": [10, 21, 25, 29, 36, 38, 42, 44, 45, 47, 53, 54, 55, 58, 59, 60, 61, 62, 63, 70, 71, 72, 73, 76, 79, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113], "patch": 26, "path": 93, "pattern": [2, 3, 17, 19, 30, 31, 32, 33, 34, 39, 40, 48, 56, 57, 66, 67, 72, 74, 75, 88, 94, 112], "paul": 112, "pca": [19, 21, 62, 63, 64, 65, 66, 67, 68, 113], "pca_source_": 63, "pca_target_": 63, "pd": 7, "pdf": [18, 23, 29, 112], "peak": 73, "pep8": 29, "per": [21, 34, 103, 113], "per_domain": 93, "percentag": [26, 102, 105], "perdomain": [21, 113], "perdomainselector": 113, "perform": [14, 15, 16, 18, 19, 21, 25, 27, 29, 91, 93, 113], "permit": 93, "perspect": 112, "phase": 112, "pick": [29, 113], "pietro": 99, "pillow": 29, "pip": [29, 112], "pipe": [21, 112, 113], "pipe_perdomain": 21, "pipe_train_on_sourc": 21, "pipelin": [18, 22, 25, 27, 30, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 68, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112], "place": [7, 29], "plai": 113, "plan": [15, 17, 18, 37, 38, 41, 42, 112], "platform": 29, "pleas": [10, 29, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112], "plot": [5, 12, 17, 21, 22, 23, 26, 27, 70, 72, 73, 107, 116], "plot_adversari": [6, 11, 116], "plot_cross_val_score_for_da": [25, 28, 116], "plot_cross_validation_for_da": [26, 28, 116], "plot_cv_indic": 26, "plot_dasvm": [13, 20, 116], "plot_dataset_from_moons_distribut": [1, 5, 116], "plot_deepdadataset": [7, 11, 116], "plot_diverg": [8, 11, 116], "plot_gridsearch_for_da": [27, 28, 116], "plot_how_to_use_skada": [21, 24, 116], "plot_jdot_da": [14, 20, 116], "plot_label_prop_da": [15, 20, 116], "plot_lodo_indic": 26, "plot_method": 18, "plot_method_comparison": [22, 24, 116], "plot_monge_alignment_da": [16, 20, 116], "plot_optimal_transport": [9, 11, 116], "plot_optimal_transport_da": [17, 20, 116], "plot_reweight": [18, 20, 116], "plot_shifted_dataset": [2, 3, 5, 116], "plot_shifted_dataset_regress": [3, 5, 116], "plot_skada_logo": [23, 24, 116], "plot_st_shuffle_indic": 26, "plot_subspac": [19, 20, 116], "plot_subspace_and_classifi": 19, "plot_training_method": [10, 11, 116], "plot_variable_frequency_dataset": [4, 5, 116], "plot_weights_and_classifi": 18, "plt": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "plug": 113, "pmlr": [15, 112], "point": [7, 13, 18, 19, 22, 23, 27, 29, 34, 43, 54, 55, 70, 71, 72, 73], "poli": 13, "polytechniqu": [3, 18, 19], "pos_sourc": [1, 13, 70], "pos_target": [1, 13, 70], "posit": [7, 13, 54, 55, 70, 112, 113], "possibl": [2, 3, 7, 13, 29, 30, 31, 41, 42, 54, 55, 68, 113], "possibli": 113, "pot": [23, 29], "power": [54, 55], "pp": [15, 74, 75, 88, 112], "pr": [29, 114], "practic": [7, 29, 113], "pre": [29, 75, 88], "preced": 7, "precis": [39, 40], "precomput": [54, 55], "predict": [13, 14, 15, 17, 18, 19, 21, 22, 27, 35, 37, 38, 41, 42, 43, 44, 46, 52, 54, 55, 58, 59, 60, 61, 62, 64, 66, 75, 77, 85, 94, 95, 97, 99, 112, 113], "predict_log_proba": [58, 59, 60, 61], "predict_nonlinear": 10, "predict_proba": [58, 59, 60, 61, 113, 114], "predictionentropyscor": [21, 27, 112, 113], "prefer": 29, "prefix": 29, "prepar": [25, 26, 27, 113], "preprint": [49, 112], "preprocess": [21, 22, 93, 112], "presenc": 108, "present": [13, 29], "preserv": [7, 14, 26, 102, 105], "prevent": [54, 55, 114], "previou": 19, "previous": 113, "prgn": 26, "print": [1, 4, 10, 14, 15, 16, 18, 19, 21, 22, 25, 27, 29, 43, 67, 68, 93, 102, 105], "print_scores_as_t": [18, 19], "prior": [29, 93, 112], "probabl": [18, 21, 22, 27, 95, 97], "probe": [98, 112], "problem": [13, 26, 32, 33, 34, 39, 40, 43, 45, 54, 55, 56, 57, 64, 65, 68, 94, 103, 112, 113], "procedur": 45, "proceed": [74, 75, 88, 112], "process": [14, 18, 43, 54, 55, 95, 98, 112, 113], "processor": [54, 55], "produc": [0, 102], "profil": 29, "program": 29, "progress": [13, 29], "project": [1, 6, 8, 9, 10, 19, 22, 29, 65], "propag": [12, 20, 22, 72, 73, 93, 107, 112, 116], "properli": 29, "proport": [15, 102], "propos": [15, 43, 48, 49, 74, 75, 88, 89, 100], "provid": [1, 7, 21, 29, 36, 38, 42, 43, 45, 47, 53, 55, 58, 59, 60, 61, 69, 76, 79, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 113], "psd": 4, "psu": 112, "public": 29, "publish": 112, "purpos": [18, 69], "push": 29, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 113, 116], "pypi": 112, "pyplot": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27], "pytest": [29, 113], "python": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "python3": [6, 13, 15, 17, 18, 21, 22], "pytorch": [74, 76, 79, 80, 82, 84, 86], "q": 112, "quadrat": 43, "queri": [54, 55], "quick": 112, "quickli": 29, "r": [2, 3, 10, 14, 15, 17, 23, 32, 33, 39, 40, 43, 48, 49, 56, 57, 72, 112], "r82": 112, "radian": 23, "raeder": [2, 3, 72], "rais": [21, 29, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "rakotomamonji": [14, 17, 32, 33, 39, 40, 43, 48, 56, 57, 112], "rand": [16, 23], "randint": [1, 4], "randn": 16, "random": [1, 2, 3, 4, 16, 22, 23, 25, 44, 45, 62, 63, 70, 71, 72, 73, 95, 98, 102, 103, 105], "random_se": [1, 4, 13, 18, 19, 22, 25, 26, 27, 113, 115], "random_st": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 44, 45, 62, 63, 70, 71, 72, 73, 95, 98, 102, 103, 104, 105, 113, 115], "randomli": [26, 113], "randomst": [23, 44, 45, 62, 63, 70, 71, 72, 73, 95, 98, 102], "rang": [4, 10, 13, 14, 16, 17, 19, 23, 26, 113], "rather": [6, 8, 9, 10, 19, 22], "ratio": [18, 72, 112], "ravel": [14, 15], "raw_data": 7, "rbf": [14, 15, 17, 19, 22, 32, 44, 45, 46, 47, 64, 65, 66, 67, 68, 72], "rcparam": 23, "rdbu": [18, 19, 22, 26], "re": [35, 36, 37, 38, 41, 42, 54, 55, 102], "reach": [15, 22, 112], "reader": 29, "readi": [25, 29, 113], "readm": 114, "real": 22, "reason": 113, "receiv": 29, "recent": 114, "recognit": [2, 3, 19, 30, 31, 66, 67, 72, 74, 75, 88, 112], "recommend": [6, 8, 9, 10, 19, 22, 29], "reconstruct": 113, "record": 29, "recov": [17, 97], "red": 13, "redko": 112, "reduc": [78, 81, 83, 85, 95], "reduct": [82, 83, 99], "redund": 114, "ref": 19, "refer": [29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 113], "reflect": [113, 115], "reg": [6, 8, 10, 15, 17, 22, 30, 31, 41, 42, 48, 49, 52, 53, 68, 74, 76, 79, 80, 82, 84, 86], "reg_": [17, 22, 25, 27, 32, 33, 39, 40], "reg_cl": [9, 17, 22, 32, 33, 82, 83, 91], "reg_cor": 21, "reg_dist": [9, 82, 83, 91], "reg_k": [22, 50, 51], "reg_m": [22, 50, 51], "reglog": [14, 15], "regress": [3, 29, 43, 72], "regression_scaling_const": 72, "regressor": [12, 20, 43, 72, 107, 112, 116], "regular": [15, 17, 19, 21, 27, 30, 31, 32, 33, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 64, 65, 68, 74, 76, 79, 80, 82, 83, 84, 86, 91, 112], "regulari": [27, 114], "rel": 7, "relat": 113, "releas": 112, "relev": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "relu": 10, "relu1": 10, "relu2": 10, "relu3": 10, "remain": [26, 104], "rememb": 34, "remi": [14, 15, 16, 17, 21, 82, 83, 91], "remov": [13, 15, 21, 22, 77, 114], "remove_weight": 7, "renam": [13, 15, 21, 22], "renchunzi": [97, 112], "render": 10, "rep1": 112, "repid": 112, "replac": [2, 3], "repo": 29, "report": 29, "repositori": 29, "repres": [13, 19, 54, 55, 102, 113], "represent": [7, 10, 69, 77, 83, 95], "reproduc": [19, 29, 44, 45, 62, 63, 70, 71, 72, 73, 95], "request": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113], "requir": [21, 39, 40, 54, 55, 69, 93, 112, 113], "requires_grad": [19, 22], "requires_grad_": [6, 8, 9, 10, 19, 22], "rerun": 10, "research": [79, 96, 112], "reshap": [14, 15, 19, 114], "resolv": 29, "respect": [51, 70, 71, 72, 73, 113], "response_method": [17, 18, 19, 22, 27], "restructuredtext": 29, "result": [26, 27, 29, 54, 55, 69, 103], "result_cod": [15, 22], "result_code_str": [15, 22], "retain": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "retrain": 94, "retriev": 69, "return": [6, 7, 16, 23, 26, 30, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "return_dataset": [6, 8, 9, 10, 19, 22, 25, 26, 27, 70, 71, 72, 73], "return_x_i": [69, 70, 71, 72, 73, 113], "reus": [113, 115], "review": 29, "reweight": [12, 19, 20, 21, 22, 35, 37, 41, 44, 46, 47, 52, 53, 54, 66, 67, 72, 107, 110, 112, 116], "rflamari": 114, "ridg": [14, 15, 43], "right": [3, 10, 18, 19, 22, 26, 29, 100, 112], "risk": 43, "rng": 23, "robert": 112, "robust": 15, "rodriguez": [2, 3, 72], "root": 31, "rotat": 26, "rotated_curv": 23, "rotation_angl": 23, "rotation_cent": 23, "rotation_matrix": 23, "round": 23, "rout": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "row": [1, 2, 3], "rsda": 102, "rslab": 112, "ruben": [3, 13, 18, 19, 112], "rule": 29, "run": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 54, 55, 113], "running_loss": 10, "rustamov": [15, 112], "r\u00e9mi": 112, "s2": [26, 113], "saenko": [8, 30, 31, 80, 81, 90, 112], "saito": [100, 112], "salt": 22, "same": [1, 2, 3, 4, 7, 13, 14, 15, 19, 22, 25, 26, 36, 38, 42, 45, 47, 53, 54, 55, 86, 94, 106, 107, 108, 113], "sampl": [2, 3, 7, 14, 15, 17, 18, 19, 21, 22, 26, 29, 36, 46, 47, 55, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 91, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 69, 70, 71, 72, 73, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "sample_domain_": 21, "sample_domain_lodo": 26, "sample_domain_t": 21, "sample_domain_test": [6, 8, 9, 10, 113], "sample_domain_train": [19, 113], "sample_domaini": 16, "sample_idx": 7, "sample_select": 72, "sample_weight": [7, 18, 21, 22, 91, 106, 107, 112, 113, 114], "sampler": 114, "save": 23, "save_estim": [13, 34], "save_indic": [13, 34], "savefig": 23, "scalar": [72, 108, 114], "scale": [22, 51, 68, 84, 85, 92], "scan": 108, "scatter": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27], "scenario": [69, 113], "sch\u00f6lkopf": [18, 46, 47, 112], "scikit": [21, 26, 29, 43, 93, 113, 114, 115], "scipi": [29, 46, 47, 54, 55], "sclaroff": 112, "score": [6, 8, 9, 13, 16, 17, 22, 25, 27, 58, 59, 60, 61, 72, 94, 95, 96, 97, 98, 99, 100, 101, 112], "scorer": [21, 25, 27, 94, 95, 96, 97, 98, 99, 100, 101, 112, 113, 114], "scores_dict": [18, 19], "scores_no_da": 25, "scores_sup": 25, "script": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "search": [27, 54, 55, 112], "sebban": 112, "second": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 111], "section": [51, 52, 53, 113], "see": [2, 3, 13, 14, 15, 18, 19, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113], "seed": [1, 2, 3, 4, 16, 22], "seek": [19, 29], "seem": 29, "seen": 113, "select": [7, 18, 26, 44, 45, 46, 47, 59, 60, 69, 72, 95, 98, 112, 114, 115], "select_domain": [7, 17, 69, 113], "selector": [21, 93], "selectsourc": 21, "selectsourcetarget": 21, "self": [6, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 69, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "semi": [13, 15, 22, 112], "semi_label": 13, "send": 29, "separ": [25, 72, 108, 113], "septemb": [82, 83, 91], "sequenc": [70, 71, 72, 73, 106, 107, 111], "serv": [66, 67, 113], "set": [13, 18, 22, 26, 46, 47, 54, 55, 62, 63, 69, 70, 71, 72, 73, 93, 100, 102, 103, 104, 113, 115], "set_config": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "set_decision_function_request": [58, 59, 60, 61], "set_fit_request": [18, 21, 22, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 112], "set_fit_requir": 112, "set_label": 3, "set_partial_fit_request": [58, 59, 60, 61], "set_predict_log_proba_request": [58, 59, 60, 61], "set_predict_proba_request": [58, 59, 60, 61], "set_predict_request": [58, 59, 60, 61], "set_score_request": [58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 113], "set_split_request": [102, 103, 104, 105], "set_titl": [1, 2, 3, 4, 13, 18, 19, 26], "set_transform_request": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61], "set_xlabel": [1, 2, 3, 4], "set_xlim": [13, 18, 19, 22], "set_xtick": [18, 19, 22], "set_ylabel": [1, 2, 3, 4, 22], "set_ylim": [13, 18, 19, 22], "set_ytick": [18, 19, 22], "setup": [11, 12, 80, 81, 116], "sever": [21, 22, 45, 113, 115], "sgd": 10, "shallow": 114, "shape": [13, 14, 15, 16, 17, 18, 19, 21, 23, 29, 31, 36, 38, 42, 45, 47, 51, 53, 54, 55, 71, 72, 99, 103, 106, 107, 108, 109, 110, 111], "share": [22, 93, 113], "sharei": [1, 2, 3, 4, 26], "sharex": [1, 2, 3, 4], "shift": [5, 12, 13, 20, 21, 22, 25, 26, 27, 35, 37, 38, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 62, 64, 66, 68, 69, 70, 71, 72, 73, 96, 97, 107, 110, 112, 113, 114, 115, 116], "shimodaira": [18, 37, 38, 41, 42, 112], "shinichi": 112, "ship": 113, "short": 21, "shorthand": 93, "should": [22, 29, 34, 36, 38, 42, 43, 45, 47, 53, 55, 58, 59, 60, 61, 64, 65, 66, 67, 68, 72, 76, 79, 82, 83, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 113], "show": [1, 2, 3, 4, 10, 13, 14, 15, 18, 19, 22, 25, 26, 27, 54, 55], "showcas": 113, "shown": [113, 115], "shrink": 22, "shrinkag": [30, 31, 41, 42, 68], "shuffl": [7, 71, 102, 104, 105], "shufflesplit": [25, 27, 113, 115], "si": [19, 68, 112], "sigma": [16, 72, 74, 75, 78, 88, 89], "sigma_ch": [4, 73], "sigma_freq": 73, "sigma_regress": 72, "sign": [94, 95, 96, 99, 100, 101], "signal": [4, 18, 54, 55, 73, 112], "signatur": [95, 96, 98, 101], "signific": 114, "similar": [100, 113], "similarli": [21, 113], "simpl": [6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 113], "simplest": 113, "simpli": 113, "simplifi": 113, "simultan": 113, "sin": 23, "sinc": [26, 111, 113], "singl": [21, 95, 104, 108, 113], "singleton": 104, "sinkhorn": [17, 32, 33, 39, 40], "sinno": [19, 64, 65], "site": [6, 13, 15, 17, 18, 21, 22], "size": [18, 19, 22, 54, 55, 73, 76, 79, 86, 102], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 113, 115, 116], "skada_logo": 23, "skada_logo_ful": 23, "skada_logo_full_whit": 23, "skip": 113, "sklearn": [13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 27, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 60, 61, 69, 75, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 115], "skorc": 10, "skorch": [6, 8, 9, 112], "sleep": 112, "small": [29, 75, 78, 85, 88, 89, 92, 95], "smola": [18, 46, 47, 112], "smooth": [18, 46, 47, 54, 55, 114], "smooth_weight": [18, 46, 47], "snippet": 29, "so": [7, 13, 19, 21, 69, 113], "soft": [100, 112], "softmax": [6, 85, 97], "softneighborhooddens": 113, "sol_": [14, 43], "solid": 22, "solid_capstyl": 23, "solomon": [15, 112], "solut": [19, 23, 43, 45, 65], "solv": [43, 44, 45], "solver": [17, 18, 23, 32, 33, 46, 47], "some": [0, 7, 19, 36, 38, 42, 45, 47, 53, 54, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "someth": 29, "sort": [26, 29], "sourc": [5, 6, 7, 8, 9, 10, 12, 13, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116], "source_dict": 106, "source_idx": [109, 110, 113], "source_mark": [13, 19], "source_scor": 94, "source_target_split": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 25], "source_weights_": [47, 53], "sourceonli": 114, "sourcetargetselector": 113, "sourcetargetshufflesplit": [21, 26, 112, 113], "sourcetensor": [6, 8, 9, 10, 19, 22], "spa": [112, 114], "space": [18, 19, 76, 113], "spars": [54, 55], "spatial": [54, 55], "special": 113, "specif": [21, 29, 73, 77, 109, 113], "specifi": [69, 93, 99, 106, 107, 108, 109, 110, 111], "spectral": 112, "speed": [54, 55], "spheric": 114, "sphericalkmean": 88, "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26], "split": [21, 22, 25, 26, 44, 45, 102, 103, 104, 105, 106, 107, 109, 112, 113, 115], "split_source_target": [106, 109], "splitter": [21, 26, 69, 103], "springer": [82, 83, 91, 112], "sqeuclidean": [22, 32, 33, 39, 40, 56, 57], "sqrt": [46, 47], "squar": [13, 31, 43, 54, 55], "stabil": [75, 78, 85, 88, 89, 92, 114], "stack": 113, "standard": [54, 55, 70, 71, 72, 73, 113], "standardscal": [21, 93, 112, 113], "start": [21, 29, 112, 113, 115], "start_length": 23, "state": 13, "static": 113, "statist": [18, 37, 38, 41, 42, 112], "std": [14, 15, 21, 25, 73], "step": [10, 13, 17, 19, 22, 29, 34, 93, 97], "still": 113, "stop": [32, 33, 39, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 57, 66, 67, 68], "store": [7, 18, 19, 54, 55, 69, 112], "str": [18, 19, 32, 33, 36, 38, 39, 40, 42, 45, 46, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 72, 74, 76, 79, 80, 82, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "straightforward": 113, "strategi": [19, 25, 27, 34, 44, 45, 94, 112], "strategylorenzo": 112, "stratifi": 105, "stratifieddomainshufflesplit": 26, "stratifieddomainsubsampl": 114, "stride": 10, "string": [46, 47, 54, 55, 93, 96, 98, 101], "strongli": 29, "structur": [7, 69, 113], "sub": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "subj_1": 113, "subj_12": 113, "subj_3": 113, "subject": [18, 19, 112], "submit": 29, "subplot": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26], "subplots_adjust": [1, 2, 3, 4, 26], "subsampl": 114, "subsequ": [21, 112], "subset": 106, "subspac": [2, 3, 12, 20, 22, 62, 63, 64, 65, 66, 68, 69, 72, 107, 112, 116], "subspace_estim": 19, "subspacealign": [19, 22, 112], "subspacealignmentadapt": [22, 62, 113], "sugiyama": [18, 44, 45, 96, 112], "suit": 113, "suitabl": 18, "sum": [13, 23, 99], "sun": [8, 19, 30, 31, 66, 67, 80, 81, 90, 112], "supervis": [15, 25, 101, 103, 112, 113], "supervisedscor": [25, 113, 115], "support": [14, 82, 83], "supspac": 19, "suptitl": [1, 2, 3, 4, 13, 18, 19, 26], "sure": [13, 29], "suzuki": [18, 112], "svc": [13, 15, 16, 17, 19, 21, 22, 25, 27, 32, 34], "svg": 23, "svm": [13, 14, 15, 17, 19, 21, 22, 25, 27], "sy": 29, "synthet": 22, "system": [14, 29, 43, 112], "t": [2, 3, 14, 17, 18, 19, 22, 23, 25, 26, 27, 51, 54, 55, 72, 84, 85, 92, 100, 112, 113, 114], "t2": [26, 113], "t_valu": 23, "tab10": [1, 2, 14, 15, 16, 17, 21], "taiji": 112, "tailor": 97, "takafumi": 112, "take": [7, 18, 21, 54, 55, 113, 114], "taken": [13, 22, 45, 69, 70, 71, 72, 73], "tao": [19, 68, 112], "tar": [22, 112], "target": [5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 30, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 81, 83, 85, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116], "target_criterion": [82, 83], "target_dict": 106, "target_idx": [109, 113], "target_kmean": [75, 88], "target_label": [25, 26, 101, 113], "target_mark": [13, 19], "target_sample_weight": 91, "target_shift": [2, 3, 15, 22, 72], "targetaccuracyscor": [25, 113, 115], "targetonli": 114, "task": [6, 8, 9, 10, 14, 17, 29, 43, 87], "tca": [19, 22, 112], "team": [29, 112], "technic": 7, "techniqu": [13, 34, 94, 112], "temperatur": [84, 85, 92, 100], "tensor": [6, 7, 8, 9, 10, 19, 22, 88, 89, 90, 91, 92], "term": [82, 83, 91], "test": [0, 18, 22, 25, 26, 29, 69, 102, 103, 104, 105, 112, 114, 115], "test_cv": 113, "test_index": [102, 105], "test_map": 113, "test_offic": 113, "test_pipelin": 113, "test_reweight": 113, "test_samples_gener": 113, "test_scor": 113, "test_siz": [25, 27, 102, 103, 104, 105, 113, 115], "test_subspac": 113, "teterwak": 112, "text": [13, 14, 16, 17, 18, 19, 21, 22, 23, 26, 29], "textsf": 23, "tgnassou": 114, "than": [6, 8, 9, 10, 14, 18, 19, 22, 54, 55, 69, 86], "thank": [25, 29], "thei": [7, 13, 69, 111, 113], "them": [7, 54, 55, 97, 113], "theme": 113, "theo": 112, "theoret": 43, "theori": [86, 87, 112], "therefor": 93, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 34, 36, 38, 42, 43, 45, 47, 53, 54, 55, 58, 59, 60, 61, 69, 75, 77, 78, 81, 83, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115], "thoma": 112, "those": [7, 13, 21, 54, 55, 113], "though": [7, 113], "three": [87, 97], "threshold": [32, 33, 67, 68, 74, 75, 88, 97], "through": [7, 83, 87], "throughout": 7, "thu": [13, 18, 19, 26, 54, 55], "th\u00e9o": [6, 8, 9, 10, 23, 112], "tight": 23, "tight_layout": [19, 22, 23, 26], "time": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 69, 93, 111], "titl": [2, 3, 14, 15, 16, 17, 21, 29, 112], "tjm": [19, 66, 67], "to_": 10, "todo": 10, "togeth": [93, 113], "tol": [22, 25, 32, 33, 39, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 66, 67, 68], "toler": [43, 44, 45, 46, 47, 50, 51, 52, 53], "tolist": 7, "tool": [29, 113], "toolbox": [23, 112], "top": 29, "torch": [6, 7, 8, 9, 19, 22, 74, 76, 77, 79, 80, 82, 83, 84, 86, 91], "torch_load_kwarg": 10, "torr": [2, 3, 72], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 70, 71, 72, 73, 116], "toward": [95, 112], "tr": 26, "traceback": 29, "track": [29, 69], "tracker": 29, "trade": [43, 66, 67], "tradeoff": [19, 66, 67], "train": [11, 12, 13, 17, 18, 19, 21, 22, 25, 26, 69, 74, 76, 79, 80, 81, 82, 84, 86, 87, 102, 103, 104, 105, 112, 113, 115, 116], "train_index": [102, 105], "train_loss": [6, 8, 9, 10], "train_siz": [102, 103, 104, 105], "train_split": [6, 8, 9, 10], "train_test_split": 95, "tran": 112, "transact": [17, 19, 32, 33, 34, 39, 40, 48, 56, 57, 64, 65, 68, 94, 112], "transfer": [64, 65, 66, 67, 68, 78, 89, 112], "transfercomponentanalysi": [19, 22], "transfercomponentanalysisadapt": [22, 64, 113], "transferjointmatch": 19, "transferjointmatchingadapt": 66, "transfersubspacelearn": [19, 22], "transfersubspacelearningadapt": 22, "transform": [16, 17, 19, 21, 36, 38, 42, 45, 47, 51, 53, 55, 58, 59, 60, 61, 93, 112, 113, 114], "translat": [71, 72], "transpar": [22, 23], "transport": [11, 12, 14, 20, 32, 33, 39, 40, 43, 48, 49, 56, 57, 69, 72, 82, 83, 91, 93, 107, 112, 116], "tree": [54, 55], "tri": [18, 77, 87], "trigger": 93, "true": [6, 8, 9, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 30, 31, 34, 36, 38, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 112, 113], "trust": 10, "try": [10, 15, 18, 22, 114], "tsang": 112, "tsl": [19, 22], "tt": 26, "tuia": [17, 32, 33, 39, 40, 48, 56, 57, 82, 83, 91, 112], "tune": [100, 112], "tupl": [7, 69, 70, 71, 72, 73, 93, 106, 113], "tutori": 29, "tuytelaar": 112, "twice": 69, "two": [7, 18, 19, 29, 54, 55, 67, 68, 109, 112, 113, 114, 115], "type": [2, 3, 10, 26, 29, 93, 98, 111, 112], "type_of_target": [18, 22], "typic": [76, 113], "u": [17, 29, 72], "unabl": 10, "unchang": [36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "uncom": 114, "under": [18, 29, 37, 38, 41, 42, 50, 51, 52, 53, 97, 112], "under_sampl": 102, "understand": 93, "unifi": [2, 3, 7, 69, 72, 112], "uniform": [22, 54, 55, 91], "uniniti": [82, 83], "uninstanti": [76, 79, 86], "uniqu": [1, 18, 22, 69, 109, 113, 114], "unit": 76, "unitn": 112, "unlabel": [18, 46, 47, 112], "unless": [54, 55], "unpredict": 43, "unseen": 113, "unsupervis": [19, 30, 31, 62, 63, 66, 67, 74, 75, 82, 83, 88, 91, 95, 97, 98, 99, 100, 112], "up": [29, 104], "updat": [23, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 69, 77, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114], "update_predict": 113, "upper": [46, 47], "url": 112, "us": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 28, 29, 36, 38, 45, 53, 55, 60, 63, 65, 67, 74, 75, 76, 77, 83, 84, 86, 88, 89, 91, 94, 95, 97, 98, 100, 108, 112, 113, 115, 116], "usag": [29, 113], "use_cach": 10, "user": [29, 36, 38, 42, 45, 47, 53, 54, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112], "userwarn": [1, 6, 8, 9, 10, 15, 17, 18, 19, 22], "usetex": 23, "usp": [6, 8, 9, 10], "ustinova": 112, "util": [13, 15, 18, 19, 21, 22, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 69, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114], "v": [2, 3, 18, 19, 72, 112], "va": 26, "val": 112, "valid": [25, 27, 28, 34, 44, 45, 54, 55, 69, 72, 94, 95, 96, 100, 102, 103, 104, 105, 108, 112, 113, 115, 116], "valid_acc": 10, "valid_loss": 10, "valu": [3, 13, 22, 30, 31, 34, 39, 40, 41, 42, 43, 54, 55, 56, 57, 67, 68, 69, 71, 72, 97, 99, 100, 102, 108, 109, 111, 113], "var_smooth": 93, "variabl": [103, 106, 107, 108], "variat": 43, "variou": 7, "vasilii": 112, "vector": [14, 54, 55], "verbos": [10, 14, 22, 43, 67, 68, 93], "veri": 26, "verifi": 29, "versatil": [84, 85, 92, 112], "version": [26, 29, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112], "vertic": 26, "via": [1, 19, 64, 65, 77, 100, 112], "view": [2, 3, 72], "viewabl": 29, "virgini": 112, "vision": [19, 30, 31, 62, 63, 66, 67, 74, 75, 82, 83, 88, 91, 100, 112], "visit": 112, "visual": [12, 19, 21, 28, 62, 63, 69, 72, 102, 103, 104, 105, 112, 116], "visualis": 4, "vmax": [1, 2, 3, 13, 14, 15, 16, 17, 21, 26], "vmin": [13, 26], "von": [18, 112], "vstack": 16, "w": [18, 23, 45, 47, 51, 112], "w_": 51, "wa": [1, 4, 13, 15, 21, 22, 69, 70, 71, 72, 73], "wai": [29, 100, 112, 113, 115], "wang": [19, 66, 67, 84, 85, 92, 112], "want": [15, 17, 27, 54, 55], "warm_start": 10, "warn": [13, 15, 17, 19, 21, 22, 27, 112], "wasn": 114, "wasserstein": [15, 32, 33, 39, 40, 56, 57, 112], "wave": 29, "we": [2, 3, 14, 15, 16, 17, 21, 23, 25, 26, 27, 29, 54, 55, 72, 97, 108, 111, 112, 113, 115], "web": 29, "webcam": 113, "webcam_idx": 113, "weight": [7, 18, 21, 22, 35, 36, 37, 38, 41, 42, 46, 47, 53, 54, 55, 77, 91, 95, 96, 112, 113], "weight_estim": [18, 22, 35, 36, 96], "weight_estimator_source_": [36, 96], "weight_estimator_target_": [36, 96], "weighted_dict_raw_data": 7, "weijian": 112, "well": [13, 15, 21, 29, 54, 55, 113], "were": [13, 113], "what": [17, 21, 29], "when": [13, 18, 19, 21, 29, 34, 53, 54, 55, 66, 67, 68, 69, 70, 71, 72, 73, 93, 113, 114], "where": [13, 19, 29, 51, 70, 71, 72, 73, 103, 109, 112, 113], "whether": [94, 95, 96, 97, 98, 99, 100, 101, 106, 109], "which": [7, 13, 17, 18, 19, 21, 26, 29, 54, 55, 72, 73, 97, 112, 113], "while": [13, 14, 26, 43, 93, 103, 104, 113, 115], "white": 23, "whole": 21, "whose": [74, 76, 79, 80, 82, 84, 86], "why": 29, "width": 113, "wip": 29, "wish": 29, "with_mean": 93, "with_std": 93, "within": [93, 113], "without": [10, 13, 18, 19, 22, 25, 29, 112, 113], "wolf": [18, 30, 31, 41, 42, 46, 47], "won": [18, 19, 113], "work": [15, 18, 19, 21, 29, 36, 38, 42, 45, 47, 53, 54, 55, 58, 59, 60, 61, 76, 79, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 113, 114], "workflow": [29, 113], "workshop": [8, 18, 54, 55, 80, 81, 90, 112], "would": [112, 113], "wrap": [21, 93], "wrapper": 21, "write": 29, "www": 18, "x": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 36, 38, 42, 45, 47, 51, 53, 54, 55, 69, 70, 71, 72, 73, 96, 98, 101, 102, 103, 105, 108, 111, 112, 113, 115], "x0": [19, 22], "x27": 10, "x7f75cc77ca90": 10, "x7f75cc77ce20": 10, "x7f75cc77d1e0": 10, "x7f75cc77e140": 10, "x7f75cc77e170": 10, "x7f75cc77e230": 10, "x7f75cc77e650": 10, "x7f75cc77e920": 10, "x7f75cc77f1c0": 10, "x7f75cc77feb0": 10, "x7f75dc1ec430": 10, "x_": [13, 19], "x_adapt": [16, 17], "x_adapted_classreg": 17, "x_adapted_linear": 17, "x_adapted_sinkhorn": 17, "x_dict": 10, "x_lodo": 26, "x_max": [18, 19, 22], "x_min": [18, 19, 22], "x_point": 13, "x_sourc": [1, 2, 3, 4, 17, 25, 111, 114], "x_source_": [47, 51, 53, 65], "x_source_adapt": 17, "x_source_adapted_classreg": 17, "x_source_adapted_linear": 17, "x_source_adapted_sinkhorn": 17, "x_subj1": 113, "x_subj12": 113, "x_subj3": 113, "x_t": 13, "x_target": [1, 2, 3, 4, 17, 25, 27, 111, 113, 115], "x_target_": 65, "x_test": [6, 8, 9, 10, 113], "x_train": [19, 113], "xi": 16, "xiao": 112, "xie": [97, 112], "ximei": [84, 85, 92, 112], "xlabel": [25, 27], "xlim": [13, 23, 26], "xs_subspac": 19, "xt": [13, 14, 15, 16, 18, 19, 21, 22, 112], "xt_adapt": 19, "xt_subspac": 19, "xue": 112, "xx": [14, 15], "xxx": 105, "y": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 36, 38, 42, 45, 47, 51, 53, 55, 69, 70, 71, 72, 73, 74, 75, 88, 92, 94, 95, 96, 98, 101, 102, 103, 105, 108, 111, 112, 113, 115], "y_": [19, 75, 83, 88, 91], "y_axi": 23, "y_lodo": 26, "y_max": [18, 19, 22], "y_min": [18, 19, 22], "y_point": 13, "y_pred": [94, 95], "y_pred_": [75, 87], "y_pred_t": [75, 83, 85, 87, 91], "y_sourc": [1, 2, 3, 4, 17, 25, 111], "y_subj1": 113, "y_subj12": 113, "y_subj3": 113, "y_target": [1, 2, 3, 4, 17, 25, 27, 111, 113, 115], "y_test": [6, 8, 9, 10, 113], "y_train": [19, 113], "y_true": 95, "y_type": [18, 22], "yang": [74, 75, 88, 112], "yani": [26, 112], "yanislal": 114, "yaroslav": 79, "year": 112, "yerr": 25, "yet": 112, "yh": 15, "yht": 15, "yi": 16, "yield": 103, "ying": [84, 85, 92, 112], "ylabel": 27, "ylim": [13, 26], "you": [15, 17, 21, 29, 36, 38, 42, 45, 47, 53, 55, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113], "your": [29, 112, 113], "yourlogin": 29, "ypred": 112, "ys_pred": [14, 15], "yt": [13, 14, 15, 16, 18, 19, 21, 22], "yt_pred": [14, 15, 21], "ytick": [25, 26], "yticklabel": 26, "yu": [19, 66, 67, 112], "yuchen": [86, 87], "yy": [14, 15], "z": [14, 15, 72, 112], "z_jcpot": 15, "zenodo": 114, "zero": 10, "zero_grad": 10, "zhang": [50, 51, 52, 53, 86, 87, 112], "zhao": 112, "zhiqe": 112, "zip": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 105], "zjdot": [14, 15]}, "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Deep Domain Aware Datasets", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Label Propagation methods", "Multi-domain Linear Monge Alignment", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Subspace method example on subspace shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "Contributing to SKADA", "skada.CORAL", "skada.CORALAdapter", "skada.ClassRegularizerOTMapping", "skada.ClassRegularizerOTMappingAdapter", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DensityReweightAdapter", "skada.DiscriminatorReweight", "skada.DiscriminatorReweightAdapter", "skada.EntropicOTMapping", "skada.EntropicOTMappingAdapter", "skada.GaussianReweight", "skada.GaussianReweightAdapter", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.KLIEPReweightAdapter", "skada.KMMReweight", "skada.KMMReweightAdapter", "skada.LinearOTMapping", "skada.LinearOTMappingAdapter", "skada.MMDLSConSMapping", "skada.MMDLSConSMappingAdapter", "skada.MMDTarSReweight", "skada.MMDTarSReweightAdapter", "skada.NearestNeighborReweight", "skada.NearestNeighborReweightAdapter", "skada.OTMapping", "skada.OTMappingAdapter", "skada.PerDomain", "skada.SelectSource", "skada.SelectTarget", "skada.Shared", "skada.SubspaceAlignment", "skada.SubspaceAlignmentAdapter", "skada.TransferComponentAnalysis", "skada.TransferComponentAnalysisAdapter", "skada.TransferJointMatching", "skada.TransferJointMatchingAdapter", "skada.TransferSubspaceLearning", "skada.datasets.DomainAwareDataset", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CAN", "skada.deep.CANLoss", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.deep.MCC", "skada.deep.MCCLoss", "skada.deep.MDD", "skada.deep.MDDLoss", "skada.deep.losses.cdd_loss", "skada.deep.losses.dan_loss", "skada.deep.losses.deepcoral_loss", "skada.deep.losses.deepjdot_loss", "skada.deep.losses.mcc_loss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.MaNoScorer", "skada.metrics.MixValScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "skada.per_domain_split", "skada.source_target_split", "skada.utils.check_X_y_domain", "skada.utils.extract_domains_indices", "skada.utils.extract_source_indices", "skada.utils.source_target_merge", "SKADA: SciKit Adaptation", "Users Guide", "Release of SKADA", "Metrics: Compute score for domain adaptation problems", "Computation times"], "titleterms": {"": 114, "0": 114, "2": [13, 18, 19], "2d": [13, 18, 19], "4": 114, "The": 19, "access": 7, "acknowledg": 112, "adapt": [6, 8, 9, 12, 16, 17, 18, 19, 21, 112, 113, 115], "advanc": 21, "adversari": 6, "algorithm": 112, "align": [0, 16, 19], "analysi": 19, "api": 0, "awar": 7, "behavior": 26, "between": [18, 19], "bug": 29, "can": 74, "canloss": 75, "cdan": 76, "cdanloss": 77, "cdd_loss": 88, "chang": 114, "check_x_y_domain": 108, "checklist": 29, "circularvalid": 94, "class": [13, 18, 19], "classic": [6, 8, 9], "classif": [14, 15, 16, 22], "classifi": [13, 14, 15, 16, 21], "classregularizerotmap": 32, "classregularizerotmappingadapt": 33, "comparison": [18, 19, 22], "compat": 0, "compon": 19, "comput": [5, 11, 20, 24, 28, 115, 116], "condit": [14, 15, 16, 17], "content": 112, "contribut": 29, "contributor": 29, "coral": 30, "coraladapt": 31, "covari": 18, "creation": 7, "cross": [21, 26], "cross_val_scor": 25, "da": [0, 10, 12, 17, 21, 22, 112, 113], "dan_loss": 89, "danloss": 78, "dann": [6, 79], "dasvm": 13, "dasvmclassifi": [13, 34], "data": [7, 14, 15, 16], "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 69, 70, 71, 72, 73, 113], "deep": [0, 7, 10, 12, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 112], "deepcor": [8, 80], "deepcoral_loss": 90, "deepcoralloss": 81, "deepembeddedvalid": 95, "deepjdot": [9, 82], "deepjdot_loss": 91, "deepjdotloss": 83, "densiti": 18, "densityreweight": 35, "densityreweightadapt": 36, "differ": 17, "discr": 18, "discriminatorreweight": 37, "discriminatorreweightadapt": 38, "diverg": 8, "document": 29, "doe": 17, "domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 16, 17, 18, 19, 112, 113, 115], "domainawaredataset": 69, "domainshufflesplit": 102, "entropicotmap": 39, "entropicotmappingadapt": 40, "estim": [21, 113], "exampl": [12, 13, 14, 18, 19, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 72, 73, 79, 80, 81, 82, 93, 96, 99, 101, 102, 103, 104, 105, 107, 110, 112], "extract_domains_indic": 109, "extract_source_indic": 110, "file": 29, "full": 15, "galleri": 12, "gaussian": 18, "gaussianreweight": 41, "gaussianreweightadapt": 42, "gener": [13, 14, 15, 16, 17, 18, 19, 23], "grid": 21, "gridsearchcv": 27, "guid": 113, "how": [17, 21, 29], "illustr": [14, 15, 17, 18, 19], "imag": [6, 8, 9, 10], "implement": 112, "importanceweightedscor": 96, "indic": 112, "instal": 112, "jcpot": 15, "jdot": 14, "jdotregressor": 43, "joint": 19, "kernel": 18, "kliepreweight": [18, 44], "kliepreweightadapt": 45, "kmmreweight": 46, "kmmreweightadapt": 47, "labe": 15, "label": [13, 15], "labelprop": 15, "learn": [0, 12, 19, 112], "leaveonedomainout": 103, "licens": 112, "linear": 16, "linearotmap": 48, "linearotmappingadapt": 49, "load": [6, 8, 9, 10], "logo": 23, "loss": [0, 88, 89, 90, 91, 92], "main": 0, "make_da_pipelin": 93, "make_dataset_from_moons_distribut": 70, "make_shifted_blob": 71, "make_shifted_dataset": 72, "make_variable_frequency_dataset": 73, "manoscor": 97, "map": 0, "match": [18, 19], "mcc": 84, "mcc_loss": 92, "mccloss": 85, "mdd": 86, "mddloss": 87, "mean": 18, "method": [0, 6, 8, 9, 10, 12, 15, 17, 18, 19, 22], "metric": [0, 94, 95, 96, 97, 98, 99, 100, 101, 112, 113, 115], "mixvalscor": 98, "mmdlsconsmap": 50, "mmdlsconsmappingadapt": 51, "mmdtarsreweight": 52, "mmdtarsreweightadapt": 53, "model": [0, 6, 8, 9, 15, 113], "model_select": [0, 102, 103, 104, 105], "modul": 0, "mong": 16, "multi": 16, "nearest": 18, "nearestneighborreweight": 54, "nearestneighborreweightadapt": 55, "neighbor": 18, "new": 29, "optim": [9, 17], "ot": 14, "otda": 17, "other": 0, "otmap": 56, "otmappingadapt": 57, "our": [13, 18, 19], "paramet": 10, "per_domain_split": 106, "perdomain": 58, "pipelin": [0, 21, 113], "plan": 14, "plot": [1, 2, 3, 4, 13, 14, 15, 16, 18, 19], "predictionentropyscor": 99, "problem": [17, 18, 19, 115], "procedur": 12, "propag": 15, "pull": 29, "pytorch": 112, "refer": 112, "regress": [14, 15], "regressor": [14, 15], "releas": 114, "request": 29, "reweight": [0, 18], "sampl": [0, 113], "scikit": 112, "score": [18, 19, 21, 113, 115], "search": 21, "select": [0, 113], "selector": 113, "selectsourc": 59, "selecttarget": 60, "setup": 10, "share": 61, "shift": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19], "short": 112, "skada": [0, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "skorch": 10, "softneighborhooddens": 100, "sourc": [1, 2, 3, 4, 14, 15, 16], "source_target_merg": 111, "source_target_split": 107, "sourcetargetshufflesplit": 104, "splitter": 113, "stratifieddomainshufflesplit": 105, "subspac": 19, "subspacealign": 62, "subspacealignmentadapt": 63, "supervisedscor": 101, "svc": 14, "tabl": 112, "target": [1, 2, 3, 4, 13], "test": 113, "time": [5, 11, 20, 24, 28, 113, 116], "tip": 29, "torch": [0, 10], "train": [6, 8, 9, 10, 14, 15, 16], "transfer": 19, "transfercomponentanalysi": 64, "transfercomponentanalysisadapt": 65, "transferjointmatch": 66, "transferjointmatchingadapt": 67, "transfersubspacelearn": 68, "transport": [9, 17], "us": [21, 25, 27, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 72, 73, 79, 80, 81, 82, 93, 96, 99, 101, 102, 103, 104, 105, 107, 110], "usag": 13, "user": 113, "util": [0, 108, 109, 110, 111], "v0": 114, "valid": [12, 21, 26], "visual": 26, "we": [13, 18, 19], "what": 114, "work": 17}})