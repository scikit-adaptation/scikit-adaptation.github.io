Search.setIndex({"alltitles": {"API and modules": [[0, "api-and-modules"]], "Acknowledgements": [[87, "acknowledgements"]], "Adapter": [[88, "adapter"]], "Adapters and Estimators": [[88, "adapters-and-estimators"]], "Advanced DA pipeline": [[19, "advanced-da-pipeline"]], "Adversarial domain adaptation methods.": [[6, "adversarial-domain-adaptation-methods"]], "Comparison of DA classification methods": [[20, "comparison-of-da-classification-methods"]], "Comparison of score between reweighting methods:": [[16, "comparison-of-score-between-reweighting-methods"]], "Comparison of score between subspace methods:": [[17, "comparison-of-score-between-subspace-methods"]], "Computation times": [[5, "computation-times"], [10, "computation-times"], [18, "computation-times"], [22, "computation-times"], [26, "computation-times"], [90, "computation-times"]], "Contents": [[87, "contents"]], "DA Adapter pipeline": [[19, "da-adapter-pipeline"]], "DA Classifier estimator": [[19, "da-classifier-estimator"]], "DA dataset": [[19, "da-dataset"]], "DA estimator in a pipeline": [[19, "da-estimator-in-a-pipeline"]], "DA estimator with grid search": [[19, "da-estimator-with-grid-search"]], "DA estimators with score cross-validation": [[19, "da-estimators-with-score-cross-validation"]], "DA methods": [[11, "da-methods"]], "DA metrics": [[87, "da-metrics"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "DA pipeline": [[0, "da-pipeline"]], "DA validation procedures": [[11, "da-validation-procedures"]], "DASVM classifier example": [[12, "dasvm-classifier-example"]], "Dataset": [[88, "dataset"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Deep learning DA methods": [[11, "deep-learning-da-methods"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "Deep learning domain adaptation algorithms": [[87, "deep-learning-domain-adaptation-algorithms"]], "Different OTDA methods": [[15, "different-otda-methods"]], "Divergence domain adaptation methods.": [[7, "divergence-domain-adaptation-methods"]], "Domain Adaptation Datasets": [[11, "domain-adaptation-datasets"]], "Domain adaptation algorithms": [[87, "domain-adaptation-algorithms"]], "Examples gallery": [[11, "examples-gallery"]], "Examples using skada.CORAL": [[27, "examples-using-skada-coral"]], "Examples using skada.CORALAdapter": [[28, "examples-using-skada-coraladapter"]], "Examples using skada.ClassRegularizerOTMapping": [[29, "examples-using-skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMappingAdapter": [[30, "examples-using-skada-classregularizerotmappingadapter"]], "Examples using skada.DASVMClassifier": [[31, "examples-using-skada-dasvmclassifier"]], "Examples using skada.DensityReweight": [[32, "examples-using-skada-densityreweight"]], "Examples using skada.DiscriminatorReweight": [[34, "examples-using-skada-discriminatorreweight"]], "Examples using skada.EntropicOTMapping": [[36, "examples-using-skada-entropicotmapping"]], "Examples using skada.EntropicOTMappingAdapter": [[37, "examples-using-skada-entropicotmappingadapter"]], "Examples using skada.GaussianReweight": [[38, "examples-using-skada-gaussianreweight"]], "Examples using skada.GaussianReweightAdapter": [[39, "examples-using-skada-gaussianreweightadapter"]], "Examples using skada.JDOTRegressor": [[40, "examples-using-skada-jdotregressor"]], "Examples using skada.KLIEPReweight": [[41, "examples-using-skada-kliepreweight"]], "Examples using skada.KMMReweight": [[43, "examples-using-skada-kmmreweight"]], "Examples using skada.KMMReweightAdapter": [[44, "examples-using-skada-kmmreweightadapter"]], "Examples using skada.LinearOTMapping": [[45, "examples-using-skada-linearotmapping"]], "Examples using skada.LinearOTMappingAdapter": [[46, "examples-using-skada-linearotmappingadapter"]], "Examples using skada.MMDLSConSMapping": [[47, "examples-using-skada-mmdlsconsmapping"]], "Examples using skada.MMDTarSReweight": [[49, "examples-using-skada-mmdtarsreweight"]], "Examples using skada.NearestNeighborReweight": [[51, "examples-using-skada-nearestneighborreweight"]], "Examples using skada.OTMapping": [[53, "examples-using-skada-otmapping"]], "Examples using skada.OTMappingAdapter": [[54, "examples-using-skada-otmappingadapter"]], "Examples using skada.PerDomain": [[55, "examples-using-skada-perdomain"]], "Examples using skada.Shared": [[56, "examples-using-skada-shared"]], "Examples using skada.SubspaceAlignment": [[57, "examples-using-skada-subspacealignment"]], "Examples using skada.TransferComponentAnalysis": [[59, "examples-using-skada-transfercomponentanalysis"]], "Examples using skada.TransferJointMatching": [[61, "examples-using-skada-transferjointmatching"]], "Examples using skada.TransferSubspaceLearning": [[63, "examples-using-skada-transfersubspacelearning"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[64, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_shifted_datasets": [[66, "examples-using-skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[67, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.deep.DANN": [[71, "examples-using-skada-deep-dann"]], "Examples using skada.deep.DeepCoral": [[72, "examples-using-skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoralLoss": [[73, "examples-using-skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepJDOT": [[74, "examples-using-skada-deep-deepjdot"]], "Examples using skada.make_da_pipeline": [[76, "examples-using-skada-make-da-pipeline"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[79, "examples-using-skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[80, "examples-using-skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.SupervisedScorer": [[82, "examples-using-skada-metrics-supervisedscorer"]], "Examples using skada.model_selection.DomainShuffleSplit": [[83, "examples-using-skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[84, "examples-using-skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[85, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[86, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "Generate concept drift classification dataset and plot it": [[13, "generate-concept-drift-classification-dataset-and-plot-it"], [14, "generate-concept-drift-classification-dataset-and-plot-it"]], "Generate concept drift dataset": [[15, "generate-concept-drift-dataset"]], "Generate concept drift regression dataset and plot it": [[13, "generate-concept-drift-regression-dataset-and-plot-it"], [14, "generate-concept-drift-regression-dataset-and-plot-it"]], "How does OTDA works?": [[15, "how-does-otda-works"]], "How to use SKADA": [[19, "how-to-use-skada"]], "Illustration of the DA problem": [[15, "illustration-of-the-da-problem"]], "Illustration of the Density Reweighting method": [[16, "illustration-of-the-density-reweighting-method"]], "Illustration of the Discr. reweighting method": [[16, "illustration-of-the-discr-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[16, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the KLIEPReweight method": [[16, "illustration-of-the-kliepreweight-method"]], "Illustration of the Kernel Mean Matching method": [[16, "illustration-of-the-kernel-mean-matching-method"]], "Illustration of the Nearest Neighbor reweighting method": [[16, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the OT plan": [[13, "illustration-of-the-ot-plan"]], "Illustration of the Subspace Alignment method": [[17, "illustration-of-the-subspace-alignment-method"]], "Illustration of the Transfer Component Analysis method": [[17, "illustration-of-the-transfer-component-analysis-method"]], "Illustration of the Transfer Joint Matching method": [[17, "illustration-of-the-transfer-joint-matching-method"]], "Illustration of the Transfer Subspace Learning method": [[17, "illustration-of-the-transfer-subspace-learning-method"]], "Illustration of the problem with no domain adaptation": [[16, "illustration-of-the-problem-with-no-domain-adaptation"], [17, "illustration-of-the-problem-with-no-domain-adaptation"]], "Illustration of the propagated labels": [[14, "illustration-of-the-propagated-labels"], [14, "id3"]], "Implemented algorithms": [[87, "implemented-algorithms"]], "Indices and tables": [[87, "indices-and-tables"]], "Installation": [[87, "installation"]], "JDOT Regressor and Classifier examples": [[13, "jdot-regressor-and-classifier-examples"]], "Label Propagation methods": [[14, "label-propagation-methods"]], "Labeling the target dataset": [[12, "labeling-the-target-dataset"]], "License": [[87, "license"]], "Load the image datasets": [[6, "load-the-image-datasets"], [7, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"]], "Main module skada": [[0, "module-skada"]], "Metrics for DA": [[88, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[89, "metrics-compute-score-for-domain-adaptation-problems"]], "Model Selection": [[88, "model-selection"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Optimal Transport Domain Adaptation": [[15, "optimal-transport-domain-adaptation"]], "Optimal Transport Domain Adaptation (OTDA)": [[15, "optimal-transport-domain-adaptation-otda"]], "Optimal transport domain adaptation methods.": [[8, "optimal-transport-domain-adaptation-methods"]], "Other DA methods": [[0, "other-da-methods"]], "Pipeline": [[88, "pipeline"]], "Plot dataset source domain and shifted target domain": [[1, "plot-dataset-source-domain-and-shifted-target-domain"], [2, "plot-dataset-source-domain-and-shifted-target-domain"], [3, "plot-dataset-source-domain-and-shifted-target-domain"], [4, "plot-dataset-source-domain-and-shifted-target-domain"]], "Plot of the dataset:": [[16, "plot-of-the-dataset"], [17, "plot-of-the-dataset"]], "Plot the full logo": [[21, "plot-the-full-logo"]], "Plot the full logo in white": [[21, "plot-the-full-logo-in-white"]], "Plot the small logo": [[21, "plot-the-small-logo"]], "Plots of the dataset": [[12, "plots-of-the-dataset"]], "References": [[87, "references"]], "Reweighting method example on covariate shift dataset": [[16, "reweighting-method-example-on-covariate-shift-dataset"]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[87, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "SKADA logo generation": [[21, "skada-logo-generation"]], "SKADA: SciKit Domain Adaptation": [[87, "skada-scikit-domain-adaptation"]], "Sample Domain": [[88, "sample-domain"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Scoring": [[88, "scoring"]], "Selector": [[88, "selector"]], "Short examples": [[87, "short-examples"]], "Splitters": [[88, "splitters"]], "Subspace method example on subspace shift dataset": [[17, "subspace-method-example-on-subspace-shift-dataset"]], "Test-time Domain Adaptation": [[88, "test-time-domain-adaptation"]], "The reweighting methods": [[16, "the-reweighting-methods"]], "The subspaces methods": [[17, "the-subspaces-methods"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Train a DeepCoral model": [[7, "train-a-deepcoral-model"]], "Train a DeepJDOT model": [[8, "train-a-deepjdot-model"]], "Train a classic model": [[6, "train-a-classic-model"], [7, "train-a-classic-model"], [8, "train-a-classic-model"]], "Train a classifier on source data": [[13, "train-a-classifier-on-source-data"], [14, "train-a-classifier-on-source-data"]], "Train a regressor on source data": [[13, "train-a-regressor-on-source-data"], [14, "train-a-regressor-on-source-data"]], "Train the full Labe Propagation model": [[14, "train-the-full-labe-propagation-model"]], "Train with JDOT classifier": [[13, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[13, "train-with-jdot-classifier-with-svc"]], "Train with JDOT regressor": [[13, "train-with-jdot-regressor"]], "Train with LabelProp + classifier": [[14, "train-with-labelprop-classifier"]], "Training parameters": [[9, "training-parameters"]], "Training setup for deep DA method.": [[9, "training-setup-for-deep-da-method"]], "Training with skorch": [[9, "training-with-skorch"]], "Training with skorch with dataset": [[9, "training-with-skorch-with-dataset"]], "Training with torch": [[9, "training-with-torch"]], "Usage of the DASVMClassifier": [[12, "usage-of-the-dasvmclassifier"]], "Users Guide": [[88, "users-guide"]], "Using GridSearchCV with skada": [[25, "using-gridsearchcv-with-skada"]], "Using cross_val_score with skada": [[23, "using-cross-val-score-with-skada"]], "Utilities": [[0, "utilities"]], "Visualizing cross-validation behavior in skada": [[24, "visualizing-cross-validation-behavior-in-skada"]], "We generate our 2D dataset with 2 classes": [[12, "we-generate-our-2d-dataset-with-2-classes"], [16, "we-generate-our-2d-dataset-with-2-classes"], [17, "we-generate-our-2d-dataset-with-2-classes"]], "skada.CORAL": [[27, "skada-coral"]], "skada.CORALAdapter": [[28, "skada-coraladapter"]], "skada.ClassRegularizerOTMapping": [[29, "skada-classregularizerotmapping"]], "skada.ClassRegularizerOTMappingAdapter": [[30, "skada-classregularizerotmappingadapter"]], "skada.DASVMClassifier": [[31, "skada-dasvmclassifier"]], "skada.DensityReweight": [[32, "skada-densityreweight"]], "skada.DensityReweightAdapter": [[33, "skada-densityreweightadapter"]], "skada.DiscriminatorReweight": [[34, "skada-discriminatorreweight"]], "skada.DiscriminatorReweightAdapter": [[35, "skada-discriminatorreweightadapter"]], "skada.EntropicOTMapping": [[36, "skada-entropicotmapping"]], "skada.EntropicOTMappingAdapter": [[37, "skada-entropicotmappingadapter"]], "skada.GaussianReweight": [[38, "skada-gaussianreweight"]], "skada.GaussianReweightAdapter": [[39, "skada-gaussianreweightadapter"]], "skada.JDOTRegressor": [[40, "skada-jdotregressor"]], "skada.KLIEPReweight": [[41, "skada-kliepreweight"]], "skada.KLIEPReweightAdapter": [[42, "skada-kliepreweightadapter"]], "skada.KMMReweight": [[43, "skada-kmmreweight"]], "skada.KMMReweightAdapter": [[44, "skada-kmmreweightadapter"]], "skada.LinearOTMapping": [[45, "skada-linearotmapping"]], "skada.LinearOTMappingAdapter": [[46, "skada-linearotmappingadapter"]], "skada.MMDLSConSMapping": [[47, "skada-mmdlsconsmapping"]], "skada.MMDLSConSMappingAdapter": [[48, "skada-mmdlsconsmappingadapter"]], "skada.MMDTarSReweight": [[49, "skada-mmdtarsreweight"]], "skada.MMDTarSReweightAdapter": [[50, "skada-mmdtarsreweightadapter"]], "skada.NearestNeighborReweight": [[51, "skada-nearestneighborreweight"]], "skada.NearestNeighborReweightAdapter": [[52, "skada-nearestneighborreweightadapter"]], "skada.OTMapping": [[53, "skada-otmapping"]], "skada.OTMappingAdapter": [[54, "skada-otmappingadapter"]], "skada.PerDomain": [[55, "skada-perdomain"]], "skada.Shared": [[56, "skada-shared"]], "skada.SubspaceAlignment": [[57, "skada-subspacealignment"]], "skada.SubspaceAlignmentAdapter": [[58, "skada-subspacealignmentadapter"]], "skada.TransferComponentAnalysis": [[59, "skada-transfercomponentanalysis"]], "skada.TransferComponentAnalysisAdapter": [[60, "skada-transfercomponentanalysisadapter"]], "skada.TransferJointMatching": [[61, "skada-transferjointmatching"]], "skada.TransferJointMatchingAdapter": [[62, "skada-transferjointmatchingadapter"]], "skada.TransferSubspaceLearning": [[63, "skada-transfersubspacelearning"]], "skada.datasets.make_dataset_from_moons_distribution": [[64, "skada-datasets-make-dataset-from-moons-distribution"]], "skada.datasets.make_shifted_blobs": [[65, "skada-datasets-make-shifted-blobs"]], "skada.datasets.make_shifted_datasets": [[66, "skada-datasets-make-shifted-datasets"]], "skada.datasets.make_variable_frequency_dataset": [[67, "skada-datasets-make-variable-frequency-dataset"]], "skada.deep.CDAN": [[68, "skada-deep-cdan"]], "skada.deep.CDANLoss": [[69, "skada-deep-cdanloss"]], "skada.deep.DANLoss": [[70, "skada-deep-danloss"]], "skada.deep.DANN": [[71, "skada-deep-dann"]], "skada.deep.DeepCoral": [[72, "skada-deep-deepcoral"]], "skada.deep.DeepCoralLoss": [[73, "skada-deep-deepcoralloss"]], "skada.deep.DeepJDOT": [[74, "skada-deep-deepjdot"]], "skada.deep.DeepJDOTLoss": [[75, "skada-deep-deepjdotloss"]], "skada.make_da_pipeline": [[76, "skada-make-da-pipeline"]], "skada.metrics.CircularValidation": [[77, "skada-metrics-circularvalidation"]], "skada.metrics.DeepEmbeddedValidation": [[78, "skada-metrics-deepembeddedvalidation"]], "skada.metrics.ImportanceWeightedScorer": [[79, "skada-metrics-importanceweightedscorer"]], "skada.metrics.PredictionEntropyScorer": [[80, "skada-metrics-predictionentropyscorer"]], "skada.metrics.SoftNeighborhoodDensity": [[81, "skada-metrics-softneighborhooddensity"]], "skada.metrics.SupervisedScorer": [[82, "skada-metrics-supervisedscorer"]], "skada.model_selection.DomainShuffleSplit": [[83, "skada-model-selection-domainshufflesplit"]], "skada.model_selection.LeaveOneDomainOut": [[84, "skada-model-selection-leaveonedomainout"]], "skada.model_selection.SourceTargetShuffleSplit": [[85, "skada-model-selection-sourcetargetshufflesplit"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[86, "skada-model-selection-stratifieddomainshufflesplit"]]}, "docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_label_prop_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/plot_subspace", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "gen_modules/skada.CORAL", "gen_modules/skada.CORALAdapter", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.ClassRegularizerOTMappingAdapter", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DensityReweightAdapter", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.DiscriminatorReweightAdapter", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.EntropicOTMappingAdapter", "gen_modules/skada.GaussianReweight", "gen_modules/skada.GaussianReweightAdapter", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.KLIEPReweightAdapter", "gen_modules/skada.KMMReweight", "gen_modules/skada.KMMReweightAdapter", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.LinearOTMappingAdapter", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDLSConSMappingAdapter", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.MMDTarSReweightAdapter", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.NearestNeighborReweightAdapter", "gen_modules/skada.OTMapping", "gen_modules/skada.OTMappingAdapter", "gen_modules/skada.PerDomain", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.SubspaceAlignmentAdapter", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.TransferComponentAnalysisAdapter", "gen_modules/skada.TransferJointMatching", "gen_modules/skada.TransferJointMatchingAdapter", "gen_modules/skada.TransferSubspaceLearning", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "index", "quickstart", "scorer", "sg_execution_times"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_label_prop_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/plot_subspace.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.CORALAdapter.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.ClassRegularizerOTMappingAdapter.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DensityReweightAdapter.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.DiscriminatorReweightAdapter.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.EntropicOTMappingAdapter.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.GaussianReweightAdapter.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.KLIEPReweightAdapter.rst", "gen_modules/skada.KMMReweight.rst", "gen_modules/skada.KMMReweightAdapter.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.LinearOTMappingAdapter.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDLSConSMappingAdapter.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.MMDTarSReweightAdapter.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.NearestNeighborReweightAdapter.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.OTMappingAdapter.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.SubspaceAlignmentAdapter.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.TransferComponentAnalysisAdapter.rst", "gen_modules/skada.TransferJointMatching.rst", "gen_modules/skada.TransferJointMatchingAdapter.rst", "gen_modules/skada.TransferSubspaceLearning.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "index.rst", "quickstart.md", "scorer.rst", "sg_execution_times.rst"], "indexentries": {"cdan() (in module skada.deep)": [[68, "skada.deep.CDAN", false]], "cdanloss (class in skada.deep)": [[69, "skada.deep.CDANLoss", false]], "circularvalidation (class in skada.metrics)": [[77, "skada.metrics.CircularValidation", false]], "classregularizerotmapping() (in module skada)": [[29, "skada.ClassRegularizerOTMapping", false]], "classregularizerotmappingadapter() (in module skada)": [[30, "skada.ClassRegularizerOTMappingAdapter", false]], "coral() (in module skada)": [[27, "skada.CORAL", false]], "coraladapter() (in module skada)": [[28, "skada.CORALAdapter", false]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[78, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss", false]], "danloss (class in skada.deep)": [[70, "skada.deep.DANLoss", false]], "dann() (in module skada.deep)": [[71, "skada.deep.DANN", false]], "dasvmclassifier() (in module skada)": [[31, "skada.DASVMClassifier", false]], "deepcoral() (in module skada.deep)": [[72, "skada.deep.DeepCoral", false]], "deepcoralloss (class in skada.deep)": [[73, "skada.deep.DeepCoralLoss", false]], "deepembeddedvalidation (class in skada.metrics)": [[78, "skada.metrics.DeepEmbeddedValidation", false]], "deepjdot() (in module skada.deep)": [[74, "skada.deep.DeepJDOT", false]], "deepjdotloss (class in skada.deep)": [[75, "skada.deep.DeepJDOTLoss", false]], "densityreweight() (in module skada)": [[32, "skada.DensityReweight", false]], "densityreweightadapter (class in skada)": [[33, "skada.DensityReweightAdapter", false]], "discriminatorreweight() (in module skada)": [[34, "skada.DiscriminatorReweight", false]], "discriminatorreweightadapter (class in skada)": [[35, "skada.DiscriminatorReweightAdapter", false]], "domainshufflesplit (class in skada.model_selection)": [[83, "skada.model_selection.DomainShuffleSplit", false]], "entropicotmapping() (in module skada)": [[36, "skada.EntropicOTMapping", false]], "entropicotmappingadapter() (in module skada)": [[37, "skada.EntropicOTMappingAdapter", false]], "fit() (skada.densityreweightadapter method)": [[33, "skada.DensityReweightAdapter.fit", false]], "fit() (skada.discriminatorreweightadapter method)": [[35, "skada.DiscriminatorReweightAdapter.fit", false]], "fit() (skada.gaussianreweightadapter method)": [[39, "skada.GaussianReweightAdapter.fit", false]], "fit() (skada.kliepreweightadapter method)": [[42, "skada.KLIEPReweightAdapter.fit", false]], "fit() (skada.kmmreweightadapter method)": [[44, "skada.KMMReweightAdapter.fit", false]], "fit() (skada.mmdtarsreweightadapter method)": [[50, "skada.MMDTarSReweightAdapter.fit", false]], "fit() (skada.nearestneighborreweightadapter method)": [[52, "skada.NearestNeighborReweightAdapter.fit", false]], "forward() (skada.deep.cdanloss method)": [[69, "skada.deep.CDANLoss.forward", false]], "forward() (skada.deep.danloss method)": [[70, "skada.deep.DANLoss.forward", false]], "forward() (skada.deep.deepcoralloss method)": [[73, "skada.deep.DeepCoralLoss.forward", false]], "forward() (skada.deep.deepjdotloss method)": [[75, "skada.deep.DeepJDOTLoss.forward", false]], "gaussianreweight() (in module skada)": [[38, "skada.GaussianReweight", false]], "gaussianreweightadapter (class in skada)": [[39, "skada.GaussianReweightAdapter", false]], "get_estimator() (skada.perdomain method)": [[55, "skada.PerDomain.get_estimator", false]], "get_estimator() (skada.shared method)": [[56, "skada.Shared.get_estimator", false]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[84, "skada.model_selection.LeaveOneDomainOut.get_n_splits", false]], "importanceweightedscorer (class in skada.metrics)": [[79, "skada.metrics.ImportanceWeightedScorer", false]], "jdotregressor() (in module skada)": [[40, "skada.JDOTRegressor", false]], "kliepreweight() (in module skada)": [[41, "skada.KLIEPReweight", false]], "kliepreweightadapter (class in skada)": [[42, "skada.KLIEPReweightAdapter", false]], "kmmreweight() (in module skada)": [[43, "skada.KMMReweight", false]], "kmmreweightadapter (class in skada)": [[44, "skada.KMMReweightAdapter", false]], "leaveonedomainout (class in skada.model_selection)": [[84, "skada.model_selection.LeaveOneDomainOut", false]], "linearotmapping() (in module skada)": [[45, "skada.LinearOTMapping", false]], "linearotmappingadapter() (in module skada)": [[46, "skada.LinearOTMappingAdapter", false]], "make_da_pipeline() (in module skada)": [[76, "skada.make_da_pipeline", false]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[64, "skada.datasets.make_dataset_from_moons_distribution", false]], "make_shifted_blobs() (in module skada.datasets)": [[65, "skada.datasets.make_shifted_blobs", false]], "make_shifted_datasets() (in module skada.datasets)": [[66, "skada.datasets.make_shifted_datasets", false]], "make_variable_frequency_dataset() (in module skada.datasets)": [[67, "skada.datasets.make_variable_frequency_dataset", false]], "mmdlsconsmapping() (in module skada)": [[47, "skada.MMDLSConSMapping", false]], "mmdlsconsmappingadapter() (in module skada)": [[48, "skada.MMDLSConSMappingAdapter", false]], "mmdtarsreweight() (in module skada)": [[49, "skada.MMDTarSReweight", false]], "mmdtarsreweightadapter (class in skada)": [[50, "skada.MMDTarSReweightAdapter", false]], "module": [[0, "module-skada", false], [0, "module-skada.datasets", false], [0, "module-skada.deep", false], [0, "module-skada.metrics", false], [0, "module-skada.model_selection", false]], "nearestneighborreweight() (in module skada)": [[51, "skada.NearestNeighborReweight", false]], "nearestneighborreweightadapter (class in skada)": [[52, "skada.NearestNeighborReweightAdapter", false]], "otmapping() (in module skada)": [[53, "skada.OTMapping", false]], "otmappingadapter() (in module skada)": [[54, "skada.OTMappingAdapter", false]], "perdomain (class in skada)": [[55, "skada.PerDomain", false]], "predictionentropyscorer (class in skada.metrics)": [[80, "skada.metrics.PredictionEntropyScorer", false]], "set_decision_function_request() (skada.perdomain method)": [[55, "skada.PerDomain.set_decision_function_request", false]], "set_decision_function_request() (skada.shared method)": [[56, "skada.Shared.set_decision_function_request", false]], "set_fit_request() (skada.densityreweightadapter method)": [[33, "skada.DensityReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.discriminatorreweightadapter method)": [[35, "skada.DiscriminatorReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.gaussianreweightadapter method)": [[39, "skada.GaussianReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kliepreweightadapter method)": [[42, "skada.KLIEPReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kmmreweightadapter method)": [[44, "skada.KMMReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.mmdtarsreweightadapter method)": [[50, "skada.MMDTarSReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.nearestneighborreweightadapter method)": [[52, "skada.NearestNeighborReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.perdomain method)": [[55, "skada.PerDomain.set_fit_request", false]], "set_fit_request() (skada.shared method)": [[56, "skada.Shared.set_fit_request", false]], "set_partial_fit_request() (skada.perdomain method)": [[55, "skada.PerDomain.set_partial_fit_request", false]], "set_partial_fit_request() (skada.shared method)": [[56, "skada.Shared.set_partial_fit_request", false]], "set_predict_log_proba_request() (skada.perdomain method)": [[55, "skada.PerDomain.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.shared method)": [[56, "skada.Shared.set_predict_log_proba_request", false]], "set_predict_proba_request() (skada.perdomain method)": [[55, "skada.PerDomain.set_predict_proba_request", false]], "set_predict_proba_request() (skada.shared method)": [[56, "skada.Shared.set_predict_proba_request", false]], "set_predict_request() (skada.perdomain method)": [[55, "skada.PerDomain.set_predict_request", false]], "set_predict_request() (skada.shared method)": [[56, "skada.Shared.set_predict_request", false]], "set_score_request() (skada.metrics.circularvalidation method)": [[77, "skada.metrics.CircularValidation.set_score_request", false]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[78, "skada.metrics.DeepEmbeddedValidation.set_score_request", false]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[79, "skada.metrics.ImportanceWeightedScorer.set_score_request", false]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[80, "skada.metrics.PredictionEntropyScorer.set_score_request", false]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[81, "skada.metrics.SoftNeighborhoodDensity.set_score_request", false]], "set_score_request() (skada.metrics.supervisedscorer method)": [[82, "skada.metrics.SupervisedScorer.set_score_request", false]], "set_score_request() (skada.perdomain method)": [[55, "skada.PerDomain.set_score_request", false]], "set_score_request() (skada.shared method)": [[56, "skada.Shared.set_score_request", false]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[83, "skada.model_selection.DomainShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[84, "skada.model_selection.LeaveOneDomainOut.set_split_request", false]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[85, "skada.model_selection.SourceTargetShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[86, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request", false]], "set_transform_request() (skada.densityreweightadapter method)": [[33, "skada.DensityReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.discriminatorreweightadapter method)": [[35, "skada.DiscriminatorReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.gaussianreweightadapter method)": [[39, "skada.GaussianReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kliepreweightadapter method)": [[42, "skada.KLIEPReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kmmreweightadapter method)": [[44, "skada.KMMReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.mmdtarsreweightadapter method)": [[50, "skada.MMDTarSReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.nearestneighborreweightadapter method)": [[52, "skada.NearestNeighborReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.perdomain method)": [[55, "skada.PerDomain.set_transform_request", false]], "set_transform_request() (skada.shared method)": [[56, "skada.Shared.set_transform_request", false]], "shared (class in skada)": [[56, "skada.Shared", false]], "skada": [[0, "module-skada", false]], "skada.datasets": [[0, "module-skada.datasets", false]], "skada.deep": [[0, "module-skada.deep", false]], "skada.metrics": [[0, "module-skada.metrics", false]], "skada.model_selection": [[0, "module-skada.model_selection", false]], "softneighborhooddensity (class in skada.metrics)": [[81, "skada.metrics.SoftNeighborhoodDensity", false]], "sourcetargetshufflesplit (class in skada.model_selection)": [[85, "skada.model_selection.SourceTargetShuffleSplit", false]], "split() (skada.model_selection.leaveonedomainout method)": [[84, "skada.model_selection.LeaveOneDomainOut.split", false]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[86, "skada.model_selection.StratifiedDomainShuffleSplit.split", false]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[86, "skada.model_selection.StratifiedDomainShuffleSplit", false]], "subspacealignment() (in module skada)": [[57, "skada.SubspaceAlignment", false]], "subspacealignmentadapter() (in module skada)": [[58, "skada.SubspaceAlignmentAdapter", false]], "supervisedscorer (class in skada.metrics)": [[82, "skada.metrics.SupervisedScorer", false]], "transfercomponentanalysis() (in module skada)": [[59, "skada.TransferComponentAnalysis", false]], "transfercomponentanalysisadapter() (in module skada)": [[60, "skada.TransferComponentAnalysisAdapter", false]], "transferjointmatching() (in module skada)": [[61, "skada.TransferJointMatching", false]], "transferjointmatchingadapter() (in module skada)": [[62, "skada.TransferJointMatchingAdapter", false]], "transfersubspacelearning() (in module skada)": [[63, "skada.TransferSubspaceLearning", false]]}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[27, 1, 1, "", "CORAL"], [28, 1, 1, "", "CORALAdapter"], [29, 1, 1, "", "ClassRegularizerOTMapping"], [30, 1, 1, "", "ClassRegularizerOTMappingAdapter"], [31, 1, 1, "", "DASVMClassifier"], [32, 1, 1, "", "DensityReweight"], [33, 2, 1, "", "DensityReweightAdapter"], [34, 1, 1, "", "DiscriminatorReweight"], [35, 2, 1, "", "DiscriminatorReweightAdapter"], [36, 1, 1, "", "EntropicOTMapping"], [37, 1, 1, "", "EntropicOTMappingAdapter"], [38, 1, 1, "", "GaussianReweight"], [39, 2, 1, "", "GaussianReweightAdapter"], [40, 1, 1, "", "JDOTRegressor"], [41, 1, 1, "", "KLIEPReweight"], [42, 2, 1, "", "KLIEPReweightAdapter"], [43, 1, 1, "", "KMMReweight"], [44, 2, 1, "", "KMMReweightAdapter"], [45, 1, 1, "", "LinearOTMapping"], [46, 1, 1, "", "LinearOTMappingAdapter"], [47, 1, 1, "", "MMDLSConSMapping"], [48, 1, 1, "", "MMDLSConSMappingAdapter"], [49, 1, 1, "", "MMDTarSReweight"], [50, 2, 1, "", "MMDTarSReweightAdapter"], [51, 1, 1, "", "NearestNeighborReweight"], [52, 2, 1, "", "NearestNeighborReweightAdapter"], [53, 1, 1, "", "OTMapping"], [54, 1, 1, "", "OTMappingAdapter"], [55, 2, 1, "", "PerDomain"], [56, 2, 1, "", "Shared"], [57, 1, 1, "", "SubspaceAlignment"], [58, 1, 1, "", "SubspaceAlignmentAdapter"], [59, 1, 1, "", "TransferComponentAnalysis"], [60, 1, 1, "", "TransferComponentAnalysisAdapter"], [61, 1, 1, "", "TransferJointMatching"], [62, 1, 1, "", "TransferJointMatchingAdapter"], [63, 1, 1, "", "TransferSubspaceLearning"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [76, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"]], "skada.DensityReweightAdapter": [[33, 3, 1, "", "fit"], [33, 3, 1, "", "set_fit_request"], [33, 3, 1, "", "set_transform_request"]], "skada.DiscriminatorReweightAdapter": [[35, 3, 1, "", "fit"], [35, 3, 1, "", "set_fit_request"], [35, 3, 1, "", "set_transform_request"]], "skada.GaussianReweightAdapter": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "set_fit_request"], [39, 3, 1, "", "set_transform_request"]], "skada.KLIEPReweightAdapter": [[42, 3, 1, "", "fit"], [42, 3, 1, "", "set_fit_request"], [42, 3, 1, "", "set_transform_request"]], "skada.KMMReweightAdapter": [[44, 3, 1, "", "fit"], [44, 3, 1, "", "set_fit_request"], [44, 3, 1, "", "set_transform_request"]], "skada.MMDTarSReweightAdapter": [[50, 3, 1, "", "fit"], [50, 3, 1, "", "set_fit_request"], [50, 3, 1, "", "set_transform_request"]], "skada.NearestNeighborReweightAdapter": [[52, 3, 1, "", "fit"], [52, 3, 1, "", "set_fit_request"], [52, 3, 1, "", "set_transform_request"]], "skada.PerDomain": [[55, 3, 1, "", "get_estimator"], [55, 3, 1, "", "set_decision_function_request"], [55, 3, 1, "", "set_fit_request"], [55, 3, 1, "", "set_partial_fit_request"], [55, 3, 1, "", "set_predict_log_proba_request"], [55, 3, 1, "", "set_predict_proba_request"], [55, 3, 1, "", "set_predict_request"], [55, 3, 1, "", "set_score_request"], [55, 3, 1, "", "set_transform_request"]], "skada.Shared": [[56, 3, 1, "", "get_estimator"], [56, 3, 1, "", "set_decision_function_request"], [56, 3, 1, "", "set_fit_request"], [56, 3, 1, "", "set_partial_fit_request"], [56, 3, 1, "", "set_predict_log_proba_request"], [56, 3, 1, "", "set_predict_proba_request"], [56, 3, 1, "", "set_predict_request"], [56, 3, 1, "", "set_score_request"], [56, 3, 1, "", "set_transform_request"]], "skada.datasets": [[64, 1, 1, "", "make_dataset_from_moons_distribution"], [65, 1, 1, "", "make_shifted_blobs"], [66, 1, 1, "", "make_shifted_datasets"], [67, 1, 1, "", "make_variable_frequency_dataset"]], "skada.deep": [[68, 1, 1, "", "CDAN"], [69, 2, 1, "", "CDANLoss"], [70, 2, 1, "", "DANLoss"], [71, 1, 1, "", "DANN"], [72, 1, 1, "", "DeepCoral"], [73, 2, 1, "", "DeepCoralLoss"], [74, 1, 1, "", "DeepJDOT"], [75, 2, 1, "", "DeepJDOTLoss"]], "skada.deep.CDANLoss": [[69, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[70, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[73, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[75, 3, 1, "", "forward"]], "skada.metrics": [[77, 2, 1, "", "CircularValidation"], [78, 2, 1, "", "DeepEmbeddedValidation"], [79, 2, 1, "", "ImportanceWeightedScorer"], [80, 2, 1, "", "PredictionEntropyScorer"], [81, 2, 1, "", "SoftNeighborhoodDensity"], [82, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[77, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[78, 3, 1, "", "cross_entropy_loss"], [78, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[79, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[80, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[81, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[82, 3, 1, "", "set_score_request"]], "skada.model_selection": [[83, 2, 1, "", "DomainShuffleSplit"], [84, 2, 1, "", "LeaveOneDomainOut"], [85, 2, 1, "", "SourceTargetShuffleSplit"], [86, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[83, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[84, 3, 1, "", "get_n_splits"], [84, 3, 1, "", "set_split_request"], [84, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[85, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[86, 3, 1, "", "set_split_request"], [86, 3, 1, "", "split"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [3, 4, 7, 12, 16, 17, 20, 21, 23, 24, 25, 48, 51, 54, 63, 66, 68, 71, 72, 74, 79, 82, 87, 88, 89], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 81, 83, 86, 87, 88, 89, 90], "00": [5, 7, 15, 18, 22, 23, 26, 90], "0000ff": 20, "001": [16, 20, 24], "00e": 20, "01": [6, 7, 8, 12, 13, 18, 20, 22, 23, 24, 25, 61, 62, 63, 90], "02": [5, 10, 17, 18, 24, 26, 90], "02291": 87, "0267": 6, "03": [7, 10, 26, 90], "0310": 6, "0386": 8, "04": [10, 18, 19, 90], "0402": 6, "0434": 6, "0492": 8, "05": [3, 7, 20, 25, 40, 47, 48, 81], "0524": 7, "06": [13, 14, 20, 41, 42, 43, 44, 49, 50], "060_4_0699": 16, "0638": 6, "0668": 6, "07": 10, "07117994f0971b2fc2df95adb373c31c3d313442": 87, "0719": 7, "075493682966016": 13, "08": [20, 29, 30, 36, 37, 45, 46], "0890": 8, "09": 76, "0978": 6, "0x7ff84c16c460": 12, "1": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 55, 56, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "10": [1, 2, 4, 6, 7, 9, 12, 13, 14, 15, 16, 19, 20, 21, 24, 29, 30, 40, 47, 48, 49, 50, 64, 65, 67, 83, 84, 85, 86, 87], "100": [4, 7, 12, 13, 14, 16, 17, 20, 21, 40, 41, 42, 43, 44, 47, 48, 61, 62, 63, 64, 65, 66, 67], "1000": [4, 16, 20, 31, 36, 37, 41, 42, 43, 44, 49, 50], "100000": [20, 53, 54], "1009": 87, "100_000": [53, 54], "10155": 87, "1018": 4, "1022": 7, "10288": 87, "1031": 7, "1044": 87, "105": [1, 87], "1070": 8, "10e": [29, 30, 36, 37], "10it": 7, "11": [7, 8, 31, 77, 87], "110": 21, "1100": 4, "11140660": 7, "112": 26, "12": [7, 10, 15, 16, 17, 72, 73, 87, 90], "120": 21, "121": 15, "122": 15, "125": 16, "1268988": 7, "128": [6, 7, 8, 9], "1280": 7, "1281": 7, "13": [8, 74, 75, 87], "131": 15, "132": 15, "1321138905671275": 15, "133": 15, "14": [1, 2, 3, 15, 18, 70, 87], "1410": [17, 61, 62, 87], "1417": [17, 61, 62, 87], "142316288": 7, "143": 22, "1441792": 7, "1474": 9, "1486": 6, "15": [1, 2, 3, 4, 12, 13, 14, 16, 17, 20, 21, 24, 71, 78, 87], "153": 87, "1532": 6, "159230": 7, "159396": 7, "159541": 7, "15th": [74, 75], "16": [7, 8, 9, 10, 16, 17, 68, 69, 87, 90], "1635": 6, "1648877": 7, "169": 21, "17": [7, 8, 19, 79, 87], "171": 87, "1711": 87, "1722": 9, "1753297": 7, "179": 21, "18": [21, 80, 87], "18279941870395425": 13, "1831726": 7, "18530735809550575": 13, "189": 21, "19": [7, 20, 22, 81, 87, 90], "1905": 87, "1912655681371689": 9, "1922": 7, "1960": 8, "196608": 7, "1974": 7, "199": [21, 87], "1990": 6, "1992": 8, "1993": 8, "1d": 51, "1e": [6, 7, 8, 9, 20, 23, 29, 30, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 61, 62, 76, 78], "1nn": [16, 20, 51, 52], "2": [1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 19, 20, 21, 24, 25, 51, 52, 61, 62, 63, 64, 65, 66, 81, 83, 86, 87, 88], "20": [2, 3, 7, 9, 12, 13, 14, 15, 16, 17, 19, 20, 23, 25, 78, 87, 88, 89, 90], "200": [20, 29, 30], "2000": [16, 34, 35, 38, 39, 87], "2005": 87, "2007": [16, 41, 42, 43, 44, 79, 87], "2008": [16, 87], "2009": [31, 77, 87], "2010": [17, 63, 87], "2011": [17, 59, 60], "2012": [2, 3, 16, 51, 52, 66, 87], "2013": [17, 47, 48, 49, 50, 57, 58, 87], "2014": [14, 17, 61, 62, 87], "2015": [70, 87], "2016": [7, 68, 69, 71, 72, 73, 87], "2017": [13, 27, 28, 40, 87], "2018": [74, 75, 80, 87], "2019": [78, 87], "2021": [81, 87], "2096": 6, "21": [6, 12, 47, 48, 49, 50, 87], "210": 87, "2102": 87, "21420445266620783": 13, "218866137683906": 15, "21e": 20, "21it": 7, "22": [51, 52, 87], "227": 87, "2271": 8, "22983129554592746": 13, "23": [7, 9, 10, 22, 43, 44, 87, 90], "230": [21, 22, 90], "2309766225516796": 9, "24": [6, 16, 87], "240px": 88, "241": 15, "242": [15, 23, 26, 90], "243": 15, "244": [15, 87], "245": 15, "246": 15, "2460": 6, "247": 15, "248": 15, "249": 87, "25": [6, 8, 9, 10, 16, 17, 67, 87, 90], "2535": 9, "255": [25, 26, 90], "256": [9, 21], "2585": 9, "26": [17, 61, 62, 87], "266": [1, 5, 21, 90], "27": [17, 20, 63, 66, 87], "272": 1, "276": 21, "279": 87, "28": [6, 14, 87], "285516": 7, "286": 21, "288146109474553": 15, "28881": 7, "2955": 6, "2960": 87, "2967": 87, "2d": [13, 14, 19], "2f": [13, 14, 15, 16, 17, 19, 20, 23], "2x1": 66, "2x2": 66, "3": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 35, 39, 41, 42, 43, 44, 49, 50, 52, 55, 56, 65, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "30": [13, 20, 23, 25, 51, 52, 87, 88, 89], "3003": 9, "306": [14, 87], "31": [6, 87], "314": [14, 87], "32": [9, 87], "323": 18, "3241": 8, "32768": 7, "328": [7, 10, 90], "336863129384494": [13, 14], "34": 8, "3465": 7, "349": [9, 10, 90], "34it": 7, "35": 87, "35it": 7, "36": 8, "360448": 7, "3676169789533272": [13, 14], "368": 5, "375": 16, "38": 8, "39": 7, "3924": 7, "3977": 7, "3997": 8, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 48, 83, 86, 87, 88, 89], "40": [8, 21, 87], "400": 21, "400px": 88, "4012": 6, "403": 7, "4096": 68, "40it": 7, "42": [2, 3, 12, 13, 14, 15, 16, 17, 19, 20, 21, 25], "4402": 7, "443": 87, "447": 87, "44948309": 7, "45": [2, 3, 66], "450": 87, "4542": 7, "45933195939893": [13, 14], "463": 87, "46it": 7, "470469": 7, "4744": 8, "48": 24, "494": [16, 18, 90], "496": [6, 10, 90], "4979": 7, "4996": 7, "5": [1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 40, 41, 42, 47, 48, 83, 86, 87, 88, 89], "50": [1, 13, 14, 17, 90], "500": 12, "51": [1, 13], "521": [2, 3, 66], "5244703189443227": 15, "52it": 7, "530": [2, 3, 66], "531": 15, "53817259426296": [13, 14], "541": [14, 18, 90], "5491": 8, "570318895725525": [13, 14], "59": 87, "5909": 8, "5955": 7, "5995": 8, "6": [12, 13, 14, 16, 17, 18, 21, 23, 24, 29, 30, 36, 37, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 83, 86, 87], "60": [16, 87], "6011": 9, "6061": 7, "615": [24, 26, 90], "62007023": 7, "625": 16, "634": [4, 5, 90], "64": [9, 87], "6431": 7, "646": [8, 10, 13, 18, 90], "65536": 7, "6669": 8, "6676": 7, "6893": 8, "699": [16, 87], "6999": 6, "6c4c7c": [16, 17], "7": [4, 6, 12, 13, 14, 15, 16, 17, 21, 24, 51, 66, 83, 86, 87], "7109": 9, "7124": 87, "7133": 87, "72": [6, 7, 8, 9], "720896": 7, "72222222": [88, 89], "727": [2, 5, 90], "741": [3, 5, 90], "744989537549497": [13, 14], "746": [16, 87], "74it": 7, "767": 90, "77": [13, 14], "770": 87, "7815": 6, "787": 87, "79": 7, "7964573229829714": [13, 14], "7978": 9, "798": [15, 18, 90], "8": [1, 2, 3, 4, 6, 12, 13, 15, 16, 17, 20, 24, 25, 57, 58, 66, 83, 86, 87], "80": [3, 16, 17, 21], "8011": 8, "8051": 6, "80it": 7, "819": 87, "81944444": [88, 89], "82": 13, "820": 10, "827": 87, "83333333": [88, 89], "84": [13, 14], "84it": 7, "85": 3, "88125": 19, "8842443729903537": 6, "887459807073955": 8, "8906752411575563": 6, "8941": 6, "8971061093247589": 7, "8977": 7, "8987": 8, "9": [1, 6, 12, 13, 14, 15, 17, 19, 20, 21, 29, 30, 36, 37, 59, 60, 66, 83, 86, 87], "90": [17, 21, 87], "9007": 6, "9035369774919614": 7, "9045": 8, "905174": 7, "9067524115755627": 8, "9116": 6, "912": [17, 18, 90], "9184": 87, "9193": 87, "920": [17, 20], "9216": 9, "929": [17, 63], "932": [12, 18, 90], "942": [17, 63], "943": 20, "94375": 19, "952": [19, 22, 90], "95625": [88, 89], "96": 17, "9610814126500358": [13, 14], "962": [20, 22, 90], "9643": 8, "96it": 7, "97": [13, 14, 87], "975": [88, 89], "98": [12, 16, 23], "98304": 7, "99": [13, 14, 16], "9912422": 7, "9980": 7, "A": [2, 3, 13, 14, 15, 16, 20, 29, 30, 31, 36, 37, 40, 43, 44, 45, 53, 54, 57, 59, 61, 63, 66, 68, 71, 72, 74, 77, 79, 82, 87, 88], "As": [12, 17, 24], "At": [12, 66], "But": 19, "By": [64, 65, 66, 67, 76], "For": [16, 19, 24, 40, 51, 76, 87, 88], "If": [19, 29, 30, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 51, 52, 53, 54, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 71, 76, 78, 79, 80, 82, 83, 85, 87, 88], "In": [7, 14, 16, 17, 19, 21, 27, 28, 34, 35, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89], "It": [19, 31, 61, 62, 64, 65, 66, 67, 77, 88], "Its": [16, 41, 42, 88], "No": [1, 21, 23], "On": 24, "One": [1, 19, 67, 84, 87], "Such": [16, 88], "The": [1, 2, 3, 4, 12, 15, 19, 20, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "Then": [15, 19, 77], "To": [6, 7, 8, 9, 17, 20, 88, 89], "Will": [16, 17, 66], "With": 88, "_": [2, 3, 12, 23, 24, 25, 28, 68, 71, 80, 81, 88], "__name__": 24, "_call_impl": 6, "_mnist_usp": [6, 7, 8, 9], "_scorer": 23, "_self_label": 12, "_sinkhorn": 15, "ab": 17, "abl": 13, "about": 12, "absenc": 88, "absolut": [12, 83, 88], "ac": 16, "acc": [13, 14, 15], "acc_": [13, 14], "acc_classreg": 15, "acc_linear": 15, "acc_sinkhorn": 15, "acc_sourc": 15, "acc_t": [13, 14], "acc_target": 15, "accept": [51, 76, 88], "access": [55, 56, 88], "accord": 68, "account": [16, 88], "accur": [78, 87], "accuraci": [13, 14, 15, 16, 17, 19, 20, 23], "achiev": 88, "across": [17, 41, 42, 57, 58, 64, 65, 66, 67, 78], "act": 88, "activ": 87, "ad": [12, 17, 31, 33, 35, 39, 42, 44, 45, 46, 50, 51, 52, 55, 56, 64, 65, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "adam": 9, "adapt": [0, 10, 13, 14, 18, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 90], "add_ax": 3, "add_domain": 88, "addit": [51, 88], "advanc": [13, 27, 28, 87], "advantag": 76, "adversari": [10, 11, 68, 69, 71, 87, 90], "affect": 51, "after": 88, "again": 19, "aim": 17, "aism": 16, "ajakan": 87, "al": [16, 17, 41, 42, 47, 48, 49, 50, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 78, 79, 80, 81], "alain": 87, "alaiz": [2, 3, 66], "algorithm": [12, 20, 29, 30, 31, 36, 37, 51, 52, 53, 54, 61, 62, 63, 88], "alia": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "align": [7, 13, 20, 27, 28, 57, 58, 72, 73, 80, 87], "all": [4, 11, 17, 19, 24, 31, 51, 57, 58, 64, 65, 66, 67, 87, 88, 90], "allow": [19, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "allow_sourc": [15, 17, 33, 35, 39, 42, 44, 50, 52, 55, 56], "along": 40, "alpha": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 20, 21, 25, 40], "alpha0": 21, "alpha_": [42, 50], "alphalist": 21, "alreadi": [76, 88], "also": [9, 13, 14, 15, 19, 24, 68, 71, 83, 87, 88], "alternat": 40, "although": [68, 71], "alwai": [64, 65, 66, 67, 84, 88], "amazon": 88, "amazonaw": 7, "among": [64, 65, 66, 67], "amsterdam": 87, "an": [6, 15, 16, 17, 19, 21, 33, 35, 39, 41, 42, 44, 50, 51, 52, 55, 56, 57, 58, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "anal": 87, "analogi": 88, "analysi": [15, 29, 30, 31, 36, 37, 45, 53, 54, 59, 60, 77, 87], "ani": [12, 16, 19, 31, 40, 87, 88], "annal": [16, 87], "antoin": [16, 17, 87], "antoinecolla": 17, "api": [19, 87, 88, 89], "appli": 80, "applic": [16, 41, 42, 87], "approach": [16, 40, 50], "appropri": 51, "approxim": [16, 35, 38, 39], "ar": [2, 3, 12, 14, 15, 16, 17, 19, 23, 24, 33, 35, 39, 42, 43, 44, 48, 50, 51, 52, 55, 56, 57, 58, 63, 65, 66, 68, 69, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "arang": 24, "arbitrari": 51, "arg": 6, "argument": [6, 51, 88], "around": 88, "arrai": [12, 16, 19, 21, 24, 28, 33, 35, 39, 41, 42, 44, 48, 49, 50, 51, 52, 60, 64, 65, 66, 67, 70, 83, 84, 86, 88, 89], "array_lik": [64, 65, 66, 67], "arxiv": 87, "as_integer_ratio": 40, "as_sourc": [6, 7, 8, 9, 17, 20, 23, 24, 25, 88], "as_target": [6, 7, 8, 9, 17, 20, 23, 24, 25, 88], "assign": 88, "associ": [64, 65, 66, 67], "assum": [16, 17, 21, 40, 51], "assumpt": [16, 50], "attempt": 51, "attribut": [28, 30, 33, 35, 37, 39, 40, 42, 44, 46, 48, 50, 52, 54, 58, 60, 62, 64, 65, 66, 67, 76, 79], "author": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 24], "auto": [19, 20, 27, 28, 38, 39, 51, 52], "auto_exampl": [5, 10, 18, 22, 26], "auto_examples_jupyt": 11, "auto_examples_python": 11, "automat": [19, 27, 28, 38, 39, 76, 83, 88], "autumn": [3, 12], "avail": [15, 19, 23, 43, 44, 76, 87, 88, 89], "avoid": [36, 37, 53, 54, 78, 88, 89], "awai": 51, "awar": 88, "ax": [4, 13, 14, 15, 16, 17, 19, 20, 21, 24], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "axi": [12, 13, 14, 15, 19, 21], "axvlin": 23, "b": [16, 17, 43, 44, 48, 63, 86, 87, 88], "b_": 48, "backward": 9, "balanc": 21, "balanced_accuracy_scor": 77, "ball_tre": 51, "balltre": 51, "band": [12, 67], "band_siz": [4, 67], "bandwidth": [16, 20], "baochen": [7, 27, 28, 72, 73, 87], "barh": 23, "base": [9, 12, 13, 15, 16, 17, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 47, 49, 51, 52, 53, 54, 55, 63, 75, 77, 78, 79, 80, 81, 87, 88], "base_classifi": [16, 17], "base_estim": [12, 13, 16, 19, 20, 23, 25, 27, 29, 31, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 52, 53, 55, 56, 57, 59, 61, 63, 76, 88, 89], "base_method": [20, 63], "base_module_": 9, "baseadapt": 88, "baseestim": [31, 55, 56, 76], "baseselector": 76, "basura": [17, 57, 58], "batch_siz": [6, 7, 8, 9], "bbox_inch": 21, "bceloss": [68, 69, 71], "becaus": [88, 89], "been": [6, 12, 87], "befor": [29, 30, 36, 37, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 61, 62, 63, 76], "behav": 24, "behavior": [11, 26, 40, 66, 83, 84, 85, 86, 90], "being": 88, "below": [15, 19, 64, 65, 66, 67, 87, 88, 89], "benchmark": 0, "benjamin": [74, 75], "best": [19, 25, 41, 42, 88, 89], "best_estimator_": 25, "best_gamma_": 42, "best_params_": [19, 25], "best_reg_": 25, "beta": 50, "better": 13, "between": [13, 15, 21, 27, 28, 38, 39, 40, 42, 44, 46, 48, 50, 51, 59, 60, 61, 62, 63, 69, 70, 73, 75, 77, 78, 81, 83, 88, 89], "bf": 21, "bharath": [74, 75], "bhushan": [74, 75], "bia": [2, 3, 9, 16, 20, 43, 44, 45, 46, 48, 66, 87], "binari": [20, 23, 24, 25, 66, 88, 89], "bit": 88, "black": 12, "blob": 65, "block": 88, "blue": [21, 24], "bool": [31, 33, 35, 39, 40, 42, 43, 44, 45, 46, 50, 51, 52, 55, 56, 62, 63, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "boolean": [64, 65, 66, 67], "borgwardt": [16, 43, 44, 87], "both": [16, 17, 50, 83, 87, 88], "bottom": [1, 2, 3, 4], "bound": [43, 44, 87], "boundari": [12, 13, 14, 20, 51], "break_ti": 20, "bregman": [15, 17, 63, 87], "brute": 51, "bruzzon": [31, 77, 87], "bsd": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 24, 87], "bueno": [3, 12, 16, 17, 87], "build": 88, "built": 88, "bunch": [64, 65, 66, 67, 88], "butscher": [14, 87], "bz2": 7, "b\u00fcnau": [16, 87], "c": [1, 2, 3, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25], "c0": [13, 21], "c1": 13, "c2": 21, "c3": 21, "c7": [15, 21], "c_": [13, 14], "cach": 76, "cache_s": 20, "call": [1, 2, 3, 4, 6, 15, 19, 20, 41, 42, 57, 58, 64, 65, 66, 67, 78, 84, 88], "callabl": [51, 76, 77, 78, 79, 82], "came": 12, "can": [12, 13, 14, 15, 19, 24, 31, 36, 37, 40, 51, 53, 54, 84, 87, 88, 89], "cannot": 76, "cao": 87, "captur": 69, "carri": 20, "case": [12, 13, 16, 17, 19, 51, 77, 78, 79, 80, 81, 82, 88], "cast": 87, "categor": [64, 65, 66, 67], "cavazza": 87, "cax": 3, "cb": 3, "cbar_ax": 3, "cdan": [69, 87], "ceil_mod": 9, "center": [24, 41, 42, 64, 65, 66], "centers_": 42, "chain": 76, "chan": 4, "chanc": [88, 89], "chang": [6, 13, 21, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "channel": 67, "chawla": [2, 3, 66], "choic": [6, 19, 88], "choos": [19, 41, 42, 66], "chosen": [24, 42], "circl": 12, "circleci": [1, 6, 7, 8, 9, 15, 17, 20, 21], "circular": [31, 77, 87], "citeseerx": 87, "cjlin": 7, "clariti": 88, "class": [4, 9, 15, 19, 20, 21, 24, 29, 30, 31, 33, 35, 39, 42, 44, 50, 52, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "class_weight": 20, "classic": 17, "classif": [2, 3, 6, 7, 8, 9, 11, 15, 22, 27, 29, 31, 32, 34, 36, 38, 41, 45, 47, 49, 51, 53, 57, 59, 63, 66, 77, 87, 90], "classifi": [11, 15, 16, 17, 18, 20, 21, 31, 34, 35, 40, 64, 66, 68, 69, 71, 78, 87, 90], "classificationtechniqu": 87, "classregularizedotmap": 29, "classregularizerotmap": 20, "classregularizerotmappingadapt": [15, 20, 88], "claus": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 24, 87], "clf": [13, 14, 15, 16, 17, 19, 20, 21], "clf_on_subspac": 17, "clf_otda": 15, "clf_otda_linear": 15, "clf_otda_sinkhorn": 15, "clf_otds_classreg": 15, "clone": [6, 7, 8, 9, 12, 17, 20, 76, 88], "close": 12, "closer": [16, 51], "closest": 88, "cluster": [64, 65, 66, 67], "cluster_std": 65, "cm": [16, 17, 20, 24], "cm_bright": 20, "cmap": [1, 2, 3, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24], "cmap_cv": 24, "cmap_data": 24, "cmap_domain": 24, "co": 21, "code": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 87, 88], "coef0": [20, 43, 44], "colla": [17, 87], "collabor": 87, "collect": [68, 71, 72, 74], "color": [12, 16, 17, 20, 21, 23, 24], "colorbar": 3, "colormap": [1, 16, 17, 21], "com": [7, 16, 17, 87], "combin": 88, "come": [24, 83], "common": 88, "compar": [13, 23, 88], "comparison": [11, 22, 27, 29, 32, 34, 36, 38, 41, 45, 47, 49, 51, 53, 57, 59, 63, 66, 90], "compat": [19, 84, 87, 88], "complement": 83, "complet": 76, "complic": 88, "compon": [57, 58, 59, 60, 61, 62, 63, 87], "compos": [24, 83], "comput": [13, 14, 15, 16, 17, 21, 27, 28, 41, 42, 50, 51, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 87, 88], "compute_weight": 16, "con": 87, "concaten": [12, 88], "concentr": 87, "concept": [2, 3, 19, 66, 88], "concept_drift": [2, 3, 13, 14, 15, 19, 20, 23, 24, 25, 66], "condit": [47, 48, 49, 50, 68, 69, 87], "confer": [14, 17, 57, 58, 61, 62, 74, 75, 81, 87], "consid": [51, 88], "consider": 88, "consist": [1, 2, 3, 4, 12], "constant": [17, 61, 62, 66, 78], "construct": [6, 7, 8, 9, 17, 20, 51, 76], "constructor": 76, "consum": 76, "contact": 17, "contain": [27, 29, 32, 34, 36, 38, 41, 43, 45, 47, 49, 51, 53, 57, 59, 61, 63, 88], "context": 51, "contour": 16, "control": 83, "conv1": 9, "conv2": 9, "conv2d": 9, "convei": 20, "conveni": 88, "convent": [64, 65, 66, 67, 88], "converg": [15, 20, 29, 30, 36, 37, 40, 53, 54], "coolwarm": 24, "copi": [6, 7, 8, 9, 17, 20, 21, 76], "coral": [7, 19, 20, 47, 72, 73, 87], "coraladapt": [19, 20, 87, 88], "coraladapter__reg": [19, 87], "core": 88, "correct": [16, 43, 44, 87], "correl": [7, 27, 28, 72, 73, 80, 87], "correspond": [40, 67], "could": [15, 88], "count": 16, "coupling_": 15, "courti": [13, 15, 29, 30, 36, 37, 40, 45, 53, 54, 74, 75, 87], "cov_source_": 39, "cov_source_inv_sqrt_": 28, "cov_target_": 39, "cov_target_sqrt_": 28, "covari": [2, 3, 11, 12, 18, 27, 28, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 51, 63, 66, 72, 73, 79, 87, 90], "covariate_shift": [2, 3, 20, 66, 88, 89], "cover": 88, "cpu": 9, "creat": [9, 12, 16, 17, 19, 24, 68, 71, 87, 88], "creation": [41, 42, 57, 58, 64, 65, 66, 67], "criterion": [6, 7, 8, 41, 42, 43, 44, 47, 48, 49, 50, 68, 69, 71, 74, 75], "cross": [11, 23, 26, 41, 42, 66, 78, 79, 83, 84, 85, 86, 87, 88, 90], "cross_entropy_loss": 78, "cross_val_scor": [11, 19, 26, 36, 66, 82, 87, 88, 89, 90], "cross_valid": 88, "crosscovari": 69, "crossentropyloss": [6, 7, 8, 9], "csie": 7, "cuda": 9, "current": [12, 87], "custom": 76, "cv": [19, 20, 23, 24, 25, 41, 42, 84, 87, 88, 89], "cv_arg": 24, "cv_results_": 25, "cvf": 87, "cvpr": [17, 61, 62, 87], "d": [15, 17, 20, 29, 30, 36, 37, 45, 53, 54, 63, 87], "da": [8, 10, 12, 14, 16, 17, 22, 23, 24, 25, 27, 29, 32, 34, 36, 38, 41, 45, 47, 49, 51, 53, 57, 59, 63, 66, 72, 73, 89, 90], "da_dataset": 88, "da_shufflesplit": 86, "daestim": 0, "damodaran": [74, 75, 87], "dan": [70, 87], "dann": 87, "darrel": 87, "dasvm": [11, 18, 31, 64, 77, 87, 90], "data": [1, 2, 3, 4, 12, 16, 17, 19, 20, 21, 24, 28, 30, 33, 35, 37, 39, 42, 43, 44, 46, 48, 50, 52, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 78, 79, 83, 84, 85, 87, 88, 89], "dataload": 9, "datapoint": [12, 24], "datas": 24, "dataset": [5, 18, 20, 23, 24, 25, 27, 29, 32, 34, 36, 38, 41, 42, 43, 44, 45, 47, 51, 53, 57, 58, 59, 61, 63, 80, 81, 82, 83, 84, 89, 90], "dataset2": 24, "de": [16, 87], "deal": 88, "decid": 51, "decis": [12, 13, 14, 20, 51], "decision_boundari": 12, "decision_funct": [12, 31, 55, 56], "decision_function_shap": 20, "decisionboundarydisplai": [15, 16, 17, 20, 25], "decomposit": 19, "deep": [6, 7, 8, 10, 78, 80, 88, 90], "deepcor": [9, 73, 87], "deepcoralloss": 9, "deepjdot": [75, 87], "def": [2, 3, 16, 17, 21, 23, 24], "default": [13, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "default_selector": [19, 76], "defin": [16, 24, 41, 42, 51, 88, 89], "degre": [20, 43, 44], "delta_f": [4, 67], "demonstr": 88, "densiti": [20, 32, 33, 42, 44, 50, 51, 52, 79, 81, 87], "densityratio": 87, "densityreweight": [16, 20, 49, 51, 88, 89], "densityreweightadapt": [20, 88], "depend": [24, 51, 83, 87], "deprec": 6, "deriv": [16, 88], "describ": 17, "descript": [2, 3, 64, 65, 66, 67, 88], "design": [19, 85, 88], "detach": [6, 7, 8, 9, 17, 20], "detail": [2, 3, 16, 17, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 66, 77, 78, 79, 80, 81, 87, 88], "determin": [41, 42, 57, 58, 64, 65, 66, 67, 78], "dev": 87, "develop": 87, "devi": [74, 75, 87], "deviat": [64, 65, 66, 67], "devic": 9, "diagon": [45, 46], "dict": [16, 17, 51, 64, 65, 66, 67], "dict_kei": 88, "dictionari": [19, 64, 65, 66, 67, 88], "did": [15, 20], "differ": [12, 19, 20, 24, 50, 62, 63, 67, 84, 88, 89], "dilat": 9, "dim": 6, "dimens": 6, "dimension": 17, "ding": [17, 61, 62, 87], "direct": [16, 41, 42, 87], "directli": 76, "directori": 76, "discard": 31, "discr": 20, "discrep": [17, 44, 48, 50, 75], "discrimin": [34, 87], "discriminatorreweight": [16, 20], "discriminatorreweightadapt": [20, 88], "discuss": 87, "disi": 87, "distanc": [51, 54, 60, 70, 73, 74, 75], "distance_metr": 51, "distinct": 88, "distribut": [1, 2, 3, 4, 12, 13, 15, 16, 17, 20, 24, 40, 46, 50, 66, 74, 75, 87, 88, 89], "diverg": [10, 11, 16, 17, 42, 44, 50, 63, 69, 72, 87, 90], "divid": 65, "do": [12, 88, 89], "docstr": 86, "document": [24, 51, 79, 82, 87], "doe": [19, 20, 76, 88, 89], "doesn": 51, "doi": 87, "domain": [0, 5, 10, 13, 14, 18, 19, 21, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 90], "domain_classifi": [20, 34, 35, 68, 71, 78], "domain_classifier_": 35, "domain_criterion": [68, 69, 71], "domain_label": 55, "domain_nam": [64, 65, 66, 67, 88], "domain_pred_": [69, 70, 73, 75], "domain_pred_t": [69, 70, 73, 75], "domain_sourc": 1, "domain_target": 1, "domainawar": 88, "domainawarecriterion": 9, "domainawaredataset": [64, 65, 66, 67, 88], "domainawareestim": 88, "domainawaremodul": 9, "domainawarenet": 9, "domainbalanceddataload": 9, "domainshufflesplit": 24, "don": 88, "done": [14, 15, 19, 21, 87, 88, 89], "dot": 21, "download": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "dpi": 21, "drawn": [16, 24], "drift": [2, 3, 19, 66], "dropout": 9, "dropout1": 9, "dropout2": 9, "ds_cnt": 20, "dslr": 88, "dtype": [17, 20], "due": [13, 14], "dur": [6, 7, 8, 9], "dure": [19, 51, 68, 71, 72, 74, 88], "e": [12, 17, 33, 35, 39, 40, 42, 44, 50, 52, 55, 56, 68, 69, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "each": [1, 2, 3, 4, 19, 24, 31, 33, 35, 39, 40, 42, 44, 50, 51, 52, 55, 56, 62, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "earth": 54, "easier": 88, "eccv": [7, 72, 73, 74, 75, 87], "editsec": 16, "edu": [3, 7, 16, 17, 87], "effect": [16, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "effici": 51, "eigenvector": [17, 60], "eigvects_": 60, "either": 65, "elaps": 76, "element": [51, 64, 65, 66, 67], "els": [9, 12, 16, 17, 20], "embed": [68, 87], "emd": 21, "empir": 46, "enabl": 76, "enable_metadata_rout": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "encapsul": 76, "encod": 19, "end": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 66], "engin": [17, 63, 87], "ensur": [1, 2, 3, 4, 20], "entiti": 88, "entitl": 51, "entrop": [20, 29, 30, 36, 37], "entropi": [19, 25, 78, 80, 81, 87], "entropicotmap": [20, 23, 25, 88, 89], "entropicotmappingadapt": [15, 20, 88], "entropicotmappingadapter__reg_": 25, "enumer": [20, 24, 86], "ep": [15, 16, 17, 20, 25, 43, 44], "epoch": [6, 7, 8, 9], "epsilon": [12, 78], "eq": 81, "equal": [50, 51, 59, 60, 61, 62, 63, 65], "equip": [12, 31], "equival": 51, "error": [7, 19, 29, 30, 33, 35, 36, 37, 39, 42, 44, 50, 52, 53, 54, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "especi": 17, "estim": [12, 13, 16, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "estimator_": 40, "et": [16, 17, 41, 42, 47, 48, 49, 50, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 78, 79, 80, 81], "etc": [12, 87], "euclidean": 51, "euclidean_dist": 51, "european": [74, 75, 87], "evalu": [13, 14, 79, 82, 88, 89], "even": [40, 76, 88], "everi": 65, "evolut": 12, "exact": 77, "exactli": 88, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 88, 90], "exdb": 7, "execut": [5, 10, 18, 22, 26, 88, 90], "exist": [33, 35, 39, 42, 44, 50, 52, 55, 56, 66, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "expect": 51, "explicit": 88, "explor": 17, "expos": 88, "extent": [13, 14], "extract": 7, "extract_source_indic": 16, "extractor": 71, "f": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 19, 23, 24, 25, 66, 86, 87], "fail": [7, 88], "fals": [6, 7, 8, 9, 16, 17, 20, 23, 24, 31, 33, 35, 39, 40, 42, 43, 44, 50, 51, 52, 55, 56, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "famili": 21, "fc1": [6, 7, 8, 9], "fc2": 9, "featur": [1, 2, 3, 15, 16, 17, 40, 61, 62, 65, 69, 70, 71, 73, 78, 84, 87], "features_": [69, 70, 73, 75], "features_t": [69, 70, 73, 75], "feel": [87, 88], "fellow": 87, "feng": [27, 28, 87], "fernando": [17, 57, 58, 87], "ferrari": 87, "fetch": 88, "fetch_all_office31_surf": 88, "fetch_office31_surf_al": 88, "fetcher": 88, "few": [87, 88], "ff0000": 20, "ffa056": [16, 17], "fig": [1, 2, 3, 4, 24], "figsiz": [1, 2, 3, 4, 12, 15, 16, 17, 20, 23, 24], "figur": [12, 13, 14, 15, 16, 17, 19, 20, 21, 23], "file": [5, 10, 11, 18, 21, 22, 26, 90], "fill": 24, "filterwarn": 25, "final": [19, 20, 63, 87], "find": [16, 42, 44, 48, 50], "first": [12, 16, 20, 24, 85, 87, 88], "firstli": 17, "fisher": 17, "fit": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 76, 79, 87, 88, 89], "fit_param": [88, 89], "fit_predict": 88, "fit_transform": 14, "fix": [27, 28, 38, 39, 40, 63, 65], "flamari": [13, 14, 15, 19, 21, 29, 30, 36, 37, 40, 45, 53, 54, 74, 75, 87], "flda": [20, 63], "flip": [77, 78, 79, 80, 81, 82], "float": [27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 80, 81, 83], "float64": [17, 20], "flow": 88, "fluctuat": 88, "fly": 88, "fold": [24, 41, 42, 83, 86], "follow": [15, 16, 17, 19, 24, 64, 65, 66, 67, 68, 71, 85, 87, 88], "font": 21, "fontsiz": [1, 2, 3, 12, 16, 17, 21, 24], "forbidden": 7, "forc": 51, "form": [24, 76, 77, 85], "format": [24, 87], "forward": [9, 69, 70, 73, 75], "found": 88, "fr": 17, "framework": [87, 88], "frank": [16, 43, 44], "free": [87, 88], "frequenc": [4, 67], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 83, 86, 87, 88, 89, 90], "from_estim": [15, 16, 17, 20, 25], "full": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 19, 20, 23, 24, 25, 87], "function": [16, 17, 19, 24, 34, 35, 38, 39, 40, 41, 42, 43, 44, 51, 57, 58, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89], "further": [12, 51], "g": [2, 3, 15, 17, 33, 35, 39, 40, 42, 44, 50, 52, 55, 56, 61, 62, 66, 68, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "g_": 48, "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 87, 90], "gamma": [16, 20, 41, 42, 43, 44, 47, 48, 49, 50, 66], "ganin": [71, 87], "gaussian": [20, 35, 38, 39, 47, 48, 64, 65, 66, 67, 70, 87], "gaussiannb": 76, "gaussianreweight": [16, 19, 20], "gaussianreweightadapt": [19, 20, 87, 88], "gca": 15, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 11, 19, 20, 22, 23, 24, 25, 41, 42, 57, 58, 64, 65, 66, 67, 68, 71, 78, 84, 87, 88, 90], "geng": [17, 63, 87], "germain": 87, "get": [16, 19, 88], "get_domain": 20, "get_estim": [15, 16, 17, 55, 56], "get_lda_interp": 21, "get_n_split": [84, 86], "git": 87, "github": 87, "give": 15, "given": [2, 3, 12, 33, 35, 36, 37, 39, 41, 42, 44, 50, 52, 53, 54, 55, 56, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "global": 21, "glossari": 51, "gmail": [16, 17], "gnassoun": [6, 7, 8, 9, 87], "go": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 88], "goal": [12, 16, 17], "good": [17, 77, 78, 79, 80, 81, 82], "gradient": [9, 20, 63], "grai": [12, 14, 21], "grain": 20, "graph": 51, "greater": 51, "greater_is_bett": [77, 78, 79, 80, 81, 82], "grei": 1, "gretton": [16, 43, 44, 87], "grid": [25, 87], "grid_search": [19, 25, 87], "gridsearchcv": [11, 19, 26, 36, 66, 79, 80, 87, 88, 89, 90], "ground": [29, 30, 36, 37, 53, 54], "group": 86, "guarante": 40, "guess": 23, "guiba": [14, 87], "guid": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "gz": 7, "h": [16, 87], "h_": 48, "ha": [6, 12, 24, 29, 30, 33, 35, 36, 37, 39, 42, 44, 50, 52, 53, 54, 55, 56, 68, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "habrard": [13, 40, 87], "handl": [12, 19], "harder": 69, "have": [12, 17, 24, 51, 64, 65, 66, 67, 78, 88, 89], "height": 88, "helper": [15, 88], "here": [2, 3, 12, 15, 19, 86, 87], "herrera": [2, 3, 66], "hidetoshi": [16, 34, 35, 38, 39, 87], "hierarch": 85, "high": [77, 78, 79, 80, 81, 82, 88, 89], "highest": 60, "hilbert": 17, "hing": [13, 20], "hisashi": 87, "ho": 87, "home": [1, 6, 7, 8, 9, 15, 17, 20, 21], "horizontalalign": [16, 17, 20], "how": [11, 13, 14, 22, 24, 27, 28, 33, 35, 39, 42, 44, 50, 52, 55, 56, 66, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90], "howev": 12, "http": [7, 16, 87], "huang": [16, 43, 44, 87], "hyperparamet": 87, "i": [1, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 50, 51, 52, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "iclr": 80, "icml": [47, 48, 49, 50, 70, 78], "idea": [15, 16, 42, 44, 50], "ident": 84, "idx": 16, "idx1": 7, "idx3": 7, "ieee": [15, 16, 17, 29, 30, 31, 36, 37, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 77, 87], "ignor": [1, 21, 25, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "ii": 24, "iii": 87, "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 12, 19, 20, 23, 24, 25, 87], "imag": [88, 89], "impact": 51, "implement": [16, 17, 85, 88], "implicit": 6, "import": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 41, 42, 44, 50, 51, 52, 76, 79, 83, 86, 87, 88, 89], "importanceweightedscor": [25, 88], "importantli": 19, "improv": [12, 16, 34, 35, 38, 39, 87], "imshow": [13, 14], "in_featur": 9, "includ": [6, 19, 76, 83, 87, 88], "include_all_target": 88, "increas": 15, "independ": [17, 66], "index": [24, 86, 87, 88], "index_source_delet": 31, "index_target_ad": 31, "indic": [24, 51, 64, 65, 66, 67, 83, 84, 85], "indices_source_delet": 12, "indices_target_ad": 12, "indx_sort": 24, "infer": [16, 34, 35, 38, 39, 87], "influenc": 51, "inform": [13, 40, 87], "initi": [9, 69, 88, 89], "inner": [29, 30], "inplac": 9, "input": [9, 16, 19, 42, 44, 50, 51, 68, 71, 87], "insid": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "inspect": [15, 16, 17, 20, 25, 76], "instabl": 78, "instanc": [17, 19, 40, 41, 42, 57, 58, 61, 62, 64, 65, 66, 67, 68, 71, 72, 74, 76, 78, 83, 87], "instanti": [68, 71], "instead": [33, 35, 39, 42, 44, 50, 52, 55, 56, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "institut": [16, 87], "int": [29, 30, 31, 36, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 78, 83, 84, 86], "integ": [19, 64, 65, 66, 67, 78, 84, 88], "integr": [76, 88], "intel": 87, "intellig": [15, 29, 30, 31, 36, 37, 45, 53, 54, 77, 87], "interest": 87, "interfac": [76, 88], "intern": [14, 16, 17, 51, 52, 57, 58, 81, 87], "interpol": 21, "introduc": 88, "intuit": 20, "invers": [28, 51], "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "is_avail": 9, "is_fit": 9, "ism": 16, "isotrop": 65, "issu": 87, "ist": 87, "item": [9, 16, 17], "iter": [9, 13, 15, 20, 24, 29, 30, 31, 36, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 61, 62, 63, 83, 84, 88], "its": [13, 14, 16, 42, 50, 88], "j": [2, 3, 12, 13, 14, 15, 16, 17, 43, 44, 61, 62, 66, 87], "januari": [14, 87], "jdot": [11, 18, 20, 40, 66, 87, 90], "jdotclassifi": [13, 20], "jdotregressor": 13, "jialin": [17, 59, 60], "jiashi": [27, 28, 87], "job": [51, 88], "joblib": [51, 76], "joint": [13, 40, 61, 62, 74, 75, 87], "jordan": 87, "journal": [16, 34, 35, 38, 39, 71, 79, 87], "jp": 16, "june": 87, "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "just": 20, "k": [12, 13, 16, 17, 23, 31, 43, 44, 87], "k_": 60, "kachaiev": [16, 17, 87], "kachayev": [16, 17], "kaichao": 78, "kanamori": 87, "kashima": [16, 87], "kate": [7, 27, 28, 72, 73, 87], "kawanab": [16, 87], "kd_tree": 51, "kdtree": 51, "kei": [16, 17, 88], "kellenberg": [74, 75, 87], "kept": [57, 58], "kernel": [12, 13, 14, 15, 17, 20, 29, 41, 42, 43, 44, 47, 48, 49, 50, 59, 60, 61, 62, 63, 66, 70], "kernel_ridg": [13, 14], "kernel_s": 9, "kerneldens": [16, 20, 32, 33, 79], "kernelridg": [13, 14], "keyword": 51, "kim": 87, "kind": 17, "kl": [16, 42], "klau": 87, "kliepreweight": [20, 42, 87], "kliepreweightadapt": [20, 88], "kmmreweight": [16, 44, 87], "kneighborsclassifi": 52, "know": [12, 17], "knowledg": [17, 63, 87], "krauledat": 87, "krr": [13, 14], "kullback": [16, 42], "kun": [47, 48, 49, 50], "kuniaki": 81, "kwarg": [6, 31, 40, 42, 55, 56, 68, 71, 72, 74, 78], "kwok": 87, "l": [14, 31, 77, 87], "l1": [29, 30, 51], "l1l2": [29, 30], "l2": [29, 30, 40, 51], "l_p": 51, "label": [2, 3, 4, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 29, 30, 33, 35, 39, 40, 42, 44, 47, 48, 49, 50, 52, 55, 64, 65, 66, 67, 75, 76, 77, 78, 84, 87, 88, 89, 90], "lalou": [24, 87], "laplac": 51, "laplace_smooth": [16, 20, 51, 52], "larg": [36, 37, 53, 54, 88], "largest": 68, "larochel": 87, "last": [19, 51, 71, 76], "latter": [77, 78, 79, 80, 81, 82], "laviolett": 87, "layer": [68, 71, 72, 74], "layer_nam": [6, 7, 8, 9, 68, 71, 72, 74], "lda": [17, 21], "leaf": 51, "leaf_siz": [20, 51, 52], "learn": [13, 14, 16, 19, 24, 40, 44, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 70, 71, 76, 79, 84, 88, 89], "least": [40, 86], "leav": 84, "leaveonedomainout": [24, 88], "lecun": 7, "ledoit": [27, 28, 38, 39], "left": [12, 24], "legend": [4, 12, 13, 14, 23, 24], "leibler": [16, 42], "lemma": [27, 28, 38, 39], "lempitski": 87, "len": [12, 16, 17, 20, 24], "len_": 21, "length": [63, 65], "length_scal": [20, 63], "less": [51, 59, 60, 61, 62, 63], "let": [24, 88, 89], "level": 88, "lexsort": 24, "lib": [6, 15], "librari": [87, 88], "libsvmtool": 7, "licens": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 24], "like": [19, 33, 35, 39, 41, 42, 44, 48, 49, 50, 52, 64, 65, 66, 67, 70, 84, 88, 89], "likelihood": [16, 34, 35, 38, 39, 41, 42, 87], "lim": 15, "limit": 88, "linalg": 21, "line": 12, "line2d": 12, "linear": [9, 12, 15, 20, 45, 46, 48, 87], "linear_model": [13, 14, 16, 19, 87, 88, 89], "linearmong": 87, "linearotmap": 20, "linearotmappingadapt": [15, 20, 88], "linearregress": 40, "linestyl": 23, "linewidth": 21, "linspac": [4, 12, 13, 14, 17, 21], "list": [12, 17, 24, 40, 42, 51, 76, 88], "listedcolormap": [16, 17, 20], "ll": 24, "load": [88, 89], "load_mnist_usp": [6, 7, 8, 9], "loc": [12, 20, 24], "local": [6, 15], "locat": [12, 48, 65], "lodo": 24, "log": [16, 34, 35, 36, 37, 38, 39, 53, 54, 87], "logist": 14, "logisticregress": [12, 13, 14, 16, 19, 20, 34, 35, 41, 43, 78, 87, 88, 89], "loglog": [36, 37, 53, 54], "logo": [11, 22, 90], "logreg": 14, "long": [17, 61, 62, 68, 69, 70, 87], "longer": 88, "loog": [16, 87], "look": [16, 88], "loop": [9, 29, 30, 87], "loss": [9, 13, 17, 40, 62, 63, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82], "loss_fn": 9, "loss_func": 78, "loss_ot": 13, "loss_tgt_label": 13, "lounici": 87, "low": [77, 78, 79, 80, 81, 82, 88], "lower": [12, 13, 14, 20], "lowercas": 76, "lp": [14, 29, 30], "lpl1": [20, 29, 30], "lpp": 63, "lr": [6, 7, 8, 9], "lst_loss_ot_": 40, "lst_loss_tgt_labels_": 40, "lstrip": [16, 17, 20], "lw": 24, "m": [16, 17, 31, 61, 62, 77, 87], "m1": 21, "m2": 21, "mach": 87, "machin": [14, 15, 16, 29, 30, 31, 36, 37, 45, 51, 52, 53, 54, 71, 77, 79, 87], "made": [83, 86], "mai": [51, 84, 87], "main": 12, "maintain": 87, "make": [24, 64, 67, 69, 84, 87, 88, 89], "make_da_pipelin": [14, 15, 19, 87, 88], "make_dataset": [4, 20], "make_dataset_from_moons_distribut": [1, 12], "make_pipelin": 19, "make_shifted_dataset": [1, 2, 3, 13, 14, 15, 16, 17, 19, 20, 23, 24, 25, 88, 89], "make_variable_frequency_dataset": 4, "mandat": 88, "manhattan_dist": 51, "map": [15, 17, 20, 45, 47, 48, 87], "marconcini": [31, 77, 87], "margin": 12, "margin_lin": 12, "mark": [17, 88], "marker": [12, 17, 21, 24, 88], "markers": 12, "masashi": [16, 41, 42, 79, 87], "mask": [24, 88], "match": [13, 44, 61, 62, 87], "mathelin": [16, 87], "mathemat": [16, 87], "matplotlib": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "matrix": [47, 48, 49, 50, 51, 66], "mattia": 87, "max": [3, 13, 15, 16, 17, 20, 36, 37, 40, 53, 54], "max_epoch": [6, 7, 8, 9], "max_featur": 68, "max_inner_it": [20, 29, 30], "max_it": [16, 20, 29, 30, 31, 36, 37, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 61, 62, 63], "max_len": [16, 17], "max_n_split": [84, 88], "maxim": [16, 31, 61, 62, 63], "maximum": [17, 20, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 68], "maxpool": 9, "maxpool2d": 9, "mb": [5, 10, 18, 22, 26, 90], "mean": [13, 14, 17, 19, 21, 23, 39, 44, 48, 50, 51, 66, 77, 78, 79, 80, 81, 82, 88, 89], "mean_source_": 39, "mean_squared_error": [13, 14], "mean_target_": 39, "mean_test_scor": 25, "measur": 75, "mechan": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "median": [36, 37, 53, 54], "mem": [5, 10, 18, 22, 26, 90], "member": 87, "memori": [51, 76], "merg": 24, "meshgrid": [13, 14], "meta": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "metadata": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "metadata_rout": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "method": [1, 2, 3, 4, 10, 12, 18, 19, 22, 24, 27, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 66, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "metric": [13, 14, 19, 20, 23, 25, 29, 30, 36, 37, 40, 51, 52, 53, 54], "metric_param": [20, 51, 52], "might": [15, 40], "min": [17, 20, 57, 58], "mingsheng": [68, 69, 70], "minim": [16, 42, 44, 48, 50, 69, 80, 87], "minimum": [29, 30, 36, 37], "minkowski": [20, 51, 52], "minkowski_dist": 51, "minut": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "mline": 12, "mlpregressor": 40, "mm": 21, "mmd": [17, 20, 44, 48, 49, 50, 70, 87], "mmdlsconsmap": [20, 48], "mmdlsconsmappingadapt": 20, "mmdtarsreweight": [20, 50], "mmdtarsreweightadapt": 20, "mnist": [6, 7, 8, 9], "mnist_dataset": [6, 7, 8, 9], "mnist_target": [6, 7, 8, 9], "mnisttouspsnet": [6, 7, 8, 9], "model": [9, 13, 16, 41, 42, 78, 79, 82, 87], "model_select": [19, 23, 24, 25, 87, 88, 89], "modern": 21, "modifi": 24, "modul": [6, 7, 8, 9, 68, 71, 72, 74, 87], "module_": 9, "mong": 87, "moon": [12, 64], "more": [12, 16, 19, 51, 87, 88], "moreno": [2, 3, 66], "morerio": [80, 87], "most": [17, 24, 51], "mostli": 88, "motoaki": 87, "move": 88, "mover": 54, "mse": [13, 14, 40], "mse_": [13, 14], "mse_t": [13, 14], "mu": [17, 20, 59, 60, 63], "mu_regress": 66, "muandet": 87, "much": [13, 14], "multi": [1, 88], "multiclass": [2, 7, 13, 14, 66], "multilinear": 69, "multinomi": 13, "multipl": [1, 2, 3, 4, 12, 19, 20, 41, 42, 57, 58, 64, 65, 66, 67, 78, 88], "multipli": 66, "murino": 87, "must": [19, 51, 65, 80, 86, 87], "m\u00fcller": 87, "n": [2, 3, 13, 15, 16, 17, 21, 24, 29, 30, 36, 37, 40, 45, 53, 54, 66, 87], "n_center": [20, 41, 42, 65], "n_channel": [4, 67], "n_class": [4, 6, 7, 8, 9, 48, 50, 67, 68], "n_compon": [17, 19, 20, 57, 58, 59, 60, 61, 62, 63, 88], "n_featur": [28, 33, 35, 39, 42, 44, 48, 50, 52, 57, 58, 65, 84], "n_frequenc": [4, 67], "n_frequency_sourc": 67, "n_iter_max": 40, "n_job": [20, 51, 52], "n_neighbor": 52, "n_sampl": [6, 7, 8, 9, 15, 33, 35, 39, 42, 44, 48, 50, 52, 57, 58, 65, 66, 80, 84], "n_samples_sourc": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 43, 44, 64, 66, 67, 88, 89], "n_samples_target": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 64, 66, 67, 88, 89], "n_split": [23, 24, 25, 83, 84, 85, 86, 88, 89], "n_splits_lodo": 24, "n_tot_sourc": 15, "n_tot_target": 15, "naive_bay": 76, "nakajima": [16, 87], "name": [16, 17, 19, 20, 33, 35, 39, 42, 44, 50, 51, 52, 55, 56, 64, 65, 66, 67, 68, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "named_step": [15, 76], "names_map": 24, "nan": 24, "natur": [20, 51, 66], "nb": 21, "ndarrai": [64, 65, 66, 67, 80, 84], "nearest": [50, 51, 52, 87], "nearestneighborreweight": [16, 20], "nearestneighborreweightadapt": 20, "necessari": [13, 40, 88, 89], "necessarili": 20, "necessit": 88, "need": [19, 78, 88], "neg": [64, 65, 66, 67, 87, 88], "neighbor": [20, 50, 51, 52, 87], "neighborhood": [51, 81, 87], "neither": 88, "netherland": 87, "network": [17, 59, 60, 68, 69, 70, 71, 87], "neural": [13, 17, 40, 59, 60, 71, 87], "neuralnetclassifi": [6, 7, 8], "neurip": [16, 41, 42, 68, 69], "never": 76, "new": [12, 60, 88], "next": [7, 88], "nicola": [74, 75, 87], "nip": [16, 40, 43, 44, 87], "nn": [6, 7, 8, 9], "nois": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 64, 65, 66, 67, 88, 89], "non": [64, 65, 66, 67, 88], "none": [9, 16, 17, 20, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89], "nonzero": 51, "norm": [20, 21, 29, 30, 36, 37, 53, 54, 63], "normal": [16, 36, 37, 53, 54], "note": [13, 19, 33, 35, 39, 42, 44, 50, 51, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "notic": [12, 87], "now": [12, 13, 24, 88, 89], "np": [1, 4, 12, 13, 14, 16, 17, 19, 21, 23, 24, 66, 83, 84, 86], "ntu": 7, "num_class": 78, "num_featur": [6, 68, 71], "number": [15, 16, 29, 30, 31, 36, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 83, 84, 86, 88], "numer": [36, 37, 53, 54, 78], "numitermax": 15, "numpi": [1, 4, 12, 13, 14, 16, 17, 19, 21, 23, 24, 83, 86], "o": [12, 21], "object": [12, 24, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89], "observ": [32, 33, 52, 79], "occur": [36, 37, 53, 54], "octob": 87, "odot": 48, "off": [21, 40, 61, 62], "offer": [88, 89], "office31": 88, "oleksii": [16, 17, 87], "onc": [17, 24, 85, 88], "one": [1, 17, 19, 51, 64, 66, 67, 80, 87, 88, 89], "ones": [17, 19, 21, 83, 86], "onli": [12, 19, 23, 24, 33, 35, 39, 42, 44, 50, 51, 52, 55, 56, 66, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "open": 87, "oper": 46, "optim": [9, 10, 11, 13, 16, 18, 20, 29, 30, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 59, 60, 63, 66, 74, 75, 76, 87, 90], "optimali": [16, 17], "option": [27, 29, 30, 32, 33, 34, 35, 36, 37, 39, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "orang": 24, "order": [16, 88], "org": 87, "organ": 19, "origin": [13, 14, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "ossci": 7, "ot": [14, 15, 20, 30, 37, 40, 45, 46, 53, 54, 87], "ot_transport_": [15, 30, 37, 46, 54], "otda": [11, 18, 30, 37, 46, 53, 54, 66, 76, 87, 90], "other": [16, 24, 33, 35, 39, 40, 42, 44, 50, 52, 55, 56, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "otherwis": [33, 35, 39, 42, 44, 50, 52, 55, 56, 64, 65, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "otlabelprop": 20, "otlabelpropadapt": [14, 20], "otmap": [15, 20], "otmappingadapt": [15, 20, 88], "our": [24, 51], "out": [12, 84, 87], "out_featur": 9, "outcom": [77, 78, 79, 80, 81, 82], "output": [9, 19, 41, 42, 57, 58, 64, 65, 66, 67, 68, 71, 72, 74, 78, 88], "over": [20, 78], "overfit": [88, 89], "overrid": 51, "overwrit": 19, "ovr": 20, "p": [9, 16, 17, 20, 50, 51, 52, 61, 62, 76, 87], "p_": 16, "p_sourc": [42, 44, 50], "p_target": [42, 44, 50], "pack": [17, 23, 24, 88], "pack_lodo": [24, 88], "pack_test": [6, 7, 8, 9, 24, 25, 88], "pack_train": [6, 7, 8, 9, 17, 20, 23, 24, 25, 88], "packag": [6, 15], "pad": 9, "page": [16, 17, 51, 52, 61, 62, 63, 87], "pair": [64, 65, 66, 67, 88], "pami": 87, "pan": [17, 59, 60, 87], "paper": [81, 87], "parallel": 51, "parallel_backend": 51, "param": [19, 23, 87, 88], "param_entropicotmappingadapter__reg_": 25, "param_grid": [19, 87], "paramet": [1, 15, 19, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89], "part": [20, 87], "partial_fit": [55, 56], "pass": [9, 19, 23, 33, 35, 39, 41, 42, 44, 50, 51, 52, 55, 56, 57, 58, 64, 65, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "patch": 24, "path": 76, "pattern": [2, 3, 15, 17, 27, 28, 29, 30, 31, 36, 37, 45, 53, 54, 61, 62, 66, 77, 87], "paul": 87, "pca": [17, 19, 57, 58, 59, 60, 61, 62, 63, 88], "pca_source_": 58, "pca_target_": 58, "pdf": [16, 87], "peak": 67, "per": [19, 31, 84, 88], "per_domain": 76, "percentag": [24, 83, 86], "perdomain": [19, 88], "perdomainselector": 88, "perform": [13, 14, 16, 17, 19, 24, 76, 88], "permit": 76, "phase": 87, "pi": 21, "pick": 88, "pietro": 80, "pip": 87, "pipe": [19, 87, 88], "pipe_perdomain": 19, "pipe_train_on_sourc": 19, "pipelin": [16, 20, 23, 27, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "pl": 21, "plai": 88, "plan": [14, 15, 16, 34, 35, 38, 39, 87], "pleas": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "plot": [5, 11, 15, 19, 20, 24, 25, 64, 66, 67, 90], "plot_adversari": [6, 10, 90], "plot_cross_val_score_for_da": [23, 26, 90], "plot_cross_validation_for_da": [24, 26, 90], "plot_cv_indic": 24, "plot_dasvm": [12, 18, 90], "plot_dataset_from_moons_distribut": [1, 5, 90], "plot_diverg": [7, 10, 90], "plot_gridsearch_for_da": [25, 26, 90], "plot_how_to_use_skada": [19, 22, 90], "plot_jdot_da": [13, 18, 90], "plot_label_prop_da": [14, 18, 90], "plot_lodo_indic": 24, "plot_method": 16, "plot_method_comparison": [20, 22, 90], "plot_optimal_transport": [8, 10, 90], "plot_optimal_transport_da": [15, 18, 90], "plot_reweight": [16, 18, 90], "plot_shifted_dataset": [2, 3, 5, 90], "plot_shifted_dataset_regress": [3, 5, 90], "plot_skada_logo": [21, 22, 90], "plot_st_shuffle_indic": 24, "plot_subspac": [17, 18, 90], "plot_subspace_and_classifi": 17, "plot_training_method": [9, 10, 90], "plot_variable_frequency_dataset": [4, 5, 90], "plot_weights_and_classifi": 16, "plt": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "plug": 88, "pmlr": [14, 87], "png": 21, "point": [12, 16, 17, 20, 25, 31, 40, 51, 64, 65, 66, 67], "poli": 12, "polytechniqu": [3, 16, 17], "pos_sourc": [1, 12, 64], "pos_target": [1, 12, 64], "posit": [12, 51, 64, 87, 88], "possibl": [2, 3, 12, 27, 28, 38, 39, 51, 63, 88], "possibli": 88, "pot": 21, "power": 51, "pp": [14, 87], "practic": 88, "precis": [36, 37], "precomput": 51, "predict": [12, 13, 14, 15, 16, 17, 19, 20, 25, 32, 34, 35, 38, 39, 40, 41, 43, 49, 51, 55, 56, 57, 59, 61, 69, 77, 78, 80, 87, 88], "predict_log_proba": [55, 56], "predict_proba": [55, 56, 88], "predictionentropyscor": [19, 25, 87, 88], "prepar": [23, 24, 25, 88], "preprint": 87, "preprocess": [19, 20, 76, 87], "present": 12, "preserv": [13, 24, 83, 86], "prevent": 51, "previou": 17, "previous": 88, "prgn": 24, "print": [1, 4, 9, 13, 14, 16, 17, 19, 20, 23, 25, 40, 62, 63, 76, 83, 86], "print_scores_as_t": [16, 17], "prior": [76, 87], "probabl": [16, 19, 20, 25, 78], "problem": [12, 24, 29, 30, 31, 36, 37, 40, 42, 51, 53, 54, 59, 60, 63, 77, 84, 87, 88], "procedur": 42, "proceed": 87, "process": [13, 16, 40, 51, 52, 87, 88], "processor": 51, "produc": [0, 83], "progress": 12, "project": [1, 6, 7, 8, 9, 17, 20, 21, 60], "propag": [11, 18, 20, 66, 67, 76, 87, 90], "proport": 83, "propos": [14, 40, 81], "provid": [1, 19, 21, 33, 35, 39, 40, 42, 44, 50, 52, 55, 56, 68, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "psd": 4, "psu": 87, "publish": 87, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 88, 90], "pylab": 21, "pypi": 87, "pyplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "pytest": 88, "python": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "python3": [6, 15], "pytorch": [68, 71, 72, 74], "q": 87, "quadrat": 40, "queri": 51, "quick": 87, "r": [2, 3, 13, 14, 15, 21, 29, 30, 36, 37, 40, 45, 53, 54, 66, 87], "r82": 87, "raeder": [2, 3, 66], "rais": [19, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "rakotomamonji": [13, 15, 29, 30, 36, 37, 40, 45, 53, 54, 87], "randint": [1, 4], "randn": 21, "random": [1, 2, 3, 4, 20, 21, 23, 41, 42, 57, 58, 64, 65, 66, 67, 78, 83, 84, 86], "random_se": [1, 4, 12, 16, 17, 20, 23, 24, 88, 89], "random_st": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 19, 20, 23, 24, 25, 41, 42, 57, 58, 64, 65, 66, 67, 78, 83, 84, 85, 86, 88, 89], "randomli": [24, 88], "randomst": [41, 42, 57, 58, 64, 65, 66, 67, 78, 83], "rang": [4, 9, 12, 13, 15, 17, 21, 24, 88], "rather": [6, 7, 8, 9, 17, 20], "ratio": [16, 66, 87], "ravel": [13, 14], "raw": 7, "rbf": [13, 14, 15, 17, 20, 29, 41, 42, 43, 44, 59, 60, 61, 62, 63, 66], "rcparam": 21, "rdbu": [16, 17, 20, 24], "re": [32, 33, 34, 35, 38, 39, 51, 52, 83], "reach": 87, "readi": 88, "real": 20, "reason": 88, "recognit": [2, 3, 17, 27, 28, 61, 62, 66, 87], "recommend": [6, 7, 8, 9, 17, 20], "reconstruct": 88, "recov": 15, "red": [12, 21], "reduc": [70, 73, 75, 78], "reduct": [74, 75, 80], "refer": [27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88], "reflect": [88, 89], "reg": [6, 7, 8, 9, 15, 20, 27, 28, 38, 39, 45, 46, 49, 50, 63, 68, 69, 71, 72, 74], "reg_": [15, 20, 23, 25, 29, 30, 36, 37], "reg_cl": [8, 15, 20, 29, 30, 74, 75], "reg_cor": 19, "reg_k": [20, 47, 48], "reg_m": [20, 47, 48], "reglog": [13, 14], "regress": [3, 40, 66], "regression_scaling_const": 66, "regressor": [11, 18, 40, 66, 87, 90], "regular": [15, 17, 19, 25, 27, 28, 29, 30, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 59, 60, 63, 68, 69, 71, 72, 74, 75, 87], "regulari": 25, "relat": 88, "relev": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "relu": 9, "relu1": 9, "relu2": 9, "relu3": 9, "remain": [24, 85], "rememb": 31, "remi": [13, 14, 15, 19, 21, 74, 75], "remov": [12, 69], "rep1": 87, "repid": 87, "replac": [2, 3], "repres": [12, 17, 51, 83, 88], "represent": [69, 75, 78], "reproduc": [17, 41, 42, 57, 58, 64, 65, 66, 67, 78], "request": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "requir": [19, 23, 36, 37, 51, 76, 87, 88], "requires_grad": [17, 20], "requires_grad_": [6, 7, 8, 9, 17, 20], "research": [71, 79, 87], "reshap": [13, 14, 17], "respect": [24, 48, 64, 65, 66, 67, 88], "response_method": [15, 16, 17, 20, 25], "result": [24, 25, 51, 84], "retain": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "retrain": 77, "return": [6, 21, 23, 24, 27, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "return_dataset": [6, 7, 8, 9, 17, 20, 23, 24, 25, 64, 65, 66, 67], "return_x_i": [64, 65, 66, 67, 88], "reus": [88, 89], "reweight": [11, 17, 18, 19, 20, 32, 34, 38, 41, 43, 44, 49, 50, 51, 61, 62, 66, 87, 90], "ridg": [13, 14, 40], "right": [3, 16, 17, 20, 24, 81, 87], "risk": 40, "robert": 87, "rodriguez": [2, 3, 66], "root": 28, "rot": 21, "rotat": 24, "rout": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "row": [1, 2, 3], "rsda": 83, "rslab": 87, "ruben": [3, 12, 16, 17, 87], "run": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 51, 88], "running_loss": 9, "rustamov": [14, 87], "r\u00e9mi": 87, "s2": [24, 88], "s3": 7, "saenko": [7, 27, 28, 72, 73, 87], "saito": [81, 87], "salt": 20, "same": [1, 2, 3, 4, 12, 13, 14, 17, 20, 24, 33, 35, 39, 42, 44, 50, 51, 52, 77, 88], "sampl": [2, 3, 13, 15, 16, 17, 19, 21, 24, 33, 43, 44, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80, 83, 84, 85, 86, 87, 89], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 23, 24, 25, 33, 35, 39, 42, 44, 50, 52, 55, 56, 64, 65, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "sample_domain_": 19, "sample_domain_lodo": 24, "sample_domain_t": 19, "sample_domain_test": [6, 7, 8, 9, 88], "sample_domain_train": [17, 88], "sample_select": 66, "sample_weight": [16, 19, 20, 87, 88], "save": 21, "save_estim": [12, 31], "save_indic": [12, 31], "savefig": 21, "scalar": 66, "scale": [20, 48, 63], "scatter": [1, 2, 3, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25], "scenario": 88, "sch\u00f6lkopf": [16, 43, 44, 87], "scikit": [19, 24, 40, 76, 88, 89], "scipi": [43, 44, 51], "sclaroff": 87, "score": [6, 7, 8, 12, 15, 20, 23, 25, 55, 56, 77, 78, 79, 80, 81, 82, 87], "scorer": [19, 23, 25, 77, 78, 79, 80, 81, 82, 87, 88], "scores_dict": [16, 17], "scores_no_da": 23, "scores_sup": 23, "script": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "search": [25, 51, 87], "sebban": 87, "second": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "section": [48, 49, 50, 88], "see": [2, 3, 12, 13, 14, 16, 17, 24, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "seed": [1, 2, 3, 4, 20, 21], "seek": 17, "seen": 88, "select": [16, 41, 42, 43, 44, 66, 78, 87, 89], "select_domain": [15, 88], "selector": [19, 76], "selectsourc": 19, "selectsourcetarget": 19, "self": [6, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "semi": [12, 14, 20, 87], "semi_label": 12, "separ": [23, 66, 88], "septemb": [74, 75], "sequenc": [64, 65, 66, 67], "serv": [61, 62, 88], "set": [12, 16, 20, 24, 43, 44, 51, 57, 58, 64, 65, 66, 67, 76, 81, 83, 84, 85, 88, 89], "set_config": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "set_decision_function_request": [55, 56], "set_fit_request": [16, 19, 20, 33, 35, 39, 42, 44, 50, 52, 55, 56, 87], "set_fit_requir": 87, "set_label": 3, "set_partial_fit_request": [55, 56], "set_predict_log_proba_request": [55, 56], "set_predict_proba_request": [55, 56], "set_predict_request": [55, 56], "set_score_request": [55, 56, 77, 78, 79, 80, 81, 82, 88], "set_split_request": [83, 84, 85, 86], "set_titl": [1, 2, 3, 4, 12, 16, 17, 24], "set_transform_request": [33, 35, 39, 42, 44, 50, 52, 55, 56], "set_xlabel": [1, 2, 3, 4], "set_xlim": [12, 16, 17, 20], "set_xtick": [16, 17, 20], "set_ylabel": [1, 2, 3, 4, 20], "set_ylim": [12, 16, 17, 20], "set_ytick": [16, 17, 20], "setup": [10, 11, 72, 73, 90], "sever": [19, 20, 42, 88, 89], "shape": [12, 13, 14, 15, 16, 17, 19, 28, 33, 35, 39, 42, 44, 48, 50, 51, 52, 65, 66, 80, 84], "share": [20, 76, 88], "sharei": [1, 2, 3, 4, 24], "sharex": [1, 2, 3, 4], "shift": [5, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 25, 32, 34, 35, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 57, 59, 61, 63, 64, 65, 66, 67, 79, 87, 88, 89, 90], "shimodaira": [16, 34, 35, 38, 39, 87], "shinichi": 87, "ship": 88, "short": 19, "shorthand": 76, "should": [20, 31, 33, 35, 39, 40, 42, 44, 50, 52, 55, 56, 59, 60, 61, 62, 63, 66, 68, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "show": [1, 2, 3, 4, 12, 13, 14, 16, 17, 20, 23, 24, 25, 51], "showcas": 88, "shown": [88, 89], "shrink": 20, "shrinkag": [27, 28, 38, 39, 63], "shuffl": [65, 83, 85, 86], "shufflesplit": [23, 25, 88, 89], "si": [17, 63, 87], "sigma": [66, 70], "sigma_ch": [4, 67], "sigma_freq": 67, "sigma_regress": 66, "sign": [77, 78, 79, 80, 81, 82], "signal": [4, 16, 51, 52, 67, 87], "signatur": [78, 79, 82], "similar": [81, 88], "similarli": [19, 88], "simpl": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 23, 88], "simplest": 88, "simpli": 88, "simplifi": 88, "simultan": 88, "sin": 21, "sinc": [24, 88], "singl": [19, 85, 88], "singleton": 85, "sinkhorn": [15, 29, 30, 36, 37], "sinno": [17, 59, 60], "site": [6, 15], "size": [16, 17, 20, 51, 67, 68, 71, 83], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 26, 88, 89, 90], "skada_logo": 21, "skada_logo_ful": 21, "skada_logo_full_whit": 21, "skip": 88, "sklearn": [12, 13, 14, 15, 16, 17, 19, 20, 23, 25, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "skorch": [6, 7, 8, 87], "small": 78, "smola": [16, 43, 44, 87], "smooth": [16, 43, 44, 51], "smooth_weight": [16, 43, 44], "so": [12, 16, 17, 19, 23, 88], "soft": [81, 87], "softmax": 6, "softneighborhooddens": 88, "sol_": [13, 40], "solid": 20, "solomon": [14, 87], "solut": [17, 21, 40, 42, 60], "solv": [40, 41, 42], "solver": [15, 16, 21, 29, 30, 43, 44], "some": [0, 16, 17, 33, 35, 39, 42, 44, 50, 51, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "sort": 24, "sourc": [5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "source_idx": 88, "source_mark": [12, 17], "source_scor": 77, "source_target_split": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 19, 23], "source_weights_": [44, 50], "sourcetargetselector": 88, "sourcetargetshufflesplit": [19, 24, 87, 88], "sourcetensor": [6, 7, 8, 9, 17, 20], "space": [16, 17, 68, 88], "spars": 51, "spatial": 51, "special": 88, "specif": [19, 21, 67, 69, 88], "specifi": [76, 80], "speed": 51, "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 24], "split": [19, 20, 24, 41, 42, 83, 84, 85, 86, 87, 88, 89], "splitter": [19, 24, 84], "springer": [74, 75, 87], "sqeuclidean": [20, 29, 30, 36, 37, 53, 54], "sqrt": [43, 44], "squar": [12, 28, 40, 51], "stack": 88, "standard": [51, 64, 65, 66, 67, 88], "standardscal": [19, 76, 87, 88], "start": [19, 87, 88, 89], "state": 12, "static": 88, "statist": [16, 34, 35, 38, 39, 87], "std": [13, 14, 19, 23, 67], "step": [9, 12, 15, 17, 20, 31, 76], "still": 88, "stop": [29, 30, 36, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 61, 62, 63], "store": [16, 17, 51, 87], "str": [16, 17, 29, 30, 33, 35, 36, 37, 39, 42, 43, 44, 50, 51, 52, 53, 54, 55, 56, 63, 66, 68, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "straightforward": 88, "strategi": [17, 31, 41, 42, 77, 87], "strategylorenzo": 87, "stratifi": 86, "stratifieddomainshufflesplit": 24, "stride": 9, "string": [43, 44, 51, 76, 79, 82], "structur": 88, "sub": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "subj_1": 88, "subj_12": 88, "subj_3": 88, "subject": [16, 17, 87], "subplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 19, 20, 24], "subplots_adjust": [1, 2, 3, 4, 24], "subsequ": [19, 87], "subspac": [2, 3, 11, 18, 20, 57, 58, 59, 60, 61, 63, 66, 87, 90], "subspace_estim": 17, "subspacealign": [17, 20, 87], "subspacealignmentadapt": [20, 57, 88], "sugiyama": [16, 41, 42, 79, 87], "suit": [16, 88], "sum": [12, 80], "sun": [7, 17, 27, 28, 61, 62, 72, 73, 87], "supervis": [14, 23, 82, 84, 87, 88], "supervisedscor": [23, 88, 89], "support": [13, 74, 75], "suptitl": [1, 2, 3, 4, 12, 16, 17, 24], "sure": 12, "suzuki": [16, 87], "svc": [12, 14, 15, 17, 19, 20, 23, 25, 29, 31], "svg": 21, "svm": [12, 13, 15, 17, 19, 20, 23, 25], "synthet": 20, "system": [13, 40, 87], "t": [2, 3, 7, 13, 15, 16, 17, 20, 23, 24, 25, 48, 51, 66, 81, 87, 88], "t10k": 7, "t2": [24, 88], "tab10": [1, 2, 13, 14, 15, 19, 21], "taiji": 87, "takafumi": 87, "take": [16, 19, 51, 88], "taken": [12, 20, 42, 64, 65, 66, 67], "tao": [17, 63, 87], "tar": [20, 87], "target": [5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 73, 75, 77, 79, 83, 84, 85, 87, 88, 89, 90], "target_criterion": [69, 74, 75], "target_idx": 88, "target_label": [23, 24, 82, 88], "target_mark": [12, 17], "target_shift": [2, 3, 20, 66], "targetaccuracyscor": [23, 88, 89], "task": [6, 7, 8, 9, 13, 15, 40], "tca": [17, 20, 87], "team": 87, "techniqu": [12, 31, 77, 87], "temperatur": 81, "tensor": [6, 7, 8, 9, 17, 20], "term": [74, 75], "test": [0, 16, 20, 24, 83, 84, 85, 86, 87, 89], "test_cv": 88, "test_index": [83, 86], "test_map": 88, "test_offic": 88, "test_pipelin": 88, "test_reweight": 88, "test_samples_gener": 88, "test_scor": 88, "test_siz": [23, 25, 83, 84, 85, 86, 88, 89], "test_subspac": 88, "teterwak": 87, "text": [12, 13, 15, 16, 17, 19, 20, 21, 24], "textsf": 21, "than": [6, 7, 8, 9, 13, 16, 17, 20, 51], "thei": [12, 23, 24, 88], "them": [51, 88], "theme": 88, "theoret": 40, "therefor": 76, "theta": 21, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 31, 33, 35, 39, 40, 42, 44, 50, 51, 52, 55, 56, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "those": [12, 16, 19, 51, 88], "though": 88, "threshold": [29, 30, 62, 63], "through": 75, "thu": [12, 16, 17, 24, 51], "th\u00e9o": [6, 7, 8, 9, 87], "tight": 21, "tight_layout": [17, 20, 24], "time": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 76], "titl": [2, 3, 13, 14, 15, 19], "tjm": [17, 61, 62], "todo": 9, "togeth": [76, 88], "tol": [20, 23, 29, 30, 36, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 61, 62, 63], "toler": [40, 41, 42, 43, 44, 47, 48, 49, 50], "tool": 88, "toolbox": [21, 87], "torch": [6, 7, 8, 17, 20, 68, 69, 71, 72, 74, 75], "torr": [2, 3, 66], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 64, 65, 66, 67, 90], "toward": [78, 87], "tr": 24, "trade": [40, 61, 62], "tradeoff": [17, 61, 62], "train": [10, 11, 12, 15, 16, 17, 19, 20, 23, 24, 68, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90], "train_index": [83, 86], "train_loss": [6, 7, 8, 9], "train_siz": [83, 84, 85, 86], "train_split": [6, 7, 8, 9], "train_test_split": 78, "tran": 87, "transact": [15, 17, 29, 30, 31, 36, 37, 45, 53, 54, 59, 60, 63, 77, 87], "transfer": [59, 60, 61, 62, 63, 70, 87], "transfercomponentanalysi": [17, 20], "transfercomponentanalysisadapt": [20, 59, 88], "transferjointmatch": 17, "transferjointmatchingadapt": 61, "transfersubspacelearn": [17, 20], "transfersubspacelearningadapt": 20, "transform": [15, 17, 19, 33, 35, 39, 42, 44, 48, 50, 52, 55, 56, 76, 87, 88], "translat": [65, 66], "transpar": [20, 21], "transport": [10, 11, 13, 18, 29, 30, 36, 37, 40, 45, 46, 53, 54, 66, 74, 75, 76, 87, 90], "tree": 51, "tri": [16, 69], "trigger": 76, "true": [6, 7, 8, 9, 12, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 31, 33, 35, 39, 40, 42, 43, 44, 45, 46, 50, 51, 52, 55, 56, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "try": [7, 16], "tsang": 87, "tsl": [17, 20], "tt": 24, "tuia": [15, 29, 30, 36, 37, 45, 53, 54, 74, 75, 87], "tune": [81, 87], "tupl": [64, 65, 66, 67, 76, 88], "tuytelaar": 87, "tw": 7, "two": [16, 17, 21, 51, 62, 63, 87, 88, 89], "type": [2, 3, 24, 76, 87], "typic": [68, 88], "u": [15, 24], "ubyt": 7, "unchang": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "under": [16, 34, 35, 38, 39, 47, 48, 49, 50, 87], "under_sampl": 83, "understand": 76, "unifi": [2, 3, 66, 87], "uniform": [20, 51, 52], "uniniti": [74, 75], "uninstanti": [68, 71], "uniqu": [1, 88], "unit": 68, "unitn": 87, "unlabel": [16, 43, 44, 87], "unless": 51, "unpredict": 40, "unseen": 88, "unsupervis": [17, 27, 28, 57, 58, 61, 62, 74, 75, 78, 80, 81, 87], "up": 85, "updat": [21, 33, 35, 39, 42, 44, 50, 52, 55, 56, 69, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "update_predict": 88, "upper": [43, 44], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 20, 21, 22, 24, 26, 33, 35, 42, 50, 52, 58, 60, 62, 68, 69, 75, 77, 78, 81, 87, 88, 89, 90], "usag": 88, "user": [33, 35, 39, 42, 44, 50, 51, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "userwarn": [1, 6, 7, 8, 9, 15, 17, 20, 21], "usetex": 21, "usp": [6, 7, 8, 9], "ustinova": 87, "util": [16, 17, 20, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "v": [2, 3, 16, 17, 66, 87], "va": 24, "val": 87, "valid": [23, 26, 31, 41, 42, 51, 66, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90], "valu": [3, 12, 20, 27, 28, 31, 36, 37, 38, 39, 40, 51, 53, 54, 62, 63, 65, 66, 80, 81, 83, 88], "var_smooth": 76, "variabl": 84, "variat": 40, "vector": [13, 51], "verbos": [13, 20, 40, 62, 63, 76], "veri": 24, "version": [33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "vertic": 24, "via": [1, 17, 21, 59, 60, 69, 81, 87], "view": [2, 3, 66], "vision": [17, 27, 28, 57, 58, 61, 62, 74, 75, 81, 87], "visit": 87, "visual": [11, 17, 19, 26, 57, 58, 66, 83, 84, 85, 86, 87, 90], "visualis": 4, "vmax": [1, 2, 3, 12, 13, 14, 15, 19, 21, 24], "vmin": [12, 24], "vo": 21, "von": [16, 87], "vor": 21, "vstack": 21, "w": [16, 21, 42, 44, 48, 87], "w_": 48, "wa": [1, 4, 14, 64, 65, 66, 67], "wai": [81, 87, 88, 89], "wang": [17, 61, 62, 87], "want": [15, 51], "warn": [15, 20, 25, 87], "wasserstein": [14, 29, 30, 36, 37, 53, 54, 87], "we": [2, 3, 13, 14, 15, 19, 21, 24, 51, 66, 87, 88, 89], "webcam": 88, "webcam_idx": 88, "weight": [16, 19, 20, 32, 33, 34, 35, 38, 39, 43, 44, 50, 51, 52, 69, 78, 79, 87, 88], "weight_estim": [16, 20, 32, 33, 79], "weight_estimator_source_": [33, 52, 79], "weight_estimator_target_": [33, 52, 79], "well": [12, 16, 19, 51, 88], "were": [12, 88], "what": [15, 19], "when": [12, 16, 17, 19, 31, 50, 51, 61, 62, 63, 64, 65, 66, 67, 76, 88], "where": [12, 48, 64, 65, 66, 67, 84, 87, 88], "whether": [77, 78, 79, 80, 81, 82], "which": [12, 15, 16, 17, 19, 24, 51, 66, 67, 87, 88], "while": [12, 13, 16, 24, 40, 76, 84, 85, 88, 89], "whole": 19, "whose": [68, 71, 72, 74], "width": 88, "with_mean": 76, "with_std": 76, "within": [76, 88], "without": [9, 12, 16, 17, 20, 21, 23, 87, 88], "wolf": [16, 27, 28, 38, 39, 43, 44], "won": [16, 17, 88], "work": [16, 17, 19, 33, 35, 39, 42, 44, 50, 51, 52, 55, 56, 68, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "workflow": 88, "workshop": [7, 16, 51, 52, 72, 73, 87], "would": [87, 88], "wrap": [19, 76], "wrapper": 19, "www": [7, 16], "x": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 33, 35, 39, 42, 44, 48, 50, 51, 52, 64, 65, 66, 67, 79, 82, 83, 84, 86, 87, 88, 89], "x0": [17, 20], "x_": [12, 17], "x_adapt": 15, "x_adapted_classreg": 15, "x_adapted_linear": 15, "x_adapted_sinkhorn": 15, "x_dict": 9, "x_lodo": 24, "x_max": [16, 17, 20], "x_min": [16, 17, 20], "x_point": 12, "x_sourc": [1, 2, 3, 4, 15, 23], "x_source_": [44, 48, 50, 60], "x_source_adapt": 15, "x_source_adapted_classreg": 15, "x_source_adapted_linear": 15, "x_source_adapted_sinkhorn": 15, "x_subj1": 88, "x_subj12": 88, "x_subj3": 88, "x_t": 12, "x_target": [1, 2, 3, 4, 15, 23, 25, 88, 89], "x_target_": 60, "x_test": [6, 7, 8, 9, 88], "x_train": [17, 88], "xclass": 21, "xlabel": [23, 25], "xlim": [12, 24], "xs_subspac": 17, "xt": [12, 13, 14, 16, 17, 19, 20, 21, 87], "xt2": 21, "xt_adapt": 17, "xt_subspac": 17, "xx": [13, 14], "xxx": 86, "y": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 33, 35, 39, 42, 44, 48, 50, 52, 64, 65, 66, 67, 77, 78, 79, 82, 83, 84, 86, 87, 88, 89], "y_": [17, 69, 70, 73, 75], "y_lodo": 24, "y_max": [16, 17, 20], "y_min": [16, 17, 20], "y_point": 12, "y_pred": [77, 78], "y_pred_": [69, 70, 73, 75], "y_pred_t": [69, 70, 73, 75], "y_sourc": [1, 2, 3, 4, 15, 23], "y_subj1": 88, "y_subj12": 88, "y_subj3": 88, "y_target": [1, 2, 3, 4, 15, 23, 25, 88, 89], "y_test": [6, 7, 8, 9, 88], "y_train": [17, 88], "y_true": 78, "yang": 87, "yani": [24, 87], "yann": 7, "yaroslav": 71, "yerr": 23, "yet": 87, "yh": 14, "yht": 14, "yield": 84, "ylabel": 25, "ylim": [12, 24], "you": [15, 19, 33, 35, 39, 42, 44, 50, 52, 55, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "your": 88, "ypred": 87, "ys_pred": [13, 14], "yt": [12, 13, 14, 16, 17, 19, 20, 21], "yt_pred": [13, 14, 19], "ytick": [23, 24], "yticklabel": 24, "yu": [17, 61, 62, 87], "yy": [13, 14], "z": [13, 14, 87], "zero": [9, 21], "zero_grad": 9, "zhang": [47, 48, 49, 50, 87], "zip": [11, 20, 86], "zjdot": [13, 14], "zorder": 21}, "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Label Propagation methods", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Subspace method example on subspace shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "skada.CORAL", "skada.CORALAdapter", "skada.ClassRegularizerOTMapping", "skada.ClassRegularizerOTMappingAdapter", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DensityReweightAdapter", "skada.DiscriminatorReweight", "skada.DiscriminatorReweightAdapter", "skada.EntropicOTMapping", "skada.EntropicOTMappingAdapter", "skada.GaussianReweight", "skada.GaussianReweightAdapter", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.KLIEPReweightAdapter", "skada.KMMReweight", "skada.KMMReweightAdapter", "skada.LinearOTMapping", "skada.LinearOTMappingAdapter", "skada.MMDLSConSMapping", "skada.MMDLSConSMappingAdapter", "skada.MMDTarSReweight", "skada.MMDTarSReweightAdapter", "skada.NearestNeighborReweight", "skada.NearestNeighborReweightAdapter", "skada.OTMapping", "skada.OTMappingAdapter", "skada.PerDomain", "skada.Shared", "skada.SubspaceAlignment", "skada.SubspaceAlignmentAdapter", "skada.TransferComponentAnalysis", "skada.TransferComponentAnalysisAdapter", "skada.TransferJointMatching", "skada.TransferJointMatchingAdapter", "skada.TransferSubspaceLearning", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "SKADA: SciKit Domain Adaptation", "Users Guide", "Metrics: Compute score for domain adaptation problems", "Computation times"], "titleterms": {"2": [12, 16, 17], "2d": [12, 16, 17], "The": [16, 17], "acknowledg": 87, "adapt": [6, 7, 8, 11, 15, 16, 17, 19, 87, 88, 89], "advanc": 19, "adversari": 6, "algorithm": 87, "align": [0, 17], "analysi": 17, "api": 0, "behavior": 24, "between": [16, 17], "cdan": 68, "cdanloss": 69, "circularvalid": 77, "class": [12, 16, 17], "classic": [6, 7, 8], "classif": [13, 14, 20], "classifi": [12, 13, 14, 19], "classregularizerotmap": 29, "classregularizerotmappingadapt": 30, "comparison": [16, 17, 20], "compon": 17, "comput": [5, 10, 18, 22, 26, 89, 90], "concept": [13, 14, 15], "content": 87, "coral": 27, "coraladapt": 28, "covari": 16, "cross": [19, 24], "cross_val_scor": 23, "da": [0, 9, 11, 15, 19, 20, 87, 88], "danloss": 70, "dann": [6, 71], "dasvm": 12, "dasvmclassifi": [12, 31], "data": [13, 14], "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 64, 65, 66, 67, 88], "deep": [0, 9, 11, 68, 69, 70, 71, 72, 73, 74, 75, 87], "deepcor": [7, 72], "deepcoralloss": 73, "deepembeddedvalid": 78, "deepjdot": [8, 74], "deepjdotloss": 75, "densiti": 16, "densityreweight": 32, "densityreweightadapt": 33, "differ": 15, "discr": 16, "discriminatorreweight": 34, "discriminatorreweightadapt": 35, "diverg": 7, "doe": 15, "domain": [1, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 87, 88, 89], "domainshufflesplit": 83, "drift": [13, 14, 15], "entropicotmap": 36, "entropicotmappingadapt": 37, "estim": [19, 88], "exampl": [11, 12, 13, 16, 17, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 59, 61, 63, 64, 66, 67, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87], "full": [14, 21], "galleri": 11, "gaussian": 16, "gaussianreweight": 38, "gaussianreweightadapt": 39, "gener": [12, 13, 14, 15, 16, 17, 21], "grid": 19, "gridsearchcv": 25, "guid": 88, "how": [15, 19], "illustr": [13, 14, 15, 16, 17], "imag": [6, 7, 8, 9], "implement": 87, "importanceweightedscor": 79, "indic": 87, "instal": 87, "jdot": 13, "jdotregressor": 40, "joint": 17, "kernel": 16, "kliepreweight": [16, 41], "kliepreweightadapt": 42, "kmmreweight": 43, "kmmreweightadapt": 44, "labe": 14, "label": [12, 14], "labelprop": 14, "learn": [0, 11, 17, 87], "leaveonedomainout": 84, "licens": 87, "linearotmap": 45, "linearotmappingadapt": 46, "load": [6, 7, 8, 9], "logo": 21, "main": 0, "make_da_pipelin": 76, "make_dataset_from_moons_distribut": 64, "make_shifted_blob": 65, "make_shifted_dataset": 66, "make_variable_frequency_dataset": 67, "map": 0, "match": [16, 17], "mean": 16, "method": [0, 6, 7, 8, 9, 11, 14, 15, 16, 17, 20], "metric": [0, 77, 78, 79, 80, 81, 82, 87, 88, 89], "mmdlsconsmap": 47, "mmdlsconsmappingadapt": 48, "mmdtarsreweight": 49, "mmdtarsreweightadapt": 50, "model": [0, 6, 7, 8, 14, 88], "model_select": [0, 83, 84, 85, 86], "modul": 0, "nearest": 16, "nearestneighborreweight": 51, "nearestneighborreweightadapt": 52, "neighbor": 16, "optim": [8, 15], "ot": 13, "otda": 15, "other": 0, "otmap": 53, "otmappingadapt": 54, "our": [12, 16, 17], "paramet": 9, "perdomain": 55, "pipelin": [0, 19, 88], "plan": 13, "plot": [1, 2, 3, 4, 12, 13, 14, 16, 17, 21], "predictionentropyscor": 80, "problem": [15, 16, 17, 89], "procedur": 11, "propag": 14, "pytorch": 87, "refer": 87, "regress": [13, 14], "regressor": [13, 14], "reweight": [0, 16], "sampl": [0, 88], "scikit": 87, "score": [16, 17, 19, 88, 89], "search": 19, "select": [0, 88], "selector": 88, "setup": 9, "share": 56, "shift": [1, 2, 3, 4, 16, 17], "short": 87, "skada": [0, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "skorch": 9, "small": 21, "softneighborhooddens": 81, "sourc": [1, 2, 3, 4, 13, 14], "sourcetargetshufflesplit": 85, "splitter": 88, "stratifieddomainshufflesplit": 86, "subspac": 17, "subspacealign": 57, "subspacealignmentadapt": 58, "supervisedscor": 82, "svc": 13, "tabl": 87, "target": [1, 2, 3, 4, 12], "test": 88, "time": [5, 10, 18, 22, 26, 88, 90], "torch": 9, "train": [6, 7, 8, 9, 13, 14], "transfer": 17, "transfercomponentanalysi": 59, "transfercomponentanalysisadapt": 60, "transferjointmatch": 61, "transferjointmatchingadapt": 62, "transfersubspacelearn": 63, "transport": [8, 15], "us": [19, 23, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 59, 61, 63, 64, 66, 67, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86], "usag": 12, "user": 88, "util": 0, "valid": [11, 19, 24], "visual": 24, "we": [12, 16, 17], "white": 21, "work": 15}})