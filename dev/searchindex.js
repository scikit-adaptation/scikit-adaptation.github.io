Search.setIndex({"alltitles": {"API and modules": [[0, null]], "Acknowledgements": [[102, "acknowledgements"]], "Adapter": [[103, "adapter"]], "Adapters and Estimators": [[103, "adapters-and-estimators"]], "Advanced DA pipeline": [[20, "advanced-da-pipeline"]], "Adversarial domain adaptation methods.": [[6, null]], "Comparison of DA classification methods": [[21, null]], "Comparison of score between reweighting methods:": [[17, "comparison-of-score-between-reweighting-methods"]], "Comparison of score between subspace methods:": [[18, "comparison-of-score-between-subspace-methods"]], "Computation times": [[5, null], [10, null], [19, null], [23, null], [27, null], [105, null]], "Contents": [[102, "contents"]], "Contributing to SKADA": [[28, null]], "DA Adapter pipeline": [[20, "da-adapter-pipeline"]], "DA Classifier estimator": [[20, "da-classifier-estimator"]], "DA dataset": [[20, "da-dataset"]], "DA estimator in a pipeline": [[20, "da-estimator-in-a-pipeline"]], "DA estimator with grid search": [[20, "da-estimator-with-grid-search"]], "DA estimators with score cross-validation": [[20, "da-estimators-with-score-cross-validation"]], "DA methods": [[11, "da-methods"]], "DA metrics": [[102, "da-metrics"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "DA pipeline": [[0, "da-pipeline"]], "DA validation procedures": [[11, "da-validation-procedures"]], "DASVM classifier example": [[12, null]], "Dataset": [[103, "dataset"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Deep learning DA methods": [[11, "deep-learning-da-methods"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "Deep learning domain adaptation algorithms": [[102, "deep-learning-domain-adaptation-algorithms"]], "Different OTDA methods": [[16, "different-otda-methods"]], "Divergence domain adaptation methods.": [[7, null]], "Documentation": [[28, "documentation"]], "Domain Adaptation Datasets": [[11, "domain-adaptation-datasets"]], "Domain adaptation algorithms": [[102, "domain-adaptation-algorithms"]], "Examples gallery": [[11, null]], "Examples using skada.CORAL": [[29, "examples-using-skada-coral"]], "Examples using skada.CORALAdapter": [[30, "examples-using-skada-coraladapter"]], "Examples using skada.ClassRegularizerOTMapping": [[31, "examples-using-skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMappingAdapter": [[32, "examples-using-skada-classregularizerotmappingadapter"]], "Examples using skada.DASVMClassifier": [[33, "examples-using-skada-dasvmclassifier"]], "Examples using skada.DensityReweight": [[34, "examples-using-skada-densityreweight"]], "Examples using skada.DiscriminatorReweight": [[36, "examples-using-skada-discriminatorreweight"]], "Examples using skada.EntropicOTMapping": [[38, "examples-using-skada-entropicotmapping"]], "Examples using skada.EntropicOTMappingAdapter": [[39, "examples-using-skada-entropicotmappingadapter"]], "Examples using skada.GaussianReweight": [[40, "examples-using-skada-gaussianreweight"]], "Examples using skada.GaussianReweightAdapter": [[41, "examples-using-skada-gaussianreweightadapter"]], "Examples using skada.JDOTRegressor": [[42, "examples-using-skada-jdotregressor"]], "Examples using skada.KLIEPReweight": [[43, "examples-using-skada-kliepreweight"]], "Examples using skada.KMMReweight": [[45, "examples-using-skada-kmmreweight"]], "Examples using skada.KMMReweightAdapter": [[46, "examples-using-skada-kmmreweightadapter"]], "Examples using skada.LinearOTMapping": [[47, "examples-using-skada-linearotmapping"]], "Examples using skada.LinearOTMappingAdapter": [[48, "examples-using-skada-linearotmappingadapter"]], "Examples using skada.MMDLSConSMapping": [[49, "examples-using-skada-mmdlsconsmapping"]], "Examples using skada.MMDTarSReweight": [[51, "examples-using-skada-mmdtarsreweight"]], "Examples using skada.NearestNeighborReweight": [[53, "examples-using-skada-nearestneighborreweight"]], "Examples using skada.OTMapping": [[55, "examples-using-skada-otmapping"]], "Examples using skada.OTMappingAdapter": [[56, "examples-using-skada-otmappingadapter"]], "Examples using skada.PerDomain": [[57, "examples-using-skada-perdomain"]], "Examples using skada.Shared": [[58, "examples-using-skada-shared"]], "Examples using skada.SubspaceAlignment": [[59, "examples-using-skada-subspacealignment"]], "Examples using skada.TransferComponentAnalysis": [[61, "examples-using-skada-transfercomponentanalysis"]], "Examples using skada.TransferJointMatching": [[63, "examples-using-skada-transferjointmatching"]], "Examples using skada.TransferSubspaceLearning": [[65, "examples-using-skada-transfersubspacelearning"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[66, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_shifted_datasets": [[68, "examples-using-skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[69, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.deep.DANN": [[75, "examples-using-skada-deep-dann"]], "Examples using skada.deep.DeepCoral": [[76, "examples-using-skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoralLoss": [[77, "examples-using-skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepJDOT": [[78, "examples-using-skada-deep-deepjdot"]], "Examples using skada.make_da_pipeline": [[84, "examples-using-skada-make-da-pipeline"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[87, "examples-using-skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[89, "examples-using-skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.SupervisedScorer": [[91, "examples-using-skada-metrics-supervisedscorer"]], "Examples using skada.model_selection.DomainShuffleSplit": [[92, "examples-using-skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[93, "examples-using-skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[94, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[95, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "Examples using skada.source_target_split": [[97, "examples-using-skada-source-target-split"]], "Examples using skada.utils.extract_source_indices": [[100, "examples-using-skada-utils-extract-source-indices"]], "Filing bugs": [[28, "filing-bugs"]], "Generate classification classification dataset and plot it": [[14, "generate-classification-classification-dataset-and-plot-it"]], "Generate concept drift classification dataset and plot it": [[13, "generate-concept-drift-classification-dataset-and-plot-it"], [14, "generate-concept-drift-classification-dataset-and-plot-it"], [15, "generate-concept-drift-classification-dataset-and-plot-it"]], "Generate concept drift dataset": [[16, "generate-concept-drift-dataset"]], "Generate concept drift regression dataset and plot it": [[13, "generate-concept-drift-regression-dataset-and-plot-it"], [14, "generate-concept-drift-regression-dataset-and-plot-it"]], "How does OTDA works?": [[16, "how-does-otda-works"]], "How to contribute": [[28, "how-to-contribute"]], "How to use SKADA": [[20, null]], "Illustration of the DA problem": [[16, "illustration-of-the-da-problem"]], "Illustration of the Density Reweighting method": [[17, "illustration-of-the-density-reweighting-method"]], "Illustration of the Discr. reweighting method": [[17, "illustration-of-the-discr-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[17, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the KLIEPReweight method": [[17, "illustration-of-the-kliepreweight-method"]], "Illustration of the Kernel Mean Matching method": [[17, "illustration-of-the-kernel-mean-matching-method"]], "Illustration of the Nearest Neighbor reweighting method": [[17, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the OT plan": [[13, "illustration-of-the-ot-plan"]], "Illustration of the Subspace Alignment method": [[18, "illustration-of-the-subspace-alignment-method"]], "Illustration of the Transfer Component Analysis method": [[18, "illustration-of-the-transfer-component-analysis-method"]], "Illustration of the Transfer Joint Matching method": [[18, "illustration-of-the-transfer-joint-matching-method"]], "Illustration of the Transfer Subspace Learning method": [[18, "illustration-of-the-transfer-subspace-learning-method"]], "Illustration of the problem with no domain adaptation": [[17, "illustration-of-the-problem-with-no-domain-adaptation"], [18, "illustration-of-the-problem-with-no-domain-adaptation"]], "Illustration of the propagated labels": [[14, "illustration-of-the-propagated-labels"], [14, "id3"]], "Implemented algorithms": [[102, "implemented-algorithms"]], "Indices and tables": [[102, "indices-and-tables"]], "Installation": [[102, "installation"]], "JDOT Regressor and Classifier examples": [[13, null]], "Label Propagation methods": [[14, null]], "Labeling the target dataset": [[12, "labeling-the-target-dataset"]], "License": [[102, "license"]], "Load the image datasets": [[6, "load-the-image-datasets"], [7, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"]], "Main module skada": [[0, "module-skada"]], "Metrics for DA": [[103, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[104, null]], "Model Selection": [[103, "model-selection"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Multi-domain Linear Monge Alignment": [[15, null]], "New contributor tips": [[28, "new-contributor-tips"]], "Optimal Transport Domain Adaptation": [[16, "optimal-transport-domain-adaptation"]], "Optimal Transport Domain Adaptation (OTDA)": [[16, null]], "Optimal transport domain adaptation methods.": [[8, null]], "Other DA methods": [[0, "other-da-methods"]], "Pipeline": [[103, "pipeline"]], "Plot dataset source domain and shifted target domain": [[1, null], [2, null], [3, null], [4, null]], "Plot of the dataset:": [[17, "plot-of-the-dataset"], [18, "plot-of-the-dataset"]], "Plots of the dataset": [[12, "plots-of-the-dataset"]], "Pull Request Checklist": [[28, "pull-request-checklist"]], "References": [[102, "references"]], "Reweighting Methods": [[17, "reweighting-methods"]], "Reweighting method example on covariate shift dataset": [[17, null]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[102, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "SKADA logo generation": [[22, null]], "SKADA: SciKit Domain Adaptation": [[102, null]], "Sample Domain": [[103, "sample-domain"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Scoring": [[103, "scoring"]], "Selector": [[103, "selector"]], "Short examples": [[102, "short-examples"]], "Splitters": [[103, "splitters"]], "Subspace method example on subspace shift dataset": [[18, null]], "Test-time Domain Adaptation": [[103, "test-time-domain-adaptation"]], "The subspaces methods": [[18, "the-subspaces-methods"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Train a DeepCoral model": [[7, "train-a-deepcoral-model"]], "Train a DeepJDOT model": [[8, "train-a-deepjdot-model"]], "Train a classic model": [[6, "train-a-classic-model"], [7, "train-a-classic-model"], [8, "train-a-classic-model"]], "Train a classifier on adapted data": [[15, "train-a-classifier-on-adapted-data"], [15, "id1"]], "Train a classifier on source data": [[13, "train-a-classifier-on-source-data"], [14, "train-a-classifier-on-source-data"], [15, "train-a-classifier-on-source-data"]], "Train a regressor on source data": [[13, "train-a-regressor-on-source-data"], [14, "train-a-regressor-on-source-data"]], "Train the full Labe Propagation model": [[14, "train-the-full-labe-propagation-model"]], "Train with JDOT classifier": [[13, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[13, "train-with-jdot-classifier-with-svc"]], "Train with JDOT regressor": [[13, "train-with-jdot-regressor"]], "Train with LabelProp + classifier": [[14, "train-with-labelprop-classifier"]], "Train with LabelProp and JCPOT + classifier": [[14, "train-with-labelprop-and-jcpot-classifier"]], "Training parameters": [[9, "training-parameters"]], "Training setup for deep DA method.": [[9, null]], "Training with skorch": [[9, "training-with-skorch"]], "Training with skorch with dataset": [[9, "training-with-skorch-with-dataset"]], "Training with torch": [[9, "training-with-torch"]], "Usage of the DASVMClassifier": [[12, "usage-of-the-dasvmclassifier"]], "Users Guide": [[103, null]], "Using GridSearchCV with skada": [[26, null]], "Using cross_val_score with skada": [[24, null]], "Utilities": [[0, "utilities"]], "Utilities skada.utils": [[0, "module-skada.utils"]], "Visualizing cross-validation behavior in skada": [[25, null]], "We generate our 2D dataset with 2 classes": [[12, "we-generate-our-2d-dataset-with-2-classes"], [17, "we-generate-our-2d-dataset-with-2-classes"], [18, "we-generate-our-2d-dataset-with-2-classes"]], "skada.CORAL": [[29, null]], "skada.CORALAdapter": [[30, null]], "skada.ClassRegularizerOTMapping": [[31, null]], "skada.ClassRegularizerOTMappingAdapter": [[32, null]], "skada.DASVMClassifier": [[33, null]], "skada.DensityReweight": [[34, null]], "skada.DensityReweightAdapter": [[35, null]], "skada.DiscriminatorReweight": [[36, null]], "skada.DiscriminatorReweightAdapter": [[37, null]], "skada.EntropicOTMapping": [[38, null]], "skada.EntropicOTMappingAdapter": [[39, null]], "skada.GaussianReweight": [[40, null]], "skada.GaussianReweightAdapter": [[41, null]], "skada.JDOTRegressor": [[42, null]], "skada.KLIEPReweight": [[43, null]], "skada.KLIEPReweightAdapter": [[44, null]], "skada.KMMReweight": [[45, null]], "skada.KMMReweightAdapter": [[46, null]], "skada.LinearOTMapping": [[47, null]], "skada.LinearOTMappingAdapter": [[48, null]], "skada.MMDLSConSMapping": [[49, null]], "skada.MMDLSConSMappingAdapter": [[50, null]], "skada.MMDTarSReweight": [[51, null]], "skada.MMDTarSReweightAdapter": [[52, null]], "skada.NearestNeighborReweight": [[53, null]], "skada.NearestNeighborReweightAdapter": [[54, null]], "skada.OTMapping": [[55, null]], "skada.OTMappingAdapter": [[56, null]], "skada.PerDomain": [[57, null]], "skada.Shared": [[58, null]], "skada.SubspaceAlignment": [[59, null]], "skada.SubspaceAlignmentAdapter": [[60, null]], "skada.TransferComponentAnalysis": [[61, null]], "skada.TransferComponentAnalysisAdapter": [[62, null]], "skada.TransferJointMatching": [[63, null]], "skada.TransferJointMatchingAdapter": [[64, null]], "skada.TransferSubspaceLearning": [[65, null]], "skada.datasets.make_dataset_from_moons_distribution": [[66, null]], "skada.datasets.make_shifted_blobs": [[67, null]], "skada.datasets.make_shifted_datasets": [[68, null]], "skada.datasets.make_variable_frequency_dataset": [[69, null]], "skada.deep.CAN": [[70, null]], "skada.deep.CANLoss": [[71, null]], "skada.deep.CDAN": [[72, null]], "skada.deep.CDANLoss": [[73, null]], "skada.deep.DANLoss": [[74, null]], "skada.deep.DANN": [[75, null]], "skada.deep.DeepCoral": [[76, null]], "skada.deep.DeepCoralLoss": [[77, null]], "skada.deep.DeepJDOT": [[78, null]], "skada.deep.DeepJDOTLoss": [[79, null]], "skada.deep.MCC": [[80, null]], "skada.deep.MCCLoss": [[81, null]], "skada.deep.MDD": [[82, null]], "skada.deep.MDDLoss": [[83, null]], "skada.make_da_pipeline": [[84, null]], "skada.metrics.CircularValidation": [[85, null]], "skada.metrics.DeepEmbeddedValidation": [[86, null]], "skada.metrics.ImportanceWeightedScorer": [[87, null]], "skada.metrics.MixValScorer": [[88, null]], "skada.metrics.PredictionEntropyScorer": [[89, null]], "skada.metrics.SoftNeighborhoodDensity": [[90, null]], "skada.metrics.SupervisedScorer": [[91, null]], "skada.model_selection.DomainShuffleSplit": [[92, null]], "skada.model_selection.LeaveOneDomainOut": [[93, null]], "skada.model_selection.SourceTargetShuffleSplit": [[94, null]], "skada.model_selection.StratifiedDomainShuffleSplit": [[95, null]], "skada.per_domain_split": [[96, null]], "skada.source_target_split": [[97, null]], "skada.utils.check_X_y_domain": [[98, null]], "skada.utils.extract_domains_indices": [[99, null]], "skada.utils.extract_source_indices": [[100, null]], "skada.utils.source_target_merge": [[101, null]]}, "docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_label_prop_da", "auto_examples/methods/plot_monge_alignment_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/plot_subspace", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "contributing", "gen_modules/skada.CORAL", "gen_modules/skada.CORALAdapter", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.ClassRegularizerOTMappingAdapter", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DensityReweightAdapter", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.DiscriminatorReweightAdapter", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.EntropicOTMappingAdapter", "gen_modules/skada.GaussianReweight", "gen_modules/skada.GaussianReweightAdapter", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.KLIEPReweightAdapter", "gen_modules/skada.KMMReweight", "gen_modules/skada.KMMReweightAdapter", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.LinearOTMappingAdapter", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDLSConSMappingAdapter", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.MMDTarSReweightAdapter", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.NearestNeighborReweightAdapter", "gen_modules/skada.OTMapping", "gen_modules/skada.OTMappingAdapter", "gen_modules/skada.PerDomain", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.SubspaceAlignmentAdapter", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.TransferComponentAnalysisAdapter", "gen_modules/skada.TransferJointMatching", "gen_modules/skada.TransferJointMatchingAdapter", "gen_modules/skada.TransferSubspaceLearning", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CAN", "gen_modules/skada.deep.CANLoss", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.deep.MCC", "gen_modules/skada.deep.MCCLoss", "gen_modules/skada.deep.MDD", "gen_modules/skada.deep.MDDLoss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.MixValScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "gen_modules/skada.per_domain_split", "gen_modules/skada.source_target_split", "gen_modules/skada.utils.check_X_y_domain", "gen_modules/skada.utils.extract_domains_indices", "gen_modules/skada.utils.extract_source_indices", "gen_modules/skada.utils.source_target_merge", "index", "quickstart", "scorer", "sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_label_prop_da.rst", "auto_examples/methods/plot_monge_alignment_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/plot_subspace.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "contributing.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.CORALAdapter.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.ClassRegularizerOTMappingAdapter.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DensityReweightAdapter.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.DiscriminatorReweightAdapter.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.EntropicOTMappingAdapter.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.GaussianReweightAdapter.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.KLIEPReweightAdapter.rst", "gen_modules/skada.KMMReweight.rst", "gen_modules/skada.KMMReweightAdapter.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.LinearOTMappingAdapter.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDLSConSMappingAdapter.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.MMDTarSReweightAdapter.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.NearestNeighborReweightAdapter.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.OTMappingAdapter.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.SubspaceAlignmentAdapter.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.TransferComponentAnalysisAdapter.rst", "gen_modules/skada.TransferJointMatching.rst", "gen_modules/skada.TransferJointMatchingAdapter.rst", "gen_modules/skada.TransferSubspaceLearning.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CAN.rst", "gen_modules/skada.deep.CANLoss.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.deep.MCC.rst", "gen_modules/skada.deep.MCCLoss.rst", "gen_modules/skada.deep.MDD.rst", "gen_modules/skada.deep.MDDLoss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.MixValScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "gen_modules/skada.per_domain_split.rst", "gen_modules/skada.source_target_split.rst", "gen_modules/skada.utils.check_X_y_domain.rst", "gen_modules/skada.utils.extract_domains_indices.rst", "gen_modules/skada.utils.extract_source_indices.rst", "gen_modules/skada.utils.source_target_merge.rst", "index.rst", "quickstart.md", "scorer.rst", "sg_execution_times.rst"], "indexentries": {"can() (in module skada.deep)": [[70, "skada.deep.CAN", false]], "canloss (class in skada.deep)": [[71, "skada.deep.CANLoss", false]], "cdan() (in module skada.deep)": [[72, "skada.deep.CDAN", false]], "cdanloss (class in skada.deep)": [[73, "skada.deep.CDANLoss", false]], "check_x_y_domain() (in module skada.utils)": [[98, "skada.utils.check_X_y_domain", false]], "circularvalidation (class in skada.metrics)": [[85, "skada.metrics.CircularValidation", false]], "classregularizerotmapping() (in module skada)": [[31, "skada.ClassRegularizerOTMapping", false]], "classregularizerotmappingadapter() (in module skada)": [[32, "skada.ClassRegularizerOTMappingAdapter", false]], "coral() (in module skada)": [[29, "skada.CORAL", false]], "coraladapter() (in module skada)": [[30, "skada.CORALAdapter", false]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[86, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss", false]], "danloss (class in skada.deep)": [[74, "skada.deep.DANLoss", false]], "dann() (in module skada.deep)": [[75, "skada.deep.DANN", false]], "dasvmclassifier() (in module skada)": [[33, "skada.DASVMClassifier", false]], "deepcoral() (in module skada.deep)": [[76, "skada.deep.DeepCoral", false]], "deepcoralloss (class in skada.deep)": [[77, "skada.deep.DeepCoralLoss", false]], "deepembeddedvalidation (class in skada.metrics)": [[86, "skada.metrics.DeepEmbeddedValidation", false]], "deepjdot() (in module skada.deep)": [[78, "skada.deep.DeepJDOT", false]], "deepjdotloss (class in skada.deep)": [[79, "skada.deep.DeepJDOTLoss", false]], "densityreweight() (in module skada)": [[34, "skada.DensityReweight", false]], "densityreweightadapter (class in skada)": [[35, "skada.DensityReweightAdapter", false]], "discriminatorreweight() (in module skada)": [[36, "skada.DiscriminatorReweight", false]], "discriminatorreweightadapter (class in skada)": [[37, "skada.DiscriminatorReweightAdapter", false]], "domainshufflesplit (class in skada.model_selection)": [[92, "skada.model_selection.DomainShuffleSplit", false]], "entropicotmapping() (in module skada)": [[38, "skada.EntropicOTMapping", false]], "entropicotmappingadapter() (in module skada)": [[39, "skada.EntropicOTMappingAdapter", false]], "extract_domains_indices() (in module skada.utils)": [[99, "skada.utils.extract_domains_indices", false]], "extract_source_indices() (in module skada.utils)": [[100, "skada.utils.extract_source_indices", false]], "fit() (skada.densityreweightadapter method)": [[35, "skada.DensityReweightAdapter.fit", false]], "fit() (skada.discriminatorreweightadapter method)": [[37, "skada.DiscriminatorReweightAdapter.fit", false]], "fit() (skada.gaussianreweightadapter method)": [[41, "skada.GaussianReweightAdapter.fit", false]], "fit() (skada.kliepreweightadapter method)": [[44, "skada.KLIEPReweightAdapter.fit", false]], "fit() (skada.kmmreweightadapter method)": [[46, "skada.KMMReweightAdapter.fit", false]], "fit() (skada.mmdtarsreweightadapter method)": [[52, "skada.MMDTarSReweightAdapter.fit", false]], "fit() (skada.nearestneighborreweightadapter method)": [[54, "skada.NearestNeighborReweightAdapter.fit", false]], "forward() (skada.deep.canloss method)": [[71, "skada.deep.CANLoss.forward", false]], "forward() (skada.deep.cdanloss method)": [[73, "skada.deep.CDANLoss.forward", false]], "forward() (skada.deep.danloss method)": [[74, "skada.deep.DANLoss.forward", false]], "forward() (skada.deep.deepcoralloss method)": [[77, "skada.deep.DeepCoralLoss.forward", false]], "forward() (skada.deep.deepjdotloss method)": [[79, "skada.deep.DeepJDOTLoss.forward", false]], "forward() (skada.deep.mccloss method)": [[81, "skada.deep.MCCLoss.forward", false]], "forward() (skada.deep.mddloss method)": [[83, "skada.deep.MDDLoss.forward", false]], "gaussianreweight() (in module skada)": [[40, "skada.GaussianReweight", false]], "gaussianreweightadapter (class in skada)": [[41, "skada.GaussianReweightAdapter", false]], "get_estimator() (skada.perdomain method)": [[57, "skada.PerDomain.get_estimator", false]], "get_estimator() (skada.shared method)": [[58, "skada.Shared.get_estimator", false]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[93, "skada.model_selection.LeaveOneDomainOut.get_n_splits", false]], "importanceweightedscorer (class in skada.metrics)": [[87, "skada.metrics.ImportanceWeightedScorer", false]], "jdotregressor() (in module skada)": [[42, "skada.JDOTRegressor", false]], "kliepreweight() (in module skada)": [[43, "skada.KLIEPReweight", false]], "kliepreweightadapter (class in skada)": [[44, "skada.KLIEPReweightAdapter", false]], "kmmreweight() (in module skada)": [[45, "skada.KMMReweight", false]], "kmmreweightadapter (class in skada)": [[46, "skada.KMMReweightAdapter", false]], "leaveonedomainout (class in skada.model_selection)": [[93, "skada.model_selection.LeaveOneDomainOut", false]], "linearotmapping() (in module skada)": [[47, "skada.LinearOTMapping", false]], "linearotmappingadapter() (in module skada)": [[48, "skada.LinearOTMappingAdapter", false]], "make_da_pipeline() (in module skada)": [[84, "skada.make_da_pipeline", false]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[66, "skada.datasets.make_dataset_from_moons_distribution", false]], "make_shifted_blobs() (in module skada.datasets)": [[67, "skada.datasets.make_shifted_blobs", false]], "make_shifted_datasets() (in module skada.datasets)": [[68, "skada.datasets.make_shifted_datasets", false]], "make_variable_frequency_dataset() (in module skada.datasets)": [[69, "skada.datasets.make_variable_frequency_dataset", false]], "mcc() (in module skada.deep)": [[80, "skada.deep.MCC", false]], "mccloss (class in skada.deep)": [[81, "skada.deep.MCCLoss", false]], "mdd() (in module skada.deep)": [[82, "skada.deep.MDD", false]], "mddloss (class in skada.deep)": [[83, "skada.deep.MDDLoss", false]], "mixvalscorer (class in skada.metrics)": [[88, "skada.metrics.MixValScorer", false]], "mmdlsconsmapping() (in module skada)": [[49, "skada.MMDLSConSMapping", false]], "mmdlsconsmappingadapter() (in module skada)": [[50, "skada.MMDLSConSMappingAdapter", false]], "mmdtarsreweight() (in module skada)": [[51, "skada.MMDTarSReweight", false]], "mmdtarsreweightadapter (class in skada)": [[52, "skada.MMDTarSReweightAdapter", false]], "module": [[0, "module-skada", false], [0, "module-skada.datasets", false], [0, "module-skada.deep", false], [0, "module-skada.metrics", false], [0, "module-skada.model_selection", false], [0, "module-skada.utils", false]], "nearestneighborreweight() (in module skada)": [[53, "skada.NearestNeighborReweight", false]], "nearestneighborreweightadapter (class in skada)": [[54, "skada.NearestNeighborReweightAdapter", false]], "otmapping() (in module skada)": [[55, "skada.OTMapping", false]], "otmappingadapter() (in module skada)": [[56, "skada.OTMappingAdapter", false]], "per_domain_split() (in module skada)": [[96, "skada.per_domain_split", false]], "perdomain (class in skada)": [[57, "skada.PerDomain", false]], "predictionentropyscorer (class in skada.metrics)": [[89, "skada.metrics.PredictionEntropyScorer", false]], "set_decision_function_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_decision_function_request", false]], "set_decision_function_request() (skada.shared method)": [[58, "skada.Shared.set_decision_function_request", false]], "set_fit_request() (skada.densityreweightadapter method)": [[35, "skada.DensityReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.discriminatorreweightadapter method)": [[37, "skada.DiscriminatorReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.gaussianreweightadapter method)": [[41, "skada.GaussianReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kliepreweightadapter method)": [[44, "skada.KLIEPReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kmmreweightadapter method)": [[46, "skada.KMMReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.mmdtarsreweightadapter method)": [[52, "skada.MMDTarSReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.nearestneighborreweightadapter method)": [[54, "skada.NearestNeighborReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_fit_request", false]], "set_fit_request() (skada.shared method)": [[58, "skada.Shared.set_fit_request", false]], "set_partial_fit_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_partial_fit_request", false]], "set_partial_fit_request() (skada.shared method)": [[58, "skada.Shared.set_partial_fit_request", false]], "set_predict_log_proba_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.shared method)": [[58, "skada.Shared.set_predict_log_proba_request", false]], "set_predict_proba_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_predict_proba_request", false]], "set_predict_proba_request() (skada.shared method)": [[58, "skada.Shared.set_predict_proba_request", false]], "set_predict_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_predict_request", false]], "set_predict_request() (skada.shared method)": [[58, "skada.Shared.set_predict_request", false]], "set_score_request() (skada.metrics.circularvalidation method)": [[85, "skada.metrics.CircularValidation.set_score_request", false]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[86, "skada.metrics.DeepEmbeddedValidation.set_score_request", false]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[87, "skada.metrics.ImportanceWeightedScorer.set_score_request", false]], "set_score_request() (skada.metrics.mixvalscorer method)": [[88, "skada.metrics.MixValScorer.set_score_request", false]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[89, "skada.metrics.PredictionEntropyScorer.set_score_request", false]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[90, "skada.metrics.SoftNeighborhoodDensity.set_score_request", false]], "set_score_request() (skada.metrics.supervisedscorer method)": [[91, "skada.metrics.SupervisedScorer.set_score_request", false]], "set_score_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_score_request", false]], "set_score_request() (skada.shared method)": [[58, "skada.Shared.set_score_request", false]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[92, "skada.model_selection.DomainShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[93, "skada.model_selection.LeaveOneDomainOut.set_split_request", false]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[94, "skada.model_selection.SourceTargetShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[95, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request", false]], "set_transform_request() (skada.densityreweightadapter method)": [[35, "skada.DensityReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.discriminatorreweightadapter method)": [[37, "skada.DiscriminatorReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.gaussianreweightadapter method)": [[41, "skada.GaussianReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kliepreweightadapter method)": [[44, "skada.KLIEPReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kmmreweightadapter method)": [[46, "skada.KMMReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.mmdtarsreweightadapter method)": [[52, "skada.MMDTarSReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.nearestneighborreweightadapter method)": [[54, "skada.NearestNeighborReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_transform_request", false]], "set_transform_request() (skada.shared method)": [[58, "skada.Shared.set_transform_request", false]], "shared (class in skada)": [[58, "skada.Shared", false]], "skada": [[0, "module-skada", false]], "skada.datasets": [[0, "module-skada.datasets", false]], "skada.deep": [[0, "module-skada.deep", false]], "skada.metrics": [[0, "module-skada.metrics", false]], "skada.model_selection": [[0, "module-skada.model_selection", false]], "skada.utils": [[0, "module-skada.utils", false]], "softneighborhooddensity (class in skada.metrics)": [[90, "skada.metrics.SoftNeighborhoodDensity", false]], "source_target_merge() (in module skada.utils)": [[101, "skada.utils.source_target_merge", false]], "source_target_split() (in module skada)": [[97, "skada.source_target_split", false]], "sourcetargetshufflesplit (class in skada.model_selection)": [[94, "skada.model_selection.SourceTargetShuffleSplit", false]], "split() (skada.model_selection.leaveonedomainout method)": [[93, "skada.model_selection.LeaveOneDomainOut.split", false]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[95, "skada.model_selection.StratifiedDomainShuffleSplit.split", false]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[95, "skada.model_selection.StratifiedDomainShuffleSplit", false]], "subspacealignment() (in module skada)": [[59, "skada.SubspaceAlignment", false]], "subspacealignmentadapter() (in module skada)": [[60, "skada.SubspaceAlignmentAdapter", false]], "supervisedscorer (class in skada.metrics)": [[91, "skada.metrics.SupervisedScorer", false]], "transfercomponentanalysis() (in module skada)": [[61, "skada.TransferComponentAnalysis", false]], "transfercomponentanalysisadapter() (in module skada)": [[62, "skada.TransferComponentAnalysisAdapter", false]], "transferjointmatching() (in module skada)": [[63, "skada.TransferJointMatching", false]], "transferjointmatchingadapter() (in module skada)": [[64, "skada.TransferJointMatchingAdapter", false]], "transfersubspacelearning() (in module skada)": [[65, "skada.TransferSubspaceLearning", false]]}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[29, 1, 1, "", "CORAL"], [30, 1, 1, "", "CORALAdapter"], [31, 1, 1, "", "ClassRegularizerOTMapping"], [32, 1, 1, "", "ClassRegularizerOTMappingAdapter"], [33, 1, 1, "", "DASVMClassifier"], [34, 1, 1, "", "DensityReweight"], [35, 2, 1, "", "DensityReweightAdapter"], [36, 1, 1, "", "DiscriminatorReweight"], [37, 2, 1, "", "DiscriminatorReweightAdapter"], [38, 1, 1, "", "EntropicOTMapping"], [39, 1, 1, "", "EntropicOTMappingAdapter"], [40, 1, 1, "", "GaussianReweight"], [41, 2, 1, "", "GaussianReweightAdapter"], [42, 1, 1, "", "JDOTRegressor"], [43, 1, 1, "", "KLIEPReweight"], [44, 2, 1, "", "KLIEPReweightAdapter"], [45, 1, 1, "", "KMMReweight"], [46, 2, 1, "", "KMMReweightAdapter"], [47, 1, 1, "", "LinearOTMapping"], [48, 1, 1, "", "LinearOTMappingAdapter"], [49, 1, 1, "", "MMDLSConSMapping"], [50, 1, 1, "", "MMDLSConSMappingAdapter"], [51, 1, 1, "", "MMDTarSReweight"], [52, 2, 1, "", "MMDTarSReweightAdapter"], [53, 1, 1, "", "NearestNeighborReweight"], [54, 2, 1, "", "NearestNeighborReweightAdapter"], [55, 1, 1, "", "OTMapping"], [56, 1, 1, "", "OTMappingAdapter"], [57, 2, 1, "", "PerDomain"], [58, 2, 1, "", "Shared"], [59, 1, 1, "", "SubspaceAlignment"], [60, 1, 1, "", "SubspaceAlignmentAdapter"], [61, 1, 1, "", "TransferComponentAnalysis"], [62, 1, 1, "", "TransferComponentAnalysisAdapter"], [63, 1, 1, "", "TransferJointMatching"], [64, 1, 1, "", "TransferJointMatchingAdapter"], [65, 1, 1, "", "TransferSubspaceLearning"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [84, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"], [96, 1, 1, "", "per_domain_split"], [97, 1, 1, "", "source_target_split"], [0, 0, 0, "-", "utils"]], "skada.DensityReweightAdapter": [[35, 3, 1, "", "fit"], [35, 3, 1, "", "set_fit_request"], [35, 3, 1, "", "set_transform_request"]], "skada.DiscriminatorReweightAdapter": [[37, 3, 1, "", "fit"], [37, 3, 1, "", "set_fit_request"], [37, 3, 1, "", "set_transform_request"]], "skada.GaussianReweightAdapter": [[41, 3, 1, "", "fit"], [41, 3, 1, "", "set_fit_request"], [41, 3, 1, "", "set_transform_request"]], "skada.KLIEPReweightAdapter": [[44, 3, 1, "", "fit"], [44, 3, 1, "", "set_fit_request"], [44, 3, 1, "", "set_transform_request"]], "skada.KMMReweightAdapter": [[46, 3, 1, "", "fit"], [46, 3, 1, "", "set_fit_request"], [46, 3, 1, "", "set_transform_request"]], "skada.MMDTarSReweightAdapter": [[52, 3, 1, "", "fit"], [52, 3, 1, "", "set_fit_request"], [52, 3, 1, "", "set_transform_request"]], "skada.NearestNeighborReweightAdapter": [[54, 3, 1, "", "fit"], [54, 3, 1, "", "set_fit_request"], [54, 3, 1, "", "set_transform_request"]], "skada.PerDomain": [[57, 3, 1, "", "get_estimator"], [57, 3, 1, "", "set_decision_function_request"], [57, 3, 1, "", "set_fit_request"], [57, 3, 1, "", "set_partial_fit_request"], [57, 3, 1, "", "set_predict_log_proba_request"], [57, 3, 1, "", "set_predict_proba_request"], [57, 3, 1, "", "set_predict_request"], [57, 3, 1, "", "set_score_request"], [57, 3, 1, "", "set_transform_request"]], "skada.Shared": [[58, 3, 1, "", "get_estimator"], [58, 3, 1, "", "set_decision_function_request"], [58, 3, 1, "", "set_fit_request"], [58, 3, 1, "", "set_partial_fit_request"], [58, 3, 1, "", "set_predict_log_proba_request"], [58, 3, 1, "", "set_predict_proba_request"], [58, 3, 1, "", "set_predict_request"], [58, 3, 1, "", "set_score_request"], [58, 3, 1, "", "set_transform_request"]], "skada.datasets": [[66, 1, 1, "", "make_dataset_from_moons_distribution"], [67, 1, 1, "", "make_shifted_blobs"], [68, 1, 1, "", "make_shifted_datasets"], [69, 1, 1, "", "make_variable_frequency_dataset"]], "skada.deep": [[70, 1, 1, "", "CAN"], [71, 2, 1, "", "CANLoss"], [72, 1, 1, "", "CDAN"], [73, 2, 1, "", "CDANLoss"], [74, 2, 1, "", "DANLoss"], [75, 1, 1, "", "DANN"], [76, 1, 1, "", "DeepCoral"], [77, 2, 1, "", "DeepCoralLoss"], [78, 1, 1, "", "DeepJDOT"], [79, 2, 1, "", "DeepJDOTLoss"], [80, 1, 1, "", "MCC"], [81, 2, 1, "", "MCCLoss"], [82, 1, 1, "", "MDD"], [83, 2, 1, "", "MDDLoss"]], "skada.deep.CANLoss": [[71, 3, 1, "", "forward"]], "skada.deep.CDANLoss": [[73, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[74, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[77, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[79, 3, 1, "", "forward"]], "skada.deep.MCCLoss": [[81, 3, 1, "", "forward"]], "skada.deep.MDDLoss": [[83, 3, 1, "", "forward"]], "skada.metrics": [[85, 2, 1, "", "CircularValidation"], [86, 2, 1, "", "DeepEmbeddedValidation"], [87, 2, 1, "", "ImportanceWeightedScorer"], [88, 2, 1, "", "MixValScorer"], [89, 2, 1, "", "PredictionEntropyScorer"], [90, 2, 1, "", "SoftNeighborhoodDensity"], [91, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[85, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[86, 3, 1, "", "cross_entropy_loss"], [86, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[87, 3, 1, "", "set_score_request"]], "skada.metrics.MixValScorer": [[88, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[89, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[90, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[91, 3, 1, "", "set_score_request"]], "skada.model_selection": [[92, 2, 1, "", "DomainShuffleSplit"], [93, 2, 1, "", "LeaveOneDomainOut"], [94, 2, 1, "", "SourceTargetShuffleSplit"], [95, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[92, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[93, 3, 1, "", "get_n_splits"], [93, 3, 1, "", "set_split_request"], [93, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[94, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[95, 3, 1, "", "set_split_request"], [95, 3, 1, "", "split"]], "skada.utils": [[98, 1, 1, "", "check_X_y_domain"], [99, 1, 1, "", "extract_domains_indices"], [100, 1, 1, "", "extract_source_indices"], [101, 1, 1, "", "source_target_merge"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [3, 4, 7, 12, 17, 18, 21, 22, 24, 25, 26, 28, 50, 53, 54, 56, 65, 68, 70, 72, 75, 76, 78, 80, 82, 87, 88, 91, 96, 97, 101, 102, 103, 104], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 88, 90, 92, 95, 99, 101, 102, 103, 104, 105], "00": [5, 7, 16, 19, 23, 27, 105], "0000ff": 21, "001": [17, 21, 25], "0041": 8, "00e": 21, "01": [5, 6, 7, 8, 10, 12, 13, 19, 20, 21, 23, 24, 25, 26, 63, 64, 65, 105], "019": 105, "02": [7, 18, 19, 20, 25, 105], "02291": 102, "0269": 9, "03": [7, 26], "0393": 7, "04": [10, 24], "0400": 8, "0405": 6, "0474": 6, "05": [3, 19, 21, 26, 42, 49, 50, 90, 105], "0522": 8, "0564": 6, "0571": 7, "0580": 7, "06": [7, 13, 14, 21, 43, 44, 45, 46, 51, 52], "060_4_0699": 17, "07": [71, 74, 81], "07117994f0971b2fc2df95adb373c31c3d313442": 102, "072": [17, 19, 105], "075493682966016": 13, "0780": 7, "08": [21, 26, 31, 32, 38, 39, 47, 48], "0834": 6, "0887": 8, "09": 84, "0927": 7, "0934": 8, "0965": 8, "098": [22, 23, 105], "0997": 8, "0x7b660e5b9870": 12, "1": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103], "10": [1, 2, 4, 6, 8, 9, 12, 13, 14, 15, 16, 17, 20, 21, 22, 25, 26, 27, 31, 32, 42, 49, 50, 51, 52, 66, 67, 69, 92, 93, 94, 95, 101, 102, 105], "100": [4, 7, 12, 13, 14, 15, 17, 18, 21, 22, 42, 43, 44, 45, 46, 49, 50, 63, 64, 65, 66, 67, 68, 69], "1000": [4, 17, 21, 33, 38, 39, 43, 44, 45, 46, 51, 52], "100000": [21, 55, 56], "1004": [18, 21], "1009": 102, "100_000": [55, 56], "10155": [48, 102], "1027": 21, "10288": 102, "1033": 6, "1044": 102, "1047": 14, "105": [1, 102], "10e": [31, 32, 38, 39], "11": [6, 7, 22, 33, 85, 102], "1100": 4, "12": [7, 8, 10, 16, 17, 18, 21, 23, 76, 77, 102, 105], "121": 16, "122": 16, "125": 17, "128": [6, 7, 8, 9], "13": [78, 79, 102], "131": 16, "132": 16, "1321138905671275": 16, "133": 16, "1339": 7, "138": [7, 10, 105], "14": [1, 2, 3, 8, 10, 16, 19, 74, 102, 105], "140kb": 7, "1410": [18, 63, 64, 102], "1417": [18, 63, 64, 102], "141kb": 7, "143kb": 7, "143mb": 7, "1443686989830857": 15, "15": [1, 2, 3, 4, 7, 12, 13, 17, 18, 21, 23, 25, 75, 86, 102], "1523": 6, "153": 102, "15m": 7, "15th": [78, 79], "16": [17, 18, 72, 73, 102], "1647": 9, "16785": 102, "16793": 102, "16e": 21, "17": [22, 87, 102], "171": 102, "1711": 102, "1736": 6, "18": [6, 10, 22, 89, 102, 105], "18279941870395425": 13, "18530735809550572": 13, "19": [90, 102], "1905": [48, 102], "197": [26, 27, 105], "197k": 7, "1987": 7, "199": 102, "1d": [53, 54], "1e": [6, 7, 8, 9, 21, 24, 31, 32, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 71, 74, 81, 84, 86], "1nn": [17, 21], "2": [1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 16, 20, 21, 22, 25, 28, 53, 54, 63, 64, 65, 66, 67, 68, 90, 92, 95, 97, 101, 102, 103], "20": [2, 3, 7, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 26, 86, 102, 103, 104], "200": [21, 22, 31, 32], "2000": [17, 36, 37, 40, 41, 102], "2005": 102, "2007": [17, 43, 44, 45, 46, 87, 102], "2008": [17, 102], "2009": [33, 85, 102], "2010": [18, 65, 102], "2011": [18, 61, 62], "2012": [2, 3, 17, 53, 54, 68, 102], "2013": [18, 49, 50, 51, 52, 59, 60, 102], "2014": [14, 18, 63, 64, 102], "2015": [7, 74, 102], "2016": [7, 72, 73, 75, 76, 77, 102], "2017": [13, 29, 30, 42, 102], "2018": [78, 79, 89, 102], "2019": [48, 70, 71, 82, 83, 86, 102], "2020": [80, 81, 102], "2021": [90, 102], "2023": [88, 102], "2024": 102, "2025": 8, "2039": 8, "21": [12, 49, 50, 51, 52, 102, 105], "210": 102, "2102": 102, "21420445266620786": 13, "216": [24, 27, 105], "218866137683906": 16, "21960404515266418": 9, "22": 102, "2222": 9, "227": 102, "22983129554592746": 13, "22nd": 102, "23": [22, 45, 46, 102], "2349": 7, "2364aa": 22, "24": [17, 53, 54, 102], "2409": 9, "240px": 103, "241": 16, "242": 16, "243": 16, "244": [16, 102], "245": 16, "246": 16, "247": 16, "248": 16, "249": 102, "2497": 7, "25": [9, 17, 18, 69, 102], "253kb": 7, "256": 9, "26": [18, 63, 64, 102], "27": [18, 21, 65, 68, 102], "278mb": 7, "279": 102, "28": [7, 14, 102], "288146109474553": 16, "2888": 9, "289": [1, 5, 105], "29": [7, 102], "2960": 102, "2966": 6, "2967": 102, "2d": [13, 14, 15, 20], "2f": [13, 14, 16, 17, 18, 20, 21, 24], "2mb": 7, "2x1": 68, "2x2": 68, "3": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 33, 35, 37, 41, 43, 44, 45, 46, 51, 52, 54, 57, 58, 67, 69, 70, 71, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104], "30": [13, 21, 22, 24, 26, 53, 54, 102, 103, 104], "300": 22, "3018": 6, "3030": 6, "306": [14, 102], "31": [102, 105], "310098338155625": 15, "314": [14, 102], "3195": 6, "31m": 7, "32": [7, 9, 88, 102], "33": [70, 71, 80, 81, 102], "336863129384494": [13, 14, 15], "34": 102, "35": [22, 82, 83, 102], "352173719537829": 14, "36": 102, "360k": 7, "367467726151268": 14, "3676169789533272": [13, 14, 15], "36th": 102, "375": 17, "38": 7, "3805": 6, "384": [20, 23, 105], "3985": 8, "3k": 7, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 50, 82, 83, 92, 95, 101, 102, 103, 104], "40": 102, "400px": 103, "403": 7, "4096": 72, "416kb": 7, "4179": 8, "42": [2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 26], "4269298070320042": 14, "43": 15, "4330": 6, "443": 102, "4446": 6, "447": 102, "45": [2, 3, 7, 68], "450": 102, "4510": 7, "45933195939893": [13, 14], "4608": 7, "463": 102, "464886123797522": 15, "466": [2, 5, 105], "47": 10, "479": 23, "48": 25, "484kb": 7, "4893": [70, 71, 102], "4902": [70, 71, 102], "4989": 7, "4992": 8, "5": [1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 29, 30, 42, 43, 44, 49, 50, 70, 71, 92, 95, 101, 102, 103, 104], "50": [1, 13, 14, 15, 18], "500": 12, "5025": 6, "51": [1, 13], "517kb": 7, "518": [12, 19, 105], "521": [2, 3, 68], "5244703189443227": 16, "524k": 7, "524kb": 7, "5274": 6, "530": [2, 3, 68], "53817259426296": [13, 14, 15], "539kb": 7, "54": 7, "5450": 8, "548": [18, 19, 105], "54k": 7, "54m": 7, "55": 88, "558": [3, 5, 25, 27, 105], "5585726101363702": 14, "57": 14, "570318895725525": [13, 14], "572kb": 7, "576": [14, 21], "577": [4, 5, 105], "579kb": 7, "58": 24, "586kb": 7, "59": 102, "593kb": 7, "595": [13, 19, 105], "5k": 7, "5mb": 7, "6": [12, 13, 14, 17, 18, 22, 24, 25, 31, 32, 38, 39, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 92, 95, 101, 102], "60": [17, 102], "6003": 8, "6006": 7, "603": 18, "607": [16, 19, 105], "614kb": 7, "62": 7, "6239": 8, "625": 17, "63": 7, "64": [4, 9, 102], "64m": 7, "65": 7, "657kb": 7, "65m": 7, "667": 16, "6761": 8, "688k": 7, "6986": 8, "699": [17, 102], "6c4c7c": [17, 18], "7": [4, 12, 13, 14, 16, 17, 18, 19, 25, 47, 48, 53, 68, 71, 74, 81, 92, 95, 101, 102], "70": 22, "7009": 7, "7035": 7, "7124": 102, "7133": 102, "72": [6, 7, 8, 9], "72222222": [103, 104], "7229": 6, "7280": 7, "730": 10, "733": [8, 10, 105], "7404": 102, "7413": 102, "744989537549497": [13, 14], "746": [17, 102], "756925382279493": 15, "76": 14, "77": [13, 14], "770": 102, "7721": 9, "77m": 7, "782": [14, 19, 105], "787": 102, "7943": 8, "7964573229829714": [13, 14, 15], "7994": 7, "8": [1, 2, 3, 4, 7, 9, 12, 13, 16, 17, 18, 21, 22, 25, 26, 59, 60, 68, 92, 95, 101, 102], "80": [3, 17, 18], "819": 102, "81944444": [103, 104], "819k": 7, "82": 13, "827": 102, "829": [15, 19, 105], "83333333": [103, 104], "83m": 7, "84": [7, 13], "84375": 20, "849": 102, "85": [3, 22], "858": 102, "87": 14, "8750": 6, "8842": 8, "8870": 9, "889": 5, "89": 7, "8906752411575563": 7, "896": 1, "8k": 7, "9": [1, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 22, 31, 32, 38, 39, 61, 62, 68, 92, 95, 101, 102], "90": [18, 102], "9003215434083601": 6, "9067524115755627": 6, "909967845659164": 7, "916": [6, 10, 105], "9178": 7, "9184": 102, "9193": 102, "91m": 7, "9216": 9, "9217": 6, "929": [18, 65], "9295": 9, "9389067524115756": 8, "942": [9, 10, 18, 65, 105], "9453376205787781": 8, "950": 19, "9501": 6, "95625": [103, 104], "96": 18, "9610814126500358": [13, 14], "97": [7, 13, 102], "970": 27, "975": [103, 104], "98": [7, 12, 17, 24], "9832": 8, "983k": 7, "9875": 15, "99": [13, 14, 17], "9908398315310478": 9, "997": [21, 23, 105], "9985": 6, "9989": 7, "999c81": 22, "9k": 7, "A": [2, 3, 13, 14, 16, 17, 21, 22, 28, 31, 32, 33, 38, 39, 42, 45, 46, 47, 48, 55, 56, 59, 61, 63, 65, 68, 70, 71, 72, 75, 76, 78, 80, 82, 85, 86, 87, 88, 91, 98, 99, 102, 103], "As": [12, 18, 25], "At": [12, 28, 68], "But": 20, "By": [66, 67, 68, 69, 84], "For": [17, 20, 25, 28, 42, 53, 54, 84, 102, 103], "If": [20, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 53, 54, 55, 56, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 84, 86, 87, 88, 89, 91, 92, 94, 98, 99, 101, 102, 103], "In": [7, 14, 17, 18, 20, 22, 28, 29, 30, 36, 37, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 101, 102, 103, 104], "It": [20, 28, 33, 63, 64, 66, 67, 68, 69, 82, 85, 103], "Its": [17, 43, 44, 103], "No": [1, 24], "On": 14, "One": [1, 20, 69, 93, 102], "Such": [17, 103], "The": [1, 2, 3, 4, 12, 16, 17, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104], "Then": [16, 20, 24, 26, 85], "These": [17, 28], "To": [6, 7, 8, 9, 18, 21, 24, 103, 104], "Will": [17, 18, 68], "With": 103, "_": [2, 3, 12, 24, 25, 26, 30, 70, 71, 72, 75, 82, 89, 90, 101, 103], "__init__": [14, 21], "__name__": 25, "__version__": 28, "_barycent": 14, "_call_impl": 6, "_mnist_usp": [6, 7, 8, 9], "_self_label": 12, "_sign": 88, "_sinkhorn": 16, "_subspac": 18, "ab": [18, 22], "abl": 13, "abort": 28, "about": [12, 28], "abov": 28, "absenc": 103, "absolut": [12, 92, 103], "ac": 17, "acc": [13, 14, 16], "acc_": [13, 14], "acc_classreg": 16, "acc_linear": 16, "acc_s_jcpot": 14, "acc_sinkhorn": 16, "acc_sourc": 16, "acc_t": [13, 14], "acc_target": 16, "accept": [28, 53, 54, 84, 103], "access": [57, 58, 103], "accord": 72, "account": [17, 28, 103], "accur": [18, 86, 102], "accuraci": [13, 14, 15, 16, 17, 18, 20, 21, 24], "achiev": 103, "across": [18, 43, 44, 59, 60, 66, 67, 68, 69, 86], "act": 103, "activ": 102, "ad": [12, 18, 28, 33, 35, 37, 41, 44, 46, 47, 48, 52, 53, 54, 57, 58, 66, 67, 68, 69, 71, 74, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "adam": 9, "adapt": [0, 10, 13, 14, 19, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 105], "add": 28, "add_ax": 3, "add_domain": 103, "addit": [28, 53, 54, 98, 103], "address": 28, "advanc": [13, 29, 30, 102], "advantag": 84, "adversari": [10, 11, 72, 73, 75, 83, 102, 105], "affect": [53, 54], "after": 103, "again": 20, "aim": 18, "aism": 17, "ajakan": 102, "al": [17, 18, 43, 44, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 72, 73, 74, 75, 82, 83, 86, 87, 88, 89, 90], "alain": 102, "alaiz": [2, 3, 68], "alexandr": 102, "algorithm": [12, 14, 21, 28, 31, 32, 33, 38, 39, 53, 54, 55, 56, 63, 64, 65, 82, 83, 103], "alia": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "align": [7, 11, 13, 19, 21, 29, 30, 47, 48, 59, 60, 68, 76, 77, 84, 89, 97, 102, 105], "all": [4, 11, 15, 18, 20, 25, 28, 33, 53, 54, 59, 60, 66, 67, 68, 69, 96, 97, 98, 102, 103, 105], "allow": [20, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "allow_auto_sample_domain": 98, "allow_common_domain_idx": 98, "allow_label_mask": 98, "allow_multi_sourc": 98, "allow_multi_target": 98, "allow_nd": 98, "allow_sourc": [15, 16, 18, 35, 37, 41, 44, 46, 52, 54, 57, 58, 98], "allow_target": 98, "along": 42, "alpha": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 42, 88], "alpha_": [44, 52], "alreadi": [84, 103], "also": [9, 13, 14, 15, 16, 20, 24, 25, 28, 72, 75, 82, 92, 102, 103], "altern": 28, "alternat": 42, "although": [72, 75, 82], "alwai": [28, 66, 67, 68, 69, 93, 103], "amazon": 103, "amazonaw": 7, "ambrois": 102, "among": [66, 67, 68, 69], "amsterdam": 102, "an": [6, 16, 17, 18, 20, 28, 35, 37, 41, 43, 44, 46, 52, 53, 54, 57, 58, 59, 60, 66, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104], "anal": 102, "analogi": 103, "analysi": [16, 28, 31, 32, 33, 38, 39, 47, 55, 56, 61, 62, 85, 102], "angl": 22, "angle_step": 22, "ani": [12, 17, 20, 28, 33, 42, 102, 103], "annal": [17, 102], "anoth": 28, "antoin": [17, 18, 102], "antoinecolla": 18, "api": [20, 28, 102, 103, 104], "apollin": 102, "append": 22, "appli": 89, "applic": [17, 43, 44, 102], "appreci": 28, "approach": [17, 42, 52], "appropri": [28, 53, 54], "approv": 28, "approxim": [17, 37, 40, 41], "ar": [2, 3, 12, 14, 16, 17, 18, 20, 24, 25, 28, 29, 30, 35, 37, 41, 44, 45, 46, 50, 52, 53, 54, 57, 58, 59, 60, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104], "arang": 25, "arbitrari": [53, 54], "architectur": 82, "area": 28, "arg": 6, "argmin": 22, "argument": [6, 53, 54, 103], "around": 103, "arrai": [12, 17, 20, 22, 25, 30, 35, 37, 41, 43, 44, 46, 50, 51, 52, 53, 54, 62, 66, 67, 68, 69, 70, 71, 74, 86, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104], "array_lik": [66, 67, 68, 69], "artifici": 102, "arxiv": [48, 102], "as_integer_ratio": 42, "as_sourc": [6, 7, 8, 9, 18, 21, 24, 25, 26, 103], "as_target": [6, 7, 8, 9, 18, 21, 24, 25, 26, 103], "ask": 28, "assign": [98, 103], "assist": 28, "associ": [66, 67, 68, 69], "assum": [17, 18, 42, 53, 54], "assume_cent": [21, 29, 30, 76, 77], "assumpt": [17, 52], "attempt": [53, 54], "attribut": [30, 32, 35, 37, 39, 41, 42, 44, 46, 48, 50, 52, 56, 60, 62, 64, 66, 67, 68, 69, 84, 87, 88], "author": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 102], "auto": [20, 21, 29, 30, 40, 41, 53, 54], "auto_exampl": [5, 10, 19, 23, 27], "auto_examples_jupyt": 11, "auto_examples_python": 11, "automat": [20, 24, 28, 29, 30, 40, 41, 84, 92, 98, 103], "autumn": [3, 12], "avail": [16, 20, 28, 45, 46, 84, 102, 103, 104], "averag": [15, 88], "avoid": [28, 38, 39, 55, 56, 86, 98, 103, 104], "awai": [53, 54], "awar": 103, "ax": [4, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "axi": [12, 13, 14, 15, 16, 20, 22], "axvlin": 24, "b": [7, 17, 18, 28, 45, 46, 50, 65, 95, 102, 103], "b_": 50, "back": 28, "backward": 9, "bai": 102, "balanced_accuracy_scor": 85, "ball_tre": [53, 54], "balltre": [53, 54], "band": [12, 69], "band_siz": [4, 69], "bandwidth": [17, 21], "baochen": [7, 29, 30, 76, 77, 102], "barh": 24, "barycent": 102, "base": [9, 12, 13, 16, 17, 18, 24, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 65, 70, 72, 75, 76, 78, 79, 80, 82, 85, 86, 87, 89, 90, 101, 102, 103], "base_classifi": [17, 18], "base_criterion": [70, 72, 75, 76, 78, 80, 82], "base_estim": [12, 13, 17, 20, 21, 24, 26, 29, 31, 33, 34, 36, 38, 40, 42, 43, 45, 47, 49, 51, 53, 55, 57, 58, 59, 61, 63, 65, 84, 103, 104], "base_method": [21, 65], "base_module_": 9, "baseadapt": 103, "baseestim": [33, 57, 58, 84], "baseselector": 84, "basura": [18, 59, 60], "batch_siz": [6, 7, 8, 9], "bbox_inch": 22, "bceloss": [72, 73, 75], "becaus": [14, 103, 104], "been": [6, 12, 102], "befor": [14, 21, 28, 29, 30, 31, 32, 38, 39, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 63, 64, 65, 76, 77, 84], "behav": 25, "behavior": [11, 27, 28, 42, 68, 92, 93, 94, 95, 105], "being": [28, 101, 103], "belong": 99, "below": [16, 20, 66, 67, 68, 69, 102, 103, 104], "benchmark": [0, 28], "benefit": 28, "benjamin": [78, 79], "best": [20, 26, 28, 43, 44, 103, 104], "best_estimator_": 26, "best_gamma_": 44, "best_params_": [20, 26], "best_reg_": 26, "beta": 52, "better": [13, 88], "between": [13, 14, 16, 24, 28, 29, 30, 40, 41, 42, 44, 46, 48, 50, 52, 53, 54, 61, 62, 63, 64, 65, 73, 74, 77, 79, 83, 85, 86, 90, 92, 103, 104], "bezier_curv": 22, "bf": 22, "bharath": [78, 79], "bhushan": [78, 79], "bia": [2, 3, 9, 17, 21, 45, 46, 47, 48, 50, 68, 102], "bibtex": 102, "binari": [21, 24, 25, 26, 68, 103, 104], "bit": 103, "black": [12, 22], "blob": 67, "block": [28, 103], "blue": 25, "bonu": 28, "bool": [29, 30, 33, 35, 37, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 57, 58, 64, 65, 67, 68, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99], "boolean": [66, 67, 68, 69, 100], "borgwardt": [17, 45, 46, 102], "both": [17, 18, 52, 88, 92, 102, 103], "bottom": [1, 2, 3, 4], "bound": [45, 46, 48, 102], "boundari": [12, 13, 14, 15, 21, 53, 54], "branch": 28, "break_ti": 21, "bregman": [14, 16, 18, 65, 102], "bridg": [82, 83, 102], "broad": 28, "browser": 28, "brute": [53, 54], "bruzzon": [33, 85, 102], "bsd": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 102], "bueno": [3, 12, 17, 18, 102], "build": [28, 103], "built": 103, "bunch": [66, 67, 68, 69, 103], "butscher": [14, 102], "button": 28, "bz2": 7, "b\u00e9zier": 22, "b\u00fcnau": [17, 102], "c": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 102], "c0": 13, "c1": 13, "c7": 16, "c84630": 22, "c_": [13, 14], "cach": 84, "cache_s": 21, "calcul": [68, 71, 74, 81], "call": [1, 2, 3, 4, 6, 16, 20, 21, 43, 44, 59, 60, 66, 67, 68, 69, 86, 93, 103], "callabl": [53, 54, 84, 85, 86, 87, 88, 91], "callback": 70, "came": 12, "can": [12, 13, 14, 16, 20, 25, 26, 28, 33, 38, 39, 42, 53, 54, 55, 56, 71, 93, 98, 102, 103, 104], "cannot": 84, "cao": 102, "captur": 73, "carri": 21, "case": [12, 13, 14, 17, 18, 20, 28, 53, 54, 85, 86, 87, 89, 90, 91, 103], "cast": 102, "categor": [66, 67, 68, 69], "cavazza": 102, "cax": 3, "cb": 3, "cbar_ax": 3, "cd": 28, "cdan": [73, 102], "cdd": 71, "ceil_mod": 9, "center": [25, 29, 30, 43, 44, 66, 67, 68, 76, 77], "center_cov_shift": 68, "centers_": 44, "centroid": [70, 71], "chain": 84, "chan": 4, "chanc": [103, 104], "chang": [6, 13, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102], "channel": 69, "chawla": [2, 3, 68], "check": 28, "check_result": [14, 21], "checkout": 28, "chen": 102, "choic": [6, 20, 103], "choos": [20, 43, 44, 68], "chosen": [44, 71], "circl": 12, "circleci": [1, 6, 7, 8, 9, 14, 16, 18, 21], "circular": [33, 85, 102], "citat": 102, "cite": 102, "citeseerx": 102, "cjlin": 7, "clariti": 103, "class": [4, 9, 14, 16, 20, 21, 25, 31, 32, 33, 35, 37, 41, 44, 46, 52, 54, 57, 58, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103], "class_threshold": [70, 71], "class_weight": 21, "classic": 18, "classif": [2, 3, 6, 7, 8, 9, 11, 16, 23, 24, 26, 29, 31, 33, 34, 36, 38, 40, 43, 47, 49, 51, 53, 54, 55, 59, 61, 65, 68, 85, 102, 105], "classifi": [11, 16, 17, 18, 19, 21, 33, 36, 37, 42, 66, 68, 72, 73, 75, 82, 86, 97, 102, 105], "classificationtechniqu": 102, "classregularizedotmap": 31, "classregularizerotmap": 21, "classregularizerotmappingadapt": [16, 21, 103], "claus": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 102], "clf": [13, 14, 15, 16, 17, 18, 20, 21], "clf_jcpot": 14, "clf_on_subspac": 18, "clf_otda": 16, "clf_otda_linear": 16, "clf_otda_sinkhorn": 16, "clf_otds_classreg": 16, "click": 28, "clone": [6, 7, 8, 9, 12, 18, 21, 28, 84, 103], "close": 12, "closer": [17, 53, 54], "closest": [22, 103], "closest_point": 22, "cluster": [66, 67, 68, 69, 71, 88], "cluster_std": 67, "cm": [17, 18, 21, 25], "cm_bright": 21, "cmap": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "cmap_cv": 25, "cmap_data": 25, "cmap_domain": 25, "co": 22, "code": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 102, 103], "coef0": [21, 45, 46], "colla": [18, 102], "collabor": [28, 102], "collect": [70, 72, 75, 76, 78, 80, 82], "color": [12, 17, 18, 21, 22, 24, 25], "color_": 22, "color_0": 22, "color_1": 22, "color_unlabel": 22, "colorbar": 3, "colormap": [1, 17, 18], "com": [7, 17, 18, 28, 102], "comb": 22, "combin": 103, "come": [25, 28, 92], "command": 28, "commit": 28, "committ": 28, "common": [28, 103], "compar": [13, 24, 28, 103], "comparison": [11, 23, 29, 31, 34, 36, 38, 40, 43, 47, 49, 51, 53, 55, 59, 61, 65, 68, 105], "compat": [20, 93, 102, 103], "complement": 92, "complet": [28, 84], "compli": 28, "complic": 103, "compon": [59, 60, 61, 62, 63, 64, 65, 102], "compos": [25, 92], "compromis": 28, "comput": [13, 14, 16, 17, 18, 22, 24, 29, 30, 43, 44, 52, 53, 54, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 90, 91, 102, 103], "compute_weight": 17, "con": 102, "concaten": [12, 103], "concentr": [28, 48, 102], "concept": [2, 3, 20, 68, 103], "concept_drift": [2, 3, 13, 14, 15, 16, 20, 21, 24, 25, 26, 68], "condit": [49, 50, 51, 52, 72, 73, 102], "confer": [14, 18, 59, 60, 63, 64, 70, 71, 78, 79, 82, 83, 90, 102], "confus": [80, 81, 102], "consid": [28, 53, 54, 70, 71, 101, 103], "consider": 103, "consist": [1, 2, 3, 4, 12, 28, 88], "constant": [18, 63, 64, 68, 71, 74, 81, 86], "construct": [6, 7, 8, 9, 18, 21, 53, 54, 84], "constructor": 84, "consum": 84, "contact": 18, "contain": [29, 31, 34, 36, 38, 40, 43, 45, 47, 49, 51, 53, 54, 55, 59, 61, 63, 65, 96, 97, 101, 103], "context": [53, 54], "contour": 17, "contrast": [70, 71, 102], "contribut": 102, "control": [22, 88, 92], "conv1": 9, "conv2": 9, "conv2d": 9, "convei": 21, "conveni": 103, "convent": [66, 67, 68, 69, 103], "converg": [14, 16, 21, 31, 32, 38, 39, 42, 55, 56], "convolut": 102, "coolwarm": 25, "copi": [6, 7, 8, 9, 18, 21, 28, 84], "coral": [7, 20, 21, 49, 76, 77, 102], "coraladapt": [20, 21, 102, 103], "coraladapter__reg": [20, 102], "core": [28, 103], "correct": [17, 28, 45, 46, 102], "correl": [7, 29, 30, 76, 77, 89, 102], "correspond": [14, 42, 69, 99], "could": [16, 103], "count": 17, "coupl": [96, 97], "coupling_": 16, "courti": [13, 16, 31, 32, 38, 39, 42, 47, 55, 56, 78, 79, 102], "cov_source_": 41, "cov_source_inv_sqrt_": 30, "cov_target_": 41, "cov_target_sqrt_": 30, "covari": [2, 3, 11, 12, 19, 29, 30, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 53, 65, 68, 77, 87, 97, 100, 102, 105], "covariate_shift": [2, 3, 21, 68, 103, 104], "cover": 103, "coverag": 28, "cpu": 9, "creat": [9, 12, 17, 18, 20, 22, 24, 25, 26, 28, 72, 75, 82, 88, 102, 103], "creation": [43, 44, 59, 60, 66, 67, 68, 69], "criterion": [6, 7, 8, 43, 44, 45, 46, 49, 50, 51, 52, 70, 72, 73, 75, 76, 78, 79, 80, 82], "cross": [11, 24, 26, 27, 43, 44, 68, 86, 87, 92, 93, 94, 95, 102, 103, 105], "cross_entropy_loss": 86, "cross_val_scor": [11, 20, 27, 38, 68, 84, 91, 97, 102, 103, 104, 105], "cross_valid": 103, "crosscovari": 73, "crossentropyloss": [6, 7, 8, 9, 70, 72, 75, 76, 78, 80, 82], "csie": 7, "cuda": 9, "current": [12, 28, 102], "curv": 22, "custom": 84, "cv": [20, 21, 24, 25, 26, 43, 44, 93, 102, 103, 104], "cv_arg": 25, "cv_results_": 26, "cvf": [70, 71, 102], "cvpr": [18, 63, 64, 102], "d": [16, 18, 21, 22, 31, 32, 38, 39, 47, 55, 56, 65, 102], "da": [8, 10, 12, 14, 17, 18, 23, 24, 25, 26, 29, 31, 34, 36, 38, 40, 43, 47, 49, 51, 53, 55, 59, 61, 65, 68, 70, 72, 75, 76, 77, 78, 80, 82, 98, 104, 105], "da_dataset": 103, "da_shufflesplit": 95, "daestim": 0, "damodaran": [78, 79, 102], "dan": [74, 102], "dann": 102, "dapeng": 88, "darrel": 102, "dasvm": [11, 19, 33, 66, 85, 97, 102, 105], "data": [1, 2, 3, 4, 12, 17, 18, 20, 21, 24, 25, 28, 29, 30, 32, 35, 37, 39, 41, 44, 45, 46, 48, 50, 52, 54, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 77, 86, 87, 92, 93, 94, 96, 97, 101, 102, 103, 104], "dataload": 9, "datapoint": 12, "datas": 25, "dataset": [5, 19, 21, 24, 25, 26, 29, 31, 34, 36, 38, 40, 43, 44, 45, 46, 47, 49, 53, 55, 59, 60, 61, 63, 65, 89, 90, 91, 92, 93, 97, 100, 104, 105], "dataset2": 25, "de": [17, 102], "deal": [18, 103], "decid": [53, 54], "decis": [12, 13, 14, 15, 21, 53, 54], "decision_boundari": 12, "decision_funct": [12, 33, 57, 58], "decision_function_shap": 21, "decisionboundarydisplai": [16, 17, 18, 21, 26], "decomposit": 20, "deep": [6, 7, 8, 10, 86, 89, 103, 105], "deepcor": [9, 77, 102], "deepcoralloss": 9, "deepjdot": [79, 102], "def": [2, 3, 15, 17, 18, 22, 25], "default": [13, 17, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 103], "default_selector": [20, 84], "defin": [17, 22, 25, 43, 44, 53, 54, 103, 104], "degre": [21, 45, 46], "delta_f": [4, 69], "demonstr": [28, 103], "densiti": [21, 34, 35, 44, 46, 52, 53, 87, 90, 102], "densityratio": 102, "densityreweight": [17, 21, 51, 53, 103, 104], "densityreweightadapt": [21, 103], "depend": [25, 53, 54, 92, 101, 102], "deprec": 6, "deriv": [17, 103], "describ": [18, 28, 71], "descript": [2, 3, 28, 66, 67, 68, 69, 103], "design": [20, 94, 103], "desir": 28, "detach": [6, 7, 8, 9, 18, 21], "detail": [2, 3, 17, 18, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 68, 83, 85, 86, 87, 88, 89, 90, 102, 103], "determin": [43, 44, 59, 60, 66, 67, 68, 69, 86], "dev": 102, "develop": [28, 102], "devi": [78, 79, 102], "deviat": [66, 67, 68, 69], "devic": 9, "diagon": [47, 48], "dict": [17, 18, 53, 54, 66, 67, 68, 69, 96, 99], "dict_kei": 103, "dictionari": [20, 66, 67, 68, 69, 99, 103], "did": [14, 16, 21], "differ": [12, 14, 20, 21, 25, 52, 64, 65, 69, 93, 103, 104], "dilat": 9, "dim": 6, "dimens": 6, "dimension": [18, 98], "ding": [18, 63, 64, 102], "direct": [17, 43, 44, 102], "directli": [26, 84], "directori": [28, 84], "disc_classifi": 82, "discard": [33, 70, 71], "discr": 21, "discrep": [18, 46, 50, 52, 71, 79, 82, 83], "discrimin": [36, 82, 83, 102], "discriminatorreweight": [17, 21], "discriminatorreweightadapt": [21, 103], "discuss": 102, "disi": 102, "disk": 28, "dispar": [82, 83], "distanc": [53, 54, 56, 62, 70, 71, 74, 77, 78, 79, 81], "distance_metr": [53, 54], "distance_threshold": [70, 71], "distinct": 103, "distribut": [1, 2, 3, 4, 12, 13, 16, 17, 18, 21, 25, 42, 48, 52, 68, 78, 79, 102, 103, 104], "diverg": [10, 11, 17, 18, 44, 46, 52, 65, 73, 76, 79, 102, 105], "divid": 67, "do": [12, 24, 26, 28, 103, 104], "doc": 28, "docstr": [28, 95], "doctest": 28, "document": [25, 53, 54, 87, 88, 91, 102], "doe": [14, 20, 21, 28, 84, 103, 104], "doesn": [53, 54], "doi": 102, "domain": [0, 5, 10, 13, 14, 19, 20, 25, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105], "domain_classifi": [21, 36, 37, 72, 75, 82, 86], "domain_classifier_": 37, "domain_criterion": [72, 73, 75], "domain_label": 57, "domain_nam": [66, 67, 68, 69, 103], "domain_pred_": [71, 73, 83], "domain_pred_t": [71, 73, 83], "domain_sourc": 1, "domain_target": 1, "domainawar": 103, "domainawarecriterion": 9, "domainawaredataset": [66, 67, 68, 69, 103], "domainawareestim": 103, "domainawaremodul": 9, "domainawarenet": 9, "domainbalanceddataload": 9, "domains_idx": 99, "domainshufflesplit": 25, "don": 103, "done": [14, 16, 20, 22, 24, 102, 103, 104], "dot": 22, "dots_class": 22, "dots_keep": 22, "dots_rot": 22, "download": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "dpi": 22, "draw_": 22, "drawn": 25, "drift": [2, 3, 20, 68], "dropout": 9, "dropout1": 9, "dropout2": 9, "ds_cnt": 21, "dslr": 103, "dtype": [18, 21], "due": [13, 14, 15], "duplic": 28, "dur": [6, 7, 8, 9], "dure": [20, 26, 53, 54, 70, 72, 75, 76, 78, 80, 82, 103], "e": [12, 18, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 72, 73, 75, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 102], "each": [1, 2, 3, 4, 20, 25, 33, 35, 37, 41, 42, 44, 46, 52, 53, 54, 57, 58, 64, 66, 67, 68, 69, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "earth": 56, "easier": 103, "eccv": [7, 76, 77, 78, 79, 80, 81, 102], "edit": 28, "editor": 28, "editsec": 17, "edu": [3, 7, 17, 18, 102], "eduardo": 102, "effect": [17, 18, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "effici": [53, 54], "eigenvalu": 18, "eigenvector": [18, 62], "eigvects_": 62, "either": 67, "elaps": 84, "element": [53, 54, 66, 67, 68, 69], "elig": 28, "els": [9, 12, 17, 18, 21, 22], "email": 28, "embed": [72, 102], "emd": 22, "empir": 48, "empti": 101, "enabl": 84, "enable_metadata_rout": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "encapsul": 84, "encod": [20, 83], "end": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 68], "engin": [18, 65, 102], "enhanc": 28, "ensur": [1, 2, 3, 4, 17, 21, 28], "entiti": 103, "entitl": [53, 54], "entrop": [21, 31, 32, 38, 39], "entropi": [20, 26, 86, 89, 90, 102], "entropicotmap": [21, 24, 26, 103, 104], "entropicotmappingadapt": [16, 21, 103], "entropicotmappingadapter__reg_": 26, "enumer": [21, 22, 25, 95], "ep": [16, 17, 18, 21, 26, 45, 46, 71, 74, 81], "epoch": [6, 7, 8, 9], "epsilon": [12, 86], "eq": 90, "equal": [52, 53, 54, 61, 62, 63, 64, 65, 67], "equip": [12, 33], "equival": [53, 54], "error": [7, 20, 28, 31, 32, 35, 37, 38, 39, 41, 44, 46, 52, 54, 55, 56, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102], "estim": [12, 13, 14, 17, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 65, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 102, 104], "estimator_": 42, "estimator_no_da": 24, "et": [17, 18, 43, 44, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 72, 73, 74, 75, 82, 83, 86, 87, 88, 89, 90], "etc": [12, 28, 102], "euclidean": [53, 54], "euclidean_dist": [53, 54], "european": [78, 79, 102], "evalu": [13, 14, 15, 24, 26, 87, 88, 91, 103, 104], "even": [42, 84, 101, 103], "everi": [28, 67], "evolut": 12, "exact": 85, "exactli": 103, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 54, 101, 103, 105], "except": [28, 96, 97], "exdb": 7, "execut": [5, 10, 19, 23, 27, 103, 105], "exist": [35, 37, 41, 44, 46, 52, 54, 57, 58, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "expect": [28, 53, 54], "experienc": 28, "explan": 28, "explicit": 103, "explor": 18, "expos": 103, "extent": [13, 14], "extract": [7, 99, 100], "extract_source_indic": 17, "extractor": [75, 82], "f": [1, 2, 3, 4, 12, 13, 14, 16, 17, 18, 20, 24, 25, 26, 68, 95, 102], "factori": 22, "fail": [7, 28, 103], "fals": [6, 7, 8, 9, 17, 18, 21, 22, 24, 25, 29, 30, 33, 35, 37, 41, 42, 44, 45, 46, 52, 53, 54, 57, 58, 64, 65, 66, 67, 68, 69, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 103], "famili": 22, "far": [70, 71], "fc1": [6, 7, 8, 9], "fc2": 9, "featur": [1, 2, 3, 16, 17, 18, 28, 42, 63, 64, 67, 71, 73, 74, 75, 77, 82, 86, 93, 96, 97, 98, 102], "features_": [71, 73, 74, 77, 79], "features_t": [71, 73, 74, 77, 79], "feel": [28, 102, 103], "fei": 102, "fellow": 102, "feng": [29, 30, 102], "fernand": 102, "fernando": [18, 59, 60, 102], "ferrari": [48, 102], "fetch": 103, "fetch_all_office31_surf": 103, "fetch_office31_surf_al": 103, "fetcher": 103, "few": [102, 103], "ff0000": 21, "ffa056": [17, 18], "fig": [1, 2, 3, 4, 22, 25], "figsiz": [1, 2, 3, 4, 12, 16, 17, 18, 21, 22, 24, 25], "figur": [12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 28], "file": [5, 10, 11, 19, 23, 27, 105], "fill": 25, "filterwarn": 26, "final": [20, 21, 65, 102], "final_angl": 22, "find": [14, 17, 26, 44, 46, 50, 52], "first": [12, 17, 21, 24, 25, 26, 28, 94, 101, 102, 103], "fisher": 18, "fit": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 84, 87, 102, 103, 104], "fit_param": [103, 104], "fit_predict": 103, "fit_transform": 14, "fix": [28, 29, 30, 40, 41, 42, 65, 67], "flamari": [13, 14, 15, 16, 20, 31, 32, 38, 39, 42, 47, 48, 55, 56, 78, 79, 102], "flda": [21, 65], "flip": [85, 86, 87, 89, 90, 91], "float": [29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 92], "float64": [13, 14, 15, 16, 18, 21], "florent": 102, "flow": 103, "fluctuat": 103, "fly": 103, "fold": [25, 43, 44, 92, 95], "folder": 28, "follow": [16, 17, 18, 20, 25, 28, 66, 67, 68, 69, 72, 75, 82, 83, 94, 102, 103], "font": 22, "fontsiz": [1, 2, 3, 12, 17, 18, 22, 25], "forbidden": 7, "forc": [53, 54], "fork": 28, "form": [25, 84, 85, 94], "format": [25, 28, 102], "forward": [9, 71, 73, 74, 77, 79, 81, 83], "found": [28, 103], "fr": 18, "framework": [102, 103], "frank": [17, 45, 46], "fred": 102, "free": [28, 102, 103], "frequenc": [4, 69], "friend": 28, "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 84, 88, 92, 95, 101, 102, 103, 104, 105], "from_estim": [16, 17, 18, 21, 26], "full": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 102], "function": [17, 18, 20, 25, 28, 36, 37, 40, 41, 42, 43, 44, 45, 46, 53, 54, 59, 60, 66, 67, 68, 69, 81, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 104], "further": [12, 28, 53, 54], "g": [2, 3, 16, 18, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 63, 64, 68, 70, 71, 72, 75, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 102], "g_": 50, "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 102, 105], "gamma": [17, 21, 43, 44, 45, 46, 49, 50, 51, 52, 68, 82, 83], "gang": 102, "ganin": [75, 102], "gaussian": [21, 37, 40, 41, 47, 48, 49, 50, 66, 67, 68, 69, 70, 71, 74, 102], "gaussiannb": 84, "gaussianreweight": [17, 20, 21], "gaussianreweightadapt": [20, 21, 102, 103], "gca": 16, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 11, 20, 21, 23, 24, 25, 26, 28, 43, 44, 59, 60, 66, 67, 68, 69, 72, 75, 82, 86, 88, 93, 98, 102, 103, 105], "geng": [18, 65, 102], "germain": 102, "get": [17, 20, 22, 103], "get_domain": 21, "get_estim": [16, 17, 18, 57, 58], "get_multidomain_data": 15, "get_n_split": [93, 95], "gist": 28, "git": [28, 102], "github": [28, 102], "give": [16, 28], "given": [2, 3, 12, 35, 37, 38, 39, 41, 43, 44, 46, 52, 54, 55, 56, 57, 58, 66, 67, 68, 69, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103], "glad": 28, "glossari": [53, 54], "gmail": [17, 18], "gnassoun": [6, 7, 8, 9, 22, 102], "gnassounou2024skada": 102, "go": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 103], "goal": [12, 17, 18], "good": [28, 85, 86, 87, 89, 90, 91], "gradient": [9, 21, 65], "grai": [12, 14], "grain": 21, "gramfort": 102, "grant": 28, "graph": [53, 54, 102], "great": 28, "greater": [53, 54], "greater_is_bett": [85, 86, 87, 88, 89, 90, 91], "greatli": 28, "grei": 1, "gretton": [17, 45, 46, 102], "grid": [26, 102], "grid_search": [20, 26, 102], "gridsearchcv": [11, 20, 27, 38, 68, 87, 89, 102, 103, 104, 105], "ground": [31, 32, 38, 39, 55, 56], "group": 95, "guarante": 42, "guess": 24, "guiba": [14, 102], "guid": [28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102], "guidelin": 28, "gz": 7, "h": [17, 102], "h_": 50, "ha": [6, 12, 25, 31, 32, 35, 37, 38, 39, 41, 44, 46, 52, 54, 55, 56, 57, 58, 72, 75, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103], "habrard": [13, 42, 102], "hand": 28, "handl": [12, 20, 28], "haobo": 102, "harder": 73, "hauptmann": [70, 71, 102], "have": [12, 18, 25, 28, 53, 54, 66, 67, 68, 69, 82, 96, 97, 101, 103, 104], "height": 103, "help": 28, "helper": [16, 103], "here": [2, 3, 12, 16, 20, 95, 102], "herrera": [2, 3, 68], "hide": 22, "hidetoshi": [17, 36, 37, 40, 41, 102], "hierarch": 94, "high": [28, 85, 86, 87, 89, 90, 91, 103, 104], "higher": 88, "highest": 62, "highlight": 28, "hilbert": 18, "hing": [13, 21], "hisashi": 102, "ho": 102, "hold": 28, "home": [1, 6, 7, 8, 9, 14, 16, 18, 21], "hook": 28, "horizontalalign": [17, 18, 21], "how": [11, 13, 14, 23, 25, 29, 30, 35, 37, 41, 44, 46, 52, 54, 57, 58, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 102, 103, 105], "howev": 12, "hstack": 15, "html": 28, "http": [7, 17, 102], "hu": [88, 102], "huang": [17, 45, 46, 102], "hyperparamet": 102, "i": [1, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 28, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 66, 67, 68, 69, 70, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104], "ic": 88, "ice_typ": 88, "iclr": 89, "icml": [49, 50, 51, 52, 74, 86], "idea": [16, 17, 44, 46, 52], "ident": [93, 96, 97], "idx": 17, "idx1": 7, "idx3": 7, "ieee": [16, 17, 18, 31, 32, 33, 38, 39, 47, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 70, 71, 85, 102], "ievgen": 102, "ignor": [1, 26, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "ii": 25, "iii": 102, "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 12, 15, 20, 21, 24, 25, 26, 28, 102], "imag": [103, 104], "impact": [53, 54], "implement": [17, 18, 28, 71, 94, 103], "implicit": 6, "import": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 43, 44, 46, 52, 53, 54, 84, 87, 92, 95, 102, 103, 104], "importanceweightedscor": [26, 103], "importantli": 20, "improv": [12, 17, 36, 37, 40, 41, 102], "imshow": [13, 14], "in_featur": 9, "includ": [6, 20, 24, 26, 28, 84, 92, 102, 103], "include_all_target": 103, "inclus": 28, "incomplet": 28, "increas": [14, 16, 21], "independ": [18, 68], "index": [25, 95, 98, 99, 102, 103], "index_source_delet": 33, "index_target_ad": 33, "indic": [25, 28, 53, 54, 66, 67, 68, 69, 92, 93, 94, 99, 100], "indices_source_delet": 12, "indices_target_ad": 12, "indx_sort": 25, "infer": [17, 36, 37, 40, 41, 101, 102], "influenc": [53, 54], "inform": [13, 28, 42, 102], "initi": [9, 73, 103, 104], "inner": [31, 32], "inplac": 9, "input": [9, 17, 20, 44, 46, 52, 53, 54, 72, 75, 82, 96, 97, 98, 102], "insid": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "inspect": [16, 17, 18, 21, 26, 84], "inspir": 28, "instabl": 86, "instal": 28, "instanc": [18, 20, 42, 43, 44, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 80, 82, 84, 86, 88, 92, 102], "instanti": [72, 75, 82], "instead": [35, 37, 41, 44, 46, 52, 54, 57, 58, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "institut": [17, 102], "instruct": 28, "int": [31, 32, 33, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 82, 86, 88, 92, 93, 95], "integ": [20, 66, 67, 68, 69, 86, 93, 103], "integr": [84, 103], "intel": 102, "intellig": [16, 31, 32, 33, 38, 39, 47, 55, 56, 85, 102], "inter": 88, "interest": 102, "interfac": [84, 103], "intern": [14, 17, 18, 53, 54, 59, 60, 82, 83, 90, 102], "intra": 88, "introduc": 103, "intuit": [21, 28], "invers": [30, 53, 54], "involv": 28, "io": 102, "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "is_avail": 9, "is_fit": 9, "ism": 17, "isotrop": 67, "issu": [28, 102], "ist": 102, "item": [9, 17, 18, 28, 95], "iter": [9, 13, 14, 16, 21, 25, 31, 32, 33, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 63, 64, 65, 92, 93, 103], "its": [13, 14, 15, 17, 44, 52, 103], "j": [2, 3, 12, 13, 14, 16, 17, 18, 45, 46, 63, 64, 68, 102], "januari": [14, 102], "jcpotlabelpropadapt": 14, "jdot": [11, 19, 21, 42, 68, 97, 102, 105], "jdotclassifi": [13, 21], "jdotregressor": 13, "jialin": [18, 61, 62], "jiang": [70, 71, 102], "jianmin": [80, 81, 102], "jiashi": [29, 30, 102], "jin": [80, 81, 102], "job": [53, 54, 103], "joblib": [53, 54, 84], "joint": [13, 42, 63, 64, 78, 79, 102], "jordan": 102, "journal": [17, 36, 37, 40, 41, 75, 87, 102], "jp": 17, "junbo": 102, "june": 102, "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "just": 21, "k": [12, 13, 17, 18, 22, 24, 33, 45, 46, 48, 102], "k_": 62, "kachaiev": [17, 18, 102], "kachayev": [17, 18], "kaichao": 86, "kanamori": 102, "kang": [70, 71, 102], "kashima": [17, 102], "kate": [7, 29, 30, 76, 77, 102], "kawanab": [17, 102], "kd_tree": [53, 54], "kdtree": [53, 54], "keep": 28, "kei": [17, 18, 99, 103], "kellenberg": [78, 79, 102], "kept": [59, 60], "kernel": [12, 13, 14, 16, 18, 21, 31, 43, 44, 45, 46, 49, 50, 51, 52, 61, 62, 63, 64, 65, 68, 70, 71, 74], "kernel_ridg": [13, 14], "kernel_s": 9, "kerneldens": [17, 21, 34, 35, 87], "kernelridg": [13, 14], "keyword": [53, 54], "kim": 102, "kind": 14, "kl": [17, 44], "klau": 102, "kliepreweight": [21, 44, 102], "kliepreweightadapt": [21, 103], "kmean": 71, "kmmreweight": [17, 46, 102], "knn": [53, 54], "know": 12, "knowledg": [18, 28, 65, 102], "krauledat": 102, "krr": [13, 14], "kullback": [17, 44], "kun": [49, 50, 51, 52], "kuniaki": 90, "kwarg": [6, 33, 42, 44, 57, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86], "kwok": 102, "l": [14, 33, 70, 71, 85, 102], "l1": [31, 32, 53, 54], "l1l2": [31, 32], "l2": [31, 32, 42, 53, 54], "l_p": [53, 54], "label": [2, 3, 4, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 31, 32, 35, 37, 41, 42, 44, 46, 49, 50, 51, 52, 54, 57, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "lalou": [25, 102], "laplac": [53, 54], "laplace_smooth": [17, 21, 53, 54], "larg": [38, 39, 55, 56, 103], "largest": 72, "larochel": 102, "last": [20, 53, 75, 82, 84], "latter": [85, 86, 87, 89, 90, 91], "laviolett": 102, "layer": [70, 71, 72, 75, 76, 78, 80, 82], "layer_nam": [6, 7, 8, 9, 70, 72, 75, 76, 78, 80, 82], "lda": 18, "leaf": [53, 54], "leaf_siz": [21, 53, 54], "learn": [13, 14, 17, 20, 25, 28, 42, 46, 50, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 74, 75, 82, 83, 84, 87, 93, 103, 104], "least": [28, 42, 95, 101], "leav": 93, "leaveonedomainout": [25, 103], "lecun": 7, "ledoit": [29, 30, 40, 41], "left": [12, 25], "legend": [4, 12, 13, 14, 15, 24, 25], "lei": 102, "leibler": [17, 44], "lemma": [29, 30, 40, 41], "lempitski": 102, "len": [12, 17, 18, 21, 22, 25, 97, 101], "length": [65, 67, 96, 97, 101], "length_scal": [21, 65], "length_step": 22, "less": [53, 54, 61, 62, 63, 64, 65], "let": [25, 103, 104], "level": 103, "lexsort": 25, "liang": 102, "lib": [6, 14, 16, 21], "librari": [102, 103], "libsvmtool": 7, "licens": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25], "liew": 102, "like": [20, 28, 35, 37, 41, 43, 44, 46, 50, 51, 52, 54, 66, 67, 68, 69, 70, 71, 74, 86, 93, 96, 97, 98, 99, 100, 101, 103, 104], "likelihood": [17, 36, 37, 40, 41, 43, 44, 102], "lim": 16, "limit": 103, "line": 12, "line2d": 12, "linear": [9, 11, 12, 16, 19, 21, 47, 48, 50, 68, 84, 97, 102, 105], "linear_model": [13, 14, 15, 17, 20, 102, 103, 104], "linearmong": 102, "linearotmap": 21, "linearotmappingadapt": [16, 21, 103], "linearregress": 42, "linestyl": 24, "linewidth": 22, "link": 28, "linspac": [4, 12, 13, 14, 18, 22], "lint": 28, "list": [12, 18, 25, 28, 42, 44, 53, 54, 70, 84, 97, 101, 103], "listedcolormap": [17, 18, 21], "literatur": 28, "liu": 102, "live": 28, "ll": [25, 101], "load": [103, 104], "load_mnist_usp": [6, 7, 8, 9], "loc": [12, 21, 25], "local": [6, 14, 16, 21, 28], "locat": [12, 50, 67], "lodo": 25, "log": [17, 36, 37, 38, 39, 40, 41, 55, 56, 102], "logist": 14, "logisticregress": [12, 13, 14, 15, 17, 20, 21, 36, 37, 43, 45, 86, 102, 103, 104], "loglog": [38, 39, 55, 56], "logo": [11, 23, 105], "logreg": 14, "loison": 102, "long": [18, 63, 64, 72, 73, 74, 80, 81, 102], "longer": 103, "loog": [17, 102], "look": [17, 28, 103], "loop": [9, 31, 32, 102], "loss": [9, 13, 18, 42, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91], "loss_fn": 9, "loss_func": 86, "loss_ot": 13, "loss_tgt_label": 13, "lounici": [48, 102], "low": [85, 86, 87, 89, 90, 91, 103], "lower": [12, 13, 14, 15, 18, 21], "lowercas": 84, "lp": [14, 21, 31, 32], "lpl1": [21, 31, 32], "lpp": 65, "lr": [6, 7, 8, 9], "lst_loss_ot_": 42, "lst_loss_tgt_labels_": 42, "lstrip": [17, 18, 21], "lw": 25, "m": [17, 18, 33, 63, 64, 85, 102], "mach": 102, "machin": [14, 16, 17, 31, 32, 33, 38, 39, 47, 53, 54, 55, 56, 75, 82, 83, 85, 87, 102], "made": [92, 95], "magic": 28, "mai": [28, 53, 54, 93, 102], "mail": 28, "main": [12, 28], "maintain": 102, "make": [25, 28, 66, 69, 73, 93, 102, 103, 104], "make_da_pipelin": [14, 15, 16, 20, 24, 102, 103], "make_dataset": [4, 21], "make_dataset_from_moons_distribut": [1, 12], "make_pipelin": 20, "make_shifted_dataset": [1, 2, 3, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 103, 104], "make_variable_frequency_dataset": 4, "mandat": 103, "manhattan_dist": [53, 54], "manner": 28, "map": [16, 18, 21, 47, 48, 49, 50, 102], "marconcini": [33, 85, 102], "margin": [12, 82, 83], "margin_lin": 12, "mark": [18, 103], "markdown": 28, "marker": [12, 15, 18, 22, 25, 103], "markers": 12, "masashi": [17, 43, 44, 87, 102], "mask": [25, 103], "match": [13, 46, 63, 64, 102], "math": 22, "mathelin": [17, 102], "mathemat": [17, 28, 102], "matplotlib": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28], "matrix": [49, 50, 51, 52, 53, 54, 68], "mattia": 102, "matur": 28, "mauric": 102, "max": [3, 13, 16, 17, 18, 21, 22, 38, 39, 42, 55, 56], "max_epoch": [6, 7, 8, 9], "max_featur": 72, "max_inner_it": [21, 31, 32], "max_it": [17, 21, 31, 32, 33, 38, 39, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 63, 64, 65], "max_len": [17, 18], "max_n_split": [93, 103], "maxim": [17, 33, 63, 64, 65], "maximum": [18, 21, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 72], "maxpool": 9, "maxpool2d": 9, "mb": [5, 10, 19, 23, 27, 105], "mboula": 102, "mcc": 81, "mdd": 83, "mean": [13, 14, 15, 18, 20, 22, 24, 41, 46, 50, 52, 53, 54, 68, 85, 86, 87, 89, 90, 91, 103, 104], "mean_source_": [30, 41], "mean_squared_error": [13, 14], "mean_target_": [30, 41], "mean_test_scor": 26, "measur": 79, "mechan": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "median": [38, 39, 55, 56, 71, 74, 81], "mellot": 102, "mem": [5, 10, 19, 23, 27, 105], "member": 102, "memori": [53, 54, 84], "mention": 28, "merg": [25, 28, 101], "meshgrid": [13, 14], "messag": 28, "meta": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "metadata": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "metadata_rout": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "method": [1, 2, 3, 4, 10, 12, 19, 20, 23, 25, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 65, 68, 70, 73, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 102, 103, 104, 105], "metric": [13, 14, 20, 21, 24, 26, 31, 32, 38, 39, 42, 53, 54, 55, 56], "metric_param": [21, 53, 54], "michel": 102, "might": [14, 16, 42], "min": [18, 21, 22, 59, 60], "mingsheng": [72, 73, 74, 80, 81, 102], "minim": [17, 44, 46, 50, 52, 73, 83, 89, 102], "minimum": [31, 32, 38, 39, 70, 71, 80, 81, 102], "minkowski": [21, 53, 54], "minkowski_dist": [53, 54], "minut": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "misc": 102, "mix": [88, 102], "mixup": 88, "mixval": 88, "mline": 12, "mlpregressor": 42, "mmd": [18, 21, 46, 50, 51, 52, 74, 102], "mmdlsconsmap": [21, 50], "mmdlsconsmappingadapt": 21, "mmdtarsreweight": [21, 52], "mmdtarsreweightadapt": 21, "mnist": [6, 7, 8, 9], "mnist_dataset": [6, 7, 8, 9], "mnist_target": [6, 7, 8, 9], "mnisttouspsnet": [6, 7, 8, 9], "mode": 98, "model": [9, 13, 17, 43, 44, 71, 86, 87, 88, 91, 102], "model_select": [20, 24, 25, 26, 102, 103, 104], "modern": 22, "modif": 28, "modifi": 25, "modified_fil": 28, "modul": [6, 7, 8, 9, 70, 72, 75, 76, 78, 80, 82, 102], "module_": 9, "mong": [11, 19, 47, 48, 68, 84, 97, 102, 105], "montesuma": 102, "month": 102, "moon": [12, 66], "more": [12, 14, 17, 20, 28, 53, 54, 102, 103], "moreau": 102, "moreno": [2, 3, 68], "morerio": [89, 102], "most": [18, 25, 53, 54], "mostli": 103, "motoaki": 102, "move": 103, "mover": 56, "mrg": 28, "mse": [13, 14, 42], "mse_": [13, 14], "mse_t": [13, 14], "mu": [18, 21, 61, 62, 65], "mu_regress": 68, "muandet": 102, "much": [13, 14, 15, 28], "multi": [1, 11, 19, 68, 70, 71, 84, 97, 102, 103, 105], "multiclass": [2, 7, 13, 14, 15, 68], "multilinear": 73, "multilinearmongealignmentadapt": 15, "multinomi": 13, "multipl": [1, 2, 3, 4, 12, 20, 21, 43, 44, 59, 60, 66, 67, 68, 69, 86, 96, 98, 103], "multipli": 68, "murino": 102, "must": [20, 53, 54, 67, 89, 95, 101, 102], "my": 28, "m\u00fcller": 102, "n": [2, 3, 13, 15, 16, 17, 18, 22, 25, 31, 32, 38, 39, 42, 47, 55, 56, 68, 98, 102], "n_center": [21, 43, 44, 67], "n_channel": [4, 69], "n_class": [4, 6, 7, 8, 9, 50, 52, 69, 72, 82], "n_compon": [18, 20, 21, 59, 60, 61, 62, 63, 64, 65, 103], "n_dot": 22, "n_featur": [30, 35, 37, 41, 44, 46, 50, 52, 54, 59, 60, 67, 93, 96, 97, 98, 101], "n_frequenc": [4, 69], "n_frequency_sourc": 69, "n_iter_max": [21, 42], "n_job": [21, 53, 54], "n_neighbor": [21, 53, 54], "n_sampl": [6, 7, 8, 9, 16, 35, 37, 41, 44, 46, 50, 52, 54, 59, 60, 67, 68, 89, 93, 96, 97, 98, 99, 100, 101], "n_samples_sourc": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 45, 46, 66, 68, 69, 103, 104], "n_samples_target": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 66, 68, 69, 103, 104], "n_sourc": 15, "n_split": [24, 25, 26, 92, 93, 94, 95, 103, 104], "n_splits_lodo": 25, "n_target": 15, "n_tot_sourc": 16, "n_tot_target": 16, "naive_bay": 84, "nakajima": [17, 102], "name": [17, 18, 20, 21, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 66, 67, 68, 69, 70, 72, 75, 76, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103], "named_step": [16, 84], "names_map": 25, "nan": [25, 98, 101], "narr": 28, "natur": [21, 53, 54, 68], "ndarrai": [66, 67, 68, 69, 89, 93, 101], "nearest": [52, 53, 54, 102], "nearestneighborreweight": [17, 21], "nearestneighborreweightadapt": 21, "necessari": [13, 28, 42, 103, 104], "necessarili": 21, "necessit": 103, "need": [20, 28, 86, 103], "neg": [66, 67, 68, 69, 102, 103], "neighbor": [21, 52, 53, 54, 102], "neighborhood": [53, 54, 90, 102], "neither": 103, "netherland": 102, "network": [18, 61, 62, 70, 71, 72, 73, 74, 75, 83, 102], "neural": [13, 18, 42, 61, 62, 75, 102], "neuralnetclassifi": [6, 7, 8], "neurip": [17, 43, 44, 72, 73, 88, 102], "never": [28, 84], "new": [12, 62, 103], "next": [7, 103], "ngole": 102, "nicola": [78, 79, 102], "nip": [17, 42, 45, 46, 102], "nn": [6, 7, 8, 9, 70, 72, 75, 76, 78, 80, 82], "nois": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 66, 67, 68, 69, 103, 104], "non": [28, 66, 67, 68, 69, 101, 103], "none": [9, 15, 17, 18, 21, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104], "nonzero": [53, 54], "noplot": 28, "norm": [21, 31, 32, 38, 39, 55, 56, 65], "normal": [17, 38, 39, 55, 56, 102], "note": [13, 20, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "notic": [12, 102], "now": [12, 13, 25, 103, 104], "np": [1, 4, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 68, 92, 93, 95, 101], "nt": 15, "ntu": 7, "num_featur": [6, 72, 75, 82], "number": [14, 16, 17, 25, 28, 31, 32, 33, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 86, 88, 92, 93, 95, 101, 103], "numer": [38, 39, 55, 56, 71, 74, 81, 86], "numitermax": [14, 16, 21], "numpi": [1, 4, 12, 13, 14, 15, 17, 18, 20, 22, 24, 25, 28, 92, 95], "o": [12, 15, 22, 102], "object": [12, 25, 29, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103, 104], "observ": [34, 35, 87], "occur": [38, 39, 55, 56], "octob": 102, "odonnat": 102, "odot": 50, "off": [22, 28, 42, 63, 64], "offer": [103, 104], "office31": 103, "often": 28, "oleksii": [17, 18, 102], "onc": [18, 25, 94, 103], "one": [1, 18, 20, 28, 53, 54, 66, 68, 69, 89, 101, 102, 103, 104], "ones": [15, 18, 20, 92, 95], "onli": [12, 20, 24, 25, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "onto": 18, "open": [28, 102], "oper": [28, 48], "optim": [9, 10, 11, 13, 14, 17, 19, 21, 31, 32, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 65, 68, 78, 79, 84, 97, 102, 105], "optimali": [17, 18], "option": [29, 31, 32, 34, 35, 36, 37, 38, 39, 41, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 71, 74, 76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103], "orang": 25, "order": 103, "org": 102, "organ": 20, "origin": [13, 14, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "ossci": 7, "ot": [14, 16, 21, 28, 32, 39, 42, 47, 48, 55, 56, 102], "ot_transport_": [16, 32, 39, 48, 56], "otda": [11, 19, 32, 39, 48, 55, 56, 68, 84, 97, 102, 105], "other": [17, 25, 28, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 69, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103], "otherwis": [35, 37, 41, 44, 46, 52, 54, 57, 58, 66, 67, 68, 69, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "otlabelprop": 21, "otlabelpropadapt": [14, 21], "otmap": [16, 21], "otmappingadapt": [16, 21, 103], "our": [25, 53, 54], "out": [12, 93, 102], "out_featur": 9, "outcom": [85, 86, 87, 89, 90, 91], "output": [9, 20, 28, 43, 44, 59, 60, 66, 67, 68, 69, 70, 72, 75, 76, 78, 80, 82, 86, 103], "over": [21, 86], "overfit": [103, 104], "overrid": [53, 54], "overwrit": 20, "ovr": 21, "p": [9, 17, 18, 21, 52, 53, 54, 63, 64, 84, 102], "p_": 17, "p_sourc": [44, 46, 52], "p_target": [44, 46, 52], "pack": [18, 24, 25, 103], "pack_lodo": [25, 103], "pack_test": [6, 7, 8, 9, 25, 26, 103], "pack_train": [6, 7, 8, 9, 18, 21, 24, 25, 26, 103], "packag": [6, 14, 16, 21], "pad": 9, "page": [17, 18, 28, 53, 54, 63, 64, 65, 102], "pair": [66, 67, 68, 69, 101, 103], "pami": 102, "pan": [18, 61, 62, 102], "paper": [90, 102], "paragraph": 28, "parallel": [53, 54], "parallel_backend": [53, 54], "param": [20, 24, 102, 103], "param_entropicotmappingadapter__reg_": 26, "param_grid": [20, 102], "paramet": [1, 14, 16, 20, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104], "part": [21, 102], "partial_fit": [57, 58], "particularli": 18, "pass": [9, 20, 24, 28, 35, 37, 41, 43, 44, 46, 52, 53, 54, 57, 58, 59, 60, 66, 67, 68, 69, 72, 75, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103], "patch": 25, "path": 84, "pattern": [2, 3, 16, 18, 29, 30, 31, 32, 33, 38, 39, 47, 55, 56, 63, 64, 68, 70, 71, 85, 102], "paul": 102, "pca": [18, 20, 59, 60, 61, 62, 63, 64, 65, 103], "pca_source_": 60, "pca_target_": 60, "pdf": [17, 22, 28, 102], "peak": 69, "pep8": 28, "per": [20, 33, 93, 103], "per_domain": 84, "percentag": [25, 92, 95], "perdomain": [20, 103], "perdomainselector": 103, "perform": [13, 14, 15, 17, 18, 20, 24, 26, 28, 84, 103], "permit": 84, "perspect": 102, "phase": 102, "pick": [28, 103], "pietro": 89, "pillow": 28, "pip": [28, 102], "pipe": [20, 102, 103], "pipe_perdomain": 20, "pipe_train_on_sourc": 20, "pipelin": [17, 21, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 65, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102], "place": 28, "plai": 103, "plan": [14, 16, 17, 36, 37, 40, 41, 102], "platform": 28, "pleas": [28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102], "plot": [5, 11, 16, 20, 21, 22, 25, 26, 66, 68, 69, 97, 105], "plot_adversari": [6, 10, 105], "plot_cross_val_score_for_da": [24, 27, 105], "plot_cross_validation_for_da": [25, 27, 105], "plot_cv_indic": 25, "plot_dasvm": [12, 19, 105], "plot_dataset_from_moons_distribut": [1, 5, 105], "plot_diverg": [7, 10, 105], "plot_gridsearch_for_da": [26, 27, 105], "plot_how_to_use_skada": [20, 23, 105], "plot_jdot_da": [13, 19, 105], "plot_label_prop_da": [14, 19, 105], "plot_lodo_indic": 25, "plot_method": 17, "plot_method_comparison": [21, 23, 105], "plot_monge_alignment_da": [15, 19, 105], "plot_optimal_transport": [8, 10, 105], "plot_optimal_transport_da": [16, 19, 105], "plot_reweight": [17, 19, 105], "plot_shifted_dataset": [2, 3, 5, 105], "plot_shifted_dataset_regress": [3, 5, 105], "plot_skada_logo": [22, 23, 105], "plot_st_shuffle_indic": 25, "plot_subspac": [18, 19, 105], "plot_subspace_and_classifi": 18, "plot_training_method": [9, 10, 105], "plot_variable_frequency_dataset": [4, 5, 105], "plot_weights_and_classifi": 17, "plt": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "plug": 103, "pmlr": [14, 102], "point": [12, 17, 18, 21, 22, 26, 28, 33, 42, 53, 54, 66, 67, 68, 69], "poli": 12, "polytechniqu": [3, 17, 18], "pos_sourc": [1, 12, 66], "pos_target": [1, 12, 66], "posit": [12, 53, 54, 66, 102, 103], "possibl": [2, 3, 12, 28, 29, 30, 40, 41, 53, 54, 65, 103], "possibli": 103, "pot": [22, 28], "power": [53, 54], "pp": [14, 70, 71, 102], "pr": 28, "practic": [28, 103], "pre": [28, 71], "precis": [38, 39], "precomput": [53, 54], "predict": [12, 13, 14, 16, 17, 18, 20, 21, 26, 34, 36, 37, 40, 41, 42, 43, 45, 51, 53, 54, 57, 58, 59, 61, 63, 71, 73, 81, 85, 86, 89, 102, 103], "predict_log_proba": [57, 58], "predict_proba": [57, 58, 103], "predictionentropyscor": [20, 26, 102, 103], "prefer": 28, "prefix": 28, "prepar": [24, 25, 26, 103], "preprint": [48, 102], "preprocess": [20, 21, 84, 102], "presenc": 98, "present": [12, 28], "preserv": [13, 25, 92, 95], "prevent": [53, 54], "previou": 18, "previous": 103, "prgn": 25, "print": [1, 4, 9, 13, 14, 15, 17, 18, 20, 21, 24, 26, 28, 42, 64, 65, 84, 92, 95], "print_scores_as_t": [17, 18], "prior": [28, 84, 102], "probabl": [17, 20, 21, 26, 86], "probe": [88, 102], "problem": [12, 25, 31, 32, 33, 38, 39, 42, 44, 53, 54, 55, 56, 61, 62, 65, 85, 93, 102, 103], "procedur": 44, "proceed": [70, 71, 102], "process": [13, 17, 42, 53, 54, 86, 88, 102, 103], "processor": [53, 54], "produc": [0, 92], "profil": 28, "program": 28, "progress": [12, 28], "project": [1, 6, 7, 8, 9, 18, 21, 28, 62], "propag": [11, 19, 21, 68, 69, 84, 97, 102, 105], "properli": 28, "proport": [14, 92], "propos": [14, 42, 47, 48, 70, 71, 90], "provid": [1, 20, 28, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 72, 75, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 102, 103], "psd": 4, "psu": 102, "public": 28, "publish": 102, "purpos": 17, "push": 28, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 103, 105], "pypi": 102, "pyplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "pytest": [28, 103], "python": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28], "python3": [6, 14, 16, 21], "pytorch": [70, 72, 75, 76, 78, 80, 82], "q": 102, "quadrat": 42, "queri": [53, 54], "quick": 102, "quickli": 28, "r": [2, 3, 13, 14, 16, 22, 31, 32, 38, 39, 42, 47, 48, 55, 56, 68, 102], "r82": 102, "radian": 22, "raeder": [2, 3, 68], "rais": [20, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "rakotomamonji": [13, 16, 31, 32, 38, 39, 42, 47, 55, 56, 102], "rand": [15, 22], "randint": [1, 4], "randn": 15, "random": [1, 2, 3, 4, 15, 21, 22, 24, 43, 44, 59, 60, 66, 67, 68, 69, 86, 88, 92, 93, 95], "random_se": [1, 4, 12, 17, 18, 21, 24, 25, 26, 103, 104], "random_st": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 43, 44, 59, 60, 66, 67, 68, 69, 86, 88, 92, 93, 94, 95, 103, 104], "randomli": [25, 103], "randomst": [22, 43, 44, 59, 60, 66, 67, 68, 69, 86, 88, 92], "rang": [4, 9, 12, 13, 15, 16, 18, 22, 25, 103], "rather": [6, 7, 8, 9, 18, 21], "ratio": [17, 68, 102], "ravel": [13, 14], "raw": 7, "rbf": [13, 14, 16, 18, 21, 31, 43, 44, 45, 46, 61, 62, 63, 64, 65, 68], "rcparam": 22, "rdbu": [17, 18, 21, 25], "re": [34, 35, 36, 37, 40, 41, 53, 54, 92], "reach": [14, 21, 102], "reader": 28, "readi": [24, 28, 103], "real": 21, "reason": 103, "receiv": 28, "recognit": [2, 3, 18, 29, 30, 63, 64, 68, 70, 71, 102], "recommend": [6, 7, 8, 9, 18, 21, 28], "reconstruct": 103, "record": 28, "recov": 16, "red": 12, "redko": 102, "reduc": [74, 77, 79, 81, 86], "reduct": [78, 79, 89], "ref": 18, "refer": [28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 103], "reflect": [103, 104], "reg": [6, 7, 9, 14, 16, 21, 29, 30, 40, 41, 47, 48, 51, 52, 65, 70, 72, 75, 76, 78, 80, 82], "reg_": [16, 21, 24, 26, 31, 32, 38, 39], "reg_cl": [8, 16, 21, 31, 32, 78, 79], "reg_cor": 20, "reg_dist": [8, 78, 79], "reg_k": [21, 49, 50], "reg_m": [21, 49, 50], "reglog": [13, 14], "regress": [3, 28, 42, 68], "regression_scaling_const": 68, "regressor": [11, 19, 42, 68, 97, 102, 105], "regular": [14, 16, 18, 20, 26, 29, 30, 31, 32, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 61, 62, 65, 70, 72, 75, 76, 78, 79, 80, 82, 102], "regulari": 26, "relat": 103, "relev": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "relu": 9, "relu1": 9, "relu2": 9, "relu3": 9, "remain": [25, 94], "rememb": 33, "remi": [13, 14, 15, 16, 20, 78, 79], "remov": [12, 73], "rep1": 102, "repid": 102, "replac": [2, 3], "repo": 28, "report": 28, "repositori": 28, "repres": [12, 18, 53, 54, 92, 103], "represent": [73, 79, 86], "reproduc": [18, 28, 43, 44, 59, 60, 66, 67, 68, 69, 86], "request": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "requir": [20, 38, 39, 53, 54, 84, 102, 103], "requires_grad": [18, 21], "requires_grad_": [6, 7, 8, 9, 18, 21], "research": [75, 87, 102], "reshap": [13, 14, 18], "resolv": 28, "respect": [50, 66, 67, 68, 69, 103], "response_method": [16, 17, 18, 21, 26], "restructuredtext": 28, "result": [25, 26, 28, 53, 54, 93], "result_cod": [14, 21], "result_code_str": [14, 21], "retain": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "retrain": 85, "return": [6, 15, 22, 25, 29, 31, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "return_dataset": [6, 7, 8, 9, 18, 21, 24, 25, 26, 66, 67, 68, 69], "return_x_i": [66, 67, 68, 69, 103], "reus": [103, 104], "review": 28, "reweight": [11, 18, 19, 20, 21, 34, 36, 40, 43, 45, 46, 51, 52, 53, 63, 64, 68, 97, 100, 102, 105], "ridg": [13, 14, 42], "right": [3, 17, 18, 21, 25, 28, 90, 102], "risk": 42, "rng": 22, "robert": 102, "robust": 14, "rodriguez": [2, 3, 68], "root": 30, "rotat": 25, "rotated_curv": 22, "rotation_angl": 22, "rotation_cent": 22, "rotation_matrix": 22, "round": 22, "rout": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "row": [1, 2, 3], "rsda": 92, "rslab": 102, "ruben": [3, 12, 17, 18, 102], "rule": 28, "run": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 53, 54, 103], "running_loss": 9, "rustamov": [14, 102], "r\u00e9mi": 102, "s2": [25, 103], "s3": 7, "saenko": [7, 29, 30, 76, 77, 102], "saito": [90, 102], "salt": 21, "same": [1, 2, 3, 4, 12, 13, 14, 18, 21, 24, 25, 35, 37, 41, 44, 46, 52, 53, 54, 82, 85, 96, 97, 98, 103], "sampl": [2, 3, 13, 14, 16, 17, 18, 20, 25, 28, 35, 45, 46, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 35, 37, 41, 44, 46, 52, 54, 57, 58, 66, 67, 68, 69, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "sample_domain_": 20, "sample_domain_lodo": 25, "sample_domain_t": 20, "sample_domain_test": [6, 7, 8, 9, 103], "sample_domain_train": [18, 103], "sample_domaini": 15, "sample_select": 68, "sample_weight": [17, 20, 21, 96, 97, 102, 103], "save": 22, "save_estim": [12, 33], "save_indic": [12, 33], "savefig": 22, "scalar": [68, 98], "scale": [21, 50, 65, 80, 81], "scan": 98, "scatter": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26], "scenario": 103, "sch\u00f6lkopf": [17, 45, 46, 102], "scikit": [20, 25, 28, 42, 84, 103, 104], "scipi": [28, 45, 46, 53, 54], "sclaroff": 102, "score": [6, 7, 8, 12, 15, 16, 21, 24, 26, 57, 58, 68, 85, 86, 87, 88, 89, 90, 91, 102], "scorer": [20, 24, 26, 85, 86, 87, 88, 89, 90, 91, 102, 103], "scores_dict": [17, 18], "scores_no_da": 24, "scores_sup": 24, "script": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28], "search": [26, 53, 54, 102], "sebban": 102, "second": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 101], "section": [50, 51, 52, 103], "see": [2, 3, 12, 13, 14, 17, 18, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "seed": [1, 2, 3, 4, 15, 21], "seek": [18, 28], "seem": 28, "seen": 103, "select": [17, 25, 43, 44, 45, 46, 68, 86, 88, 102, 104], "select_domain": [16, 103], "selector": [20, 84], "selectsourc": 20, "selectsourcetarget": 20, "self": [6, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "semi": [12, 14, 21, 102], "semi_label": 12, "send": 28, "separ": [24, 68, 98, 103], "septemb": [78, 79], "sequenc": [66, 67, 68, 69, 96, 97, 101], "serv": [63, 64, 103], "set": [12, 17, 21, 25, 45, 46, 53, 54, 59, 60, 66, 67, 68, 69, 84, 90, 92, 93, 94, 103, 104], "set_config": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "set_decision_function_request": [57, 58], "set_fit_request": [17, 20, 21, 35, 37, 41, 44, 46, 52, 54, 57, 58, 102], "set_fit_requir": 102, "set_label": 3, "set_partial_fit_request": [57, 58], "set_predict_log_proba_request": [57, 58], "set_predict_proba_request": [57, 58], "set_predict_request": [57, 58], "set_score_request": [57, 58, 85, 86, 87, 88, 89, 90, 91, 103], "set_split_request": [92, 93, 94, 95], "set_titl": [1, 2, 3, 4, 12, 17, 18, 25], "set_transform_request": [35, 37, 41, 44, 46, 52, 54, 57, 58], "set_xlabel": [1, 2, 3, 4], "set_xlim": [12, 17, 18, 21], "set_xtick": [17, 18, 21], "set_ylabel": [1, 2, 3, 4, 21], "set_ylim": [12, 17, 18, 21], "set_ytick": [17, 18, 21], "setup": [10, 11, 76, 77, 105], "sever": [20, 21, 44, 103, 104], "shape": [12, 13, 14, 15, 16, 17, 18, 20, 22, 28, 30, 35, 37, 41, 44, 46, 50, 52, 53, 54, 67, 68, 89, 93, 96, 97, 98, 99, 100, 101], "share": [21, 84, 103], "sharei": [1, 2, 3, 4, 25], "sharex": [1, 2, 3, 4], "shift": [5, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25, 26, 34, 36, 37, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 59, 61, 63, 65, 66, 67, 68, 69, 87, 97, 100, 102, 103, 104, 105], "shimodaira": [17, 36, 37, 40, 41, 102], "shinichi": 102, "ship": 103, "short": 20, "shorthand": 84, "should": [21, 28, 33, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 61, 62, 63, 64, 65, 68, 72, 75, 78, 79, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 103], "show": [1, 2, 3, 4, 12, 13, 14, 17, 18, 21, 24, 25, 26, 53, 54], "showcas": 103, "shown": [103, 104], "shrink": 21, "shrinkag": [29, 30, 40, 41, 65], "shuffl": [67, 92, 94, 95], "shufflesplit": [24, 26, 103, 104], "si": [18, 65, 102], "sigma": [15, 68, 70, 71, 74], "sigma_ch": [4, 69], "sigma_freq": 69, "sigma_regress": 68, "sign": [85, 86, 87, 89, 90, 91], "signal": [4, 17, 53, 54, 69, 102], "signatur": [86, 87, 88, 91], "similar": [90, 103], "similarli": [20, 103], "simpl": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 103], "simplest": 103, "simpli": 103, "simplifi": 103, "simultan": 103, "sin": 22, "sinc": [25, 101, 103], "singl": [20, 86, 94, 98, 103], "singleton": 94, "sinkhorn": [16, 31, 32, 38, 39], "sinno": [18, 61, 62], "site": [6, 14, 16, 21], "size": [17, 18, 21, 53, 54, 69, 72, 75, 82, 92], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 27, 103, 104, 105], "skada_logo": 22, "skada_logo_ful": 22, "skada_logo_full_whit": 22, "skip": 103, "sklearn": [12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 26, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 57, 58, 71, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104], "skorch": [6, 7, 8, 102], "sleep": 102, "small": [28, 71, 74, 81, 86], "smola": [17, 45, 46, 102], "smooth": [17, 45, 46, 53, 54], "smooth_weight": [17, 45, 46], "snippet": 28, "so": [12, 18, 20, 103], "soft": [90, 102], "softmax": [6, 81], "softneighborhooddens": 103, "sol_": [13, 42], "solid": 21, "solid_capstyl": 22, "solomon": [14, 102], "solut": [18, 22, 42, 44, 62], "solv": [42, 43, 44], "solver": [16, 17, 22, 31, 32, 45, 46], "some": [0, 18, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "someth": 28, "sort": [25, 28], "sourc": [5, 6, 7, 8, 9, 11, 12, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "source_dict": 96, "source_idx": [99, 100, 103], "source_mark": [12, 18], "source_scor": 85, "source_target_split": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 24], "source_weights_": [46, 52], "sourcetargetselector": 103, "sourcetargetshufflesplit": [20, 25, 102, 103], "sourcetensor": [6, 7, 8, 9, 18, 21], "spa": 102, "space": [17, 18, 72, 103], "spars": [53, 54], "spatial": [53, 54], "special": 103, "specif": [20, 28, 69, 73, 99, 103], "specifi": [84, 89, 96, 97, 98, 99, 100, 101], "spectral": 102, "speed": [53, 54], "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25], "split": [20, 21, 24, 25, 43, 44, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104], "split_source_target": [96, 99], "splitter": [20, 25, 93], "springer": [78, 79, 102], "sqeuclidean": [21, 31, 32, 38, 39, 55, 56], "sqrt": [45, 46], "squar": [12, 30, 42, 53, 54], "stabil": [71, 74, 81], "stack": 103, "standard": [53, 54, 66, 67, 68, 69, 103], "standardscal": [20, 84, 102, 103], "start": [20, 28, 102, 103, 104], "start_length": 22, "state": 12, "static": 103, "statist": [17, 36, 37, 40, 41, 102], "std": [13, 14, 20, 24, 69], "step": [9, 12, 16, 18, 21, 28, 33, 84], "still": 103, "stop": [31, 32, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 63, 64, 65], "store": [17, 18, 53, 54, 102], "str": [17, 18, 31, 32, 35, 37, 38, 39, 41, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 65, 68, 70, 72, 75, 76, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "straightforward": 103, "strategi": [18, 24, 26, 33, 43, 44, 85, 102], "strategylorenzo": 102, "stratifi": 95, "stratifieddomainshufflesplit": 25, "stride": 9, "string": [45, 46, 53, 54, 84, 87, 88, 91], "strongli": 28, "structur": 103, "sub": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "subj_1": 103, "subj_12": 103, "subj_3": 103, "subject": [17, 18, 102], "submit": 28, "subplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "subplots_adjust": [1, 2, 3, 4, 25], "subsequ": [20, 102], "subset": 96, "subspac": [2, 3, 11, 19, 21, 59, 60, 61, 62, 63, 65, 68, 97, 102, 105], "subspace_estim": 18, "subspacealign": [18, 21, 102], "subspacealignmentadapt": [21, 59, 103], "sugiyama": [17, 43, 44, 87, 102], "suit": 103, "suitabl": 17, "sum": [12, 22, 89], "sun": [7, 18, 29, 30, 63, 64, 76, 77, 102], "supervis": [14, 24, 91, 93, 102, 103], "supervisedscor": [24, 103, 104], "support": [13, 78, 79], "supspac": 18, "suptitl": [1, 2, 3, 4, 12, 17, 18, 25], "sure": [12, 28], "suzuki": [17, 102], "svc": [12, 14, 15, 16, 18, 20, 21, 24, 26, 31, 33], "svg": 22, "svm": [12, 13, 14, 16, 18, 20, 21, 24, 26], "sy": 28, "synthet": 21, "system": [13, 28, 42, 102], "t": [2, 3, 7, 13, 16, 17, 18, 21, 22, 24, 25, 26, 50, 53, 54, 68, 80, 81, 90, 102, 103], "t10k": 7, "t2": [25, 103], "t_valu": 22, "tab10": [1, 2, 13, 14, 15, 16, 20], "taiji": 102, "takafumi": 102, "take": [17, 20, 53, 54, 103], "taken": [12, 21, 44, 66, 67, 68, 69], "tao": [18, 65, 102], "tar": [21, 102], "target": [5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 29, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 77, 79, 81, 83, 85, 87, 88, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105], "target_criterion": [78, 79], "target_dict": 96, "target_idx": [99, 103], "target_kmean": 71, "target_label": [24, 25, 91, 103], "target_mark": [12, 18], "target_shift": [2, 3, 14, 21, 68], "targetaccuracyscor": [24, 103, 104], "task": [6, 7, 8, 9, 13, 16, 28, 42, 83], "tca": [18, 21, 102], "team": [28, 102], "techniqu": [12, 33, 85, 102], "temperatur": [80, 81, 90], "tensor": [6, 7, 8, 9, 18, 21], "term": [78, 79], "test": [0, 17, 21, 24, 25, 28, 92, 93, 94, 95, 102, 104], "test_cv": 103, "test_index": [92, 95], "test_map": 103, "test_offic": 103, "test_pipelin": 103, "test_reweight": 103, "test_samples_gener": 103, "test_scor": 103, "test_siz": [24, 26, 92, 93, 94, 95, 103, 104], "test_subspac": 103, "teterwak": 102, "text": [12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 28], "textsf": 22, "than": [6, 7, 8, 9, 13, 17, 18, 21, 53, 54, 82], "thank": [24, 28], "thei": [12, 101, 103], "them": [53, 54, 103], "theme": 103, "theo": 102, "theoret": 42, "theori": [82, 83, 102], "therefor": 84, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 33, 35, 37, 41, 42, 44, 46, 52, 53, 54, 57, 58, 71, 73, 74, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104], "thoma": 102, "those": [12, 20, 53, 54, 103], "though": 103, "three": 83, "threshold": [31, 32, 64, 65, 70, 71], "through": [79, 83], "thu": [12, 17, 18, 25, 53, 54], "th\u00e9o": [6, 7, 8, 9, 22, 102], "tight": 22, "tight_layout": [18, 21, 22, 25], "time": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 84, 101], "titl": [2, 3, 13, 14, 15, 16, 20, 28, 102], "tjm": [18, 63, 64], "todo": 9, "togeth": [84, 103], "tol": [21, 24, 31, 32, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 63, 64, 65], "toler": [42, 43, 44, 45, 46, 49, 50, 51, 52], "tool": [28, 103], "toolbox": [22, 102], "top": 28, "torch": [6, 7, 8, 18, 21, 70, 72, 73, 75, 76, 78, 79, 80, 82], "torr": [2, 3, 68], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 66, 67, 68, 69, 105], "toward": [86, 102], "tr": 25, "traceback": 28, "track": 28, "tracker": 28, "trade": [42, 63, 64], "tradeoff": [18, 63, 64], "train": [10, 11, 12, 16, 17, 18, 20, 21, 24, 25, 70, 72, 75, 76, 77, 78, 80, 82, 83, 92, 93, 94, 95, 102, 103, 104, 105], "train_index": [92, 95], "train_loss": [6, 7, 8, 9], "train_siz": [92, 93, 94, 95], "train_split": [6, 7, 8, 9], "train_test_split": 86, "tran": 102, "transact": [16, 18, 31, 32, 33, 38, 39, 47, 55, 56, 61, 62, 65, 85, 102], "transfer": [61, 62, 63, 64, 65, 74, 102], "transfercomponentanalysi": [18, 21], "transfercomponentanalysisadapt": [21, 61, 103], "transferjointmatch": 18, "transferjointmatchingadapt": 63, "transfersubspacelearn": [18, 21], "transfersubspacelearningadapt": 21, "transform": [15, 16, 18, 20, 35, 37, 41, 44, 46, 50, 52, 54, 57, 58, 84, 102, 103], "translat": [67, 68], "transpar": [21, 22], "transport": [10, 11, 13, 19, 31, 32, 38, 39, 42, 47, 48, 55, 56, 68, 78, 79, 84, 97, 102, 105], "tree": [53, 54], "tri": [17, 73, 83], "trigger": 84, "true": [6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 29, 30, 33, 35, 37, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 57, 58, 64, 65, 66, 67, 68, 69, 71, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103], "try": [7, 14, 17, 21], "tsang": 102, "tsl": [18, 21], "tt": 25, "tuia": [16, 31, 32, 38, 39, 47, 55, 56, 78, 79, 102], "tune": [90, 102], "tupl": [66, 67, 68, 69, 84, 96, 103], "tutori": 28, "tuytelaar": 102, "tw": 7, "two": [17, 18, 28, 53, 54, 64, 65, 99, 102, 103, 104], "type": [2, 3, 25, 28, 84, 88, 101, 102], "typic": [72, 103], "u": [16, 28, 68], "ubyt": 7, "unchang": [35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "under": [17, 28, 36, 37, 40, 41, 49, 50, 51, 52, 102], "under_sampl": 92, "understand": 84, "unifi": [2, 3, 68, 102], "uniform": [21, 53, 54], "uniniti": [78, 79], "uninstanti": [72, 75, 82], "uniqu": [1, 99, 103], "unit": 72, "unitn": 102, "unlabel": [17, 45, 46, 102], "unless": [53, 54], "unpredict": 42, "unseen": 103, "unsupervis": [18, 29, 30, 59, 60, 63, 64, 70, 71, 78, 79, 86, 88, 89, 90, 102], "up": [28, 94], "updat": [22, 35, 37, 41, 44, 46, 52, 54, 57, 58, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103], "update_predict": 103, "upper": [45, 46], "url": 102, "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 28, 35, 37, 44, 52, 54, 60, 62, 64, 70, 71, 72, 73, 79, 80, 82, 85, 86, 88, 90, 98, 102, 103, 104, 105], "usag": [28, 103], "user": [28, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102], "userwarn": [1, 6, 7, 8, 9, 14, 16, 18, 21], "usetex": 22, "usp": [6, 7, 8, 9], "ustinova": 102, "util": [17, 18, 21, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "v": [2, 3, 17, 18, 68, 102], "va": 25, "val": 102, "valid": [24, 26, 27, 33, 43, 44, 53, 54, 68, 85, 86, 87, 90, 92, 93, 94, 95, 98, 102, 103, 104, 105], "valu": [3, 12, 21, 29, 30, 33, 38, 39, 40, 41, 42, 53, 54, 55, 56, 64, 65, 67, 68, 89, 90, 92, 98, 99, 101, 103], "var_smooth": 84, "variabl": [93, 96, 97, 98], "variat": 42, "vector": [13, 53, 54], "verbos": [13, 21, 42, 64, 65, 84], "veri": 25, "verifi": 28, "versatil": [80, 81, 102], "version": [25, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102], "vertic": 25, "via": [1, 18, 61, 62, 73, 90, 102], "view": [2, 3, 68], "viewabl": 28, "virgini": 102, "vision": [18, 29, 30, 59, 60, 63, 64, 70, 71, 78, 79, 90, 102], "visit": 102, "visual": [11, 18, 20, 27, 59, 60, 68, 92, 93, 94, 95, 102, 105], "visualis": 4, "vmax": [1, 2, 3, 12, 13, 14, 15, 16, 20, 25], "vmin": [12, 25], "von": [17, 102], "vstack": 15, "w": [17, 22, 44, 46, 50, 102], "w_": 50, "wa": [1, 4, 14, 66, 67, 68, 69], "wai": [28, 90, 102, 103, 104], "wang": [18, 63, 64, 80, 81, 102], "want": [14, 16, 26, 53, 54], "warn": [14, 16, 18, 21, 26, 102], "wasserstein": [14, 31, 32, 38, 39, 55, 56, 102], "wave": 28, "we": [2, 3, 13, 14, 15, 16, 20, 22, 24, 25, 26, 28, 53, 54, 68, 98, 101, 102, 103, 104], "web": 28, "webcam": 103, "webcam_idx": 103, "weight": [17, 20, 21, 34, 35, 36, 37, 40, 41, 45, 46, 52, 53, 54, 73, 86, 87, 102, 103], "weight_estim": [17, 21, 34, 35, 87], "weight_estimator_source_": [35, 87], "weight_estimator_target_": [35, 87], "well": [12, 14, 20, 28, 53, 54, 103], "were": [12, 103], "what": [16, 20, 28], "when": [12, 17, 18, 20, 28, 33, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 84, 103], "where": [12, 18, 28, 50, 66, 67, 68, 69, 93, 99, 102, 103], "whether": [85, 86, 87, 88, 89, 90, 91, 96, 99], "which": [12, 16, 17, 18, 20, 25, 28, 53, 54, 68, 69, 102, 103], "while": [12, 13, 25, 42, 84, 93, 94, 103, 104], "white": 22, "whole": 20, "whose": [70, 72, 75, 76, 78, 80, 82], "why": 28, "width": 103, "wip": 28, "wish": 28, "with_mean": 84, "with_std": 84, "within": [84, 103], "without": [9, 12, 17, 18, 21, 24, 28, 102, 103], "wolf": [17, 29, 30, 40, 41, 45, 46], "won": [17, 18, 103], "work": [14, 17, 18, 20, 28, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 72, 75, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 103], "workflow": [28, 103], "workshop": [7, 17, 53, 54, 76, 77, 102], "would": [102, 103], "wrap": [20, 84], "wrapper": 20, "write": 28, "www": [7, 17], "x": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 35, 37, 41, 44, 46, 50, 52, 53, 54, 66, 67, 68, 69, 87, 88, 91, 92, 93, 95, 98, 101, 102, 103, 104], "x0": [18, 21], "x_": [12, 18], "x_adapt": [15, 16], "x_adapted_classreg": 16, "x_adapted_linear": 16, "x_adapted_sinkhorn": 16, "x_dict": 9, "x_lodo": 25, "x_max": [17, 18, 21], "x_min": [17, 18, 21], "x_point": 12, "x_sourc": [1, 2, 3, 4, 16, 24, 101], "x_source_": [46, 50, 52, 62], "x_source_adapt": 16, "x_source_adapted_classreg": 16, "x_source_adapted_linear": 16, "x_source_adapted_sinkhorn": 16, "x_subj1": 103, "x_subj12": 103, "x_subj3": 103, "x_t": 12, "x_target": [1, 2, 3, 4, 16, 24, 26, 101, 103, 104], "x_target_": 62, "x_test": [6, 7, 8, 9, 103], "x_train": [18, 103], "xi": 15, "xiao": 102, "ximei": [80, 81, 102], "xlabel": [24, 26], "xlim": [12, 22, 25], "xs_subspac": 18, "xt": [12, 13, 14, 15, 17, 18, 20, 21, 102], "xt_adapt": 18, "xt_subspac": 18, "xue": 102, "xx": [13, 14], "xxx": 95, "y": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 35, 37, 41, 44, 46, 50, 52, 54, 66, 67, 68, 69, 70, 71, 85, 86, 87, 88, 91, 92, 93, 95, 98, 101, 102, 103, 104], "y_": [18, 71, 79], "y_axi": 22, "y_lodo": 25, "y_max": [17, 18, 21], "y_min": [17, 18, 21], "y_point": 12, "y_pred": [85, 86], "y_pred_": [71, 83], "y_pred_t": [71, 79, 81, 83], "y_sourc": [1, 2, 3, 4, 16, 24, 101], "y_subj1": 103, "y_subj12": 103, "y_subj3": 103, "y_target": [1, 2, 3, 4, 16, 24, 26, 101, 103, 104], "y_test": [6, 7, 8, 9, 103], "y_train": [18, 103], "y_true": 86, "yang": [70, 71, 102], "yani": [25, 102], "yann": 7, "yaroslav": 75, "year": 102, "yerr": 24, "yet": 102, "yh": 14, "yht": 14, "yi": 15, "yield": 93, "ying": [80, 81, 102], "ylabel": 26, "ylim": [12, 25], "you": [14, 16, 20, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103], "your": [28, 102, 103], "yourlogin": 28, "ypred": 102, "ys_pred": [13, 14], "yt": [12, 13, 14, 15, 17, 18, 20, 21], "yt_pred": [13, 14, 20], "ytick": [24, 25], "yticklabel": 25, "yu": [18, 63, 64, 102], "yuchen": [82, 83], "yy": [13, 14], "z": [13, 14, 68, 102], "z_jcpot": 14, "zero": 9, "zero_grad": 9, "zhang": [49, 50, 51, 52, 82, 83, 102], "zhao": 102, "zhiqe": 102, "zip": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 95], "zjdot": [13, 14]}, "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Label Propagation methods", "Multi-domain Linear Monge Alignment", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Subspace method example on subspace shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "Contributing to SKADA", "skada.CORAL", "skada.CORALAdapter", "skada.ClassRegularizerOTMapping", "skada.ClassRegularizerOTMappingAdapter", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DensityReweightAdapter", "skada.DiscriminatorReweight", "skada.DiscriminatorReweightAdapter", "skada.EntropicOTMapping", "skada.EntropicOTMappingAdapter", "skada.GaussianReweight", "skada.GaussianReweightAdapter", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.KLIEPReweightAdapter", "skada.KMMReweight", "skada.KMMReweightAdapter", "skada.LinearOTMapping", "skada.LinearOTMappingAdapter", "skada.MMDLSConSMapping", "skada.MMDLSConSMappingAdapter", "skada.MMDTarSReweight", "skada.MMDTarSReweightAdapter", "skada.NearestNeighborReweight", "skada.NearestNeighborReweightAdapter", "skada.OTMapping", "skada.OTMappingAdapter", "skada.PerDomain", "skada.Shared", "skada.SubspaceAlignment", "skada.SubspaceAlignmentAdapter", "skada.TransferComponentAnalysis", "skada.TransferComponentAnalysisAdapter", "skada.TransferJointMatching", "skada.TransferJointMatchingAdapter", "skada.TransferSubspaceLearning", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CAN", "skada.deep.CANLoss", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.deep.MCC", "skada.deep.MCCLoss", "skada.deep.MDD", "skada.deep.MDDLoss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.MixValScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "skada.per_domain_split", "skada.source_target_split", "skada.utils.check_X_y_domain", "skada.utils.extract_domains_indices", "skada.utils.extract_source_indices", "skada.utils.source_target_merge", "SKADA: SciKit Domain Adaptation", "Users Guide", "Metrics: Compute score for domain adaptation problems", "Computation times"], "titleterms": {"2": [12, 17, 18], "2d": [12, 17, 18], "The": 18, "acknowledg": 102, "adapt": [6, 7, 8, 11, 15, 16, 17, 18, 20, 102, 103, 104], "advanc": 20, "adversari": 6, "algorithm": 102, "align": [0, 15, 18], "analysi": 18, "api": 0, "behavior": 25, "between": [17, 18], "bug": 28, "can": 70, "canloss": 71, "cdan": 72, "cdanloss": 73, "check_x_y_domain": 98, "checklist": 28, "circularvalid": 85, "class": [12, 17, 18], "classic": [6, 7, 8], "classif": [13, 14, 15, 21], "classifi": [12, 13, 14, 15, 20], "classregularizerotmap": 31, "classregularizerotmappingadapt": 32, "comparison": [17, 18, 21], "compon": 18, "comput": [5, 10, 19, 23, 27, 104, 105], "concept": [13, 14, 15, 16], "content": 102, "contribut": 28, "contributor": 28, "coral": 29, "coraladapt": 30, "covari": 17, "cross": [20, 25], "cross_val_scor": 24, "da": [0, 9, 11, 16, 20, 21, 102, 103], "danloss": 74, "dann": [6, 75], "dasvm": 12, "dasvmclassifi": [12, 33], "data": [13, 14, 15], "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 66, 67, 68, 69, 103], "deep": [0, 9, 11, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 102], "deepcor": [7, 76], "deepcoralloss": 77, "deepembeddedvalid": 86, "deepjdot": [8, 78], "deepjdotloss": 79, "densiti": 17, "densityreweight": 34, "densityreweightadapt": 35, "differ": 16, "discr": 17, "discriminatorreweight": 36, "discriminatorreweightadapt": 37, "diverg": 7, "document": 28, "doe": 16, "domain": [1, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 18, 102, 103, 104], "domainshufflesplit": 92, "drift": [13, 14, 15, 16], "entropicotmap": 38, "entropicotmappingadapt": 39, "estim": [20, 103], "exampl": [11, 12, 13, 17, 18, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 61, 63, 65, 66, 68, 69, 75, 76, 77, 78, 84, 87, 89, 91, 92, 93, 94, 95, 97, 100, 102], "extract_domains_indic": 99, "extract_source_indic": 100, "file": 28, "full": 14, "galleri": 11, "gaussian": 17, "gaussianreweight": 40, "gaussianreweightadapt": 41, "gener": [12, 13, 14, 15, 16, 17, 18, 22], "grid": 20, "gridsearchcv": 26, "guid": 103, "how": [16, 20, 28], "illustr": [13, 14, 16, 17, 18], "imag": [6, 7, 8, 9], "implement": 102, "importanceweightedscor": 87, "indic": 102, "instal": 102, "jcpot": 14, "jdot": 13, "jdotregressor": 42, "joint": 18, "kernel": 17, "kliepreweight": [17, 43], "kliepreweightadapt": 44, "kmmreweight": 45, "kmmreweightadapt": 46, "labe": 14, "label": [12, 14], "labelprop": 14, "learn": [0, 11, 18, 102], "leaveonedomainout": 93, "licens": 102, "linear": 15, "linearotmap": 47, "linearotmappingadapt": 48, "load": [6, 7, 8, 9], "logo": 22, "main": 0, "make_da_pipelin": 84, "make_dataset_from_moons_distribut": 66, "make_shifted_blob": 67, "make_shifted_dataset": 68, "make_variable_frequency_dataset": 69, "map": 0, "match": [17, 18], "mcc": 80, "mccloss": 81, "mdd": 82, "mddloss": 83, "mean": 17, "method": [0, 6, 7, 8, 9, 11, 14, 16, 17, 18, 21], "metric": [0, 85, 86, 87, 88, 89, 90, 91, 102, 103, 104], "mixvalscor": 88, "mmdlsconsmap": 49, "mmdlsconsmappingadapt": 50, "mmdtarsreweight": 51, "mmdtarsreweightadapt": 52, "model": [0, 6, 7, 8, 14, 103], "model_select": [0, 92, 93, 94, 95], "modul": 0, "mong": 15, "multi": 15, "nearest": 17, "nearestneighborreweight": 53, "nearestneighborreweightadapt": 54, "neighbor": 17, "new": 28, "optim": [8, 16], "ot": 13, "otda": 16, "other": 0, "otmap": 55, "otmappingadapt": 56, "our": [12, 17, 18], "paramet": 9, "per_domain_split": 96, "perdomain": 57, "pipelin": [0, 20, 103], "plan": 13, "plot": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18], "predictionentropyscor": 89, "problem": [16, 17, 18, 104], "procedur": 11, "propag": 14, "pull": 28, "pytorch": 102, "refer": 102, "regress": [13, 14], "regressor": [13, 14], "request": 28, "reweight": [0, 17], "sampl": [0, 103], "scikit": 102, "score": [17, 18, 20, 103, 104], "search": 20, "select": [0, 103], "selector": 103, "setup": 9, "share": 58, "shift": [1, 2, 3, 4, 17, 18], "short": 102, "skada": [0, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "skorch": 9, "softneighborhooddens": 90, "sourc": [1, 2, 3, 4, 13, 14, 15], "source_target_merg": 101, "source_target_split": 97, "sourcetargetshufflesplit": 94, "splitter": 103, "stratifieddomainshufflesplit": 95, "subspac": 18, "subspacealign": 59, "subspacealignmentadapt": 60, "supervisedscor": 91, "svc": 13, "tabl": 102, "target": [1, 2, 3, 4, 12], "test": 103, "time": [5, 10, 19, 23, 27, 103, 105], "tip": 28, "torch": 9, "train": [6, 7, 8, 9, 13, 14, 15], "transfer": 18, "transfercomponentanalysi": 61, "transfercomponentanalysisadapt": 62, "transferjointmatch": 63, "transferjointmatchingadapt": 64, "transfersubspacelearn": 65, "transport": [8, 16], "us": [20, 24, 26, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 61, 63, 65, 66, 68, 69, 75, 76, 77, 78, 84, 87, 89, 91, 92, 93, 94, 95, 97, 100], "usag": 12, "user": 103, "util": [0, 98, 99, 100, 101], "valid": [11, 20, 25], "visual": 25, "we": [12, 17, 18], "work": 16}})