Search.setIndex({"alltitles": {"API and modules": [[0, null]], "Acknowledgements": [[97, "acknowledgements"]], "Adapter": [[98, "adapter"]], "Adapters and Estimators": [[98, "adapters-and-estimators"]], "Advanced DA pipeline": [[20, "advanced-da-pipeline"]], "Adversarial domain adaptation methods.": [[6, null]], "Comparison of DA classification methods": [[21, null]], "Comparison of score between reweighting methods:": [[17, "comparison-of-score-between-reweighting-methods"]], "Comparison of score between subspace methods:": [[18, "comparison-of-score-between-subspace-methods"]], "Computation times": [[5, null], [10, null], [19, null], [23, null], [27, null], [100, null]], "Contents": [[97, "contents"]], "DA Adapter pipeline": [[20, "da-adapter-pipeline"]], "DA Classifier estimator": [[20, "da-classifier-estimator"]], "DA dataset": [[20, "da-dataset"]], "DA estimator in a pipeline": [[20, "da-estimator-in-a-pipeline"]], "DA estimator with grid search": [[20, "da-estimator-with-grid-search"]], "DA estimators with score cross-validation": [[20, "da-estimators-with-score-cross-validation"]], "DA methods": [[11, "da-methods"]], "DA metrics": [[97, "da-metrics"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "DA pipeline": [[0, "da-pipeline"]], "DA validation procedures": [[11, "da-validation-procedures"]], "DASVM classifier example": [[12, null]], "Dataset": [[98, "dataset"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Deep learning DA methods": [[11, "deep-learning-da-methods"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "Deep learning domain adaptation algorithms": [[97, "deep-learning-domain-adaptation-algorithms"]], "Different OTDA methods": [[16, "different-otda-methods"]], "Divergence domain adaptation methods.": [[7, null]], "Domain Adaptation Datasets": [[11, "domain-adaptation-datasets"]], "Domain adaptation algorithms": [[97, "domain-adaptation-algorithms"]], "Examples gallery": [[11, null]], "Examples using skada.CORAL": [[28, "examples-using-skada-coral"]], "Examples using skada.CORALAdapter": [[29, "examples-using-skada-coraladapter"]], "Examples using skada.ClassRegularizerOTMapping": [[30, "examples-using-skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMappingAdapter": [[31, "examples-using-skada-classregularizerotmappingadapter"]], "Examples using skada.DASVMClassifier": [[32, "examples-using-skada-dasvmclassifier"]], "Examples using skada.DensityReweight": [[33, "examples-using-skada-densityreweight"]], "Examples using skada.DiscriminatorReweight": [[35, "examples-using-skada-discriminatorreweight"]], "Examples using skada.EntropicOTMapping": [[37, "examples-using-skada-entropicotmapping"]], "Examples using skada.EntropicOTMappingAdapter": [[38, "examples-using-skada-entropicotmappingadapter"]], "Examples using skada.GaussianReweight": [[39, "examples-using-skada-gaussianreweight"]], "Examples using skada.GaussianReweightAdapter": [[40, "examples-using-skada-gaussianreweightadapter"]], "Examples using skada.JDOTRegressor": [[41, "examples-using-skada-jdotregressor"]], "Examples using skada.KLIEPReweight": [[42, "examples-using-skada-kliepreweight"]], "Examples using skada.KMMReweight": [[44, "examples-using-skada-kmmreweight"]], "Examples using skada.KMMReweightAdapter": [[45, "examples-using-skada-kmmreweightadapter"]], "Examples using skada.LinearOTMapping": [[46, "examples-using-skada-linearotmapping"]], "Examples using skada.LinearOTMappingAdapter": [[47, "examples-using-skada-linearotmappingadapter"]], "Examples using skada.MMDLSConSMapping": [[48, "examples-using-skada-mmdlsconsmapping"]], "Examples using skada.MMDTarSReweight": [[50, "examples-using-skada-mmdtarsreweight"]], "Examples using skada.NearestNeighborReweight": [[52, "examples-using-skada-nearestneighborreweight"]], "Examples using skada.OTMapping": [[54, "examples-using-skada-otmapping"]], "Examples using skada.OTMappingAdapter": [[55, "examples-using-skada-otmappingadapter"]], "Examples using skada.PerDomain": [[56, "examples-using-skada-perdomain"]], "Examples using skada.Shared": [[57, "examples-using-skada-shared"]], "Examples using skada.SubspaceAlignment": [[58, "examples-using-skada-subspacealignment"]], "Examples using skada.TransferComponentAnalysis": [[60, "examples-using-skada-transfercomponentanalysis"]], "Examples using skada.TransferJointMatching": [[62, "examples-using-skada-transferjointmatching"]], "Examples using skada.TransferSubspaceLearning": [[64, "examples-using-skada-transfersubspacelearning"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[65, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_shifted_datasets": [[67, "examples-using-skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[68, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.deep.DANN": [[74, "examples-using-skada-deep-dann"]], "Examples using skada.deep.DeepCoral": [[75, "examples-using-skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoralLoss": [[76, "examples-using-skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepJDOT": [[77, "examples-using-skada-deep-deepjdot"]], "Examples using skada.make_da_pipeline": [[79, "examples-using-skada-make-da-pipeline"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[82, "examples-using-skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[84, "examples-using-skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.SupervisedScorer": [[86, "examples-using-skada-metrics-supervisedscorer"]], "Examples using skada.model_selection.DomainShuffleSplit": [[87, "examples-using-skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[88, "examples-using-skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[89, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[90, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "Examples using skada.source_target_split": [[92, "examples-using-skada-source-target-split"]], "Examples using skada.utils.extract_source_indices": [[95, "examples-using-skada-utils-extract-source-indices"]], "Generate classification classification dataset and plot it": [[14, "generate-classification-classification-dataset-and-plot-it"]], "Generate concept drift classification dataset and plot it": [[13, "generate-concept-drift-classification-dataset-and-plot-it"], [14, "generate-concept-drift-classification-dataset-and-plot-it"], [15, "generate-concept-drift-classification-dataset-and-plot-it"]], "Generate concept drift dataset": [[16, "generate-concept-drift-dataset"]], "Generate concept drift regression dataset and plot it": [[13, "generate-concept-drift-regression-dataset-and-plot-it"], [14, "generate-concept-drift-regression-dataset-and-plot-it"]], "How does OTDA works?": [[16, "how-does-otda-works"]], "How to use SKADA": [[20, null]], "Illustration of the DA problem": [[16, "illustration-of-the-da-problem"]], "Illustration of the Density Reweighting method": [[17, "illustration-of-the-density-reweighting-method"]], "Illustration of the Discr. reweighting method": [[17, "illustration-of-the-discr-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[17, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the KLIEPReweight method": [[17, "illustration-of-the-kliepreweight-method"]], "Illustration of the Kernel Mean Matching method": [[17, "illustration-of-the-kernel-mean-matching-method"]], "Illustration of the Nearest Neighbor reweighting method": [[17, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the OT plan": [[13, "illustration-of-the-ot-plan"]], "Illustration of the Subspace Alignment method": [[18, "illustration-of-the-subspace-alignment-method"]], "Illustration of the Transfer Component Analysis method": [[18, "illustration-of-the-transfer-component-analysis-method"]], "Illustration of the Transfer Joint Matching method": [[18, "illustration-of-the-transfer-joint-matching-method"]], "Illustration of the Transfer Subspace Learning method": [[18, "illustration-of-the-transfer-subspace-learning-method"]], "Illustration of the problem with no domain adaptation": [[17, "illustration-of-the-problem-with-no-domain-adaptation"], [18, "illustration-of-the-problem-with-no-domain-adaptation"]], "Illustration of the propagated labels": [[14, "illustration-of-the-propagated-labels"], [14, "id3"]], "Implemented algorithms": [[97, "implemented-algorithms"]], "Indices and tables": [[97, "indices-and-tables"]], "Installation": [[97, "installation"]], "JDOT Regressor and Classifier examples": [[13, null]], "Label Propagation methods": [[14, null]], "Labeling the target dataset": [[12, "labeling-the-target-dataset"]], "License": [[97, "license"]], "Load the image datasets": [[6, "load-the-image-datasets"], [7, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"]], "Main module skada": [[0, "module-skada"]], "Metrics for DA": [[98, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[99, null]], "Model Selection": [[98, "model-selection"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Multi-domain Linear Monge Alignment": [[15, null]], "Optimal Transport Domain Adaptation": [[16, "optimal-transport-domain-adaptation"]], "Optimal Transport Domain Adaptation (OTDA)": [[16, null]], "Optimal transport domain adaptation methods.": [[8, null]], "Other DA methods": [[0, "other-da-methods"]], "Pipeline": [[98, "pipeline"]], "Plot dataset source domain and shifted target domain": [[1, null], [2, null], [3, null], [4, null]], "Plot of the dataset:": [[17, "plot-of-the-dataset"], [18, "plot-of-the-dataset"]], "Plots of the dataset": [[12, "plots-of-the-dataset"]], "References": [[97, "references"]], "Reweighting Methods": [[17, "reweighting-methods"]], "Reweighting method example on covariate shift dataset": [[17, null]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[97, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "SKADA logo generation": [[22, null]], "SKADA: SciKit Domain Adaptation": [[97, null]], "Sample Domain": [[98, "sample-domain"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Scoring": [[98, "scoring"]], "Selector": [[98, "selector"]], "Short examples": [[97, "short-examples"]], "Splitters": [[98, "splitters"]], "Subspace method example on subspace shift dataset": [[18, null]], "Test-time Domain Adaptation": [[98, "test-time-domain-adaptation"]], "The subspaces methods": [[18, "the-subspaces-methods"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Train a DeepCoral model": [[7, "train-a-deepcoral-model"]], "Train a DeepJDOT model": [[8, "train-a-deepjdot-model"]], "Train a classic model": [[6, "train-a-classic-model"], [7, "train-a-classic-model"], [8, "train-a-classic-model"]], "Train a classifier on adapted data": [[15, "train-a-classifier-on-adapted-data"], [15, "id1"]], "Train a classifier on source data": [[13, "train-a-classifier-on-source-data"], [14, "train-a-classifier-on-source-data"], [15, "train-a-classifier-on-source-data"]], "Train a regressor on source data": [[13, "train-a-regressor-on-source-data"], [14, "train-a-regressor-on-source-data"]], "Train the full Labe Propagation model": [[14, "train-the-full-labe-propagation-model"]], "Train with JDOT classifier": [[13, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[13, "train-with-jdot-classifier-with-svc"]], "Train with JDOT regressor": [[13, "train-with-jdot-regressor"]], "Train with LabelProp + classifier": [[14, "train-with-labelprop-classifier"]], "Train with LabelProp and JCPOT + classifier": [[14, "train-with-labelprop-and-jcpot-classifier"]], "Training parameters": [[9, "training-parameters"]], "Training setup for deep DA method.": [[9, null]], "Training with skorch": [[9, "training-with-skorch"]], "Training with skorch with dataset": [[9, "training-with-skorch-with-dataset"]], "Training with torch": [[9, "training-with-torch"]], "Usage of the DASVMClassifier": [[12, "usage-of-the-dasvmclassifier"]], "Users Guide": [[98, null]], "Using GridSearchCV with skada": [[26, null]], "Using cross_val_score with skada": [[24, null]], "Utilities": [[0, "utilities"]], "Utilities skada.utils": [[0, "module-skada.utils"]], "Visualizing cross-validation behavior in skada": [[25, null]], "We generate our 2D dataset with 2 classes": [[12, "we-generate-our-2d-dataset-with-2-classes"], [17, "we-generate-our-2d-dataset-with-2-classes"], [18, "we-generate-our-2d-dataset-with-2-classes"]], "skada.CORAL": [[28, null]], "skada.CORALAdapter": [[29, null]], "skada.ClassRegularizerOTMapping": [[30, null]], "skada.ClassRegularizerOTMappingAdapter": [[31, null]], "skada.DASVMClassifier": [[32, null]], "skada.DensityReweight": [[33, null]], "skada.DensityReweightAdapter": [[34, null]], "skada.DiscriminatorReweight": [[35, null]], "skada.DiscriminatorReweightAdapter": [[36, null]], "skada.EntropicOTMapping": [[37, null]], "skada.EntropicOTMappingAdapter": [[38, null]], "skada.GaussianReweight": [[39, null]], "skada.GaussianReweightAdapter": [[40, null]], "skada.JDOTRegressor": [[41, null]], "skada.KLIEPReweight": [[42, null]], "skada.KLIEPReweightAdapter": [[43, null]], "skada.KMMReweight": [[44, null]], "skada.KMMReweightAdapter": [[45, null]], "skada.LinearOTMapping": [[46, null]], "skada.LinearOTMappingAdapter": [[47, null]], "skada.MMDLSConSMapping": [[48, null]], "skada.MMDLSConSMappingAdapter": [[49, null]], "skada.MMDTarSReweight": [[50, null]], "skada.MMDTarSReweightAdapter": [[51, null]], "skada.NearestNeighborReweight": [[52, null]], "skada.NearestNeighborReweightAdapter": [[53, null]], "skada.OTMapping": [[54, null]], "skada.OTMappingAdapter": [[55, null]], "skada.PerDomain": [[56, null]], "skada.Shared": [[57, null]], "skada.SubspaceAlignment": [[58, null]], "skada.SubspaceAlignmentAdapter": [[59, null]], "skada.TransferComponentAnalysis": [[60, null]], "skada.TransferComponentAnalysisAdapter": [[61, null]], "skada.TransferJointMatching": [[62, null]], "skada.TransferJointMatchingAdapter": [[63, null]], "skada.TransferSubspaceLearning": [[64, null]], "skada.datasets.make_dataset_from_moons_distribution": [[65, null]], "skada.datasets.make_shifted_blobs": [[66, null]], "skada.datasets.make_shifted_datasets": [[67, null]], "skada.datasets.make_variable_frequency_dataset": [[68, null]], "skada.deep.CAN": [[69, null]], "skada.deep.CANLoss": [[70, null]], "skada.deep.CDAN": [[71, null]], "skada.deep.CDANLoss": [[72, null]], "skada.deep.DANLoss": [[73, null]], "skada.deep.DANN": [[74, null]], "skada.deep.DeepCoral": [[75, null]], "skada.deep.DeepCoralLoss": [[76, null]], "skada.deep.DeepJDOT": [[77, null]], "skada.deep.DeepJDOTLoss": [[78, null]], "skada.make_da_pipeline": [[79, null]], "skada.metrics.CircularValidation": [[80, null]], "skada.metrics.DeepEmbeddedValidation": [[81, null]], "skada.metrics.ImportanceWeightedScorer": [[82, null]], "skada.metrics.MixValScorer": [[83, null]], "skada.metrics.PredictionEntropyScorer": [[84, null]], "skada.metrics.SoftNeighborhoodDensity": [[85, null]], "skada.metrics.SupervisedScorer": [[86, null]], "skada.model_selection.DomainShuffleSplit": [[87, null]], "skada.model_selection.LeaveOneDomainOut": [[88, null]], "skada.model_selection.SourceTargetShuffleSplit": [[89, null]], "skada.model_selection.StratifiedDomainShuffleSplit": [[90, null]], "skada.per_domain_split": [[91, null]], "skada.source_target_split": [[92, null]], "skada.utils.check_X_y_domain": [[93, null]], "skada.utils.extract_domains_indices": [[94, null]], "skada.utils.extract_source_indices": [[95, null]], "skada.utils.source_target_merge": [[96, null]]}, "docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_label_prop_da", "auto_examples/methods/plot_monge_alignment_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/plot_subspace", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "gen_modules/skada.CORAL", "gen_modules/skada.CORALAdapter", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.ClassRegularizerOTMappingAdapter", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DensityReweightAdapter", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.DiscriminatorReweightAdapter", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.EntropicOTMappingAdapter", "gen_modules/skada.GaussianReweight", "gen_modules/skada.GaussianReweightAdapter", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.KLIEPReweightAdapter", "gen_modules/skada.KMMReweight", "gen_modules/skada.KMMReweightAdapter", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.LinearOTMappingAdapter", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDLSConSMappingAdapter", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.MMDTarSReweightAdapter", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.NearestNeighborReweightAdapter", "gen_modules/skada.OTMapping", "gen_modules/skada.OTMappingAdapter", "gen_modules/skada.PerDomain", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.SubspaceAlignmentAdapter", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.TransferComponentAnalysisAdapter", "gen_modules/skada.TransferJointMatching", "gen_modules/skada.TransferJointMatchingAdapter", "gen_modules/skada.TransferSubspaceLearning", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CAN", "gen_modules/skada.deep.CANLoss", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.MixValScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "gen_modules/skada.per_domain_split", "gen_modules/skada.source_target_split", "gen_modules/skada.utils.check_X_y_domain", "gen_modules/skada.utils.extract_domains_indices", "gen_modules/skada.utils.extract_source_indices", "gen_modules/skada.utils.source_target_merge", "index", "quickstart", "scorer", "sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_label_prop_da.rst", "auto_examples/methods/plot_monge_alignment_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/plot_subspace.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.CORALAdapter.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.ClassRegularizerOTMappingAdapter.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DensityReweightAdapter.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.DiscriminatorReweightAdapter.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.EntropicOTMappingAdapter.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.GaussianReweightAdapter.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.KLIEPReweightAdapter.rst", "gen_modules/skada.KMMReweight.rst", "gen_modules/skada.KMMReweightAdapter.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.LinearOTMappingAdapter.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDLSConSMappingAdapter.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.MMDTarSReweightAdapter.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.NearestNeighborReweightAdapter.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.OTMappingAdapter.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.SubspaceAlignmentAdapter.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.TransferComponentAnalysisAdapter.rst", "gen_modules/skada.TransferJointMatching.rst", "gen_modules/skada.TransferJointMatchingAdapter.rst", "gen_modules/skada.TransferSubspaceLearning.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CAN.rst", "gen_modules/skada.deep.CANLoss.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.MixValScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "gen_modules/skada.per_domain_split.rst", "gen_modules/skada.source_target_split.rst", "gen_modules/skada.utils.check_X_y_domain.rst", "gen_modules/skada.utils.extract_domains_indices.rst", "gen_modules/skada.utils.extract_source_indices.rst", "gen_modules/skada.utils.source_target_merge.rst", "index.rst", "quickstart.md", "scorer.rst", "sg_execution_times.rst"], "indexentries": {"can() (in module skada.deep)": [[69, "skada.deep.CAN", false]], "canloss (class in skada.deep)": [[70, "skada.deep.CANLoss", false]], "cdan() (in module skada.deep)": [[71, "skada.deep.CDAN", false]], "cdanloss (class in skada.deep)": [[72, "skada.deep.CDANLoss", false]], "check_x_y_domain() (in module skada.utils)": [[93, "skada.utils.check_X_y_domain", false]], "circularvalidation (class in skada.metrics)": [[80, "skada.metrics.CircularValidation", false]], "classregularizerotmapping() (in module skada)": [[30, "skada.ClassRegularizerOTMapping", false]], "classregularizerotmappingadapter() (in module skada)": [[31, "skada.ClassRegularizerOTMappingAdapter", false]], "coral() (in module skada)": [[28, "skada.CORAL", false]], "coraladapter() (in module skada)": [[29, "skada.CORALAdapter", false]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[81, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss", false]], "danloss (class in skada.deep)": [[73, "skada.deep.DANLoss", false]], "dann() (in module skada.deep)": [[74, "skada.deep.DANN", false]], "dasvmclassifier() (in module skada)": [[32, "skada.DASVMClassifier", false]], "deepcoral() (in module skada.deep)": [[75, "skada.deep.DeepCoral", false]], "deepcoralloss (class in skada.deep)": [[76, "skada.deep.DeepCoralLoss", false]], "deepembeddedvalidation (class in skada.metrics)": [[81, "skada.metrics.DeepEmbeddedValidation", false]], "deepjdot() (in module skada.deep)": [[77, "skada.deep.DeepJDOT", false]], "deepjdotloss (class in skada.deep)": [[78, "skada.deep.DeepJDOTLoss", false]], "densityreweight() (in module skada)": [[33, "skada.DensityReweight", false]], "densityreweightadapter (class in skada)": [[34, "skada.DensityReweightAdapter", false]], "discriminatorreweight() (in module skada)": [[35, "skada.DiscriminatorReweight", false]], "discriminatorreweightadapter (class in skada)": [[36, "skada.DiscriminatorReweightAdapter", false]], "domainshufflesplit (class in skada.model_selection)": [[87, "skada.model_selection.DomainShuffleSplit", false]], "entropicotmapping() (in module skada)": [[37, "skada.EntropicOTMapping", false]], "entropicotmappingadapter() (in module skada)": [[38, "skada.EntropicOTMappingAdapter", false]], "extract_domains_indices() (in module skada.utils)": [[94, "skada.utils.extract_domains_indices", false]], "extract_source_indices() (in module skada.utils)": [[95, "skada.utils.extract_source_indices", false]], "fit() (skada.densityreweightadapter method)": [[34, "skada.DensityReweightAdapter.fit", false]], "fit() (skada.discriminatorreweightadapter method)": [[36, "skada.DiscriminatorReweightAdapter.fit", false]], "fit() (skada.gaussianreweightadapter method)": [[40, "skada.GaussianReweightAdapter.fit", false]], "fit() (skada.kliepreweightadapter method)": [[43, "skada.KLIEPReweightAdapter.fit", false]], "fit() (skada.kmmreweightadapter method)": [[45, "skada.KMMReweightAdapter.fit", false]], "fit() (skada.mmdtarsreweightadapter method)": [[51, "skada.MMDTarSReweightAdapter.fit", false]], "fit() (skada.nearestneighborreweightadapter method)": [[53, "skada.NearestNeighborReweightAdapter.fit", false]], "forward() (skada.deep.canloss method)": [[70, "skada.deep.CANLoss.forward", false]], "forward() (skada.deep.cdanloss method)": [[72, "skada.deep.CDANLoss.forward", false]], "forward() (skada.deep.danloss method)": [[73, "skada.deep.DANLoss.forward", false]], "forward() (skada.deep.deepcoralloss method)": [[76, "skada.deep.DeepCoralLoss.forward", false]], "forward() (skada.deep.deepjdotloss method)": [[78, "skada.deep.DeepJDOTLoss.forward", false]], "gaussianreweight() (in module skada)": [[39, "skada.GaussianReweight", false]], "gaussianreweightadapter (class in skada)": [[40, "skada.GaussianReweightAdapter", false]], "get_estimator() (skada.perdomain method)": [[56, "skada.PerDomain.get_estimator", false]], "get_estimator() (skada.shared method)": [[57, "skada.Shared.get_estimator", false]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[88, "skada.model_selection.LeaveOneDomainOut.get_n_splits", false]], "importanceweightedscorer (class in skada.metrics)": [[82, "skada.metrics.ImportanceWeightedScorer", false]], "jdotregressor() (in module skada)": [[41, "skada.JDOTRegressor", false]], "kliepreweight() (in module skada)": [[42, "skada.KLIEPReweight", false]], "kliepreweightadapter (class in skada)": [[43, "skada.KLIEPReweightAdapter", false]], "kmmreweight() (in module skada)": [[44, "skada.KMMReweight", false]], "kmmreweightadapter (class in skada)": [[45, "skada.KMMReweightAdapter", false]], "leaveonedomainout (class in skada.model_selection)": [[88, "skada.model_selection.LeaveOneDomainOut", false]], "linearotmapping() (in module skada)": [[46, "skada.LinearOTMapping", false]], "linearotmappingadapter() (in module skada)": [[47, "skada.LinearOTMappingAdapter", false]], "make_da_pipeline() (in module skada)": [[79, "skada.make_da_pipeline", false]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[65, "skada.datasets.make_dataset_from_moons_distribution", false]], "make_shifted_blobs() (in module skada.datasets)": [[66, "skada.datasets.make_shifted_blobs", false]], "make_shifted_datasets() (in module skada.datasets)": [[67, "skada.datasets.make_shifted_datasets", false]], "make_variable_frequency_dataset() (in module skada.datasets)": [[68, "skada.datasets.make_variable_frequency_dataset", false]], "mixvalscorer (class in skada.metrics)": [[83, "skada.metrics.MixValScorer", false]], "mmdlsconsmapping() (in module skada)": [[48, "skada.MMDLSConSMapping", false]], "mmdlsconsmappingadapter() (in module skada)": [[49, "skada.MMDLSConSMappingAdapter", false]], "mmdtarsreweight() (in module skada)": [[50, "skada.MMDTarSReweight", false]], "mmdtarsreweightadapter (class in skada)": [[51, "skada.MMDTarSReweightAdapter", false]], "module": [[0, "module-skada", false], [0, "module-skada.datasets", false], [0, "module-skada.deep", false], [0, "module-skada.metrics", false], [0, "module-skada.model_selection", false], [0, "module-skada.utils", false]], "nearestneighborreweight() (in module skada)": [[52, "skada.NearestNeighborReweight", false]], "nearestneighborreweightadapter (class in skada)": [[53, "skada.NearestNeighborReweightAdapter", false]], "otmapping() (in module skada)": [[54, "skada.OTMapping", false]], "otmappingadapter() (in module skada)": [[55, "skada.OTMappingAdapter", false]], "per_domain_split() (in module skada)": [[91, "skada.per_domain_split", false]], "perdomain (class in skada)": [[56, "skada.PerDomain", false]], "predictionentropyscorer (class in skada.metrics)": [[84, "skada.metrics.PredictionEntropyScorer", false]], "set_decision_function_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_decision_function_request", false]], "set_decision_function_request() (skada.shared method)": [[57, "skada.Shared.set_decision_function_request", false]], "set_fit_request() (skada.densityreweightadapter method)": [[34, "skada.DensityReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.discriminatorreweightadapter method)": [[36, "skada.DiscriminatorReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.gaussianreweightadapter method)": [[40, "skada.GaussianReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kliepreweightadapter method)": [[43, "skada.KLIEPReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kmmreweightadapter method)": [[45, "skada.KMMReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.mmdtarsreweightadapter method)": [[51, "skada.MMDTarSReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.nearestneighborreweightadapter method)": [[53, "skada.NearestNeighborReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_fit_request", false]], "set_fit_request() (skada.shared method)": [[57, "skada.Shared.set_fit_request", false]], "set_partial_fit_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_partial_fit_request", false]], "set_partial_fit_request() (skada.shared method)": [[57, "skada.Shared.set_partial_fit_request", false]], "set_predict_log_proba_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.shared method)": [[57, "skada.Shared.set_predict_log_proba_request", false]], "set_predict_proba_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_predict_proba_request", false]], "set_predict_proba_request() (skada.shared method)": [[57, "skada.Shared.set_predict_proba_request", false]], "set_predict_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_predict_request", false]], "set_predict_request() (skada.shared method)": [[57, "skada.Shared.set_predict_request", false]], "set_score_request() (skada.metrics.circularvalidation method)": [[80, "skada.metrics.CircularValidation.set_score_request", false]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[81, "skada.metrics.DeepEmbeddedValidation.set_score_request", false]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[82, "skada.metrics.ImportanceWeightedScorer.set_score_request", false]], "set_score_request() (skada.metrics.mixvalscorer method)": [[83, "skada.metrics.MixValScorer.set_score_request", false]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[84, "skada.metrics.PredictionEntropyScorer.set_score_request", false]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[85, "skada.metrics.SoftNeighborhoodDensity.set_score_request", false]], "set_score_request() (skada.metrics.supervisedscorer method)": [[86, "skada.metrics.SupervisedScorer.set_score_request", false]], "set_score_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_score_request", false]], "set_score_request() (skada.shared method)": [[57, "skada.Shared.set_score_request", false]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[87, "skada.model_selection.DomainShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[88, "skada.model_selection.LeaveOneDomainOut.set_split_request", false]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[89, "skada.model_selection.SourceTargetShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[90, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request", false]], "set_transform_request() (skada.densityreweightadapter method)": [[34, "skada.DensityReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.discriminatorreweightadapter method)": [[36, "skada.DiscriminatorReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.gaussianreweightadapter method)": [[40, "skada.GaussianReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kliepreweightadapter method)": [[43, "skada.KLIEPReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kmmreweightadapter method)": [[45, "skada.KMMReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.mmdtarsreweightadapter method)": [[51, "skada.MMDTarSReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.nearestneighborreweightadapter method)": [[53, "skada.NearestNeighborReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_transform_request", false]], "set_transform_request() (skada.shared method)": [[57, "skada.Shared.set_transform_request", false]], "shared (class in skada)": [[57, "skada.Shared", false]], "skada": [[0, "module-skada", false]], "skada.datasets": [[0, "module-skada.datasets", false]], "skada.deep": [[0, "module-skada.deep", false]], "skada.metrics": [[0, "module-skada.metrics", false]], "skada.model_selection": [[0, "module-skada.model_selection", false]], "skada.utils": [[0, "module-skada.utils", false]], "softneighborhooddensity (class in skada.metrics)": [[85, "skada.metrics.SoftNeighborhoodDensity", false]], "source_target_merge() (in module skada.utils)": [[96, "skada.utils.source_target_merge", false]], "source_target_split() (in module skada)": [[92, "skada.source_target_split", false]], "sourcetargetshufflesplit (class in skada.model_selection)": [[89, "skada.model_selection.SourceTargetShuffleSplit", false]], "split() (skada.model_selection.leaveonedomainout method)": [[88, "skada.model_selection.LeaveOneDomainOut.split", false]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[90, "skada.model_selection.StratifiedDomainShuffleSplit.split", false]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[90, "skada.model_selection.StratifiedDomainShuffleSplit", false]], "subspacealignment() (in module skada)": [[58, "skada.SubspaceAlignment", false]], "subspacealignmentadapter() (in module skada)": [[59, "skada.SubspaceAlignmentAdapter", false]], "supervisedscorer (class in skada.metrics)": [[86, "skada.metrics.SupervisedScorer", false]], "transfercomponentanalysis() (in module skada)": [[60, "skada.TransferComponentAnalysis", false]], "transfercomponentanalysisadapter() (in module skada)": [[61, "skada.TransferComponentAnalysisAdapter", false]], "transferjointmatching() (in module skada)": [[62, "skada.TransferJointMatching", false]], "transferjointmatchingadapter() (in module skada)": [[63, "skada.TransferJointMatchingAdapter", false]], "transfersubspacelearning() (in module skada)": [[64, "skada.TransferSubspaceLearning", false]]}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[28, 1, 1, "", "CORAL"], [29, 1, 1, "", "CORALAdapter"], [30, 1, 1, "", "ClassRegularizerOTMapping"], [31, 1, 1, "", "ClassRegularizerOTMappingAdapter"], [32, 1, 1, "", "DASVMClassifier"], [33, 1, 1, "", "DensityReweight"], [34, 2, 1, "", "DensityReweightAdapter"], [35, 1, 1, "", "DiscriminatorReweight"], [36, 2, 1, "", "DiscriminatorReweightAdapter"], [37, 1, 1, "", "EntropicOTMapping"], [38, 1, 1, "", "EntropicOTMappingAdapter"], [39, 1, 1, "", "GaussianReweight"], [40, 2, 1, "", "GaussianReweightAdapter"], [41, 1, 1, "", "JDOTRegressor"], [42, 1, 1, "", "KLIEPReweight"], [43, 2, 1, "", "KLIEPReweightAdapter"], [44, 1, 1, "", "KMMReweight"], [45, 2, 1, "", "KMMReweightAdapter"], [46, 1, 1, "", "LinearOTMapping"], [47, 1, 1, "", "LinearOTMappingAdapter"], [48, 1, 1, "", "MMDLSConSMapping"], [49, 1, 1, "", "MMDLSConSMappingAdapter"], [50, 1, 1, "", "MMDTarSReweight"], [51, 2, 1, "", "MMDTarSReweightAdapter"], [52, 1, 1, "", "NearestNeighborReweight"], [53, 2, 1, "", "NearestNeighborReweightAdapter"], [54, 1, 1, "", "OTMapping"], [55, 1, 1, "", "OTMappingAdapter"], [56, 2, 1, "", "PerDomain"], [57, 2, 1, "", "Shared"], [58, 1, 1, "", "SubspaceAlignment"], [59, 1, 1, "", "SubspaceAlignmentAdapter"], [60, 1, 1, "", "TransferComponentAnalysis"], [61, 1, 1, "", "TransferComponentAnalysisAdapter"], [62, 1, 1, "", "TransferJointMatching"], [63, 1, 1, "", "TransferJointMatchingAdapter"], [64, 1, 1, "", "TransferSubspaceLearning"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [79, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"], [91, 1, 1, "", "per_domain_split"], [92, 1, 1, "", "source_target_split"], [0, 0, 0, "-", "utils"]], "skada.DensityReweightAdapter": [[34, 3, 1, "", "fit"], [34, 3, 1, "", "set_fit_request"], [34, 3, 1, "", "set_transform_request"]], "skada.DiscriminatorReweightAdapter": [[36, 3, 1, "", "fit"], [36, 3, 1, "", "set_fit_request"], [36, 3, 1, "", "set_transform_request"]], "skada.GaussianReweightAdapter": [[40, 3, 1, "", "fit"], [40, 3, 1, "", "set_fit_request"], [40, 3, 1, "", "set_transform_request"]], "skada.KLIEPReweightAdapter": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "set_fit_request"], [43, 3, 1, "", "set_transform_request"]], "skada.KMMReweightAdapter": [[45, 3, 1, "", "fit"], [45, 3, 1, "", "set_fit_request"], [45, 3, 1, "", "set_transform_request"]], "skada.MMDTarSReweightAdapter": [[51, 3, 1, "", "fit"], [51, 3, 1, "", "set_fit_request"], [51, 3, 1, "", "set_transform_request"]], "skada.NearestNeighborReweightAdapter": [[53, 3, 1, "", "fit"], [53, 3, 1, "", "set_fit_request"], [53, 3, 1, "", "set_transform_request"]], "skada.PerDomain": [[56, 3, 1, "", "get_estimator"], [56, 3, 1, "", "set_decision_function_request"], [56, 3, 1, "", "set_fit_request"], [56, 3, 1, "", "set_partial_fit_request"], [56, 3, 1, "", "set_predict_log_proba_request"], [56, 3, 1, "", "set_predict_proba_request"], [56, 3, 1, "", "set_predict_request"], [56, 3, 1, "", "set_score_request"], [56, 3, 1, "", "set_transform_request"]], "skada.Shared": [[57, 3, 1, "", "get_estimator"], [57, 3, 1, "", "set_decision_function_request"], [57, 3, 1, "", "set_fit_request"], [57, 3, 1, "", "set_partial_fit_request"], [57, 3, 1, "", "set_predict_log_proba_request"], [57, 3, 1, "", "set_predict_proba_request"], [57, 3, 1, "", "set_predict_request"], [57, 3, 1, "", "set_score_request"], [57, 3, 1, "", "set_transform_request"]], "skada.datasets": [[65, 1, 1, "", "make_dataset_from_moons_distribution"], [66, 1, 1, "", "make_shifted_blobs"], [67, 1, 1, "", "make_shifted_datasets"], [68, 1, 1, "", "make_variable_frequency_dataset"]], "skada.deep": [[69, 1, 1, "", "CAN"], [70, 2, 1, "", "CANLoss"], [71, 1, 1, "", "CDAN"], [72, 2, 1, "", "CDANLoss"], [73, 2, 1, "", "DANLoss"], [74, 1, 1, "", "DANN"], [75, 1, 1, "", "DeepCoral"], [76, 2, 1, "", "DeepCoralLoss"], [77, 1, 1, "", "DeepJDOT"], [78, 2, 1, "", "DeepJDOTLoss"]], "skada.deep.CANLoss": [[70, 3, 1, "", "forward"]], "skada.deep.CDANLoss": [[72, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[73, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[76, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[78, 3, 1, "", "forward"]], "skada.metrics": [[80, 2, 1, "", "CircularValidation"], [81, 2, 1, "", "DeepEmbeddedValidation"], [82, 2, 1, "", "ImportanceWeightedScorer"], [83, 2, 1, "", "MixValScorer"], [84, 2, 1, "", "PredictionEntropyScorer"], [85, 2, 1, "", "SoftNeighborhoodDensity"], [86, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[80, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[81, 3, 1, "", "cross_entropy_loss"], [81, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[82, 3, 1, "", "set_score_request"]], "skada.metrics.MixValScorer": [[83, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[84, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[85, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[86, 3, 1, "", "set_score_request"]], "skada.model_selection": [[87, 2, 1, "", "DomainShuffleSplit"], [88, 2, 1, "", "LeaveOneDomainOut"], [89, 2, 1, "", "SourceTargetShuffleSplit"], [90, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[87, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[88, 3, 1, "", "get_n_splits"], [88, 3, 1, "", "set_split_request"], [88, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[89, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[90, 3, 1, "", "set_split_request"], [90, 3, 1, "", "split"]], "skada.utils": [[93, 1, 1, "", "check_X_y_domain"], [94, 1, 1, "", "extract_domains_indices"], [95, 1, 1, "", "extract_source_indices"], [96, 1, 1, "", "source_target_merge"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [3, 4, 7, 12, 17, 18, 21, 22, 24, 25, 26, 49, 52, 53, 55, 64, 67, 69, 71, 74, 75, 77, 82, 83, 86, 91, 92, 96, 97, 98, 99], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 50, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 83, 85, 87, 90, 94, 96, 97, 98, 99, 100], "00": [5, 7, 16, 19, 23, 27, 100], "0000ff": 21, "001": [17, 21, 25], "0015": 9, "00e": 21, "01": [6, 7, 8, 10, 12, 13, 19, 20, 21, 23, 24, 25, 26, 62, 63, 64, 100], "02": [5, 10, 18, 19, 20, 25, 100], "02291": 97, "03": [7, 10, 26, 100], "0360": 7, "04": 24, "0412": 6, "0460": 7, "05": [3, 7, 19, 21, 26, 41, 48, 49, 85, 100], "0501": 8, "0577": 6, "06": [10, 13, 14, 21, 42, 43, 44, 45, 50, 51, 100], "0605": 7, "060_4_0699": 17, "0620": 8, "0634": 6, "07": 100, "070": [12, 19, 100], "07117994f0971b2fc2df95adb373c31c3d313442": 97, "0747": 7, "075493682966016": 13, "0761": 8, "08": [21, 26, 30, 31, 37, 38, 46, 47], "0834": 7, "0838": 6, "085": 5, "086": 27, "09": [27, 79, 100], "0929": 6, "0947": 7, "0950": 8, "0961": 6, "0x7fb8cb71e560": 12, "1": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 56, 57, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98], "10": [1, 2, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 20, 21, 22, 25, 27, 30, 31, 41, 48, 49, 50, 51, 65, 66, 68, 87, 88, 89, 90, 96, 97], "100": [4, 7, 12, 13, 14, 15, 17, 18, 21, 22, 41, 42, 43, 44, 45, 48, 49, 62, 63, 64, 65, 66, 67, 68], "1000": [4, 17, 21, 32, 37, 38, 42, 43, 44, 45, 50, 51], "100000": [21, 54, 55], "1007": 7, "1009": 97, "100_000": [54, 55], "10155": [47, 97], "1020": 7, "10288": 97, "1041": 8, "1044": 97, "105": [1, 97], "10e": [30, 31, 37, 38], "11": [7, 8, 22, 32, 80, 97], "1100": 4, "1183": 8, "12": [6, 7, 9, 16, 17, 18, 75, 76, 97], "121": 16, "122": 16, "125": 17, "126": [6, 10, 100], "126mb": 7, "128": [6, 7, 8, 9], "13": [19, 77, 78, 97], "130": [8, 10, 100], "131": 16, "1317": 9, "132": 16, "1321138905671275": 16, "133": 16, "1395": 7, "14": [1, 2, 3, 16, 73, 97], "141": [22, 23, 100], "1410": [18, 62, 63, 97], "1417": [18, 62, 63, 97], "141mb": 7, "1434": 6, "1443686989830857": 15, "15": [1, 2, 3, 4, 6, 10, 12, 13, 17, 18, 21, 25, 74, 81, 97, 100], "153": 97, "15th": [77, 78], "16": [17, 18, 21, 23, 71, 72, 97, 100], "163kb": 7, "16785": 97, "16793": 97, "16e": 21, "17": [22, 82, 97], "171": 97, "1711": 97, "1736": 6, "18": [22, 84, 97], "18279941870395425": 13, "18530735809550572": 13, "19": [23, 85, 97], "1905": [47, 97], "194": 10, "19573429971933365": 9, "1958": 7, "197k": 7, "199": 97, "1d": [52, 53], "1e": [6, 7, 8, 9, 21, 24, 30, 31, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 79, 81], "1nn": [17, 21], "2": [1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 16, 20, 21, 22, 25, 52, 53, 62, 63, 64, 65, 66, 67, 85, 87, 90, 92, 96, 97, 98], "20": [2, 3, 7, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 26, 81, 97, 98, 99], "200": [21, 22, 30, 31], "2000": [17, 35, 36, 39, 40, 97], "2005": 97, "2007": [17, 42, 43, 44, 45, 82, 97], "2008": [17, 97], "2009": [32, 80, 97], "2010": [18, 64, 97], "2011": [18, 60, 61], "2012": [2, 3, 17, 52, 53, 67, 97], "2013": [18, 48, 49, 50, 51, 58, 59, 97], "2014": [14, 18, 62, 63, 97], "2015": [73, 97], "2016": [7, 71, 72, 74, 75, 76, 97], "2017": [13, 28, 29, 41, 97], "2018": [77, 78, 84, 97], "2019": [47, 69, 70, 81, 97], "2021": [85, 97], "2023": [83, 97], "2024": 97, "2076": 9, "21": [12, 48, 49, 50, 51, 97, 100], "210": 97, "2102": 97, "2132": 8, "21420445266620786": 13, "215": [24, 27, 100], "218866137683906": 16, "22": 97, "227": 97, "22983129554592746": 13, "22nd": 97, "23": [22, 44, 45, 97], "2364aa": 22, "24": [17, 52, 53, 97], "240px": 98, "241": 16, "242": 16, "243": 16, "244": [16, 97], "245": 16, "246": 16, "247": 16, "248": 16, "249": 97, "25": [9, 17, 18, 68, 97], "2512": 6, "256": 9, "2582": 9, "26": [18, 62, 63, 97], "268": [1, 5, 100], "269": 1, "27": [18, 21, 64, 67, 97], "272": 4, "279": 97, "28": [7, 14, 97], "2832": 7, "288146109474553": 16, "29": [7, 10, 97, 100], "291kb": 7, "2958": 8, "2960": 97, "2962": 7, "2967": 97, "2d": [13, 14, 15, 20], "2f": [13, 14, 16, 17, 18, 20, 21, 24], "2mb": 7, "2x1": 67, "2x2": 67, "3": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 36, 40, 42, 43, 44, 45, 50, 51, 53, 56, 57, 66, 68, 69, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99], "30": [13, 21, 22, 24, 26, 52, 53, 97, 98, 99], "300": 22, "306": [14, 97], "3068": 7, "3069": 9, "30mb": 7, "31": 97, "310098338155625": 15, "314": [14, 97], "315": 23, "32": [7, 9, 83, 97], "33": [69, 70, 97], "336863129384494": [13, 14, 15], "35": [22, 97], "352173719537829": 14, "358": [26, 27, 100], "36": 97, "360k": 7, "367467726151268": 14, "3676169789533272": [13, 14, 15], "375": 17, "38": 100, "3880": 8, "39": 7, "3957": 9, "3970": 6, "3983": 8, "3994": 7, "3k": 7, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 49, 87, 90, 96, 97, 98, 99], "40": 97, "4006": 8, "400px": 98, "4096": 71, "42": [2, 3, 7, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 26], "4269298070320042": 14, "43": 15, "443": 97, "4456": 7, "447": 97, "45": [2, 3, 67], "450": 97, "453": [18, 19, 100], "457": [7, 10, 100], "45933195939893": [13, 14], "46": 7, "463": 97, "464886123797522": 15, "4783": 6, "47m": 7, "48": 25, "480kb": 7, "482": [9, 10, 100], "484": [13, 19, 100], "489": [16, 19, 100], "4893": [69, 70, 97], "4899": 9, "4902": [69, 70, 97], "4968": 7, "4970": 6, "4987": 7, "5": [1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 41, 42, 43, 48, 49, 69, 70, 87, 90, 96, 97, 98, 99], "50": [1, 13, 14, 15, 18], "500": 12, "5017": 7, "51": [1, 13], "513": [25, 27, 100], "521": [2, 3, 67], "5244703189443227": 16, "53": 10, "530": [2, 3, 67], "531": 16, "5328": 6, "535": [14, 21], "5350": 8, "53817259426296": [13, 14, 15], "540": [20, 23, 100], "54k": 7, "55": 83, "5585726101363702": 14, "57": 14, "570": [2, 5, 100], "570318895725525": [13, 14], "58": 24, "59": 97, "5923": 8, "5932": 8, "5976": 6, "5k": 7, "6": [8, 12, 13, 14, 17, 18, 22, 24, 25, 30, 31, 37, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 87, 90, 96, 97], "60": [17, 97], "603": 18, "6044": 6, "610": 100, "620": [3, 5, 100], "625": 17, "626": [4, 5, 100], "634": [21, 23, 100], "64": [9, 97], "65": 7, "65m": 7, "6767": 8, "6952": 6, "6977": 8, "699": [17, 97], "6c4c7c": [17, 18], "7": [4, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 25, 46, 47, 52, 67, 87, 90, 96, 97], "70": 22, "7124": 97, "7133": 97, "72": [6, 7, 8, 9], "721k": 7, "72222222": [98, 99], "724": [14, 19, 100], "744989537549497": [13, 14], "746": [17, 97], "756925382279493": 15, "76": 14, "767": [15, 19, 100], "77": [13, 14], "770": 97, "7799": 8, "78": 7, "787": 97, "7964": 6, "7964573229829714": [13, 14, 15], "8": [1, 2, 3, 4, 7, 8, 9, 12, 13, 16, 17, 18, 21, 22, 25, 26, 58, 59, 67, 87, 90, 96, 97], "80": [3, 17, 18], "8002": 8, "8080": 6, "81": 7, "819": 97, "81944444": [98, 99], "82": 13, "8266": 7, "827": 97, "83333333": [98, 99], "83m": 7, "84": 13, "84375": 20, "849": 97, "85": [3, 22], "858": 97, "85mb": 7, "87": 14, "8745980707395499": 6, "887459807073955": 6, "8931": 6, "8950": 8, "8972": 8, "8987836800515652": 9, "8k": 7, "9": [1, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 22, 26, 30, 31, 37, 38, 60, 61, 67, 87, 90, 96, 97], "90": [18, 97], "9003215434083601": 7, "9032": 6, "9067524115755627": 7, "909": 14, "9163987138263665": 8, "9184": 97, "9193": 97, "91m": 7, "9216": 9, "9248": 7, "926kb": 7, "929": [18, 64], "930": 19, "942": [18, 64], "943": [17, 19, 100], "95625": [98, 99], "96": 18, "9610814126500358": [13, 14], "97": [13, 97], "9710610932475884": 8, "973": [18, 21], "975": [98, 99], "98": [7, 12, 17, 24], "9875": 15, "99": [13, 14, 17], "9938": 9, "996": 21, "9985": 7, "9990": 6, "999c81": 22, "9k": 7, "9mb": 7, "A": [2, 3, 13, 14, 16, 17, 21, 22, 30, 31, 32, 37, 38, 41, 44, 45, 46, 47, 54, 55, 58, 60, 62, 64, 67, 69, 70, 71, 74, 75, 77, 80, 81, 82, 83, 86, 94, 97, 98], "As": [12, 18, 25], "At": [12, 67], "But": 20, "By": [65, 66, 67, 68, 79], "For": [17, 20, 25, 41, 52, 53, 79, 97, 98], "If": [20, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 52, 53, 54, 55, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 89, 93, 94, 96, 97, 98], "In": [7, 14, 17, 18, 20, 22, 28, 29, 35, 36, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 96, 97, 98, 99], "It": [20, 32, 62, 63, 65, 66, 67, 68, 80, 98], "Its": [17, 42, 43, 98], "No": [1, 24], "On": 14, "One": [1, 20, 68, 88, 97], "Such": [17, 98], "The": [1, 2, 3, 4, 12, 16, 17, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99], "Then": [16, 20, 24, 26, 80], "These": 17, "To": [6, 7, 8, 9, 18, 21, 24, 98, 99], "Will": [17, 18, 67], "With": 98, "_": [2, 3, 12, 24, 25, 26, 29, 69, 70, 71, 74, 84, 85, 96, 98], "__init__": [14, 21], "__name__": 25, "_barycent": 14, "_call_impl": 6, "_mnist_usp": [6, 7, 8, 9], "_self_label": 12, "_sign": 83, "_sinkhorn": 16, "_ssl": 7, "_subspac": 18, "ab": [18, 22], "abl": 13, "about": 12, "absenc": 98, "absolut": [12, 87, 98], "ac": 17, "acc": [13, 14, 16], "acc_": [13, 14], "acc_classreg": 16, "acc_linear": 16, "acc_s_jcpot": 14, "acc_sinkhorn": 16, "acc_sourc": 16, "acc_t": [13, 14], "acc_target": 16, "accept": [52, 53, 79, 98], "access": [56, 57, 98], "accord": 71, "account": [17, 98], "accur": [18, 81, 97], "accuraci": [13, 14, 15, 16, 17, 18, 20, 21, 24], "achiev": 98, "across": [18, 42, 43, 58, 59, 65, 66, 67, 68, 81], "act": 98, "activ": 97, "ad": [12, 18, 32, 34, 36, 40, 43, 45, 46, 47, 51, 52, 53, 56, 57, 65, 66, 67, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "adam": 9, "adapt": [0, 10, 13, 14, 19, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 93, 100], "add_ax": 3, "add_domain": 98, "addit": [52, 53, 93, 98], "advanc": [13, 28, 29, 97], "advantag": 79, "adversari": [10, 11, 71, 72, 74, 97, 100], "affect": [52, 53], "after": 98, "again": 20, "aim": 18, "aism": 17, "ajakan": 97, "al": [17, 18, 42, 43, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 81, 82, 83, 84, 85], "alain": 97, "alaiz": [2, 3, 67], "alexandr": 97, "algorithm": [12, 14, 21, 30, 31, 32, 37, 38, 52, 53, 54, 55, 62, 63, 64, 98], "alia": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "align": [7, 11, 13, 19, 21, 28, 29, 46, 47, 58, 59, 67, 75, 76, 79, 84, 92, 97, 100], "all": [4, 11, 15, 18, 20, 25, 32, 52, 53, 58, 59, 65, 66, 67, 68, 91, 92, 97, 98, 100], "allow": [20, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "allow_auto_sample_domain": 93, "allow_label_mask": 93, "allow_multi_sourc": 93, "allow_multi_target": 93, "allow_nd": 93, "allow_sourc": [15, 16, 18, 34, 36, 40, 43, 45, 51, 53, 56, 57, 93], "allow_target": 93, "along": 41, "alpha": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 41, 83], "alpha_": [43, 51], "alreadi": [79, 98], "also": [9, 13, 14, 15, 16, 20, 24, 25, 71, 74, 87, 97, 98], "alternat": 41, "although": [71, 74], "alwai": [65, 66, 67, 68, 88, 98], "amazon": 98, "amazonaw": 7, "ambrois": 97, "among": [65, 66, 67, 68], "amsterdam": 97, "an": [6, 16, 17, 18, 20, 34, 36, 40, 42, 43, 45, 51, 52, 53, 56, 57, 58, 59, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99], "anal": 97, "analogi": 98, "analysi": [16, 30, 31, 32, 37, 38, 46, 54, 55, 60, 61, 80, 97], "angl": 22, "angle_step": 22, "ani": [12, 17, 20, 32, 41, 97, 98], "annal": [17, 97], "antoin": [17, 18, 97], "antoinecolla": 18, "api": [20, 97, 98, 99], "apollin": 97, "append": 22, "appli": 84, "applic": [17, 42, 43, 97], "approach": [17, 41, 51], "appropri": [52, 53], "approxim": [17, 36, 39, 40], "ar": [2, 3, 12, 14, 16, 17, 18, 20, 24, 25, 28, 29, 34, 36, 40, 43, 44, 45, 49, 51, 52, 53, 56, 57, 58, 59, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99], "arang": 25, "arbitrari": [52, 53], "arg": 6, "argmin": 22, "argument": [6, 52, 53, 98], "around": 98, "arrai": [12, 17, 20, 22, 25, 29, 34, 36, 40, 42, 43, 45, 49, 50, 51, 52, 53, 61, 65, 66, 67, 68, 69, 70, 73, 81, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99], "array_lik": [65, 66, 67, 68], "artifici": 97, "arxiv": [47, 97], "as_integer_ratio": 41, "as_sourc": [6, 7, 8, 9, 18, 21, 24, 25, 26, 98], "as_target": [6, 7, 8, 9, 18, 21, 24, 25, 26, 98], "assign": 98, "associ": [65, 66, 67, 68], "assum": [17, 18, 41, 52, 53], "assume_cent": [21, 28, 29, 75, 76], "assumpt": [17, 51], "attempt": [52, 53], "attribut": [29, 31, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 55, 59, 61, 63, 65, 66, 67, 68, 79, 82, 83], "author": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 97], "auto": [20, 21, 28, 29, 39, 40, 52, 53], "auto_exampl": [5, 10, 19, 23, 27], "auto_examples_jupyt": 11, "auto_examples_python": 11, "automat": [20, 24, 28, 29, 39, 40, 79, 87, 93, 98], "autumn": [3, 12], "avail": [16, 20, 44, 45, 79, 97, 98, 99], "averag": [15, 83], "avoid": [37, 38, 54, 55, 81, 93, 98, 99], "awai": [52, 53], "awar": 98, "ax": [4, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "axi": [12, 13, 14, 15, 16, 20, 22], "axvlin": 24, "b": [7, 17, 18, 44, 45, 49, 64, 90, 97, 98], "b_": 49, "backward": 9, "bai": 97, "balanced_accuracy_scor": 80, "ball_tre": [52, 53], "balltre": [52, 53], "band": [12, 68], "band_siz": [4, 68], "bandwidth": [17, 21], "baochen": [7, 28, 29, 75, 76, 97], "barh": 24, "barycent": 97, "base": [9, 12, 13, 16, 17, 18, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 64, 69, 71, 74, 75, 77, 78, 80, 81, 82, 84, 85, 96, 97, 98], "base_classifi": [17, 18], "base_criterion": [69, 71, 74, 75, 77], "base_estim": [12, 13, 17, 20, 21, 24, 26, 28, 30, 32, 33, 35, 37, 39, 41, 42, 44, 46, 48, 50, 52, 54, 56, 57, 58, 60, 62, 64, 79, 98, 99], "base_method": [21, 64], "base_module_": 9, "baseadapt": 98, "baseestim": [32, 56, 57, 79], "baseselector": 79, "basura": [18, 58, 59], "batch_siz": [6, 7, 8, 9], "bbox_inch": 22, "bceloss": [71, 72, 74], "becaus": [14, 98, 99], "been": [6, 12, 97], "befor": [14, 21, 28, 29, 30, 31, 37, 38, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 64, 75, 76, 79], "behav": 25, "behavior": [11, 27, 41, 67, 87, 88, 89, 90, 100], "being": [96, 98], "belong": 94, "below": [16, 20, 65, 66, 67, 68, 97, 98, 99], "benchmark": 0, "benjamin": [77, 78], "best": [20, 26, 42, 43, 98, 99], "best_estimator_": 26, "best_gamma_": 43, "best_params_": [20, 26], "best_reg_": 26, "beta": 51, "better": [13, 83], "between": [13, 14, 16, 24, 28, 29, 39, 40, 41, 43, 45, 47, 49, 51, 52, 53, 60, 61, 62, 63, 64, 72, 73, 76, 78, 80, 81, 85, 87, 98, 99], "bezier_curv": 22, "bf": 22, "bharath": [77, 78], "bhushan": [77, 78], "bia": [2, 3, 9, 17, 21, 44, 45, 46, 47, 49, 67, 97], "bibtex": 97, "binari": [21, 24, 25, 26, 67, 98, 99], "bit": 98, "black": [12, 22], "blob": 66, "block": 98, "blue": 25, "bool": [28, 29, 32, 34, 36, 40, 41, 43, 44, 45, 46, 47, 51, 52, 53, 56, 57, 63, 64, 66, 67, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "boolean": [65, 66, 67, 68, 95], "borgwardt": [17, 44, 45, 97], "both": [17, 18, 51, 83, 87, 97, 98], "bottom": [1, 2, 3, 4], "bound": [44, 45, 47, 97], "boundari": [12, 13, 14, 15, 21, 52, 53], "break_ti": 21, "bregman": [14, 16, 18, 64, 97], "brute": [52, 53], "bruzzon": [32, 80, 97], "bsd": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 97], "bueno": [3, 12, 17, 18, 97], "build": 98, "built": 98, "bunch": [65, 66, 67, 68, 98], "butscher": [14, 97], "bz2": 7, "b\u00e9zier": 22, "b\u00fcnau": [17, 97], "c": [1, 2, 3, 7, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 97], "c0": 13, "c1": 13, "c7": 16, "c84630": 22, "c_": [13, 14], "cach": 79, "cache_s": 21, "calcul": 67, "call": [1, 2, 3, 4, 6, 16, 20, 21, 42, 43, 58, 59, 65, 66, 67, 68, 81, 88, 98], "callabl": [52, 53, 79, 80, 81, 82, 83, 86], "came": 12, "can": [12, 13, 14, 16, 20, 25, 26, 32, 37, 38, 41, 52, 53, 54, 55, 70, 88, 97, 98, 99], "cannot": 79, "cao": 97, "captur": 72, "carri": 21, "case": [12, 13, 14, 17, 18, 20, 52, 53, 80, 81, 82, 84, 85, 86, 98], "cast": 97, "categor": [65, 66, 67, 68], "cavazza": 97, "cax": 3, "cb": 3, "cbar_ax": 3, "cdan": [72, 97], "cdd": 70, "ceil_mod": 9, "center": [25, 28, 29, 42, 43, 65, 66, 67, 75, 76], "center_cov_shift": 67, "centers_": 43, "centroid": [69, 70], "certif": 7, "certificate_verify_fail": 7, "chain": 79, "chan": 4, "chanc": [98, 99], "chang": [6, 13, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "channel": 68, "chawla": [2, 3, 67], "check_result": [14, 21], "choic": [6, 20, 98], "choos": [20, 42, 43, 67], "chosen": [43, 70], "circl": 12, "circleci": [1, 6, 7, 8, 9, 14, 16, 18, 21], "circular": [32, 80, 97], "citat": 97, "cite": 97, "citeseerx": 97, "cjlin": 7, "clariti": 98, "class": [4, 9, 14, 16, 20, 21, 25, 30, 31, 32, 34, 36, 40, 43, 45, 51, 53, 56, 57, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "class_threshold": [69, 70], "class_weight": 21, "classic": 18, "classif": [2, 3, 6, 7, 8, 9, 11, 16, 23, 24, 26, 28, 30, 32, 33, 35, 37, 39, 42, 46, 48, 50, 52, 53, 54, 58, 60, 64, 67, 80, 97, 100], "classifi": [11, 16, 17, 18, 19, 21, 32, 35, 36, 41, 65, 67, 71, 72, 74, 81, 92, 97, 100], "classificationtechniqu": 97, "classregularizedotmap": 30, "classregularizerotmap": 21, "classregularizerotmappingadapt": [16, 21, 98], "claus": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 97], "clf": [13, 14, 15, 16, 17, 18, 20, 21], "clf_jcpot": 14, "clf_on_subspac": 18, "clf_otda": 16, "clf_otda_linear": 16, "clf_otda_sinkhorn": 16, "clf_otds_classreg": 16, "clone": [6, 7, 8, 9, 12, 18, 21, 79, 98], "close": 12, "closer": [17, 52, 53], "closest": [22, 98], "closest_point": 22, "cluster": [65, 66, 67, 68, 70, 83], "cluster_std": 66, "cm": [17, 18, 21, 25], "cm_bright": 21, "cmap": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "cmap_cv": 25, "cmap_data": 25, "cmap_domain": 25, "co": 22, "code": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 97, 98], "coef0": [21, 44, 45], "colla": [18, 97], "collabor": 97, "collect": [69, 71, 74, 75, 77], "color": [12, 17, 18, 21, 22, 24, 25], "color_": 22, "color_0": 22, "color_1": 22, "color_unlabel": 22, "colorbar": 3, "colormap": [1, 17, 18], "com": [7, 17, 18, 97], "comb": 22, "combin": 98, "come": [25, 87], "common": 98, "compar": [13, 24, 98], "comparison": [11, 23, 28, 30, 33, 35, 37, 39, 42, 46, 48, 50, 52, 54, 58, 60, 64, 67, 100], "compat": [20, 88, 97, 98], "complement": 87, "complet": 79, "complic": 98, "compon": [58, 59, 60, 61, 62, 63, 64, 97], "compos": [25, 87], "comput": [13, 14, 16, 17, 18, 22, 24, 28, 29, 42, 43, 51, 52, 53, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 86, 97, 98], "compute_weight": 17, "con": 97, "concaten": [12, 98], "concentr": [47, 97], "concept": [2, 3, 20, 67, 98], "concept_drift": [2, 3, 13, 14, 15, 16, 20, 21, 24, 25, 26, 67], "condit": [48, 49, 50, 51, 71, 72, 97], "confer": [14, 18, 58, 59, 62, 63, 69, 70, 77, 78, 85, 97], "consid": [52, 53, 69, 70, 96, 98], "consider": 98, "consist": [1, 2, 3, 4, 12, 83], "constant": [18, 62, 63, 67, 81], "construct": [6, 7, 8, 9, 18, 21, 52, 53, 79], "constructor": 79, "consum": 79, "contact": 18, "contain": [28, 30, 33, 35, 37, 39, 42, 44, 46, 48, 50, 52, 53, 54, 58, 60, 62, 64, 91, 92, 96, 98], "context": [52, 53], "contour": 17, "contrast": [69, 70, 97], "control": [22, 83, 87], "conv1": 9, "conv2": 9, "conv2d": 9, "convei": 21, "conveni": 98, "convent": [65, 66, 67, 68, 98], "converg": [14, 16, 21, 30, 31, 37, 38, 41, 54, 55], "convolut": 97, "coolwarm": 25, "copi": [6, 7, 8, 9, 18, 21, 79], "coral": [7, 20, 21, 48, 75, 76, 97], "coraladapt": [20, 21, 97, 98], "coraladapter__reg": [20, 97], "core": 98, "correct": [17, 44, 45, 97], "correl": [7, 28, 29, 75, 76, 84, 97], "correspond": [14, 41, 68, 94], "could": [16, 98], "count": 17, "coupl": [91, 92], "coupling_": 16, "courti": [13, 16, 30, 31, 37, 38, 41, 46, 54, 55, 77, 78, 97], "cov_source_": 40, "cov_source_inv_sqrt_": 29, "cov_target_": 40, "cov_target_sqrt_": 29, "covari": [2, 3, 11, 12, 19, 28, 29, 33, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 52, 64, 67, 76, 82, 92, 95, 97, 100], "covariate_shift": [2, 3, 21, 67, 98, 99], "cover": 98, "cpu": 9, "creat": [9, 12, 17, 18, 20, 22, 24, 25, 26, 71, 74, 83, 97, 98], "creation": [42, 43, 58, 59, 65, 66, 67, 68], "criterion": [6, 7, 8, 42, 43, 44, 45, 48, 49, 50, 51, 69, 71, 72, 74, 75, 77, 78], "cross": [11, 24, 26, 27, 42, 43, 67, 81, 82, 87, 88, 89, 90, 97, 98, 100], "cross_entropy_loss": 81, "cross_val_scor": [11, 20, 27, 37, 67, 79, 86, 92, 97, 98, 99, 100], "cross_valid": 98, "crosscovari": 72, "crossentropyloss": [6, 7, 8, 9, 69, 71, 74, 75, 77], "csie": 7, "cuda": 9, "current": [12, 97], "curv": 22, "custom": 79, "cv": [20, 21, 24, 25, 26, 42, 43, 88, 97, 98, 99], "cv_arg": 25, "cv_results_": 26, "cvf": [69, 70, 97], "cvpr": [18, 62, 63, 97], "d": [16, 18, 21, 22, 30, 31, 37, 38, 46, 54, 55, 64, 97], "da": [8, 10, 12, 14, 17, 18, 23, 24, 25, 26, 28, 30, 33, 35, 37, 39, 42, 46, 48, 50, 52, 54, 58, 60, 64, 67, 69, 71, 74, 75, 76, 77, 93, 99, 100], "da_dataset": 98, "da_shufflesplit": 90, "daestim": 0, "damodaran": [77, 78, 97], "dan": [73, 97], "dann": 97, "dapeng": 83, "darrel": 97, "dasvm": [11, 19, 32, 65, 80, 92, 97, 100], "data": [1, 2, 3, 4, 12, 17, 18, 20, 21, 24, 25, 28, 29, 31, 34, 36, 38, 40, 43, 44, 45, 47, 49, 51, 53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 81, 82, 87, 88, 89, 91, 92, 96, 97, 98, 99], "dataload": 9, "datapoint": 12, "datas": 25, "dataset": [5, 19, 21, 24, 25, 26, 28, 30, 33, 35, 37, 39, 42, 43, 44, 45, 46, 48, 52, 54, 58, 59, 60, 62, 64, 84, 85, 86, 87, 88, 92, 95, 99, 100], "dataset2": 25, "de": [17, 97], "deal": [18, 98], "decid": [52, 53], "decis": [12, 13, 14, 15, 21, 52, 53], "decision_boundari": 12, "decision_funct": [12, 32, 56, 57], "decision_function_shap": 21, "decisionboundarydisplai": [16, 17, 18, 21, 26], "decomposit": 20, "deep": [6, 7, 8, 10, 81, 84, 98, 100], "deepcor": [9, 76, 97], "deepcoralloss": 9, "deepjdot": [78, 97], "def": [2, 3, 15, 17, 18, 22, 25], "default": [13, 17, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 98], "default_selector": [20, 79], "defin": [17, 22, 25, 42, 43, 52, 53, 98, 99], "degre": [21, 44, 45], "delta_f": [4, 68], "demonstr": 98, "densiti": [21, 33, 34, 43, 45, 51, 52, 82, 85, 97], "densityratio": 97, "densityreweight": [17, 21, 50, 52, 98, 99], "densityreweightadapt": [21, 98], "depend": [25, 52, 53, 87, 96, 97], "deprec": 6, "deriv": [17, 98], "describ": [18, 70], "descript": [2, 3, 65, 66, 67, 68, 98], "design": [20, 89, 98], "detach": [6, 7, 8, 9, 18, 21], "detail": [2, 3, 17, 18, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 67, 80, 81, 82, 83, 84, 85, 97, 98], "determin": [42, 43, 58, 59, 65, 66, 67, 68, 81], "dev": 97, "develop": 97, "devi": [77, 78, 97], "deviat": [65, 66, 67, 68], "devic": 9, "diagon": [46, 47], "dict": [17, 18, 52, 53, 65, 66, 67, 68, 91, 94], "dict_kei": 98, "dictionari": [20, 65, 66, 67, 68, 94, 98], "did": [14, 16, 21], "differ": [12, 14, 20, 21, 25, 51, 63, 64, 68, 88, 98, 99], "dilat": 9, "dim": 6, "dimens": 6, "dimension": [18, 93], "ding": [18, 62, 63, 97], "direct": [17, 42, 43, 97], "directli": [26, 79], "directori": 79, "discard": [32, 69, 70], "discr": 21, "discrep": [18, 45, 49, 51, 70, 78], "discrimin": [35, 97], "discriminatorreweight": [17, 21], "discriminatorreweightadapt": [21, 98], "discuss": 97, "disi": 97, "distanc": [52, 53, 55, 61, 69, 70, 73, 76, 77, 78], "distance_metr": [52, 53], "distance_threshold": [69, 70], "distinct": 98, "distribut": [1, 2, 3, 4, 12, 13, 16, 17, 18, 21, 25, 41, 47, 51, 67, 77, 78, 97, 98, 99], "diverg": [10, 11, 17, 18, 43, 45, 51, 64, 72, 75, 78, 97, 100], "divid": 66, "do": [12, 24, 26, 98, 99], "docstr": 90, "document": [25, 52, 53, 82, 83, 86, 97], "doe": [14, 20, 21, 79, 98, 99], "doesn": [52, 53], "doi": 97, "domain": [0, 5, 10, 13, 14, 19, 20, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100], "domain_classifi": [21, 35, 36, 71, 74, 81], "domain_classifier_": 36, "domain_criterion": [71, 72, 74], "domain_label": 56, "domain_nam": [65, 66, 67, 68, 98], "domain_pred_": [70, 72, 73, 76, 78], "domain_pred_t": [70, 72, 73, 76, 78], "domain_sourc": 1, "domain_target": 1, "domainawar": 98, "domainawarecriterion": 9, "domainawaredataset": [65, 66, 67, 68, 98], "domainawareestim": 98, "domainawaremodul": 9, "domainawarenet": 9, "domainbalanceddataload": 9, "domains_idx": 94, "domainshufflesplit": 25, "don": 98, "done": [14, 16, 20, 22, 24, 97, 98, 99], "dot": 22, "dots_class": 22, "dots_keep": 22, "dots_rot": 22, "download": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "dpi": 22, "draw_": 22, "drawn": 25, "drift": [2, 3, 20, 67], "dropout": 9, "dropout1": 9, "dropout2": 9, "ds_cnt": 21, "dslr": 98, "dtype": [18, 21], "due": [13, 14, 15], "dur": [6, 7, 8, 9], "dure": [20, 26, 52, 53, 69, 71, 74, 75, 77, 98], "e": [12, 18, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 71, 72, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "each": [1, 2, 3, 4, 20, 25, 32, 34, 36, 40, 41, 43, 45, 51, 52, 53, 56, 57, 63, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98], "earth": 55, "easier": 98, "eccv": [7, 75, 76, 77, 78, 97], "editsec": 17, "edu": [3, 7, 17, 18, 97], "eduardo": 97, "effect": [17, 18, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "effici": [52, 53], "eigenvalu": 18, "eigenvector": [18, 61], "eigvects_": 61, "either": 66, "elaps": 79, "element": [52, 53, 65, 66, 67, 68], "els": [9, 12, 17, 18, 21, 22], "embed": [71, 97], "emd": 22, "empir": 47, "empti": 96, "enabl": 79, "enable_metadata_rout": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "encapsul": 79, "encod": 20, "end": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 67], "engin": [18, 64, 97], "ensur": [1, 2, 3, 4, 17, 21], "entiti": 98, "entitl": [52, 53], "entrop": [21, 30, 31, 37, 38], "entropi": [20, 26, 81, 84, 85, 97], "entropicotmap": [21, 24, 26, 98, 99], "entropicotmappingadapt": [16, 21, 98], "entropicotmappingadapter__reg_": 26, "enumer": [21, 22, 25, 90], "ep": [16, 17, 18, 21, 26, 44, 45], "epoch": [6, 7, 8, 9], "epsilon": [12, 81], "eq": 85, "equal": [51, 52, 53, 60, 61, 62, 63, 64, 66], "equip": [12, 32], "equival": [52, 53], "error": [7, 20, 30, 31, 34, 36, 37, 38, 40, 43, 45, 51, 53, 54, 55, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "estim": [12, 13, 14, 17, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 97, 99], "estimator_": 41, "estimator_no_da": 24, "et": [17, 18, 42, 43, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 81, 82, 83, 84, 85], "etc": [12, 97], "euclidean": [52, 53], "euclidean_dist": [52, 53], "european": [77, 78, 97], "evalu": [13, 14, 15, 24, 26, 82, 83, 86, 98, 99], "even": [41, 79, 96, 98], "everi": 66, "evolut": 12, "exact": 80, "exactli": 98, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 53, 96, 98, 100], "except": [91, 92], "exdb": 7, "execut": [5, 10, 19, 23, 27, 98, 100], "exist": [34, 36, 40, 43, 45, 51, 53, 56, 57, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "expect": [52, 53], "expir": 7, "explicit": 98, "explor": 18, "expos": 98, "extent": [13, 14], "extract": [7, 94, 95], "extract_source_indic": 17, "extractor": 74, "f": [1, 2, 3, 4, 12, 13, 14, 16, 17, 18, 20, 24, 25, 26, 67, 90, 97], "factori": 22, "fail": [7, 98], "fals": [6, 7, 8, 9, 17, 18, 21, 22, 24, 25, 28, 29, 32, 34, 36, 40, 41, 43, 44, 45, 51, 52, 53, 56, 57, 63, 64, 65, 66, 67, 68, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 98], "famili": 22, "far": [69, 70], "fc1": [6, 7, 8, 9], "fc2": 9, "featur": [1, 2, 3, 16, 17, 18, 41, 62, 63, 66, 70, 72, 73, 74, 76, 81, 88, 91, 92, 93, 97], "features_": [70, 72, 73, 76, 78], "features_t": [70, 72, 73, 76, 78], "feel": [97, 98], "fellow": 97, "feng": [28, 29, 97], "fernand": 97, "fernando": [18, 58, 59, 97], "ferrari": [47, 97], "fetch": 98, "fetch_all_office31_surf": 98, "fetch_office31_surf_al": 98, "fetcher": 98, "few": [97, 98], "ff0000": 21, "ffa056": [17, 18], "fig": [1, 2, 3, 4, 22, 25], "figsiz": [1, 2, 3, 4, 12, 16, 17, 18, 21, 22, 24, 25], "figur": [12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24], "file": [5, 10, 11, 19, 23, 27, 100], "fill": 25, "filterwarn": 26, "final": [20, 21, 64, 97], "final_angl": 22, "find": [14, 17, 26, 43, 45, 49, 51], "first": [12, 17, 21, 24, 25, 26, 89, 96, 97, 98], "fisher": 18, "fit": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 79, 82, 97, 98, 99], "fit_param": [98, 99], "fit_predict": 98, "fit_transform": 14, "fix": [28, 29, 39, 40, 41, 64, 66], "flamari": [13, 14, 15, 16, 20, 30, 31, 37, 38, 41, 46, 47, 54, 55, 77, 78, 97], "flda": [21, 64], "flip": [80, 81, 82, 84, 85, 86], "float": [28, 29, 30, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 81, 83, 84, 85, 87], "float64": [13, 14, 15, 16, 18, 21], "florent": 97, "flow": 98, "fluctuat": 98, "fly": 98, "fold": [25, 42, 43, 87, 90], "follow": [16, 17, 18, 20, 25, 65, 66, 67, 68, 71, 74, 89, 97, 98], "font": 22, "fontsiz": [1, 2, 3, 12, 17, 18, 22, 25], "forc": [52, 53], "form": [25, 79, 80, 89], "format": [25, 97], "forward": [9, 70, 72, 73, 76, 78], "found": 98, "fr": 18, "framework": [97, 98], "frank": [17, 44, 45], "fred": 97, "free": [97, 98], "frequenc": [4, 68], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 41, 51, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 83, 87, 90, 96, 97, 98, 99, 100], "from_estim": [16, 17, 18, 21, 26], "full": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 97], "function": [17, 18, 20, 25, 35, 36, 39, 40, 41, 42, 43, 44, 45, 52, 53, 58, 59, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99], "further": [12, 52, 53], "g": [2, 3, 16, 18, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 62, 63, 67, 69, 70, 71, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "g_": 49, "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 97, 100], "gamma": [17, 21, 42, 43, 44, 45, 48, 49, 50, 51, 67], "ganin": [74, 97], "gaussian": [21, 36, 39, 40, 46, 47, 48, 49, 65, 66, 67, 68, 69, 70, 73, 97], "gaussiannb": 79, "gaussianreweight": [17, 20, 21], "gaussianreweightadapt": [20, 21, 97, 98], "gca": 16, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 11, 20, 21, 23, 24, 25, 26, 42, 43, 58, 59, 65, 66, 67, 68, 71, 74, 81, 83, 88, 93, 97, 98, 100], "geng": [18, 64, 97], "germain": 97, "get": [17, 20, 22, 98], "get_domain": 21, "get_estim": [16, 17, 18, 56, 57], "get_multidomain_data": 15, "get_n_split": [88, 90], "git": 97, "github": 97, "give": 16, "given": [2, 3, 12, 34, 36, 37, 38, 40, 42, 43, 45, 51, 53, 54, 55, 56, 57, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98], "glossari": [52, 53], "gmail": [17, 18], "gnassoun": [6, 7, 8, 9, 22, 97], "gnassounou2024skada": 97, "go": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 98], "goal": [12, 17, 18], "good": [80, 81, 82, 84, 85, 86], "gradient": [9, 21, 64], "grai": [12, 14], "grain": 21, "gramfort": 97, "graph": [52, 53], "greater": [52, 53], "greater_is_bett": [80, 81, 82, 83, 84, 85, 86], "grei": 1, "gretton": [17, 44, 45, 97], "grid": [26, 97], "grid_search": [20, 26, 97], "gridsearchcv": [11, 20, 27, 37, 67, 82, 84, 97, 98, 99, 100], "ground": [30, 31, 37, 38, 54, 55], "group": 90, "guarante": 41, "guess": 24, "guiba": [14, 97], "guid": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "gz": 7, "h": [17, 97], "h_": 49, "ha": [6, 7, 12, 25, 30, 31, 34, 36, 37, 38, 40, 43, 45, 51, 53, 54, 55, 56, 57, 71, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "habrard": [13, 41, 97], "handl": [12, 20], "harder": 72, "hauptmann": [69, 70, 97], "have": [12, 18, 25, 52, 53, 65, 66, 67, 68, 91, 92, 96, 98, 99], "height": 98, "helper": [16, 98], "here": [2, 3, 12, 16, 20, 90, 97], "herrera": [2, 3, 67], "hide": 22, "hidetoshi": [17, 35, 36, 39, 40, 97], "hierarch": 89, "high": [80, 81, 82, 84, 85, 86, 98, 99], "higher": 83, "highest": 61, "hilbert": 18, "hing": [13, 21], "hisashi": 97, "ho": 97, "home": [1, 6, 7, 8, 9, 14, 16, 18, 21], "horizontalalign": [17, 18, 21], "how": [11, 13, 14, 23, 25, 28, 29, 34, 36, 40, 43, 45, 51, 53, 56, 57, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 97, 98, 100], "howev": 12, "hstack": 15, "http": [7, 17, 97], "hu": [83, 97], "huang": [17, 44, 45, 97], "hyperparamet": 97, "i": [1, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 51, 52, 53, 56, 57, 58, 59, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99], "ic": 83, "ice_typ": 83, "iclr": 84, "icml": [48, 49, 50, 51, 73, 81], "idea": [16, 17, 43, 45, 51], "ident": [88, 91, 92], "idx": 17, "idx1": 7, "idx3": 7, "ieee": [16, 17, 18, 30, 31, 32, 37, 38, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 69, 70, 80, 97], "ievgen": 97, "ignor": [1, 26, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "ii": 25, "iii": 97, "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 12, 15, 20, 21, 24, 25, 26, 97], "imag": [98, 99], "impact": [52, 53], "implement": [17, 18, 70, 89, 98], "implicit": 6, "import": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 42, 43, 45, 51, 52, 53, 79, 82, 87, 90, 97, 98, 99], "importanceweightedscor": [26, 98], "importantli": 20, "improv": [12, 17, 35, 36, 39, 40, 97], "imshow": [13, 14], "in_featur": 9, "includ": [6, 20, 24, 26, 79, 87, 97, 98], "include_all_target": 98, "increas": [14, 16, 21], "independ": [18, 67], "index": [25, 90, 94, 97, 98], "index_source_delet": 32, "index_target_ad": 32, "indic": [25, 52, 53, 65, 66, 67, 68, 87, 88, 89, 94, 95], "indices_source_delet": 12, "indices_target_ad": 12, "indx_sort": 25, "infer": [17, 35, 36, 39, 40, 96, 97], "influenc": [52, 53], "inform": [13, 41, 97], "initi": [9, 72, 98, 99], "inner": [30, 31], "inplac": 9, "input": [9, 17, 20, 43, 45, 51, 52, 53, 71, 74, 91, 92, 93, 97], "insid": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "inspect": [16, 17, 18, 21, 26, 79], "instabl": 81, "instanc": [18, 20, 41, 42, 43, 58, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 81, 83, 87, 97], "instanti": [71, 74], "instead": [34, 36, 40, 43, 45, 51, 53, 56, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "institut": [17, 97], "int": [30, 31, 32, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 81, 83, 87, 88, 90], "integ": [20, 65, 66, 67, 68, 81, 88, 98], "integr": [79, 98], "intel": 97, "intellig": [16, 30, 31, 32, 37, 38, 46, 54, 55, 80, 97], "inter": 83, "interest": 97, "interfac": [79, 98], "intern": [14, 17, 18, 52, 53, 58, 59, 85, 97], "intra": 83, "introduc": 98, "intuit": 21, "invers": [29, 52, 53], "io": 97, "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "is_avail": 9, "is_fit": 9, "ism": 17, "isotrop": 66, "issu": 97, "ist": 97, "item": [9, 17, 18, 90], "iter": [9, 13, 14, 16, 21, 25, 30, 31, 32, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 64, 87, 88, 98], "its": [13, 14, 15, 17, 43, 51, 98], "j": [2, 3, 12, 13, 14, 16, 17, 18, 44, 45, 62, 63, 67, 97], "januari": [14, 97], "jcpotlabelpropadapt": 14, "jdot": [11, 19, 21, 41, 67, 92, 97, 100], "jdotclassifi": [13, 21], "jdotregressor": 13, "jialin": [18, 60, 61], "jiang": [69, 70, 97], "jiashi": [28, 29, 97], "job": [52, 53, 98], "joblib": [52, 53, 79], "joint": [13, 41, 62, 63, 77, 78, 97], "jordan": 97, "journal": [17, 35, 36, 39, 40, 74, 82, 97], "jp": 17, "june": 97, "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "just": 21, "k": [12, 13, 17, 18, 22, 24, 32, 44, 45, 47, 97], "k_": 61, "kachaiev": [17, 18, 97], "kachayev": [17, 18], "kaichao": 81, "kanamori": 97, "kang": [69, 70, 97], "kashima": [17, 97], "kate": [7, 28, 29, 75, 76, 97], "kawanab": [17, 97], "kd_tree": [52, 53], "kdtree": [52, 53], "kei": [17, 18, 94, 98], "kellenberg": [77, 78, 97], "kept": [58, 59], "kernel": [12, 13, 14, 16, 18, 21, 30, 42, 43, 44, 45, 48, 49, 50, 51, 60, 61, 62, 63, 64, 67, 69, 70, 73], "kernel_ridg": [13, 14], "kernel_s": 9, "kerneldens": [17, 21, 33, 34, 82], "kernelridg": [13, 14], "keyword": [52, 53], "kim": 97, "kind": 14, "kl": [17, 43], "klau": 97, "kliepreweight": [21, 43, 97], "kliepreweightadapt": [21, 98], "kmean": 70, "kmmreweight": [17, 45, 97], "knn": [52, 53], "know": 12, "knowledg": [18, 64, 97], "krauledat": 97, "krr": [13, 14], "kullback": [17, 43], "kun": [48, 49, 50, 51], "kuniaki": 85, "kwarg": [6, 32, 41, 43, 56, 57, 69, 71, 74, 75, 77, 81], "kwok": 97, "l": [14, 32, 69, 70, 80, 97], "l1": [30, 31, 52, 53], "l1l2": [30, 31], "l2": [30, 31, 41, 52, 53], "l_p": [52, 53], "label": [2, 3, 4, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 30, 31, 34, 36, 40, 41, 43, 45, 48, 49, 50, 51, 53, 56, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "lalou": [25, 97], "laplac": [52, 53], "laplace_smooth": [17, 21, 52, 53], "larg": [37, 38, 54, 55, 98], "largest": 71, "larochel": 97, "last": [20, 52, 74, 79], "latter": [80, 81, 82, 84, 85, 86], "laviolett": 97, "layer": [69, 70, 71, 74, 75, 77], "layer_nam": [6, 7, 8, 9, 69, 71, 74, 75, 77], "lda": 18, "leaf": [52, 53], "leaf_siz": [21, 52, 53], "learn": [13, 14, 17, 20, 25, 41, 45, 49, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 73, 74, 79, 82, 88, 98, 99], "least": [41, 90, 96], "leav": 88, "leaveonedomainout": [25, 98], "lecun": 7, "ledoit": [28, 29, 39, 40], "left": [12, 25], "legend": [4, 12, 13, 14, 15, 24, 25], "leibler": [17, 43], "lemma": [28, 29, 39, 40], "lempitski": 97, "len": [12, 17, 18, 21, 22, 25, 92, 96], "length": [64, 66, 91, 92, 96], "length_scal": [21, 64], "length_step": 22, "less": [52, 53, 60, 61, 62, 63, 64], "let": [25, 98, 99], "level": 98, "lexsort": 25, "liang": 97, "lib": [6, 14, 16, 21], "librari": [97, 98], "libsvmtool": 7, "licens": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25], "liew": 97, "like": [20, 34, 36, 40, 42, 43, 45, 49, 50, 51, 53, 65, 66, 67, 68, 69, 70, 73, 81, 88, 91, 92, 93, 94, 95, 96, 98, 99], "likelihood": [17, 35, 36, 39, 40, 42, 43, 97], "lim": 16, "limit": 98, "line": 12, "line2d": 12, "linear": [9, 11, 12, 16, 19, 21, 46, 47, 49, 67, 79, 92, 97, 100], "linear_model": [13, 14, 15, 17, 20, 97, 98, 99], "linearmong": 97, "linearotmap": 21, "linearotmappingadapt": [16, 21, 98], "linearregress": 41, "linestyl": 24, "linewidth": 22, "linspac": [4, 12, 13, 14, 18, 22], "list": [12, 18, 25, 41, 43, 52, 53, 79, 92, 96, 98], "listedcolormap": [17, 18, 21], "ll": [25, 96], "load": [98, 99], "load_mnist_usp": [6, 7, 8, 9], "loc": [12, 21, 25], "local": [6, 14, 16, 21], "locat": [12, 49, 66], "lodo": 25, "log": [17, 35, 36, 37, 38, 39, 40, 54, 55, 97], "logist": 14, "logisticregress": [12, 13, 14, 15, 17, 20, 21, 35, 36, 42, 44, 81, 97, 98, 99], "loglog": [37, 38, 54, 55], "logo": [11, 23, 100], "logreg": 14, "loison": 97, "long": [18, 62, 63, 71, 72, 73, 97], "longer": 98, "loog": [17, 97], "look": [17, 98], "loop": [9, 30, 31, 97], "loss": [9, 13, 18, 41, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86], "loss_fn": 9, "loss_func": 81, "loss_ot": 13, "loss_tgt_label": 13, "lounici": [47, 97], "low": [80, 81, 82, 84, 85, 86, 98], "lower": [12, 13, 14, 15, 18, 21], "lowercas": 79, "lp": [14, 21, 30, 31], "lpl1": [21, 30, 31], "lpp": 64, "lr": [6, 7, 8, 9], "lst_loss_ot_": 41, "lst_loss_tgt_labels_": 41, "lstrip": [17, 18, 21], "lw": 25, "m": [17, 18, 32, 62, 63, 80, 97], "mach": 97, "machin": [14, 16, 17, 30, 31, 32, 37, 38, 46, 52, 53, 54, 55, 74, 80, 82, 97], "made": [87, 90], "mai": [52, 53, 88, 97], "main": 12, "maintain": 97, "make": [25, 65, 68, 72, 88, 97, 98, 99], "make_da_pipelin": [14, 15, 16, 20, 24, 97, 98], "make_dataset": [4, 21], "make_dataset_from_moons_distribut": [1, 12], "make_pipelin": 20, "make_shifted_dataset": [1, 2, 3, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 98, 99], "make_variable_frequency_dataset": 4, "mandat": 98, "manhattan_dist": [52, 53], "map": [16, 18, 21, 46, 47, 48, 49, 97], "marconcini": [32, 80, 97], "margin": 12, "margin_lin": 12, "mark": [18, 98], "marker": [12, 15, 18, 22, 25, 98], "markers": 12, "masashi": [17, 42, 43, 82, 97], "mask": [25, 98], "match": [13, 45, 62, 63, 97], "math": 22, "mathelin": [17, 97], "mathemat": [17, 97], "matplotlib": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "matrix": [48, 49, 50, 51, 52, 53, 67], "mattia": 97, "mauric": 97, "max": [3, 13, 16, 17, 18, 21, 22, 37, 38, 41, 54, 55], "max_epoch": [6, 7, 8, 9], "max_featur": 71, "max_inner_it": [21, 30, 31], "max_it": [17, 21, 30, 31, 32, 37, 38, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 64], "max_len": [17, 18], "max_n_split": [88, 98], "maxim": [17, 32, 62, 63, 64], "maximum": [18, 21, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 71], "maxpool": 9, "maxpool2d": 9, "mb": [5, 10, 19, 23, 27, 100], "mboula": 97, "mean": [13, 14, 15, 18, 20, 22, 24, 40, 45, 49, 51, 52, 53, 67, 80, 81, 82, 84, 85, 86, 98, 99], "mean_source_": [29, 40], "mean_squared_error": [13, 14], "mean_target_": [29, 40], "mean_test_scor": 26, "measur": 78, "mechan": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "median": [37, 38, 54, 55], "mellot": 97, "mem": [5, 10, 19, 23, 27, 100], "member": 97, "memori": [52, 53, 79], "merg": [25, 96], "meshgrid": [13, 14], "meta": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "metadata": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "metadata_rout": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "method": [1, 2, 3, 4, 10, 12, 19, 20, 23, 25, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 67, 69, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 97, 98, 99, 100], "metric": [13, 14, 20, 21, 24, 26, 30, 31, 37, 38, 41, 52, 53, 54, 55], "metric_param": [21, 52, 53], "michel": 97, "might": [14, 16, 41], "min": [18, 21, 22, 58, 59], "mingsheng": [71, 72, 73], "minim": [17, 43, 45, 49, 51, 72, 84, 97], "minimum": [30, 31, 37, 38, 69, 70], "minkowski": [21, 52, 53], "minkowski_dist": [52, 53], "minut": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "misc": 97, "mix": [83, 97], "mixup": 83, "mixval": 83, "mline": 12, "mlpregressor": 41, "mmd": [18, 21, 45, 49, 50, 51, 73, 97], "mmdlsconsmap": [21, 49], "mmdlsconsmappingadapt": 21, "mmdtarsreweight": [21, 51], "mmdtarsreweightadapt": 21, "mnist": [6, 7, 8, 9], "mnist_dataset": [6, 7, 8, 9], "mnist_target": [6, 7, 8, 9], "mnisttouspsnet": [6, 7, 8, 9], "mode": 93, "model": [9, 13, 17, 42, 43, 70, 81, 82, 83, 86, 97], "model_select": [20, 24, 25, 26, 97, 98, 99], "modern": 22, "modifi": 25, "modul": [6, 7, 8, 9, 69, 71, 74, 75, 77, 97], "module_": 9, "mong": [11, 19, 46, 47, 67, 79, 92, 97, 100], "montesuma": 97, "month": 97, "moon": [12, 65], "more": [12, 14, 17, 20, 52, 53, 97, 98], "moreau": 97, "moreno": [2, 3, 67], "morerio": [84, 97], "most": [18, 25, 52, 53], "mostli": 98, "motoaki": 97, "move": 98, "mover": 55, "mse": [13, 14, 41], "mse_": [13, 14], "mse_t": [13, 14], "mu": [18, 21, 60, 61, 64], "mu_regress": 67, "muandet": 97, "much": [13, 14, 15], "multi": [1, 11, 19, 67, 69, 70, 79, 92, 97, 98, 100], "multiclass": [2, 7, 13, 14, 15, 67], "multilinear": 72, "multilinearmongealignmentadapt": 15, "multinomi": 13, "multipl": [1, 2, 3, 4, 12, 20, 21, 42, 43, 58, 59, 65, 66, 67, 68, 81, 91, 93, 98], "multipli": 67, "murino": 97, "must": [20, 52, 53, 66, 84, 90, 96, 97], "m\u00fcller": 97, "n": [2, 3, 13, 15, 16, 17, 18, 22, 25, 30, 31, 37, 38, 41, 46, 54, 55, 67, 93, 97], "n_center": [21, 42, 43, 66], "n_channel": [4, 68], "n_class": [4, 6, 7, 8, 9, 49, 51, 68, 71], "n_compon": [18, 20, 21, 58, 59, 60, 61, 62, 63, 64, 98], "n_dot": 22, "n_featur": [29, 34, 36, 40, 43, 45, 49, 51, 53, 58, 59, 66, 88, 91, 92, 93, 96], "n_frequenc": [4, 68], "n_frequency_sourc": 68, "n_iter_max": [21, 41], "n_job": [21, 52, 53], "n_neighbor": [21, 52, 53], "n_sampl": [6, 7, 8, 9, 16, 34, 36, 40, 43, 45, 49, 51, 53, 58, 59, 66, 67, 84, 88, 91, 92, 93, 94, 95, 96], "n_samples_sourc": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 44, 45, 65, 67, 68, 98, 99], "n_samples_target": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 65, 67, 68, 98, 99], "n_sourc": 15, "n_split": [24, 25, 26, 87, 88, 89, 90, 98, 99], "n_splits_lodo": 25, "n_target": 15, "n_tot_sourc": 16, "n_tot_target": 16, "naive_bay": 79, "nakajima": [17, 97], "name": [17, 18, 20, 21, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "named_step": [16, 79], "names_map": 25, "nan": [25, 93, 96], "natur": [21, 52, 53, 67], "ndarrai": [65, 66, 67, 68, 84, 88, 96], "nearest": [51, 52, 53, 97], "nearestneighborreweight": [17, 21], "nearestneighborreweightadapt": 21, "necessari": [13, 41, 98, 99], "necessarili": 21, "necessit": 98, "need": [20, 81, 98], "neg": [65, 66, 67, 68, 97, 98], "neighbor": [21, 51, 52, 53, 97], "neighborhood": [52, 53, 85, 97], "neither": 98, "netherland": 97, "network": [18, 60, 61, 69, 70, 71, 72, 73, 74, 97], "neural": [13, 18, 41, 60, 61, 74, 97], "neuralnetclassifi": [6, 7, 8], "neurip": [17, 42, 43, 71, 72, 83], "never": 79, "new": [12, 61, 98], "next": [7, 98], "ngole": 97, "nicola": [77, 78, 97], "nip": [17, 41, 44, 45, 97], "nn": [6, 7, 8, 9, 69, 71, 74, 75, 77], "nois": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 65, 66, 67, 68, 98, 99], "non": [65, 66, 67, 68, 96, 98], "none": [9, 15, 17, 18, 21, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99], "nonzero": [52, 53], "norm": [21, 30, 31, 37, 38, 54, 55, 64], "normal": [17, 37, 38, 54, 55, 97], "note": [13, 20, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "notic": [12, 97], "now": [12, 13, 25, 98, 99], "np": [1, 4, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 67, 87, 88, 90, 96], "nt": 15, "ntu": 7, "num_featur": [6, 71, 74], "number": [14, 16, 17, 25, 30, 31, 32, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 81, 83, 87, 88, 90, 96, 98], "numer": [37, 38, 54, 55, 81], "numitermax": [14, 16, 21], "numpi": [1, 4, 12, 13, 14, 15, 17, 18, 20, 22, 24, 25, 87, 90], "o": [12, 15, 22, 97], "object": [12, 25, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99], "observ": [33, 34, 82], "occur": [37, 38, 54, 55], "octob": 97, "odonnat": 97, "odot": 49, "off": [22, 41, 62, 63], "offer": [98, 99], "office31": 98, "oleksii": [17, 18, 97], "onc": [18, 25, 89, 98], "one": [1, 18, 20, 52, 53, 65, 67, 68, 84, 96, 97, 98, 99], "ones": [15, 18, 20, 87, 90], "onli": [12, 20, 24, 25, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "onto": 18, "open": 97, "oper": 47, "optim": [9, 10, 11, 13, 14, 17, 19, 21, 30, 31, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 64, 67, 77, 78, 79, 92, 97, 100], "optimali": [17, 18], "option": [28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98], "orang": 25, "order": 98, "org": 97, "organ": 20, "origin": [13, 14, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "ossci": 7, "ot": [14, 16, 21, 31, 38, 41, 46, 47, 54, 55, 97], "ot_transport_": [16, 31, 38, 47, 55], "otda": [11, 19, 31, 38, 47, 54, 55, 67, 79, 92, 97, 100], "other": [17, 25, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98], "otherwis": [34, 36, 40, 43, 45, 51, 53, 56, 57, 65, 66, 67, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "otlabelprop": 21, "otlabelpropadapt": [14, 21], "otmap": [16, 21], "otmappingadapt": [16, 21, 98], "our": [25, 52, 53], "out": [12, 88, 97], "out_featur": 9, "outcom": [80, 81, 82, 84, 85, 86], "output": [9, 20, 42, 43, 58, 59, 65, 66, 67, 68, 69, 71, 74, 75, 77, 81, 98], "over": [21, 81], "overfit": [98, 99], "overrid": [52, 53], "overwrit": 20, "ovr": 21, "p": [9, 17, 18, 21, 51, 52, 53, 62, 63, 79, 97], "p_": 17, "p_sourc": [43, 45, 51], "p_target": [43, 45, 51], "pack": [18, 24, 25, 98], "pack_lodo": [25, 98], "pack_test": [6, 7, 8, 9, 25, 26, 98], "pack_train": [6, 7, 8, 9, 18, 21, 24, 25, 26, 98], "packag": [6, 14, 16, 21], "pad": 9, "page": [17, 18, 52, 53, 62, 63, 64, 97], "pair": [65, 66, 67, 68, 96, 98], "pami": 97, "pan": [18, 60, 61, 97], "paper": [85, 97], "parallel": [52, 53], "parallel_backend": [52, 53], "param": [20, 24, 97, 98], "param_entropicotmappingadapter__reg_": 26, "param_grid": [20, 97], "paramet": [1, 14, 16, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99], "part": [21, 97], "partial_fit": [56, 57], "particularli": 18, "pass": [9, 20, 24, 34, 36, 40, 42, 43, 45, 51, 52, 53, 56, 57, 58, 59, 65, 66, 67, 68, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "patch": 25, "path": 79, "pattern": [2, 3, 16, 18, 28, 29, 30, 31, 32, 37, 38, 46, 54, 55, 62, 63, 67, 69, 70, 80, 97], "paul": 97, "pca": [18, 20, 58, 59, 60, 61, 62, 63, 64, 98], "pca_source_": 59, "pca_target_": 59, "pdf": [17, 22, 97], "peak": 68, "per": [20, 32, 88, 98], "per_domain": 79, "percentag": [25, 87, 90], "perdomain": [20, 98], "perdomainselector": 98, "perform": [13, 14, 15, 17, 18, 20, 24, 26, 79, 98], "permit": 79, "phase": 97, "pick": 98, "pietro": 84, "pip": 97, "pipe": [20, 97, 98], "pipe_perdomain": 20, "pipe_train_on_sourc": 20, "pipelin": [17, 21, 24, 26, 28, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "plai": 98, "plan": [14, 16, 17, 35, 36, 39, 40, 97], "pleas": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "plot": [5, 11, 16, 20, 21, 22, 25, 26, 65, 67, 68, 92, 100], "plot_adversari": [6, 10, 100], "plot_cross_val_score_for_da": [24, 27, 100], "plot_cross_validation_for_da": [25, 27, 100], "plot_cv_indic": 25, "plot_dasvm": [12, 19, 100], "plot_dataset_from_moons_distribut": [1, 5, 100], "plot_diverg": [7, 10, 100], "plot_gridsearch_for_da": [26, 27, 100], "plot_how_to_use_skada": [20, 23, 100], "plot_jdot_da": [13, 19, 100], "plot_label_prop_da": [14, 19, 100], "plot_lodo_indic": 25, "plot_method": 17, "plot_method_comparison": [21, 23, 100], "plot_monge_alignment_da": [15, 19, 100], "plot_optimal_transport": [8, 10, 100], "plot_optimal_transport_da": [16, 19, 100], "plot_reweight": [17, 19, 100], "plot_shifted_dataset": [2, 3, 5, 100], "plot_shifted_dataset_regress": [3, 5, 100], "plot_skada_logo": [22, 23, 100], "plot_st_shuffle_indic": 25, "plot_subspac": [18, 19, 100], "plot_subspace_and_classifi": 18, "plot_training_method": [9, 10, 100], "plot_variable_frequency_dataset": [4, 5, 100], "plot_weights_and_classifi": 17, "plt": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "plug": 98, "pmlr": [14, 97], "point": [12, 17, 18, 21, 22, 26, 32, 41, 52, 53, 65, 66, 67, 68], "poli": 12, "polytechniqu": [3, 17, 18], "pos_sourc": [1, 12, 65], "pos_target": [1, 12, 65], "posit": [12, 52, 53, 65, 97, 98], "possibl": [2, 3, 12, 28, 29, 39, 40, 52, 53, 64, 98], "possibli": 98, "pot": 22, "power": [52, 53], "pp": [14, 69, 70, 97], "practic": 98, "pre": 70, "precis": [37, 38], "precomput": [52, 53], "predict": [12, 13, 14, 16, 17, 18, 20, 21, 26, 33, 35, 36, 39, 40, 41, 42, 44, 50, 52, 53, 56, 57, 58, 60, 62, 70, 72, 80, 81, 84, 97, 98], "predict_log_proba": [56, 57], "predict_proba": [56, 57, 98], "predictionentropyscor": [20, 26, 97, 98], "prepar": [24, 25, 26, 98], "preprint": [47, 97], "preprocess": [20, 21, 79, 97], "presenc": 93, "present": 12, "preserv": [13, 25, 87, 90], "prevent": [52, 53], "previou": 18, "previous": 98, "prgn": 25, "print": [1, 4, 9, 13, 14, 15, 17, 18, 20, 21, 24, 26, 41, 63, 64, 79, 87, 90], "print_scores_as_t": [17, 18], "prior": [79, 97], "probabl": [17, 20, 21, 26, 81], "probe": [83, 97], "problem": [12, 25, 30, 31, 32, 37, 38, 41, 43, 52, 53, 54, 55, 60, 61, 64, 80, 88, 97, 98], "procedur": 43, "proceed": [69, 70, 97], "process": [13, 17, 41, 52, 53, 81, 83, 97, 98], "processor": [52, 53], "produc": [0, 87], "progress": 12, "project": [1, 6, 7, 8, 9, 18, 21, 61], "propag": [11, 19, 21, 67, 68, 79, 92, 97, 100], "proport": [14, 87], "propos": [14, 41, 46, 47, 69, 70, 85], "provid": [1, 20, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 71, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 97, 98], "psd": 4, "psu": 97, "publish": 97, "purpos": 17, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 98, 100], "pypi": 97, "pyplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "pytest": 98, "python": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "python3": [6, 14, 16, 21], "pytorch": [69, 71, 74, 75, 77], "q": 97, "quadrat": 41, "queri": [52, 53], "quick": 97, "r": [2, 3, 13, 14, 16, 22, 30, 31, 37, 38, 41, 46, 47, 54, 55, 67, 97], "r82": 97, "radian": 22, "raeder": [2, 3, 67], "rais": [20, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "rakotomamonji": [13, 16, 30, 31, 37, 38, 41, 46, 54, 55, 97], "rand": [15, 22], "randint": [1, 4], "randn": 15, "random": [1, 2, 3, 4, 15, 21, 22, 24, 42, 43, 58, 59, 65, 66, 67, 68, 81, 83, 87, 88, 90], "random_se": [1, 4, 12, 17, 18, 21, 24, 25, 26, 98, 99], "random_st": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 42, 43, 58, 59, 65, 66, 67, 68, 81, 83, 87, 88, 89, 90, 98, 99], "randomli": [25, 98], "randomst": [22, 42, 43, 58, 59, 65, 66, 67, 68, 81, 83, 87], "rang": [4, 9, 12, 13, 15, 16, 18, 22, 25, 98], "rather": [6, 7, 8, 9, 18, 21], "ratio": [17, 67, 97], "ravel": [13, 14], "raw": 7, "rbf": [13, 14, 16, 18, 21, 30, 42, 43, 44, 45, 60, 61, 62, 63, 64, 67], "rcparam": 22, "rdbu": [17, 18, 21, 25], "re": [33, 34, 35, 36, 39, 40, 52, 53, 87], "reach": [14, 21, 97], "readi": [24, 98], "real": 21, "reason": 98, "recognit": [2, 3, 18, 28, 29, 62, 63, 67, 69, 70, 97], "recommend": [6, 7, 8, 9, 18, 21], "reconstruct": 98, "recov": 16, "red": 12, "redko": 97, "reduc": [73, 76, 78, 81], "reduct": [77, 78, 84], "ref": 18, "refer": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 98], "reflect": [98, 99], "reg": [6, 7, 9, 14, 16, 21, 28, 29, 39, 40, 46, 47, 50, 51, 64, 69, 71, 72, 74, 75, 77], "reg_": [16, 21, 24, 26, 30, 31, 37, 38], "reg_cl": [8, 16, 21, 30, 31, 77, 78], "reg_cor": 20, "reg_dist": [8, 77, 78], "reg_k": [21, 48, 49], "reg_m": [21, 48, 49], "reglog": [13, 14], "regress": [3, 41, 67], "regression_scaling_const": 67, "regressor": [11, 19, 41, 67, 92, 97, 100], "regular": [14, 16, 18, 20, 26, 28, 29, 30, 31, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 60, 61, 64, 69, 71, 72, 74, 75, 77, 78, 97], "regulari": 26, "relat": 98, "relev": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "relu": 9, "relu1": 9, "relu2": 9, "relu3": 9, "remain": [25, 89], "rememb": 32, "remi": [13, 14, 15, 16, 20, 77, 78], "remov": [12, 72], "rep1": 97, "repid": 97, "replac": [2, 3], "repres": [12, 18, 52, 53, 87, 98], "represent": [72, 78, 81], "reproduc": [18, 42, 43, 58, 59, 65, 66, 67, 68, 81], "request": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "requir": [20, 37, 38, 52, 53, 79, 97, 98], "requires_grad": [18, 21], "requires_grad_": [6, 7, 8, 9, 18, 21], "research": [74, 82, 97], "reshap": [13, 14, 18], "respect": [49, 65, 66, 67, 68, 98], "response_method": [16, 17, 18, 21, 26], "result": [25, 26, 52, 53, 88], "result_cod": [14, 21], "result_code_str": [14, 21], "retain": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "retrain": 80, "return": [6, 15, 22, 25, 28, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98], "return_dataset": [6, 7, 8, 9, 18, 21, 24, 25, 26, 65, 66, 67, 68], "return_x_i": [65, 66, 67, 68, 98], "reus": [98, 99], "reweight": [11, 18, 19, 20, 21, 33, 35, 39, 42, 44, 45, 50, 51, 52, 62, 63, 67, 92, 95, 97, 100], "ridg": [13, 14, 41], "right": [3, 17, 18, 21, 25, 85, 97], "risk": 41, "rng": 22, "robert": 97, "robust": 14, "rodriguez": [2, 3, 67], "root": 29, "rotat": 25, "rotated_curv": 22, "rotation_angl": 22, "rotation_cent": 22, "rotation_matrix": 22, "round": 22, "rout": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "row": [1, 2, 3], "rsda": 87, "rslab": 97, "ruben": [3, 12, 17, 18, 97], "run": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 52, 53, 98], "running_loss": 9, "rustamov": [14, 97], "r\u00e9mi": 97, "s2": [25, 98], "s3": 7, "saenko": [7, 28, 29, 75, 76, 97], "saito": [85, 97], "salt": 21, "same": [1, 2, 3, 4, 12, 13, 14, 18, 21, 24, 25, 34, 36, 40, 43, 45, 51, 52, 53, 80, 91, 92, 98], "sampl": [2, 3, 13, 14, 16, 17, 18, 20, 25, 34, 44, 45, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 34, 36, 40, 43, 45, 51, 53, 56, 57, 65, 66, 67, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "sample_domain_": 20, "sample_domain_lodo": 25, "sample_domain_t": 20, "sample_domain_test": [6, 7, 8, 9, 98], "sample_domain_train": [18, 98], "sample_domaini": 15, "sample_select": 67, "sample_weight": [17, 20, 21, 91, 92, 97, 98], "save": 22, "save_estim": [12, 32], "save_indic": [12, 32], "savefig": 22, "scalar": 67, "scale": [21, 49, 64], "scan": 93, "scatter": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26], "scenario": 98, "sch\u00f6lkopf": [17, 44, 45, 97], "scikit": [20, 25, 41, 79, 98, 99], "scipi": [44, 45, 52, 53], "sclaroff": 97, "score": [6, 7, 8, 12, 15, 16, 21, 24, 26, 56, 57, 67, 80, 81, 82, 83, 84, 85, 86, 97], "scorer": [20, 24, 26, 80, 81, 82, 83, 84, 85, 86, 97, 98], "scores_dict": [17, 18], "scores_no_da": 24, "scores_sup": 24, "script": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "search": [26, 52, 53, 97], "sebban": 97, "second": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 96], "section": [49, 50, 51, 98], "see": [2, 3, 12, 13, 14, 17, 18, 25, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "seed": [1, 2, 3, 4, 15, 21], "seek": 18, "seen": 98, "select": [17, 25, 42, 43, 44, 45, 67, 81, 83, 97, 99], "select_domain": [16, 98], "selector": [20, 79], "selectsourc": 20, "selectsourcetarget": 20, "self": [6, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "semi": [12, 14, 21, 97], "semi_label": 12, "separ": [24, 67, 93, 98], "septemb": [77, 78], "sequenc": [65, 66, 67, 68, 91, 92, 96], "serv": [62, 63, 98], "set": [12, 17, 21, 25, 44, 45, 52, 53, 58, 59, 65, 66, 67, 68, 79, 85, 87, 88, 89, 98, 99], "set_config": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "set_decision_function_request": [56, 57], "set_fit_request": [17, 20, 21, 34, 36, 40, 43, 45, 51, 53, 56, 57, 97], "set_fit_requir": 97, "set_label": 3, "set_partial_fit_request": [56, 57], "set_predict_log_proba_request": [56, 57], "set_predict_proba_request": [56, 57], "set_predict_request": [56, 57], "set_score_request": [56, 57, 80, 81, 82, 83, 84, 85, 86, 98], "set_split_request": [87, 88, 89, 90], "set_titl": [1, 2, 3, 4, 12, 17, 18, 25], "set_transform_request": [34, 36, 40, 43, 45, 51, 53, 56, 57], "set_xlabel": [1, 2, 3, 4], "set_xlim": [12, 17, 18, 21], "set_xtick": [17, 18, 21], "set_ylabel": [1, 2, 3, 4, 21], "set_ylim": [12, 17, 18, 21], "set_ytick": [17, 18, 21], "setup": [10, 11, 75, 76, 100], "sever": [20, 21, 43, 98, 99], "shape": [12, 13, 14, 15, 16, 17, 18, 20, 22, 29, 34, 36, 40, 43, 45, 49, 51, 52, 53, 66, 67, 84, 88, 91, 92, 93, 94, 95, 96], "share": [21, 79, 98], "sharei": [1, 2, 3, 4, 25], "sharex": [1, 2, 3, 4], "shift": [5, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25, 26, 33, 35, 36, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 58, 60, 62, 64, 65, 66, 67, 68, 82, 92, 95, 97, 98, 99, 100], "shimodaira": [17, 35, 36, 39, 40, 97], "shinichi": 97, "ship": 98, "short": 20, "shorthand": 79, "should": [21, 32, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 60, 61, 62, 63, 64, 67, 71, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98], "show": [1, 2, 3, 4, 12, 13, 14, 17, 18, 21, 24, 25, 26, 52, 53], "showcas": 98, "shown": [98, 99], "shrink": 21, "shrinkag": [28, 29, 39, 40, 64], "shuffl": [66, 87, 89, 90], "shufflesplit": [24, 26, 98, 99], "si": [18, 64, 97], "sigma": [15, 67, 69, 70, 73], "sigma_ch": [4, 68], "sigma_freq": 68, "sigma_regress": 67, "sign": [80, 81, 82, 84, 85, 86], "signal": [4, 17, 52, 53, 68, 97], "signatur": [81, 82, 83, 86], "similar": [85, 98], "similarli": [20, 98], "simpl": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 98], "simplest": 98, "simpli": 98, "simplifi": 98, "simultan": 98, "sin": 22, "sinc": [25, 96, 98], "singl": [20, 81, 89, 93, 98], "singleton": 89, "sinkhorn": [16, 30, 31, 37, 38], "sinno": [18, 60, 61], "site": [6, 14, 16, 21], "size": [17, 18, 21, 52, 53, 68, 71, 74, 87], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 27, 98, 99, 100], "skada_logo": 22, "skada_logo_ful": 22, "skada_logo_full_whit": 22, "skip": 98, "sklearn": [12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 26, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99], "skorch": [6, 7, 8, 97], "sleep": 97, "small": 81, "smola": [17, 44, 45, 97], "smooth": [17, 44, 45, 52, 53], "smooth_weight": [17, 44, 45], "so": [12, 18, 20, 98], "soft": [85, 97], "softmax": 6, "softneighborhooddens": 98, "sol_": [13, 41], "solid": 21, "solid_capstyl": 22, "solomon": [14, 97], "solut": [18, 22, 41, 43, 61], "solv": [41, 42, 43], "solver": [16, 17, 22, 30, 31, 44, 45], "some": [0, 18, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "sort": 25, "sourc": [5, 6, 7, 8, 9, 11, 12, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "source_dict": 91, "source_idx": [94, 95, 98], "source_mark": [12, 18], "source_scor": 80, "source_target_split": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 24], "source_weights_": [45, 51], "sourcetargetselector": 98, "sourcetargetshufflesplit": [20, 25, 97, 98], "sourcetensor": [6, 7, 8, 9, 18, 21], "space": [17, 18, 71, 98], "spars": [52, 53], "spatial": [52, 53], "special": 98, "specif": [20, 68, 72, 94, 98], "specifi": [79, 84, 91, 92, 93, 94, 95, 96], "speed": [52, 53], "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25], "split": [20, 21, 24, 25, 42, 43, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99], "split_source_target": [91, 94], "splitter": [20, 25, 88], "springer": [77, 78, 97], "sqeuclidean": [21, 30, 31, 37, 38, 54, 55], "sqrt": [44, 45], "squar": [12, 29, 41, 52, 53], "ssl": 7, "stack": 98, "standard": [52, 53, 65, 66, 67, 68, 98], "standardscal": [20, 79, 97, 98], "start": [20, 97, 98, 99], "start_length": 22, "state": 12, "static": 98, "statist": [17, 35, 36, 39, 40, 97], "std": [13, 14, 20, 24, 68], "step": [9, 12, 16, 18, 21, 32, 79], "still": 98, "stop": [30, 31, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 64], "store": [17, 18, 52, 53, 97], "str": [17, 18, 30, 31, 34, 36, 37, 38, 40, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 64, 67, 69, 71, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "straightforward": 98, "strategi": [18, 24, 26, 32, 42, 43, 80, 97], "strategylorenzo": 97, "stratifi": 90, "stratifieddomainshufflesplit": 25, "stride": 9, "string": [44, 45, 52, 53, 79, 82, 83, 86], "structur": 98, "sub": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "subj_1": 98, "subj_12": 98, "subj_3": 98, "subject": [17, 18, 97], "subplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "subplots_adjust": [1, 2, 3, 4, 25], "subsequ": [20, 97], "subset": 91, "subspac": [2, 3, 11, 19, 21, 58, 59, 60, 61, 62, 64, 67, 92, 97, 100], "subspace_estim": 18, "subspacealign": [18, 21, 97], "subspacealignmentadapt": [21, 58, 98], "sugiyama": [17, 42, 43, 82, 97], "suit": 98, "suitabl": 17, "sum": [12, 22, 84], "sun": [7, 18, 28, 29, 62, 63, 75, 76, 97], "supervis": [14, 24, 86, 88, 97, 98], "supervisedscor": [24, 98, 99], "support": [13, 77, 78], "supspac": 18, "suptitl": [1, 2, 3, 4, 12, 17, 18, 25], "sure": 12, "suzuki": [17, 97], "svc": [12, 14, 15, 16, 18, 20, 21, 24, 26, 30, 32], "svg": 22, "svm": [12, 13, 14, 16, 18, 20, 21, 24, 26], "synthet": 21, "system": [13, 41, 97], "t": [2, 3, 7, 13, 16, 17, 18, 21, 22, 24, 25, 26, 49, 52, 53, 67, 85, 97, 98], "t10k": 7, "t2": [25, 98], "t_valu": 22, "tab10": [1, 2, 13, 14, 15, 16, 20], "taiji": 97, "takafumi": 97, "take": [17, 20, 52, 53, 98], "taken": [12, 21, 43, 65, 66, 67, 68], "tao": [18, 64, 97], "tar": [21, 97], "target": [5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 76, 78, 80, 82, 83, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100], "target_criterion": [72, 77, 78], "target_dict": 91, "target_idx": [94, 98], "target_kmean": 70, "target_label": [24, 25, 86, 98], "target_mark": [12, 18], "target_shift": [2, 3, 14, 21, 67], "targetaccuracyscor": [24, 98, 99], "task": [6, 7, 8, 9, 13, 16, 41], "tca": [18, 21, 97], "team": 97, "techniqu": [12, 32, 80, 97], "temperatur": 85, "tensor": [6, 7, 8, 9, 18, 21], "term": [77, 78], "test": [0, 17, 21, 24, 25, 87, 88, 89, 90, 97, 99], "test_cv": 98, "test_index": [87, 90], "test_map": 98, "test_offic": 98, "test_pipelin": 98, "test_reweight": 98, "test_samples_gener": 98, "test_scor": 98, "test_siz": [24, 26, 87, 88, 89, 90, 98, 99], "test_subspac": 98, "teterwak": 97, "text": [12, 13, 15, 16, 17, 18, 20, 21, 22, 25], "textsf": 22, "than": [6, 7, 8, 9, 13, 17, 18, 21, 52, 53], "thank": 24, "thei": [12, 96, 98], "them": [52, 53, 98], "theme": 98, "theo": 97, "theoret": 41, "therefor": 79, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 32, 34, 36, 40, 41, 43, 45, 51, 52, 53, 56, 57, 70, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99], "thoma": 97, "those": [12, 20, 52, 53, 98], "though": 98, "threshold": [30, 31, 63, 64, 69, 70], "through": 78, "thu": [12, 17, 18, 25, 52, 53], "th\u00e9o": [6, 7, 8, 9, 22, 97], "tight": 22, "tight_layout": [18, 21, 22, 25], "time": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 79, 96], "titl": [2, 3, 13, 14, 15, 16, 20, 97], "tjm": [18, 62, 63], "todo": 9, "togeth": [79, 98], "tol": [21, 24, 30, 31, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 64], "toler": [41, 42, 43, 44, 45, 48, 49, 50, 51], "tool": 98, "toolbox": [22, 97], "torch": [6, 7, 8, 18, 21, 69, 71, 72, 74, 75, 77, 78], "torr": [2, 3, 67], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 65, 66, 67, 68, 100], "toward": [81, 97], "tr": 25, "trade": [41, 62, 63], "tradeoff": [18, 62, 63], "train": [10, 11, 12, 16, 17, 18, 20, 21, 24, 25, 69, 71, 74, 75, 76, 77, 87, 88, 89, 90, 97, 98, 99, 100], "train_index": [87, 90], "train_loss": [6, 7, 8, 9], "train_siz": [87, 88, 89, 90], "train_split": [6, 7, 8, 9], "train_test_split": 81, "tran": 97, "transact": [16, 18, 30, 31, 32, 37, 38, 46, 54, 55, 60, 61, 64, 80, 97], "transfer": [60, 61, 62, 63, 64, 73, 97], "transfercomponentanalysi": [18, 21], "transfercomponentanalysisadapt": [21, 60, 98], "transferjointmatch": 18, "transferjointmatchingadapt": 62, "transfersubspacelearn": [18, 21], "transfersubspacelearningadapt": 21, "transform": [15, 16, 18, 20, 34, 36, 40, 43, 45, 49, 51, 53, 56, 57, 79, 97, 98], "translat": [66, 67], "transpar": [21, 22], "transport": [10, 11, 13, 19, 30, 31, 37, 38, 41, 46, 47, 54, 55, 67, 77, 78, 79, 92, 97, 100], "tree": [52, 53], "tri": [17, 72], "trigger": 79, "true": [6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 32, 34, 36, 40, 41, 43, 44, 45, 46, 47, 51, 52, 53, 56, 57, 63, 64, 65, 66, 67, 68, 70, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 97, 98], "try": [7, 14, 17, 21], "tsang": 97, "tsl": [18, 21], "tt": 25, "tuia": [16, 30, 31, 37, 38, 46, 54, 55, 77, 78, 97], "tune": [85, 97], "tupl": [65, 66, 67, 68, 79, 91, 98], "tuytelaar": 97, "tw": 7, "two": [17, 18, 52, 53, 63, 64, 94, 97, 98, 99], "type": [2, 3, 25, 79, 83, 96, 97], "typic": [71, 98], "u": [16, 67], "ubyt": 7, "unchang": [34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "under": [17, 35, 36, 39, 40, 48, 49, 50, 51, 97], "under_sampl": 87, "understand": 79, "unifi": [2, 3, 67, 97], "uniform": [21, 52, 53], "uniniti": [77, 78], "uninstanti": [71, 74], "uniqu": [1, 94, 98], "unit": 71, "unitn": 97, "unlabel": [17, 44, 45, 97], "unless": [52, 53], "unpredict": 41, "unseen": 98, "unsupervis": [18, 28, 29, 58, 59, 62, 63, 69, 70, 77, 78, 81, 83, 84, 85, 97], "up": 89, "updat": [22, 34, 36, 40, 43, 45, 51, 53, 56, 57, 72, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "update_predict": 98, "upper": [44, 45], "url": 97, "urlopen": 7, "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 36, 43, 51, 53, 59, 61, 63, 69, 70, 71, 72, 78, 80, 81, 83, 85, 97, 98, 99, 100], "usag": 98, "user": [34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "userwarn": [1, 6, 7, 8, 9, 14, 16, 18, 21], "usetex": 22, "usp": [6, 7, 8, 9], "ustinova": 97, "util": [17, 18, 21, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "v": [2, 3, 17, 18, 67, 97], "va": 25, "val": 97, "valid": [24, 26, 27, 32, 42, 43, 52, 53, 67, 80, 81, 82, 85, 87, 88, 89, 90, 93, 97, 98, 99, 100], "valu": [3, 12, 21, 28, 29, 32, 37, 38, 39, 40, 41, 52, 53, 54, 55, 63, 64, 66, 67, 84, 85, 87, 94, 96, 98], "var_smooth": 79, "variabl": [88, 91, 92, 93], "variat": 41, "vector": [13, 52, 53], "verbos": [13, 21, 41, 63, 64, 79], "veri": 25, "verifi": 7, "version": [25, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97], "vertic": 25, "via": [1, 18, 60, 61, 72, 85, 97], "view": [2, 3, 67], "virgini": 97, "vision": [18, 28, 29, 58, 59, 62, 63, 69, 70, 77, 78, 85, 97], "visit": 97, "visual": [11, 18, 20, 27, 58, 59, 67, 87, 88, 89, 90, 97, 100], "visualis": 4, "vmax": [1, 2, 3, 12, 13, 14, 15, 16, 20, 25], "vmin": [12, 25], "von": [17, 97], "vstack": 15, "w": [17, 22, 43, 45, 49, 97], "w_": 49, "wa": [1, 4, 14, 65, 66, 67, 68], "wai": [85, 97, 98, 99], "wang": [18, 62, 63, 97], "want": [14, 16, 26, 52, 53], "warn": [14, 16, 18, 21, 26, 97], "wasserstein": [14, 30, 31, 37, 38, 54, 55, 97], "we": [2, 3, 13, 14, 15, 16, 20, 22, 24, 25, 26, 52, 53, 67, 93, 96, 97, 98, 99], "webcam": 98, "webcam_idx": 98, "weight": [17, 20, 21, 33, 34, 35, 36, 39, 40, 44, 45, 51, 52, 53, 72, 81, 82, 97, 98], "weight_estim": [17, 21, 33, 34, 82], "weight_estimator_source_": [34, 82], "weight_estimator_target_": [34, 82], "well": [12, 14, 20, 52, 53, 98], "were": [12, 98], "what": [16, 20], "when": [12, 17, 18, 20, 32, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 79, 98], "where": [12, 18, 49, 65, 66, 67, 68, 88, 94, 97, 98], "whether": [80, 81, 82, 83, 84, 85, 86, 91, 94], "which": [12, 16, 17, 18, 20, 25, 52, 53, 67, 68, 97, 98], "while": [12, 13, 25, 41, 79, 88, 89, 98, 99], "white": 22, "whole": 20, "whose": [69, 71, 74, 75, 77], "width": 98, "with_mean": 79, "with_std": 79, "within": [79, 98], "without": [9, 12, 17, 18, 21, 24, 97, 98], "wolf": [17, 28, 29, 39, 40, 44, 45], "won": [17, 18, 98], "work": [14, 17, 18, 20, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 71, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98], "workflow": 98, "workshop": [7, 17, 52, 53, 75, 76, 97], "would": [97, 98], "wrap": [20, 79], "wrapper": 20, "www": [7, 17], "x": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 34, 36, 40, 43, 45, 49, 51, 52, 53, 65, 66, 67, 68, 82, 83, 86, 87, 88, 90, 93, 96, 97, 98, 99], "x0": [18, 21], "x_": [12, 18], "x_adapt": [15, 16], "x_adapted_classreg": 16, "x_adapted_linear": 16, "x_adapted_sinkhorn": 16, "x_dict": 9, "x_lodo": 25, "x_max": [17, 18, 21], "x_min": [17, 18, 21], "x_point": 12, "x_sourc": [1, 2, 3, 4, 16, 24, 96], "x_source_": [45, 49, 51, 61], "x_source_adapt": 16, "x_source_adapted_classreg": 16, "x_source_adapted_linear": 16, "x_source_adapted_sinkhorn": 16, "x_subj1": 98, "x_subj12": 98, "x_subj3": 98, "x_t": 12, "x_target": [1, 2, 3, 4, 16, 24, 26, 96, 98, 99], "x_target_": 61, "x_test": [6, 7, 8, 9, 98], "x_train": [18, 98], "xi": 15, "xlabel": [24, 26], "xlim": [12, 22, 25], "xs_subspac": 18, "xt": [12, 13, 14, 15, 17, 18, 20, 21, 97], "xt_adapt": 18, "xt_subspac": 18, "xue": 97, "xx": [13, 14], "xxx": 90, "y": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 34, 36, 40, 43, 45, 49, 51, 53, 65, 66, 67, 68, 69, 70, 80, 81, 82, 83, 86, 87, 88, 90, 93, 96, 97, 98, 99], "y_": [18, 70, 72, 73, 76, 78], "y_axi": 22, "y_lodo": 25, "y_max": [17, 18, 21], "y_min": [17, 18, 21], "y_point": 12, "y_pred": [80, 81], "y_pred_": [70, 72, 73, 76, 78], "y_pred_t": [70, 72, 73, 76, 78], "y_sourc": [1, 2, 3, 4, 16, 24, 96], "y_subj1": 98, "y_subj12": 98, "y_subj3": 98, "y_target": [1, 2, 3, 4, 16, 24, 26, 96, 98, 99], "y_test": [6, 7, 8, 9, 98], "y_train": [18, 98], "y_true": 81, "yang": [69, 70, 97], "yani": [25, 97], "yann": 7, "yaroslav": 74, "year": 97, "yerr": 24, "yet": 97, "yh": 14, "yht": 14, "yi": 15, "yield": 88, "ylabel": 26, "ylim": [12, 25], "you": [14, 16, 20, 34, 36, 40, 43, 45, 51, 53, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "your": [97, 98], "ypred": 97, "ys_pred": [13, 14], "yt": [12, 13, 14, 15, 17, 18, 20, 21], "yt_pred": [13, 14, 20], "ytick": [24, 25], "yticklabel": 25, "yu": [18, 62, 63, 97], "yy": [13, 14], "z": [13, 14, 67, 97], "z_jcpot": 14, "zero": 9, "zero_grad": 9, "zhang": [48, 49, 50, 51, 97], "zip": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 90], "zjdot": [13, 14]}, "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Label Propagation methods", "Multi-domain Linear Monge Alignment", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Subspace method example on subspace shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "skada.CORAL", "skada.CORALAdapter", "skada.ClassRegularizerOTMapping", "skada.ClassRegularizerOTMappingAdapter", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DensityReweightAdapter", "skada.DiscriminatorReweight", "skada.DiscriminatorReweightAdapter", "skada.EntropicOTMapping", "skada.EntropicOTMappingAdapter", "skada.GaussianReweight", "skada.GaussianReweightAdapter", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.KLIEPReweightAdapter", "skada.KMMReweight", "skada.KMMReweightAdapter", "skada.LinearOTMapping", "skada.LinearOTMappingAdapter", "skada.MMDLSConSMapping", "skada.MMDLSConSMappingAdapter", "skada.MMDTarSReweight", "skada.MMDTarSReweightAdapter", "skada.NearestNeighborReweight", "skada.NearestNeighborReweightAdapter", "skada.OTMapping", "skada.OTMappingAdapter", "skada.PerDomain", "skada.Shared", "skada.SubspaceAlignment", "skada.SubspaceAlignmentAdapter", "skada.TransferComponentAnalysis", "skada.TransferComponentAnalysisAdapter", "skada.TransferJointMatching", "skada.TransferJointMatchingAdapter", "skada.TransferSubspaceLearning", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CAN", "skada.deep.CANLoss", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.MixValScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "skada.per_domain_split", "skada.source_target_split", "skada.utils.check_X_y_domain", "skada.utils.extract_domains_indices", "skada.utils.extract_source_indices", "skada.utils.source_target_merge", "SKADA: SciKit Domain Adaptation", "Users Guide", "Metrics: Compute score for domain adaptation problems", "Computation times"], "titleterms": {"2": [12, 17, 18], "2d": [12, 17, 18], "The": 18, "acknowledg": 97, "adapt": [6, 7, 8, 11, 15, 16, 17, 18, 20, 97, 98, 99], "advanc": 20, "adversari": 6, "algorithm": 97, "align": [0, 15, 18], "analysi": 18, "api": 0, "behavior": 25, "between": [17, 18], "can": 69, "canloss": 70, "cdan": 71, "cdanloss": 72, "check_x_y_domain": 93, "circularvalid": 80, "class": [12, 17, 18], "classic": [6, 7, 8], "classif": [13, 14, 15, 21], "classifi": [12, 13, 14, 15, 20], "classregularizerotmap": 30, "classregularizerotmappingadapt": 31, "comparison": [17, 18, 21], "compon": 18, "comput": [5, 10, 19, 23, 27, 99, 100], "concept": [13, 14, 15, 16], "content": 97, "coral": 28, "coraladapt": 29, "covari": 17, "cross": [20, 25], "cross_val_scor": 24, "da": [0, 9, 11, 16, 20, 21, 97, 98], "danloss": 73, "dann": [6, 74], "dasvm": 12, "dasvmclassifi": [12, 32], "data": [13, 14, 15], "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 65, 66, 67, 68, 98], "deep": [0, 9, 11, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97], "deepcor": [7, 75], "deepcoralloss": 76, "deepembeddedvalid": 81, "deepjdot": [8, 77], "deepjdotloss": 78, "densiti": 17, "densityreweight": 33, "densityreweightadapt": 34, "differ": 16, "discr": 17, "discriminatorreweight": 35, "discriminatorreweightadapt": 36, "diverg": 7, "doe": 16, "domain": [1, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 18, 97, 98, 99], "domainshufflesplit": 87, "drift": [13, 14, 15, 16], "entropicotmap": 37, "entropicotmappingadapt": 38, "estim": [20, 98], "exampl": [11, 12, 13, 17, 18, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 60, 62, 64, 65, 67, 68, 74, 75, 76, 77, 79, 82, 84, 86, 87, 88, 89, 90, 92, 95, 97], "extract_domains_indic": 94, "extract_source_indic": 95, "full": 14, "galleri": 11, "gaussian": 17, "gaussianreweight": 39, "gaussianreweightadapt": 40, "gener": [12, 13, 14, 15, 16, 17, 18, 22], "grid": 20, "gridsearchcv": 26, "guid": 98, "how": [16, 20], "illustr": [13, 14, 16, 17, 18], "imag": [6, 7, 8, 9], "implement": 97, "importanceweightedscor": 82, "indic": 97, "instal": 97, "jcpot": 14, "jdot": 13, "jdotregressor": 41, "joint": 18, "kernel": 17, "kliepreweight": [17, 42], "kliepreweightadapt": 43, "kmmreweight": 44, "kmmreweightadapt": 45, "labe": 14, "label": [12, 14], "labelprop": 14, "learn": [0, 11, 18, 97], "leaveonedomainout": 88, "licens": 97, "linear": 15, "linearotmap": 46, "linearotmappingadapt": 47, "load": [6, 7, 8, 9], "logo": 22, "main": 0, "make_da_pipelin": 79, "make_dataset_from_moons_distribut": 65, "make_shifted_blob": 66, "make_shifted_dataset": 67, "make_variable_frequency_dataset": 68, "map": 0, "match": [17, 18], "mean": 17, "method": [0, 6, 7, 8, 9, 11, 14, 16, 17, 18, 21], "metric": [0, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99], "mixvalscor": 83, "mmdlsconsmap": 48, "mmdlsconsmappingadapt": 49, "mmdtarsreweight": 50, "mmdtarsreweightadapt": 51, "model": [0, 6, 7, 8, 14, 98], "model_select": [0, 87, 88, 89, 90], "modul": 0, "mong": 15, "multi": 15, "nearest": 17, "nearestneighborreweight": 52, "nearestneighborreweightadapt": 53, "neighbor": 17, "optim": [8, 16], "ot": 13, "otda": 16, "other": 0, "otmap": 54, "otmappingadapt": 55, "our": [12, 17, 18], "paramet": 9, "per_domain_split": 91, "perdomain": 56, "pipelin": [0, 20, 98], "plan": 13, "plot": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18], "predictionentropyscor": 84, "problem": [16, 17, 18, 99], "procedur": 11, "propag": 14, "pytorch": 97, "refer": 97, "regress": [13, 14], "regressor": [13, 14], "reweight": [0, 17], "sampl": [0, 98], "scikit": 97, "score": [17, 18, 20, 98, 99], "search": 20, "select": [0, 98], "selector": 98, "setup": 9, "share": 57, "shift": [1, 2, 3, 4, 17, 18], "short": 97, "skada": [0, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "skorch": 9, "softneighborhooddens": 85, "sourc": [1, 2, 3, 4, 13, 14, 15], "source_target_merg": 96, "source_target_split": 92, "sourcetargetshufflesplit": 89, "splitter": 98, "stratifieddomainshufflesplit": 90, "subspac": 18, "subspacealign": 58, "subspacealignmentadapt": 59, "supervisedscor": 86, "svc": 13, "tabl": 97, "target": [1, 2, 3, 4, 12], "test": 98, "time": [5, 10, 19, 23, 27, 98, 100], "torch": 9, "train": [6, 7, 8, 9, 13, 14, 15], "transfer": 18, "transfercomponentanalysi": 60, "transfercomponentanalysisadapt": 61, "transferjointmatch": 62, "transferjointmatchingadapt": 63, "transfersubspacelearn": 64, "transport": [8, 16], "us": [20, 24, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 60, 62, 64, 65, 67, 68, 74, 75, 76, 77, 79, 82, 84, 86, 87, 88, 89, 90, 92, 95], "usag": 12, "user": 98, "util": [0, 93, 94, 95, 96], "valid": [11, 20, 25], "visual": 25, "we": [12, 17, 18], "work": 16}})