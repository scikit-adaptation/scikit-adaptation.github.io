Search.setIndex({"alltitles": {"API and modules": [[0, null]], "Acknowledgements": [[88, "acknowledgements"]], "Adapter": [[89, "adapter"]], "Adapters and Estimators": [[89, "adapters-and-estimators"]], "Advanced DA pipeline": [[20, "advanced-da-pipeline"]], "Adversarial domain adaptation methods.": [[6, null]], "Comparison of DA classification methods": [[21, null]], "Comparison of score between reweighting methods:": [[17, "comparison-of-score-between-reweighting-methods"]], "Comparison of score between subspace methods:": [[18, "comparison-of-score-between-subspace-methods"]], "Computation times": [[5, null], [10, null], [19, null], [23, null], [27, null], [91, null]], "Contents": [[88, "contents"]], "DA Adapter pipeline": [[20, "da-adapter-pipeline"]], "DA Classifier estimator": [[20, "da-classifier-estimator"]], "DA dataset": [[20, "da-dataset"]], "DA estimator in a pipeline": [[20, "da-estimator-in-a-pipeline"]], "DA estimator with grid search": [[20, "da-estimator-with-grid-search"]], "DA estimators with score cross-validation": [[20, "da-estimators-with-score-cross-validation"]], "DA methods": [[11, "da-methods"]], "DA metrics": [[88, "da-metrics"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "DA pipeline": [[0, "da-pipeline"]], "DA validation procedures": [[11, "da-validation-procedures"]], "DASVM classifier example": [[12, null]], "Dataset": [[89, "dataset"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Deep learning DA methods": [[11, "deep-learning-da-methods"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "Deep learning domain adaptation algorithms": [[88, "deep-learning-domain-adaptation-algorithms"]], "Different OTDA methods": [[16, "different-otda-methods"]], "Divergence domain adaptation methods.": [[7, null]], "Domain Adaptation Datasets": [[11, "domain-adaptation-datasets"]], "Domain adaptation algorithms": [[88, "domain-adaptation-algorithms"]], "Examples gallery": [[11, null]], "Examples using skada.CORAL": [[28, "examples-using-skada-coral"]], "Examples using skada.CORALAdapter": [[29, "examples-using-skada-coraladapter"]], "Examples using skada.ClassRegularizerOTMapping": [[30, "examples-using-skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMappingAdapter": [[31, "examples-using-skada-classregularizerotmappingadapter"]], "Examples using skada.DASVMClassifier": [[32, "examples-using-skada-dasvmclassifier"]], "Examples using skada.DensityReweight": [[33, "examples-using-skada-densityreweight"]], "Examples using skada.DiscriminatorReweight": [[35, "examples-using-skada-discriminatorreweight"]], "Examples using skada.EntropicOTMapping": [[37, "examples-using-skada-entropicotmapping"]], "Examples using skada.EntropicOTMappingAdapter": [[38, "examples-using-skada-entropicotmappingadapter"]], "Examples using skada.GaussianReweight": [[39, "examples-using-skada-gaussianreweight"]], "Examples using skada.GaussianReweightAdapter": [[40, "examples-using-skada-gaussianreweightadapter"]], "Examples using skada.JDOTRegressor": [[41, "examples-using-skada-jdotregressor"]], "Examples using skada.KLIEPReweight": [[42, "examples-using-skada-kliepreweight"]], "Examples using skada.KMMReweight": [[44, "examples-using-skada-kmmreweight"]], "Examples using skada.KMMReweightAdapter": [[45, "examples-using-skada-kmmreweightadapter"]], "Examples using skada.LinearOTMapping": [[46, "examples-using-skada-linearotmapping"]], "Examples using skada.LinearOTMappingAdapter": [[47, "examples-using-skada-linearotmappingadapter"]], "Examples using skada.MMDLSConSMapping": [[48, "examples-using-skada-mmdlsconsmapping"]], "Examples using skada.MMDTarSReweight": [[50, "examples-using-skada-mmdtarsreweight"]], "Examples using skada.NearestNeighborReweight": [[52, "examples-using-skada-nearestneighborreweight"]], "Examples using skada.OTMapping": [[54, "examples-using-skada-otmapping"]], "Examples using skada.OTMappingAdapter": [[55, "examples-using-skada-otmappingadapter"]], "Examples using skada.PerDomain": [[56, "examples-using-skada-perdomain"]], "Examples using skada.Shared": [[57, "examples-using-skada-shared"]], "Examples using skada.SubspaceAlignment": [[58, "examples-using-skada-subspacealignment"]], "Examples using skada.TransferComponentAnalysis": [[60, "examples-using-skada-transfercomponentanalysis"]], "Examples using skada.TransferJointMatching": [[62, "examples-using-skada-transferjointmatching"]], "Examples using skada.TransferSubspaceLearning": [[64, "examples-using-skada-transfersubspacelearning"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[65, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_shifted_datasets": [[67, "examples-using-skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[68, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.deep.DANN": [[72, "examples-using-skada-deep-dann"]], "Examples using skada.deep.DeepCoral": [[73, "examples-using-skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoralLoss": [[74, "examples-using-skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepJDOT": [[75, "examples-using-skada-deep-deepjdot"]], "Examples using skada.make_da_pipeline": [[77, "examples-using-skada-make-da-pipeline"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[80, "examples-using-skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[81, "examples-using-skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.SupervisedScorer": [[83, "examples-using-skada-metrics-supervisedscorer"]], "Examples using skada.model_selection.DomainShuffleSplit": [[84, "examples-using-skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[85, "examples-using-skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[86, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[87, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "Generate classification classification dataset and plot it": [[14, "generate-classification-classification-dataset-and-plot-it"]], "Generate concept drift classification dataset and plot it": [[13, "generate-concept-drift-classification-dataset-and-plot-it"], [14, "generate-concept-drift-classification-dataset-and-plot-it"], [15, "generate-concept-drift-classification-dataset-and-plot-it"]], "Generate concept drift dataset": [[16, "generate-concept-drift-dataset"]], "Generate concept drift regression dataset and plot it": [[13, "generate-concept-drift-regression-dataset-and-plot-it"], [14, "generate-concept-drift-regression-dataset-and-plot-it"]], "How does OTDA works?": [[16, "how-does-otda-works"]], "How to use SKADA": [[20, null]], "Illustration of the DA problem": [[16, "illustration-of-the-da-problem"]], "Illustration of the Density Reweighting method": [[17, "illustration-of-the-density-reweighting-method"]], "Illustration of the Discr. reweighting method": [[17, "illustration-of-the-discr-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[17, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the KLIEPReweight method": [[17, "illustration-of-the-kliepreweight-method"]], "Illustration of the Kernel Mean Matching method": [[17, "illustration-of-the-kernel-mean-matching-method"]], "Illustration of the Nearest Neighbor reweighting method": [[17, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the OT plan": [[13, "illustration-of-the-ot-plan"]], "Illustration of the Subspace Alignment method": [[18, "illustration-of-the-subspace-alignment-method"]], "Illustration of the Transfer Component Analysis method": [[18, "illustration-of-the-transfer-component-analysis-method"]], "Illustration of the Transfer Joint Matching method": [[18, "illustration-of-the-transfer-joint-matching-method"]], "Illustration of the Transfer Subspace Learning method": [[18, "illustration-of-the-transfer-subspace-learning-method"]], "Illustration of the problem with no domain adaptation": [[17, "illustration-of-the-problem-with-no-domain-adaptation"], [18, "illustration-of-the-problem-with-no-domain-adaptation"]], "Illustration of the propagated labels": [[14, "illustration-of-the-propagated-labels"], [14, "id3"]], "Implemented algorithms": [[88, "implemented-algorithms"]], "Indices and tables": [[88, "indices-and-tables"]], "Installation": [[88, "installation"]], "JDOT Regressor and Classifier examples": [[13, null]], "Label Propagation methods": [[14, null]], "Labeling the target dataset": [[12, "labeling-the-target-dataset"]], "License": [[88, "license"]], "Load the image datasets": [[6, "load-the-image-datasets"], [7, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"]], "Main module skada": [[0, "module-skada"]], "Metrics for DA": [[89, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[90, null]], "Model Selection": [[89, "model-selection"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Multi-domain Linear Monge Alignment": [[15, null]], "Optimal Transport Domain Adaptation": [[16, "optimal-transport-domain-adaptation"]], "Optimal Transport Domain Adaptation (OTDA)": [[16, null]], "Optimal transport domain adaptation methods.": [[8, null]], "Other DA methods": [[0, "other-da-methods"]], "Pipeline": [[89, "pipeline"]], "Plot dataset source domain and shifted target domain": [[1, null], [2, null], [3, null], [4, null]], "Plot of the dataset:": [[17, "plot-of-the-dataset"], [18, "plot-of-the-dataset"]], "Plot the full logo": [[22, "plot-the-full-logo"]], "Plot the full logo in white": [[22, "plot-the-full-logo-in-white"]], "Plot the small logo": [[22, "plot-the-small-logo"]], "Plots of the dataset": [[12, "plots-of-the-dataset"]], "References": [[88, "references"]], "Reweighting Methods": [[17, "reweighting-methods"]], "Reweighting method example on covariate shift dataset": [[17, null]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[88, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "SKADA logo generation": [[22, null]], "SKADA: SciKit Domain Adaptation": [[88, null]], "Sample Domain": [[89, "sample-domain"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Scoring": [[89, "scoring"]], "Selector": [[89, "selector"]], "Short examples": [[88, "short-examples"]], "Splitters": [[89, "splitters"]], "Subspace method example on subspace shift dataset": [[18, null]], "Test-time Domain Adaptation": [[89, "test-time-domain-adaptation"]], "The subspaces methods": [[18, "the-subspaces-methods"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Train a DeepCoral model": [[7, "train-a-deepcoral-model"]], "Train a DeepJDOT model": [[8, "train-a-deepjdot-model"]], "Train a classic model": [[6, "train-a-classic-model"], [7, "train-a-classic-model"], [8, "train-a-classic-model"]], "Train a classifier on adapted data": [[15, "train-a-classifier-on-adapted-data"], [15, "id1"]], "Train a classifier on source data": [[13, "train-a-classifier-on-source-data"], [14, "train-a-classifier-on-source-data"], [15, "train-a-classifier-on-source-data"]], "Train a regressor on source data": [[13, "train-a-regressor-on-source-data"], [14, "train-a-regressor-on-source-data"]], "Train the full Labe Propagation model": [[14, "train-the-full-labe-propagation-model"]], "Train with JDOT classifier": [[13, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[13, "train-with-jdot-classifier-with-svc"]], "Train with JDOT regressor": [[13, "train-with-jdot-regressor"]], "Train with LabelProp + classifier": [[14, "train-with-labelprop-classifier"]], "Train with LabelProp and JCPOT + classifier": [[14, "train-with-labelprop-and-jcpot-classifier"]], "Training parameters": [[9, "training-parameters"]], "Training setup for deep DA method.": [[9, null]], "Training with skorch": [[9, "training-with-skorch"]], "Training with skorch with dataset": [[9, "training-with-skorch-with-dataset"]], "Training with torch": [[9, "training-with-torch"]], "Usage of the DASVMClassifier": [[12, "usage-of-the-dasvmclassifier"]], "Users Guide": [[89, null]], "Using GridSearchCV with skada": [[26, null]], "Using cross_val_score with skada": [[24, null]], "Utilities": [[0, "utilities"]], "Visualizing cross-validation behavior in skada": [[25, null]], "We generate our 2D dataset with 2 classes": [[12, "we-generate-our-2d-dataset-with-2-classes"], [17, "we-generate-our-2d-dataset-with-2-classes"], [18, "we-generate-our-2d-dataset-with-2-classes"]], "skada.CORAL": [[28, null]], "skada.CORALAdapter": [[29, null]], "skada.ClassRegularizerOTMapping": [[30, null]], "skada.ClassRegularizerOTMappingAdapter": [[31, null]], "skada.DASVMClassifier": [[32, null]], "skada.DensityReweight": [[33, null]], "skada.DensityReweightAdapter": [[34, null]], "skada.DiscriminatorReweight": [[35, null]], "skada.DiscriminatorReweightAdapter": [[36, null]], "skada.EntropicOTMapping": [[37, null]], "skada.EntropicOTMappingAdapter": [[38, null]], "skada.GaussianReweight": [[39, null]], "skada.GaussianReweightAdapter": [[40, null]], "skada.JDOTRegressor": [[41, null]], "skada.KLIEPReweight": [[42, null]], "skada.KLIEPReweightAdapter": [[43, null]], "skada.KMMReweight": [[44, null]], "skada.KMMReweightAdapter": [[45, null]], "skada.LinearOTMapping": [[46, null]], "skada.LinearOTMappingAdapter": [[47, null]], "skada.MMDLSConSMapping": [[48, null]], "skada.MMDLSConSMappingAdapter": [[49, null]], "skada.MMDTarSReweight": [[50, null]], "skada.MMDTarSReweightAdapter": [[51, null]], "skada.NearestNeighborReweight": [[52, null]], "skada.NearestNeighborReweightAdapter": [[53, null]], "skada.OTMapping": [[54, null]], "skada.OTMappingAdapter": [[55, null]], "skada.PerDomain": [[56, null]], "skada.Shared": [[57, null]], "skada.SubspaceAlignment": [[58, null]], "skada.SubspaceAlignmentAdapter": [[59, null]], "skada.TransferComponentAnalysis": [[60, null]], "skada.TransferComponentAnalysisAdapter": [[61, null]], "skada.TransferJointMatching": [[62, null]], "skada.TransferJointMatchingAdapter": [[63, null]], "skada.TransferSubspaceLearning": [[64, null]], "skada.datasets.make_dataset_from_moons_distribution": [[65, null]], "skada.datasets.make_shifted_blobs": [[66, null]], "skada.datasets.make_shifted_datasets": [[67, null]], "skada.datasets.make_variable_frequency_dataset": [[68, null]], "skada.deep.CDAN": [[69, null]], "skada.deep.CDANLoss": [[70, null]], "skada.deep.DANLoss": [[71, null]], "skada.deep.DANN": [[72, null]], "skada.deep.DeepCoral": [[73, null]], "skada.deep.DeepCoralLoss": [[74, null]], "skada.deep.DeepJDOT": [[75, null]], "skada.deep.DeepJDOTLoss": [[76, null]], "skada.make_da_pipeline": [[77, null]], "skada.metrics.CircularValidation": [[78, null]], "skada.metrics.DeepEmbeddedValidation": [[79, null]], "skada.metrics.ImportanceWeightedScorer": [[80, null]], "skada.metrics.PredictionEntropyScorer": [[81, null]], "skada.metrics.SoftNeighborhoodDensity": [[82, null]], "skada.metrics.SupervisedScorer": [[83, null]], "skada.model_selection.DomainShuffleSplit": [[84, null]], "skada.model_selection.LeaveOneDomainOut": [[85, null]], "skada.model_selection.SourceTargetShuffleSplit": [[86, null]], "skada.model_selection.StratifiedDomainShuffleSplit": [[87, null]]}, "docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_label_prop_da", "auto_examples/methods/plot_monge_alignment_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/plot_subspace", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "gen_modules/skada.CORAL", "gen_modules/skada.CORALAdapter", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.ClassRegularizerOTMappingAdapter", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DensityReweightAdapter", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.DiscriminatorReweightAdapter", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.EntropicOTMappingAdapter", "gen_modules/skada.GaussianReweight", "gen_modules/skada.GaussianReweightAdapter", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.KLIEPReweightAdapter", "gen_modules/skada.KMMReweight", "gen_modules/skada.KMMReweightAdapter", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.LinearOTMappingAdapter", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDLSConSMappingAdapter", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.MMDTarSReweightAdapter", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.NearestNeighborReweightAdapter", "gen_modules/skada.OTMapping", "gen_modules/skada.OTMappingAdapter", "gen_modules/skada.PerDomain", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.SubspaceAlignmentAdapter", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.TransferComponentAnalysisAdapter", "gen_modules/skada.TransferJointMatching", "gen_modules/skada.TransferJointMatchingAdapter", "gen_modules/skada.TransferSubspaceLearning", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "index", "quickstart", "scorer", "sg_execution_times"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_label_prop_da.rst", "auto_examples/methods/plot_monge_alignment_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/plot_subspace.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.CORALAdapter.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.ClassRegularizerOTMappingAdapter.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DensityReweightAdapter.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.DiscriminatorReweightAdapter.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.EntropicOTMappingAdapter.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.GaussianReweightAdapter.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.KLIEPReweightAdapter.rst", "gen_modules/skada.KMMReweight.rst", "gen_modules/skada.KMMReweightAdapter.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.LinearOTMappingAdapter.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDLSConSMappingAdapter.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.MMDTarSReweightAdapter.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.NearestNeighborReweightAdapter.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.OTMappingAdapter.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.SubspaceAlignmentAdapter.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.TransferComponentAnalysisAdapter.rst", "gen_modules/skada.TransferJointMatching.rst", "gen_modules/skada.TransferJointMatchingAdapter.rst", "gen_modules/skada.TransferSubspaceLearning.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "index.rst", "quickstart.md", "scorer.rst", "sg_execution_times.rst"], "indexentries": {"cdan() (in module skada.deep)": [[69, "skada.deep.CDAN", false]], "cdanloss (class in skada.deep)": [[70, "skada.deep.CDANLoss", false]], "circularvalidation (class in skada.metrics)": [[78, "skada.metrics.CircularValidation", false]], "classregularizerotmapping() (in module skada)": [[30, "skada.ClassRegularizerOTMapping", false]], "classregularizerotmappingadapter() (in module skada)": [[31, "skada.ClassRegularizerOTMappingAdapter", false]], "coral() (in module skada)": [[28, "skada.CORAL", false]], "coraladapter() (in module skada)": [[29, "skada.CORALAdapter", false]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[79, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss", false]], "danloss (class in skada.deep)": [[71, "skada.deep.DANLoss", false]], "dann() (in module skada.deep)": [[72, "skada.deep.DANN", false]], "dasvmclassifier() (in module skada)": [[32, "skada.DASVMClassifier", false]], "deepcoral() (in module skada.deep)": [[73, "skada.deep.DeepCoral", false]], "deepcoralloss (class in skada.deep)": [[74, "skada.deep.DeepCoralLoss", false]], "deepembeddedvalidation (class in skada.metrics)": [[79, "skada.metrics.DeepEmbeddedValidation", false]], "deepjdot() (in module skada.deep)": [[75, "skada.deep.DeepJDOT", false]], "deepjdotloss (class in skada.deep)": [[76, "skada.deep.DeepJDOTLoss", false]], "densityreweight() (in module skada)": [[33, "skada.DensityReweight", false]], "densityreweightadapter (class in skada)": [[34, "skada.DensityReweightAdapter", false]], "discriminatorreweight() (in module skada)": [[35, "skada.DiscriminatorReweight", false]], "discriminatorreweightadapter (class in skada)": [[36, "skada.DiscriminatorReweightAdapter", false]], "domainshufflesplit (class in skada.model_selection)": [[84, "skada.model_selection.DomainShuffleSplit", false]], "entropicotmapping() (in module skada)": [[37, "skada.EntropicOTMapping", false]], "entropicotmappingadapter() (in module skada)": [[38, "skada.EntropicOTMappingAdapter", false]], "fit() (skada.densityreweightadapter method)": [[34, "skada.DensityReweightAdapter.fit", false]], "fit() (skada.discriminatorreweightadapter method)": [[36, "skada.DiscriminatorReweightAdapter.fit", false]], "fit() (skada.gaussianreweightadapter method)": [[40, "skada.GaussianReweightAdapter.fit", false]], "fit() (skada.kliepreweightadapter method)": [[43, "skada.KLIEPReweightAdapter.fit", false]], "fit() (skada.kmmreweightadapter method)": [[45, "skada.KMMReweightAdapter.fit", false]], "fit() (skada.mmdtarsreweightadapter method)": [[51, "skada.MMDTarSReweightAdapter.fit", false]], "fit() (skada.nearestneighborreweightadapter method)": [[53, "skada.NearestNeighborReweightAdapter.fit", false]], "forward() (skada.deep.cdanloss method)": [[70, "skada.deep.CDANLoss.forward", false]], "forward() (skada.deep.danloss method)": [[71, "skada.deep.DANLoss.forward", false]], "forward() (skada.deep.deepcoralloss method)": [[74, "skada.deep.DeepCoralLoss.forward", false]], "forward() (skada.deep.deepjdotloss method)": [[76, "skada.deep.DeepJDOTLoss.forward", false]], "gaussianreweight() (in module skada)": [[39, "skada.GaussianReweight", false]], "gaussianreweightadapter (class in skada)": [[40, "skada.GaussianReweightAdapter", false]], "get_estimator() (skada.perdomain method)": [[56, "skada.PerDomain.get_estimator", false]], "get_estimator() (skada.shared method)": [[57, "skada.Shared.get_estimator", false]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[85, "skada.model_selection.LeaveOneDomainOut.get_n_splits", false]], "importanceweightedscorer (class in skada.metrics)": [[80, "skada.metrics.ImportanceWeightedScorer", false]], "jdotregressor() (in module skada)": [[41, "skada.JDOTRegressor", false]], "kliepreweight() (in module skada)": [[42, "skada.KLIEPReweight", false]], "kliepreweightadapter (class in skada)": [[43, "skada.KLIEPReweightAdapter", false]], "kmmreweight() (in module skada)": [[44, "skada.KMMReweight", false]], "kmmreweightadapter (class in skada)": [[45, "skada.KMMReweightAdapter", false]], "leaveonedomainout (class in skada.model_selection)": [[85, "skada.model_selection.LeaveOneDomainOut", false]], "linearotmapping() (in module skada)": [[46, "skada.LinearOTMapping", false]], "linearotmappingadapter() (in module skada)": [[47, "skada.LinearOTMappingAdapter", false]], "make_da_pipeline() (in module skada)": [[77, "skada.make_da_pipeline", false]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[65, "skada.datasets.make_dataset_from_moons_distribution", false]], "make_shifted_blobs() (in module skada.datasets)": [[66, "skada.datasets.make_shifted_blobs", false]], "make_shifted_datasets() (in module skada.datasets)": [[67, "skada.datasets.make_shifted_datasets", false]], "make_variable_frequency_dataset() (in module skada.datasets)": [[68, "skada.datasets.make_variable_frequency_dataset", false]], "mmdlsconsmapping() (in module skada)": [[48, "skada.MMDLSConSMapping", false]], "mmdlsconsmappingadapter() (in module skada)": [[49, "skada.MMDLSConSMappingAdapter", false]], "mmdtarsreweight() (in module skada)": [[50, "skada.MMDTarSReweight", false]], "mmdtarsreweightadapter (class in skada)": [[51, "skada.MMDTarSReweightAdapter", false]], "module": [[0, "module-skada", false], [0, "module-skada.datasets", false], [0, "module-skada.deep", false], [0, "module-skada.metrics", false], [0, "module-skada.model_selection", false]], "nearestneighborreweight() (in module skada)": [[52, "skada.NearestNeighborReweight", false]], "nearestneighborreweightadapter (class in skada)": [[53, "skada.NearestNeighborReweightAdapter", false]], "otmapping() (in module skada)": [[54, "skada.OTMapping", false]], "otmappingadapter() (in module skada)": [[55, "skada.OTMappingAdapter", false]], "perdomain (class in skada)": [[56, "skada.PerDomain", false]], "predictionentropyscorer (class in skada.metrics)": [[81, "skada.metrics.PredictionEntropyScorer", false]], "set_decision_function_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_decision_function_request", false]], "set_decision_function_request() (skada.shared method)": [[57, "skada.Shared.set_decision_function_request", false]], "set_fit_request() (skada.densityreweightadapter method)": [[34, "skada.DensityReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.discriminatorreweightadapter method)": [[36, "skada.DiscriminatorReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.gaussianreweightadapter method)": [[40, "skada.GaussianReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kliepreweightadapter method)": [[43, "skada.KLIEPReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kmmreweightadapter method)": [[45, "skada.KMMReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.mmdtarsreweightadapter method)": [[51, "skada.MMDTarSReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.nearestneighborreweightadapter method)": [[53, "skada.NearestNeighborReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_fit_request", false]], "set_fit_request() (skada.shared method)": [[57, "skada.Shared.set_fit_request", false]], "set_partial_fit_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_partial_fit_request", false]], "set_partial_fit_request() (skada.shared method)": [[57, "skada.Shared.set_partial_fit_request", false]], "set_predict_log_proba_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.shared method)": [[57, "skada.Shared.set_predict_log_proba_request", false]], "set_predict_proba_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_predict_proba_request", false]], "set_predict_proba_request() (skada.shared method)": [[57, "skada.Shared.set_predict_proba_request", false]], "set_predict_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_predict_request", false]], "set_predict_request() (skada.shared method)": [[57, "skada.Shared.set_predict_request", false]], "set_score_request() (skada.metrics.circularvalidation method)": [[78, "skada.metrics.CircularValidation.set_score_request", false]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[79, "skada.metrics.DeepEmbeddedValidation.set_score_request", false]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[80, "skada.metrics.ImportanceWeightedScorer.set_score_request", false]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[81, "skada.metrics.PredictionEntropyScorer.set_score_request", false]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[82, "skada.metrics.SoftNeighborhoodDensity.set_score_request", false]], "set_score_request() (skada.metrics.supervisedscorer method)": [[83, "skada.metrics.SupervisedScorer.set_score_request", false]], "set_score_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_score_request", false]], "set_score_request() (skada.shared method)": [[57, "skada.Shared.set_score_request", false]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[84, "skada.model_selection.DomainShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[85, "skada.model_selection.LeaveOneDomainOut.set_split_request", false]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[86, "skada.model_selection.SourceTargetShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[87, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request", false]], "set_transform_request() (skada.densityreweightadapter method)": [[34, "skada.DensityReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.discriminatorreweightadapter method)": [[36, "skada.DiscriminatorReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.gaussianreweightadapter method)": [[40, "skada.GaussianReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kliepreweightadapter method)": [[43, "skada.KLIEPReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kmmreweightadapter method)": [[45, "skada.KMMReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.mmdtarsreweightadapter method)": [[51, "skada.MMDTarSReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.nearestneighborreweightadapter method)": [[53, "skada.NearestNeighborReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.perdomain method)": [[56, "skada.PerDomain.set_transform_request", false]], "set_transform_request() (skada.shared method)": [[57, "skada.Shared.set_transform_request", false]], "shared (class in skada)": [[57, "skada.Shared", false]], "skada": [[0, "module-skada", false]], "skada.datasets": [[0, "module-skada.datasets", false]], "skada.deep": [[0, "module-skada.deep", false]], "skada.metrics": [[0, "module-skada.metrics", false]], "skada.model_selection": [[0, "module-skada.model_selection", false]], "softneighborhooddensity (class in skada.metrics)": [[82, "skada.metrics.SoftNeighborhoodDensity", false]], "sourcetargetshufflesplit (class in skada.model_selection)": [[86, "skada.model_selection.SourceTargetShuffleSplit", false]], "split() (skada.model_selection.leaveonedomainout method)": [[85, "skada.model_selection.LeaveOneDomainOut.split", false]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[87, "skada.model_selection.StratifiedDomainShuffleSplit.split", false]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[87, "skada.model_selection.StratifiedDomainShuffleSplit", false]], "subspacealignment() (in module skada)": [[58, "skada.SubspaceAlignment", false]], "subspacealignmentadapter() (in module skada)": [[59, "skada.SubspaceAlignmentAdapter", false]], "supervisedscorer (class in skada.metrics)": [[83, "skada.metrics.SupervisedScorer", false]], "transfercomponentanalysis() (in module skada)": [[60, "skada.TransferComponentAnalysis", false]], "transfercomponentanalysisadapter() (in module skada)": [[61, "skada.TransferComponentAnalysisAdapter", false]], "transferjointmatching() (in module skada)": [[62, "skada.TransferJointMatching", false]], "transferjointmatchingadapter() (in module skada)": [[63, "skada.TransferJointMatchingAdapter", false]], "transfersubspacelearning() (in module skada)": [[64, "skada.TransferSubspaceLearning", false]]}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[28, 1, 1, "", "CORAL"], [29, 1, 1, "", "CORALAdapter"], [30, 1, 1, "", "ClassRegularizerOTMapping"], [31, 1, 1, "", "ClassRegularizerOTMappingAdapter"], [32, 1, 1, "", "DASVMClassifier"], [33, 1, 1, "", "DensityReweight"], [34, 2, 1, "", "DensityReweightAdapter"], [35, 1, 1, "", "DiscriminatorReweight"], [36, 2, 1, "", "DiscriminatorReweightAdapter"], [37, 1, 1, "", "EntropicOTMapping"], [38, 1, 1, "", "EntropicOTMappingAdapter"], [39, 1, 1, "", "GaussianReweight"], [40, 2, 1, "", "GaussianReweightAdapter"], [41, 1, 1, "", "JDOTRegressor"], [42, 1, 1, "", "KLIEPReweight"], [43, 2, 1, "", "KLIEPReweightAdapter"], [44, 1, 1, "", "KMMReweight"], [45, 2, 1, "", "KMMReweightAdapter"], [46, 1, 1, "", "LinearOTMapping"], [47, 1, 1, "", "LinearOTMappingAdapter"], [48, 1, 1, "", "MMDLSConSMapping"], [49, 1, 1, "", "MMDLSConSMappingAdapter"], [50, 1, 1, "", "MMDTarSReweight"], [51, 2, 1, "", "MMDTarSReweightAdapter"], [52, 1, 1, "", "NearestNeighborReweight"], [53, 2, 1, "", "NearestNeighborReweightAdapter"], [54, 1, 1, "", "OTMapping"], [55, 1, 1, "", "OTMappingAdapter"], [56, 2, 1, "", "PerDomain"], [57, 2, 1, "", "Shared"], [58, 1, 1, "", "SubspaceAlignment"], [59, 1, 1, "", "SubspaceAlignmentAdapter"], [60, 1, 1, "", "TransferComponentAnalysis"], [61, 1, 1, "", "TransferComponentAnalysisAdapter"], [62, 1, 1, "", "TransferJointMatching"], [63, 1, 1, "", "TransferJointMatchingAdapter"], [64, 1, 1, "", "TransferSubspaceLearning"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [77, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"]], "skada.DensityReweightAdapter": [[34, 3, 1, "", "fit"], [34, 3, 1, "", "set_fit_request"], [34, 3, 1, "", "set_transform_request"]], "skada.DiscriminatorReweightAdapter": [[36, 3, 1, "", "fit"], [36, 3, 1, "", "set_fit_request"], [36, 3, 1, "", "set_transform_request"]], "skada.GaussianReweightAdapter": [[40, 3, 1, "", "fit"], [40, 3, 1, "", "set_fit_request"], [40, 3, 1, "", "set_transform_request"]], "skada.KLIEPReweightAdapter": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "set_fit_request"], [43, 3, 1, "", "set_transform_request"]], "skada.KMMReweightAdapter": [[45, 3, 1, "", "fit"], [45, 3, 1, "", "set_fit_request"], [45, 3, 1, "", "set_transform_request"]], "skada.MMDTarSReweightAdapter": [[51, 3, 1, "", "fit"], [51, 3, 1, "", "set_fit_request"], [51, 3, 1, "", "set_transform_request"]], "skada.NearestNeighborReweightAdapter": [[53, 3, 1, "", "fit"], [53, 3, 1, "", "set_fit_request"], [53, 3, 1, "", "set_transform_request"]], "skada.PerDomain": [[56, 3, 1, "", "get_estimator"], [56, 3, 1, "", "set_decision_function_request"], [56, 3, 1, "", "set_fit_request"], [56, 3, 1, "", "set_partial_fit_request"], [56, 3, 1, "", "set_predict_log_proba_request"], [56, 3, 1, "", "set_predict_proba_request"], [56, 3, 1, "", "set_predict_request"], [56, 3, 1, "", "set_score_request"], [56, 3, 1, "", "set_transform_request"]], "skada.Shared": [[57, 3, 1, "", "get_estimator"], [57, 3, 1, "", "set_decision_function_request"], [57, 3, 1, "", "set_fit_request"], [57, 3, 1, "", "set_partial_fit_request"], [57, 3, 1, "", "set_predict_log_proba_request"], [57, 3, 1, "", "set_predict_proba_request"], [57, 3, 1, "", "set_predict_request"], [57, 3, 1, "", "set_score_request"], [57, 3, 1, "", "set_transform_request"]], "skada.datasets": [[65, 1, 1, "", "make_dataset_from_moons_distribution"], [66, 1, 1, "", "make_shifted_blobs"], [67, 1, 1, "", "make_shifted_datasets"], [68, 1, 1, "", "make_variable_frequency_dataset"]], "skada.deep": [[69, 1, 1, "", "CDAN"], [70, 2, 1, "", "CDANLoss"], [71, 2, 1, "", "DANLoss"], [72, 1, 1, "", "DANN"], [73, 1, 1, "", "DeepCoral"], [74, 2, 1, "", "DeepCoralLoss"], [75, 1, 1, "", "DeepJDOT"], [76, 2, 1, "", "DeepJDOTLoss"]], "skada.deep.CDANLoss": [[70, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[71, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[74, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[76, 3, 1, "", "forward"]], "skada.metrics": [[78, 2, 1, "", "CircularValidation"], [79, 2, 1, "", "DeepEmbeddedValidation"], [80, 2, 1, "", "ImportanceWeightedScorer"], [81, 2, 1, "", "PredictionEntropyScorer"], [82, 2, 1, "", "SoftNeighborhoodDensity"], [83, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[78, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[79, 3, 1, "", "cross_entropy_loss"], [79, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[80, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[81, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[82, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[83, 3, 1, "", "set_score_request"]], "skada.model_selection": [[84, 2, 1, "", "DomainShuffleSplit"], [85, 2, 1, "", "LeaveOneDomainOut"], [86, 2, 1, "", "SourceTargetShuffleSplit"], [87, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[84, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[85, 3, 1, "", "get_n_splits"], [85, 3, 1, "", "set_split_request"], [85, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[86, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[87, 3, 1, "", "set_split_request"], [87, 3, 1, "", "split"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [3, 4, 7, 12, 17, 18, 21, 22, 24, 25, 26, 49, 52, 53, 55, 64, 67, 69, 72, 73, 75, 80, 83, 88, 89, 90], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 50, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 82, 84, 87, 88, 89, 90, 91], "00": [5, 7, 10, 16, 19, 23, 27, 91], "0000": 6, "0000ff": 21, "001": [17, 21, 25], "0052": 8, "00e": 21, "00it": 7, "01": [5, 6, 7, 8, 10, 12, 13, 19, 20, 21, 23, 24, 25, 26, 62, 63, 64, 91], "02": [7, 18, 19, 20, 25, 91], "02291": 88, "03": 26, "0365": 8, "04": [7, 10, 19, 24, 91], "045": 27, "0472": 6, "0473": 6, "0481": 7, "0495": 8, "04it": 7, "05": [3, 21, 26, 41, 48, 49, 82, 91], "0574": 6, "0596": 6, "06": [13, 14, 21, 42, 43, 44, 45, 50, 51], "060_4_0699": 17, "0630863010883331": 9, "0643": 7, "07": [7, 10, 91], "07117994f0971b2fc2df95adb373c31c3d313442": 88, "075493682966016": 13, "08": [21, 26, 30, 31, 37, 38, 46, 47], "0854": 8, "09": [27, 77, 91], "0926": 6, "0945": 7, "0974": 8, "0992": 9, "0996": 6, "0x7f204dd36b30": 12, "1": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 56, 57, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "10": [1, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 20, 21, 22, 25, 27, 30, 31, 41, 48, 49, 50, 51, 65, 66, 68, 84, 85, 86, 87, 88], "100": [4, 7, 12, 13, 14, 15, 17, 18, 21, 22, 41, 42, 43, 44, 45, 48, 49, 62, 63, 64, 65, 66, 67, 68], "1000": [4, 17, 21, 32, 37, 38, 42, 43, 44, 45, 50, 51], "100000": [21, 54, 55], "1009": 88, "100_000": [54, 55], "10155": [47, 88], "1018": 8, "10288": 88, "1044": 88, "105": [1, 88], "10e": [30, 31, 37, 38], "11": [7, 32, 78, 88], "110": 22, "1100": 4, "1112": 6, "1161": 7, "1184864": 7, "12": [16, 17, 18, 73, 74, 88], "120": 22, "121": 16, "1215": 7, "122": 16, "124": 19, "125": 17, "128": [6, 7, 8, 9], "1295990": 7, "12it": 7, "13": [7, 19, 21, 23, 75, 76, 88, 91], "131": 16, "131072": 7, "132": 16, "1321138905671275": 16, "133": 16, "14": [1, 2, 3, 8, 10, 16, 71, 88, 91], "1410": [18, 62, 63, 88], "1417": [18, 62, 63, 88], "143170500": 7, "1443686989830857": 15, "15": [1, 2, 3, 4, 12, 13, 17, 18, 21, 22, 23, 25, 72, 79, 88], "153": 88, "1532": 6, "1574": 9, "15th": [75, 76], "16": [7, 10, 17, 18, 69, 70, 88, 91], "162366": 7, "162592": 7, "1638": 7, "1648877": 7, "16785": 88, "16793": 88, "169": 22, "17": [80, 88], "171": 88, "1711": 88, "179": 22, "17it": 7, "18": [22, 81, 88], "18279941870395425": 13, "1831726": 7, "1847": 7, "18530735809550572": 13, "18651005625724792": 9, "189": 22, "19": [82, 88], "1905": [47, 88], "1915": 8, "195149168": 7, "1961": 8, "199": [22, 88], "1d": [52, 53], "1e": [6, 7, 8, 9, 21, 24, 30, 31, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 77, 79], "1nn": [17, 21], "2": [1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 16, 20, 21, 22, 25, 52, 53, 62, 63, 64, 65, 66, 67, 82, 84, 87, 88, 89], "20": [2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 26, 79, 88, 89, 90, 91], "200": [21, 30, 31], "2000": [17, 35, 36, 39, 40, 88], "2005": 88, "2007": [17, 42, 43, 44, 45, 80, 88], "2008": [17, 88], "2009": [32, 78, 88], "2010": [18, 64, 88], "2011": [18, 60, 61], "2012": [2, 3, 17, 52, 53, 67, 88], "2013": [18, 48, 49, 50, 51, 58, 59, 88], "2014": [14, 18, 62, 63, 88], "2015": [71, 88], "2016": [7, 69, 70, 72, 73, 74, 88], "2017": [13, 28, 29, 41, 88], "2018": [75, 76, 81, 88], "2019": [47, 79, 88], "2021": [82, 88], "2024": 88, "2050": 7, "21": [12, 48, 49, 50, 51, 88, 91], "210": 88, "2102": 88, "2121": 9, "21420445266620786": 13, "218866137683906": 16, "21972928": 7, "21e": 21, "21it": 7, "22": 88, "220": [24, 27, 91], "227": 88, "2277296": 7, "229376": 7, "22983129554592746": 13, "22it": 7, "22nd": 88, "23": [44, 45, 88], "236252": 7, "24": [17, 52, 53, 88], "240px": 89, "241": 16, "2415": 6, "242": 16, "243": 16, "244": [16, 88], "245": 16, "246": 16, "247": 16, "248": 16, "249": 88, "25": [7, 9, 17, 18, 68, 88], "2512": 9, "256": [9, 22], "25it": 7, "26": [18, 62, 63, 88], "265": [1, 5, 91], "266": 22, "27": [18, 21, 64, 67, 88], "2722": 8, "276": 22, "279": 88, "28": [14, 88], "283": [18, 19, 91], "286": [1, 22], "2880": 8, "288146109474553": 16, "2888": 6, "28881": 7, "2889": 7, "2898": 9, "29": 88, "2945": 6, "2960": 88, "2967": 88, "2997": 6, "2d": [13, 14, 15, 20], "2f": [13, 14, 16, 17, 18, 20, 21, 24], "2x1": 67, "2x2": 67, "3": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 36, 40, 42, 43, 44, 45, 50, 51, 53, 56, 57, 66, 68, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "30": [13, 21, 24, 26, 52, 53, 88, 89, 90], "3006": 6, "304": [26, 27, 91], "3050": 6, "306": [14, 88], "31": 88, "310098338155625": 15, "314": [14, 88], "32": [9, 88], "32768": 7, "3334": 6, "335625": 7, "336863129384494": [13, 14, 15], "3446": 7, "35": 88, "352173719537829": 14, "36": 88, "366": [13, 19, 91], "367467726151268": 14, "3676169789533272": [13, 14, 15], "3749": 6, "375": 17, "384": [20, 23, 91], "39": 10, "3962": 7, "3971": 7, "3981": 7, "3986": 6, "3996": 7, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 49, 84, 87, 88, 89, 90], "40": [22, 88], "400": 22, "4007": 9, "400px": 89, "4019": 8, "403": 7, "4063": 7, "4096": 69, "410": [16, 19, 91], "42": [2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 26], "42031816": 7, "4269298070320042": 14, "43": 15, "4320": 8, "443": 88, "447": 88, "45": [2, 3, 67], "450": 88, "453": [2, 5, 91], "4542": 7, "458752": 7, "45933195939893": [13, 14], "463": 88, "464886123797522": 15, "48": 25, "481": [8, 10, 91], "4942": 8, "4977": 7, "4978": 9, "4986": 8, "49it": 7, "5": [1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 41, 42, 43, 48, 49, 84, 87, 88, 89, 90], "50": [1, 7, 13, 14, 15, 18], "500": [12, 91], "51": [1, 13], "5167": 6, "521": [2, 3, 25, 27, 67, 91], "5244703189443227": 16, "530": [2, 3, 67], "531": 16, "535": [4, 5, 14, 21, 91], "5358": 8, "537": [7, 10, 91], "53817259426296": [13, 14, 15], "542": [3, 5, 91], "5585726101363702": 14, "564": [21, 23, 91], "57": 14, "570318895725525": [13, 14], "58": 24, "5853": 7, "587": 4, "59": 88, "5986": 6, "6": [12, 13, 14, 17, 18, 22, 24, 25, 30, 31, 37, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 84, 87, 88], "60": [17, 88], "603": 18, "6031": 6, "606": [9, 10, 91], "6068": 8, "608": 10, "624315": 7, "625": 17, "64": [9, 88], "65536": 7, "663": [14, 19, 91], "697": [15, 19, 91], "699": [17, 88], "6999": 7, "6c4c7c": [17, 18], "7": [4, 6, 7, 12, 13, 14, 16, 17, 18, 19, 22, 25, 46, 47, 52, 67, 84, 87, 88], "7124": 88, "713": [12, 19, 91], "7133": 88, "71it": 7, "72": [6, 7, 8, 9], "72222222": [89, 90], "744989537549497": [13, 14], "746": [17, 88], "756925382279493": 15, "76": 14, "77": [13, 14], "770": 88, "787": 88, "78it": 7, "7917": 7, "795": 5, "7964573229829714": [13, 14, 15], "8": [1, 2, 3, 4, 6, 9, 12, 13, 16, 17, 18, 21, 25, 26, 58, 59, 67, 84, 87, 88], "80": [3, 17, 18, 22], "819": 88, "81944444": [89, 90], "82": 13, "827": 88, "82it": 7, "83333333": [89, 90], "84": 13, "84375": 20, "849": 88, "85": 3, "858": 88, "8617363344051447": 6, "87": 14, "8906752411575563": 7, "8938906752411575": 6, "8977": 8, "9": [1, 6, 7, 8, 12, 13, 14, 15, 16, 18, 20, 21, 22, 26, 30, 31, 37, 38, 60, 61, 67, 84, 87, 88], "90": [18, 22, 88], "9008": 8, "909": 14, "90it": 7, "917504": 7, "9184": 88, "9193": 88, "9216": 9, "929": [18, 23, 64], "942": [18, 64], "9453376205787781": 7, "9485530546623794": 8, "9517684887459807": 8, "9556": 8, "95625": [89, 90], "9566": 9, "96": 18, "9610814126500358": [13, 14], "968": [18, 21], "97": [13, 88], "975": [89, 90], "98": [12, 17, 24], "981": [22, 23, 91], "984": [6, 10, 91], "9875": 15, "9894": 8, "99": [13, 14, 17], "991": 21, "9912422": 7, "992": [17, 19, 91], "9983": 7, "A": [2, 3, 13, 14, 16, 17, 21, 30, 31, 32, 37, 38, 41, 44, 45, 46, 47, 54, 55, 58, 60, 62, 64, 67, 69, 72, 73, 75, 78, 79, 80, 83, 88, 89], "As": [12, 18, 25], "At": [12, 67], "But": 20, "By": [65, 66, 67, 68, 77], "For": [17, 20, 25, 41, 52, 53, 77, 88, 89], "If": [20, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 52, 53, 54, 55, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 79, 80, 81, 83, 84, 86, 88, 89], "In": [7, 14, 17, 18, 20, 22, 28, 29, 35, 36, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 88, 89, 90], "It": [20, 32, 62, 63, 65, 66, 67, 68, 78, 89], "Its": [17, 42, 43, 89], "No": [1, 22, 24], "On": 14, "One": [1, 20, 68, 85, 88], "Such": [17, 89], "The": [1, 2, 3, 4, 12, 16, 17, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "Then": [16, 20, 24, 26, 78], "These": 17, "To": [6, 7, 8, 9, 18, 21, 24, 89, 90], "Will": [17, 18, 67], "With": 89, "_": [2, 3, 12, 24, 25, 26, 29, 69, 72, 81, 82, 89], "__init__": [14, 21], "__name__": 25, "_barycent": 14, "_call_impl": 6, "_mnist_usp": [6, 7, 8, 9], "_self_label": 12, "_sinkhorn": 16, "_subspac": 18, "ab": 18, "abl": 13, "about": 12, "absenc": 89, "absolut": [12, 84, 89], "ac": 17, "acc": [13, 14, 16], "acc_": [13, 14], "acc_classreg": 16, "acc_linear": 16, "acc_s_jcpot": 14, "acc_sinkhorn": 16, "acc_sourc": 16, "acc_t": [13, 14], "acc_target": 16, "accept": [52, 53, 77, 89], "access": [56, 57, 89], "accord": 69, "account": [17, 89], "accur": [18, 79, 88], "accuraci": [13, 14, 15, 16, 17, 18, 20, 21, 24], "achiev": 89, "across": [18, 42, 43, 58, 59, 65, 66, 67, 68, 79], "act": 89, "activ": 88, "ad": [12, 18, 32, 34, 36, 40, 43, 45, 46, 47, 51, 52, 53, 56, 57, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "adam": 9, "adapt": [0, 10, 13, 14, 19, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91], "add_ax": 3, "add_domain": 89, "addit": [52, 53, 89], "advanc": [13, 28, 29, 88], "advantag": 77, "adversari": [10, 11, 69, 70, 72, 88, 91], "affect": [52, 53], "after": 89, "again": 20, "aim": 18, "aism": 17, "ajakan": 88, "al": [17, 18, 42, 43, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 79, 80, 81, 82], "alain": 88, "alaiz": [2, 3, 67], "alexandr": 88, "algorithm": [12, 14, 21, 30, 31, 32, 37, 38, 52, 53, 54, 55, 62, 63, 64, 89], "alia": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "align": [7, 11, 13, 19, 21, 28, 29, 46, 47, 58, 59, 67, 73, 74, 77, 81, 88, 91], "all": [4, 11, 15, 18, 20, 25, 32, 52, 53, 58, 59, 65, 66, 67, 68, 88, 89, 91], "allow": [20, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "allow_sourc": [15, 16, 18, 34, 36, 40, 43, 45, 51, 53, 56, 57], "along": 41, "alpha": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 41], "alpha0": 22, "alpha_": [43, 51], "alphalist": 22, "alreadi": [77, 89], "also": [9, 13, 14, 15, 16, 20, 24, 25, 69, 72, 84, 88, 89], "alternat": 41, "although": [69, 72], "alwai": [65, 66, 67, 68, 85, 89], "amazon": 89, "amazonaw": 7, "ambrois": 88, "among": [65, 66, 67, 68], "amsterdam": 88, "an": [6, 16, 17, 18, 20, 22, 34, 36, 40, 42, 43, 45, 51, 52, 53, 56, 57, 58, 59, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "anal": 88, "analogi": 89, "analysi": [16, 30, 31, 32, 37, 38, 46, 54, 55, 60, 61, 78, 88], "ani": [12, 17, 20, 32, 41, 88, 89], "annal": [17, 88], "antoin": [17, 18, 88], "antoinecolla": 18, "api": [20, 88, 89, 90], "apollin": 88, "appli": 81, "applic": [17, 42, 43, 88], "approach": [17, 41, 51], "appropri": [52, 53], "approxim": [17, 36, 39, 40], "ar": [2, 3, 12, 14, 16, 17, 18, 20, 24, 25, 28, 29, 34, 36, 40, 43, 44, 45, 49, 51, 52, 53, 56, 57, 58, 59, 64, 66, 67, 69, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "arang": 25, "arbitrari": [52, 53], "arg": 6, "argument": [6, 52, 53, 89], "around": 89, "arrai": [12, 17, 20, 22, 25, 29, 34, 36, 40, 42, 43, 45, 49, 50, 51, 52, 53, 61, 65, 66, 67, 68, 71, 79, 84, 85, 87, 89, 90], "array_lik": [65, 66, 67, 68], "artifici": 88, "arxiv": [47, 88], "as_integer_ratio": 41, "as_sourc": [6, 7, 8, 9, 18, 21, 24, 25, 26, 89], "as_target": [6, 7, 8, 9, 18, 21, 24, 25, 26, 89], "assign": 89, "associ": [65, 66, 67, 68], "assum": [17, 18, 22, 41, 52, 53], "assume_cent": [21, 28, 29], "assumpt": [17, 51], "attempt": [52, 53], "attribut": [29, 31, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 55, 59, 61, 63, 65, 66, 67, 68, 77, 80], "author": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 88], "auto": [20, 21, 28, 29, 39, 40, 52, 53], "auto_exampl": [5, 10, 19, 23, 27], "auto_examples_jupyt": 11, "auto_examples_python": 11, "automat": [20, 24, 28, 29, 39, 40, 77, 84, 89], "autumn": [3, 12], "avail": [16, 20, 44, 45, 77, 88, 89, 90], "averag": 15, "avoid": [37, 38, 54, 55, 79, 89, 90], "awai": [52, 53], "awar": 89, "ax": [4, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "axi": [12, 13, 14, 15, 16, 20, 22], "axvlin": 24, "b": [17, 18, 44, 45, 49, 64, 87, 88, 89], "b_": 49, "backward": 9, "balanc": 22, "balanced_accuracy_scor": 78, "ball_tre": [52, 53], "balltre": [52, 53], "band": [12, 68], "band_siz": [4, 68], "bandwidth": [17, 21], "baochen": [7, 28, 29, 73, 74, 88], "barh": 24, "barycent": 88, "base": [9, 12, 13, 16, 17, 18, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 64, 76, 78, 79, 80, 81, 82, 88, 89], "base_classifi": [17, 18], "base_estim": [12, 13, 17, 20, 21, 24, 26, 28, 30, 32, 33, 35, 37, 39, 41, 42, 44, 46, 48, 50, 52, 54, 56, 57, 58, 60, 62, 64, 77, 89, 90], "base_method": [21, 64], "base_module_": 9, "baseadapt": 89, "baseestim": [32, 56, 57, 77], "baseselector": 77, "basura": [18, 58, 59], "batch_siz": [6, 7, 8, 9], "bbox_inch": 22, "bceloss": [69, 70, 72], "becaus": [14, 89, 90], "been": [6, 12, 88], "befor": [14, 21, 28, 29, 30, 31, 37, 38, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 64, 77], "behav": 25, "behavior": [11, 27, 41, 67, 84, 85, 86, 87, 91], "being": 89, "below": [16, 20, 65, 66, 67, 68, 88, 89, 90], "benchmark": 0, "benjamin": [75, 76], "best": [20, 26, 42, 43, 89, 90], "best_estimator_": 26, "best_gamma_": 43, "best_params_": [20, 26], "best_reg_": 26, "beta": 51, "better": 13, "between": [13, 14, 16, 22, 24, 28, 29, 39, 40, 41, 43, 45, 47, 49, 51, 52, 53, 60, 61, 62, 63, 64, 70, 71, 74, 76, 78, 79, 82, 84, 89, 90], "bf": 22, "bharath": [75, 76], "bhushan": [75, 76], "bia": [2, 3, 9, 17, 21, 44, 45, 46, 47, 49, 67, 88], "bibtex": 88, "binari": [21, 24, 25, 26, 67, 89, 90], "bit": 89, "black": 12, "blob": 66, "block": 89, "blue": [22, 25], "bool": [28, 29, 32, 34, 36, 40, 41, 43, 44, 45, 46, 47, 51, 52, 53, 56, 57, 63, 64, 66, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "boolean": [65, 66, 67, 68], "borgwardt": [17, 44, 45, 88], "both": [17, 18, 51, 84, 88, 89], "bottom": [1, 2, 3, 4], "bound": [44, 45, 47, 88], "boundari": [12, 13, 14, 15, 21, 52, 53], "break_ti": 21, "bregman": [14, 16, 18, 64, 88], "brute": [52, 53], "bruzzon": [32, 78, 88], "bsd": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 88], "bueno": [3, 12, 17, 18, 88], "build": 89, "built": 89, "bunch": [65, 66, 67, 68, 89], "butscher": [14, 88], "bz2": 7, "b\u00fcnau": [17, 88], "c": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26], "c0": [13, 22], "c1": 13, "c2": 22, "c3": 22, "c7": [16, 22], "c_": [13, 14], "cach": 77, "cache_s": 21, "call": [1, 2, 3, 4, 6, 16, 20, 21, 42, 43, 58, 59, 65, 66, 67, 68, 79, 85, 89], "callabl": [52, 53, 77, 78, 79, 80, 83], "came": 12, "can": [12, 13, 14, 16, 20, 25, 26, 32, 37, 38, 41, 52, 53, 54, 55, 85, 88, 89, 90], "cannot": 77, "cao": 88, "captur": 70, "carri": 21, "case": [12, 13, 14, 17, 18, 20, 52, 53, 78, 79, 80, 81, 82, 83, 89], "cast": 88, "categor": [65, 66, 67, 68], "cavazza": 88, "cax": 3, "cb": 3, "cbar_ax": 3, "cdan": [70, 88], "ceil_mod": 9, "center": [25, 28, 29, 42, 43, 65, 66, 67], "center_cov_shift": 67, "centers_": 43, "chain": 77, "chan": 4, "chanc": [89, 90], "chang": [6, 13, 22, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "channel": 68, "chawla": [2, 3, 67], "check_result": [14, 21], "choic": [6, 20, 89], "choos": [20, 42, 43, 67], "chosen": 43, "circl": 12, "circleci": [1, 6, 7, 8, 9, 14, 16, 18, 21, 22], "circular": [32, 78, 88], "citat": 88, "cite": 88, "citeseerx": 88, "cjlin": 7, "clariti": 89, "class": [4, 9, 14, 16, 20, 21, 22, 25, 30, 31, 32, 34, 36, 40, 43, 45, 51, 53, 56, 57, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "class_weight": 21, "classic": 18, "classif": [2, 3, 6, 7, 8, 9, 11, 16, 23, 24, 26, 28, 30, 32, 33, 35, 37, 39, 42, 46, 48, 50, 52, 53, 54, 58, 60, 64, 67, 78, 88, 91], "classifi": [11, 16, 17, 18, 19, 21, 22, 32, 35, 36, 41, 65, 67, 69, 70, 72, 79, 88, 91], "classificationtechniqu": 88, "classregularizedotmap": 30, "classregularizerotmap": 21, "classregularizerotmappingadapt": [16, 21, 89], "claus": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 88], "clf": [13, 14, 15, 16, 17, 18, 20, 21, 22], "clf_jcpot": 14, "clf_on_subspac": 18, "clf_otda": 16, "clf_otda_linear": 16, "clf_otda_sinkhorn": 16, "clf_otds_classreg": 16, "clone": [6, 7, 8, 9, 12, 18, 21, 77, 89], "close": 12, "closer": [17, 52, 53], "closest": 89, "cluster": [65, 66, 67, 68], "cluster_std": 66, "cm": [17, 18, 21, 25], "cm_bright": 21, "cmap": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25], "cmap_cv": 25, "cmap_data": 25, "cmap_domain": 25, "co": 22, "code": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 88, 89], "coef0": [21, 44, 45], "colla": [18, 88], "collabor": 88, "collect": [69, 72, 73, 75], "color": [12, 17, 18, 21, 22, 24, 25], "colorbar": 3, "colormap": [1, 17, 18, 22], "com": [7, 17, 18, 88], "combin": 89, "come": [25, 84], "common": 89, "compar": [13, 24, 89], "comparison": [11, 23, 28, 30, 33, 35, 37, 39, 42, 46, 48, 50, 52, 54, 58, 60, 64, 67, 91], "compat": [20, 85, 88, 89], "complement": 84, "complet": 77, "complic": 89, "compon": [58, 59, 60, 61, 62, 63, 64, 88], "compos": [25, 84], "comput": [13, 14, 16, 17, 18, 22, 24, 28, 29, 42, 43, 51, 52, 53, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 88, 89], "compute_weight": 17, "con": 88, "concaten": [12, 89], "concentr": [47, 88], "concept": [2, 3, 20, 67, 89], "concept_drift": [2, 3, 13, 14, 15, 16, 20, 21, 24, 25, 26, 67], "condit": [48, 49, 50, 51, 69, 70, 88], "confer": [14, 18, 58, 59, 62, 63, 75, 76, 82, 88], "consid": [52, 53, 89], "consider": 89, "consist": [1, 2, 3, 4, 12], "constant": [18, 62, 63, 67, 79], "construct": [6, 7, 8, 9, 18, 21, 52, 53, 77], "constructor": 77, "consum": 77, "contact": 18, "contain": [28, 30, 33, 35, 37, 39, 42, 44, 46, 48, 50, 52, 53, 54, 58, 60, 62, 64, 89], "context": [52, 53], "contour": 17, "control": 84, "conv1": 9, "conv2": 9, "conv2d": 9, "convei": 21, "conveni": 89, "convent": [65, 66, 67, 68, 89], "converg": [14, 16, 21, 30, 31, 37, 38, 41, 54, 55], "convolut": 88, "coolwarm": 25, "copi": [6, 7, 8, 9, 18, 21, 22, 77], "coral": [7, 20, 21, 48, 73, 74, 88], "coraladapt": [20, 21, 88, 89], "coraladapter__reg": [20, 88], "core": 89, "correct": [17, 44, 45, 88], "correl": [7, 28, 29, 73, 74, 81, 88], "correspond": [14, 41, 68], "could": [16, 89], "count": 17, "coupling_": 16, "courti": [13, 16, 30, 31, 37, 38, 41, 46, 54, 55, 75, 76, 88], "cov_source_": 40, "cov_source_inv_sqrt_": 29, "cov_target_": 40, "cov_target_sqrt_": 29, "covari": [2, 3, 11, 12, 19, 28, 29, 33, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 52, 64, 67, 73, 74, 80, 88, 91], "covariate_shift": [2, 3, 21, 67, 89, 90], "cover": 89, "cpu": 9, "creat": [9, 12, 17, 18, 20, 24, 25, 26, 69, 72, 88, 89], "creation": [42, 43, 58, 59, 65, 66, 67, 68], "criterion": [6, 7, 8, 42, 43, 44, 45, 48, 49, 50, 51, 69, 70, 72, 75, 76], "cross": [11, 24, 26, 27, 42, 43, 67, 79, 80, 84, 85, 86, 87, 88, 89, 91], "cross_entropy_loss": 79, "cross_val_scor": [11, 20, 27, 37, 67, 77, 83, 88, 89, 90, 91], "cross_valid": 89, "crosscovari": 70, "crossentropyloss": [6, 7, 8, 9], "csie": 7, "cuda": 9, "current": [12, 88], "custom": 77, "cv": [20, 21, 24, 25, 26, 42, 43, 85, 88, 89, 90], "cv_arg": 25, "cv_results_": 26, "cvf": 88, "cvpr": [18, 62, 63, 88], "d": [16, 18, 21, 30, 31, 37, 38, 46, 54, 55, 64, 88], "da": [8, 10, 12, 14, 17, 18, 23, 24, 25, 26, 28, 30, 33, 35, 37, 39, 42, 46, 48, 50, 52, 54, 58, 60, 64, 67, 73, 74, 90, 91], "da_dataset": 89, "da_shufflesplit": 87, "daestim": 0, "damodaran": [75, 76, 88], "dan": [71, 88], "dann": 88, "darrel": 88, "dasvm": [11, 19, 32, 65, 78, 88, 91], "data": [1, 2, 3, 4, 12, 17, 18, 20, 21, 22, 24, 25, 28, 29, 31, 34, 36, 38, 40, 43, 44, 45, 47, 49, 51, 53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 80, 84, 85, 86, 88, 89, 90], "dataload": 9, "datapoint": 12, "datas": 25, "dataset": [5, 19, 21, 24, 25, 26, 28, 30, 33, 35, 37, 39, 42, 43, 44, 45, 46, 48, 52, 54, 58, 59, 60, 62, 64, 81, 82, 83, 84, 85, 90, 91], "dataset2": 25, "de": [17, 88], "deal": [18, 89], "decid": [52, 53], "decis": [12, 13, 14, 15, 21, 52, 53], "decision_boundari": 12, "decision_funct": [12, 32, 56, 57], "decision_function_shap": 21, "decisionboundarydisplai": [16, 17, 18, 21, 26], "decomposit": 20, "deep": [6, 7, 8, 10, 79, 81, 89, 91], "deepcor": [9, 74, 88], "deepcoralloss": 9, "deepjdot": [76, 88], "def": [2, 3, 15, 17, 18, 22, 25], "default": [13, 17, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "default_selector": [20, 77], "defin": [17, 25, 42, 43, 52, 53, 89, 90], "degre": [21, 44, 45], "delta_f": [4, 68], "demonstr": 89, "densiti": [21, 33, 34, 43, 45, 51, 52, 80, 82, 88], "densityratio": 88, "densityreweight": [17, 21, 50, 52, 89, 90], "densityreweightadapt": [21, 89], "depend": [25, 52, 53, 84, 88], "deprec": 6, "deriv": [17, 89], "describ": 18, "descript": [2, 3, 65, 66, 67, 68, 89], "design": [20, 86, 89], "detach": [6, 7, 8, 9, 18, 21], "detail": [2, 3, 17, 18, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 67, 78, 79, 80, 81, 82, 88, 89], "determin": [42, 43, 58, 59, 65, 66, 67, 68, 79], "dev": 88, "develop": 88, "devi": [75, 76, 88], "deviat": [65, 66, 67, 68], "devic": 9, "diagon": [46, 47], "dict": [17, 18, 52, 53, 65, 66, 67, 68], "dict_kei": 89, "dictionari": [20, 65, 66, 67, 68, 89], "did": [14, 16, 21], "differ": [12, 14, 20, 21, 25, 51, 63, 64, 68, 85, 89, 90], "dilat": 9, "dim": 6, "dimens": 6, "dimension": 18, "ding": [18, 62, 63, 88], "direct": [17, 42, 43, 88], "directli": [26, 77], "directori": 77, "discard": 32, "discr": 21, "discrep": [18, 45, 49, 51, 76], "discrimin": [35, 88], "discriminatorreweight": [17, 21], "discriminatorreweightadapt": [21, 89], "discuss": 88, "disi": 88, "distanc": [52, 53, 55, 61, 71, 74, 75, 76], "distance_metr": [52, 53], "distinct": 89, "distribut": [1, 2, 3, 4, 12, 13, 16, 17, 18, 21, 25, 41, 47, 51, 67, 75, 76, 88, 89, 90], "diverg": [10, 11, 17, 18, 43, 45, 51, 64, 70, 73, 88, 91], "divid": 66, "do": [12, 24, 26, 89, 90], "docstr": 87, "document": [25, 52, 53, 80, 83, 88], "doe": [14, 20, 21, 77, 89, 90], "doesn": [52, 53], "doi": 88, "domain": [0, 5, 10, 13, 14, 19, 20, 22, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 91], "domain_classifi": [21, 35, 36, 69, 72, 79], "domain_classifier_": 36, "domain_criterion": [69, 70, 72], "domain_label": 56, "domain_nam": [65, 66, 67, 68, 89], "domain_pred_": [70, 71, 74, 76], "domain_pred_t": [70, 71, 74, 76], "domain_sourc": 1, "domain_target": 1, "domainawar": 89, "domainawarecriterion": 9, "domainawaredataset": [65, 66, 67, 68, 89], "domainawareestim": 89, "domainawaremodul": 9, "domainawarenet": 9, "domainbalanceddataload": 9, "domainshufflesplit": 25, "don": 89, "done": [14, 16, 20, 22, 24, 88, 89, 90], "dot": 22, "download": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "dpi": 22, "drawn": 25, "drift": [2, 3, 20, 67], "dropout": 9, "dropout1": 9, "dropout2": 9, "ds_cnt": 21, "dslr": 89, "dtype": [18, 21], "due": [13, 14, 15], "dur": [6, 7, 8, 9], "dure": [20, 26, 52, 53, 69, 72, 73, 75, 89], "e": [12, 18, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 69, 70, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "each": [1, 2, 3, 4, 20, 25, 32, 34, 36, 40, 41, 43, 45, 51, 52, 53, 56, 57, 63, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "earth": 55, "easier": 89, "eccv": [7, 73, 74, 75, 76, 88], "editsec": 17, "edu": [3, 7, 17, 18, 88], "eduardo": 88, "effect": [17, 18, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "effici": [52, 53], "eigenvalu": 18, "eigenvector": [18, 61], "eigvects_": 61, "either": 66, "elaps": 77, "element": [52, 53, 65, 66, 67, 68], "els": [9, 12, 17, 18, 21], "embed": [69, 88], "emd": 22, "empir": 47, "enabl": 77, "enable_metadata_rout": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "encapsul": 77, "encod": 20, "end": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 67], "engin": [18, 64, 88], "ensur": [1, 2, 3, 4, 17, 21], "entiti": 89, "entitl": [52, 53], "entrop": [21, 30, 31, 37, 38], "entropi": [20, 26, 79, 81, 82, 88], "entropicotmap": [21, 24, 26, 89, 90], "entropicotmappingadapt": [16, 21, 89], "entropicotmappingadapter__reg_": 26, "enumer": [21, 25, 87], "ep": [16, 17, 18, 21, 26, 44, 45], "epoch": [6, 7, 8, 9], "epsilon": [12, 79], "eq": 82, "equal": [51, 52, 53, 60, 61, 62, 63, 64, 66], "equip": [12, 32], "equival": [52, 53], "error": [7, 20, 30, 31, 34, 36, 37, 38, 40, 43, 45, 51, 53, 54, 55, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "estim": [12, 13, 14, 17, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90], "estimator_": 41, "estimator_no_da": 24, "et": [17, 18, 42, 43, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 79, 80, 81, 82], "etc": [12, 88], "euclidean": [52, 53], "euclidean_dist": [52, 53], "european": [75, 76, 88], "evalu": [13, 14, 15, 24, 26, 80, 83, 89, 90], "even": [41, 77, 89], "everi": 66, "evolut": 12, "exact": 78, "exactli": 89, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 53, 89, 91], "exdb": 7, "execut": [5, 10, 19, 23, 27, 89, 91], "exist": [34, 36, 40, 43, 45, 51, 53, 56, 57, 67, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "expect": [52, 53], "explicit": 89, "explor": 18, "expos": 89, "extent": [13, 14], "extract": 7, "extract_source_indic": 17, "extractor": 72, "f": [1, 2, 3, 4, 12, 13, 14, 16, 17, 18, 20, 24, 25, 26, 67, 87, 88], "fail": [7, 89], "fals": [6, 7, 8, 9, 17, 18, 21, 24, 25, 28, 29, 32, 34, 36, 40, 41, 43, 44, 45, 51, 52, 53, 56, 57, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "famili": 22, "fc1": [6, 7, 8, 9], "fc2": 9, "featur": [1, 2, 3, 16, 17, 18, 41, 62, 63, 66, 70, 71, 72, 74, 79, 85, 88], "features_": [70, 71, 74, 76], "features_t": [70, 71, 74, 76], "feel": [88, 89], "fellow": 88, "feng": [28, 29, 88], "fernand": 88, "fernando": [18, 58, 59, 88], "ferrari": [47, 88], "fetch": 89, "fetch_all_office31_surf": 89, "fetch_office31_surf_al": 89, "fetcher": 89, "few": [88, 89], "ff0000": 21, "ffa056": [17, 18], "fig": [1, 2, 3, 4, 25], "figsiz": [1, 2, 3, 4, 12, 16, 17, 18, 21, 24, 25], "figur": [12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24], "file": [5, 10, 11, 19, 22, 23, 27, 91], "fill": 25, "filterwarn": 26, "final": [20, 21, 64, 88], "find": [14, 17, 26, 43, 45, 49, 51], "first": [12, 17, 21, 24, 25, 26, 86, 88, 89], "fisher": 18, "fit": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 77, 80, 88, 89, 90], "fit_param": [89, 90], "fit_predict": 89, "fit_transform": 14, "fix": [28, 29, 39, 40, 41, 64, 66], "flamari": [13, 14, 15, 16, 20, 22, 30, 31, 37, 38, 41, 46, 47, 54, 55, 75, 76, 88], "flda": [21, 64], "flip": [78, 79, 80, 81, 82, 83], "float": [28, 29, 30, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 79, 81, 82, 84], "float64": [13, 14, 15, 16, 18, 21], "florent": 88, "flow": 89, "fluctuat": 89, "fly": 89, "fold": [25, 42, 43, 84, 87], "follow": [16, 17, 18, 20, 25, 65, 66, 67, 68, 69, 72, 86, 88, 89], "font": 22, "fontsiz": [1, 2, 3, 12, 17, 18, 22, 25], "forbidden": 7, "forc": [52, 53], "form": [25, 77, 78, 86], "format": [25, 88], "forward": [9, 70, 71, 74, 76], "found": 89, "fr": 18, "framework": [88, 89], "frank": [17, 44, 45], "fred": 88, "free": [88, 89], "frequenc": [4, 68], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 41, 51, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 84, 87, 88, 89, 90, 91], "from_estim": [16, 17, 18, 21, 26], "full": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 24, 25, 26, 88], "function": [17, 18, 20, 25, 35, 36, 39, 40, 41, 42, 43, 44, 45, 52, 53, 58, 59, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90], "further": [12, 52, 53], "g": [2, 3, 16, 18, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 62, 63, 67, 69, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "g_": 49, "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 88, 91], "gamma": [17, 21, 42, 43, 44, 45, 48, 49, 50, 51, 67], "ganin": [72, 88], "gaussian": [21, 36, 39, 40, 46, 47, 48, 49, 65, 66, 67, 68, 71, 88], "gaussiannb": 77, "gaussianreweight": [17, 20, 21], "gaussianreweightadapt": [20, 21, 88, 89], "gca": 16, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 11, 20, 21, 23, 24, 25, 26, 42, 43, 58, 59, 65, 66, 67, 68, 69, 72, 79, 85, 88, 89, 91], "geng": [18, 64, 88], "germain": 88, "get": [17, 20, 89], "get_domain": 21, "get_estim": [16, 17, 18, 56, 57], "get_lda_interp": 22, "get_multidomain_data": 15, "get_n_split": [85, 87], "git": 88, "github": 88, "give": 16, "given": [2, 3, 12, 34, 36, 37, 38, 40, 42, 43, 45, 51, 53, 54, 55, 56, 57, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "global": 22, "glossari": [52, 53], "gmail": [17, 18], "gnassoun": [6, 7, 8, 9, 88], "gnassounou2024skada": 88, "go": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 89], "goal": [12, 17, 18], "good": [78, 79, 80, 81, 82, 83], "gradient": [9, 21, 64], "grai": [12, 14, 22], "grain": 21, "gramfort": 88, "graph": [52, 53], "greater": [52, 53], "greater_is_bett": [78, 79, 80, 81, 82, 83], "grei": 1, "gretton": [17, 44, 45, 88], "grid": [26, 88], "grid_search": [20, 26, 88], "gridsearchcv": [11, 20, 27, 37, 67, 80, 81, 88, 89, 90, 91], "ground": [30, 31, 37, 38, 54, 55], "group": 87, "guarante": 41, "guess": 24, "guiba": [14, 88], "guid": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "gz": 7, "h": [17, 88], "h_": 49, "ha": [6, 12, 25, 30, 31, 34, 36, 37, 38, 40, 43, 45, 51, 53, 54, 55, 56, 57, 69, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "habrard": [13, 41, 88], "handl": [12, 20], "harder": 70, "have": [12, 18, 25, 52, 53, 65, 66, 67, 68, 89, 90], "height": 89, "helper": [16, 89], "here": [2, 3, 12, 16, 20, 87, 88], "herrera": [2, 3, 67], "hidetoshi": [17, 35, 36, 39, 40, 88], "hierarch": 86, "high": [78, 79, 80, 81, 82, 83, 89, 90], "highest": 61, "hilbert": 18, "hing": [13, 21], "hisashi": 88, "ho": 88, "home": [1, 6, 7, 8, 9, 14, 16, 18, 21, 22], "horizontalalign": [17, 18, 21], "how": [11, 13, 14, 23, 25, 28, 29, 34, 36, 40, 43, 45, 51, 53, 56, 57, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91], "howev": 12, "hstack": 15, "http": [7, 17, 88], "huang": [17, 44, 45, 88], "hyperparamet": 88, "i": [1, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 51, 52, 53, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "iclr": 81, "icml": [48, 49, 50, 51, 71, 79], "idea": [16, 17, 43, 45, 51], "ident": 85, "idx": 17, "idx1": 7, "idx3": 7, "ieee": [16, 17, 18, 30, 31, 32, 37, 38, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 78, 88], "ievgen": 88, "ignor": [1, 22, 26, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "ii": 25, "iii": 88, "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 12, 15, 20, 21, 24, 25, 26, 88], "imag": [89, 90], "impact": [52, 53], "implement": [17, 18, 86, 89], "implicit": 6, "import": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 42, 43, 45, 51, 52, 53, 77, 80, 84, 87, 88, 89, 90], "importanceweightedscor": [26, 89], "importantli": 20, "improv": [12, 17, 35, 36, 39, 40, 88], "imshow": [13, 14], "in_featur": 9, "includ": [6, 20, 24, 26, 77, 84, 88, 89], "include_all_target": 89, "increas": [14, 16, 21], "independ": [18, 67], "index": [25, 87, 88, 89], "index_source_delet": 32, "index_target_ad": 32, "indic": [25, 52, 53, 65, 66, 67, 68, 84, 85, 86], "indices_source_delet": 12, "indices_target_ad": 12, "indx_sort": 25, "infer": [17, 35, 36, 39, 40, 88], "influenc": [52, 53], "inform": [13, 41, 88], "initi": [9, 70, 89, 90], "inner": [30, 31], "inplac": 9, "input": [9, 17, 20, 43, 45, 51, 52, 53, 69, 72, 88], "insid": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "inspect": [16, 17, 18, 21, 26, 77], "instabl": 79, "instanc": [18, 20, 41, 42, 43, 58, 59, 62, 63, 65, 66, 67, 68, 69, 72, 73, 75, 77, 79, 84, 88], "instanti": [69, 72], "instead": [34, 36, 40, 43, 45, 51, 53, 56, 57, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "institut": [17, 88], "int": [30, 31, 32, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 79, 84, 85, 87], "integ": [20, 65, 66, 67, 68, 79, 85, 89], "integr": [77, 89], "intel": 88, "intellig": [16, 30, 31, 32, 37, 38, 46, 54, 55, 78, 88], "interest": 88, "interfac": [77, 89], "intern": [14, 17, 18, 52, 53, 58, 59, 82, 88], "interpol": 22, "introduc": 89, "intuit": 21, "invers": [29, 52, 53], "io": 88, "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "is_avail": 9, "is_fit": 9, "ism": 17, "isotrop": 66, "issu": 88, "ist": 88, "item": [9, 17, 18, 87], "iter": [9, 13, 14, 16, 21, 25, 30, 31, 32, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 64, 84, 85, 89], "its": [13, 14, 15, 17, 43, 51, 89], "j": [2, 3, 12, 13, 14, 16, 17, 18, 44, 45, 62, 63, 67, 88], "januari": [14, 88], "jcpotlabelpropadapt": 14, "jdot": [11, 19, 21, 41, 67, 88, 91], "jdotclassifi": [13, 21], "jdotregressor": 13, "jialin": [18, 60, 61], "jiashi": [28, 29, 88], "job": [52, 53, 89], "joblib": [52, 53, 77], "joint": [13, 41, 62, 63, 75, 76, 88], "jordan": 88, "journal": [17, 35, 36, 39, 40, 72, 80, 88], "jp": 17, "june": 88, "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "just": 21, "k": [12, 13, 17, 18, 24, 32, 44, 45, 47, 88], "k_": 61, "kachaiev": [17, 18, 88], "kachayev": [17, 18], "kaichao": 79, "kanamori": 88, "kashima": [17, 88], "kate": [7, 28, 29, 73, 74, 88], "kawanab": [17, 88], "kd_tree": [52, 53], "kdtree": [52, 53], "kei": [17, 18, 89], "kellenberg": [75, 76, 88], "kept": [58, 59], "kernel": [12, 13, 14, 16, 18, 21, 30, 42, 43, 44, 45, 48, 49, 50, 51, 60, 61, 62, 63, 64, 67, 71], "kernel_ridg": [13, 14], "kernel_s": 9, "kerneldens": [17, 21, 33, 34, 80], "kernelridg": [13, 14], "keyword": [52, 53], "kim": 88, "kind": 14, "kl": [17, 43], "klau": 88, "kliepreweight": [21, 43, 88], "kliepreweightadapt": [21, 89], "kmmreweight": [17, 45, 88], "knn": [52, 53], "know": 12, "knowledg": [18, 64, 88], "krauledat": 88, "krr": [13, 14], "kullback": [17, 43], "kun": [48, 49, 50, 51], "kuniaki": 82, "kwarg": [6, 32, 41, 43, 56, 57, 69, 72, 73, 75, 79], "kwok": 88, "l": [14, 32, 78, 88], "l1": [30, 31, 52, 53], "l1l2": [30, 31], "l2": [30, 31, 41, 52, 53], "l_p": [52, 53], "label": [2, 3, 4, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 30, 31, 34, 36, 40, 41, 43, 45, 48, 49, 50, 51, 53, 56, 65, 66, 67, 68, 76, 77, 78, 79, 85, 88, 89, 90, 91], "lalou": [25, 88], "laplac": [52, 53], "laplace_smooth": [17, 21, 52, 53], "larg": [37, 38, 54, 55, 89], "largest": 69, "larochel": 88, "last": [20, 52, 72, 77], "latter": [78, 79, 80, 81, 82, 83], "laviolett": 88, "layer": [69, 72, 73, 75], "layer_nam": [6, 7, 8, 9, 69, 72, 73, 75], "lda": [18, 22], "leaf": [52, 53], "leaf_siz": [21, 52, 53], "learn": [13, 14, 17, 20, 25, 41, 45, 49, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 71, 72, 77, 80, 85, 89, 90], "least": [41, 87], "leav": 85, "leaveonedomainout": [25, 89], "lecun": 7, "ledoit": [28, 29, 39, 40], "left": [12, 25], "legend": [4, 12, 13, 14, 15, 24, 25], "leibler": [17, 43], "lemma": [28, 29, 39, 40], "lempitski": 88, "len": [12, 17, 18, 21, 25], "len_": 22, "length": [64, 66], "length_scal": [21, 64], "less": [52, 53, 60, 61, 62, 63, 64], "let": [25, 89, 90], "level": 89, "lexsort": 25, "lib": [6, 14, 16, 21], "librari": [88, 89], "libsvmtool": 7, "licens": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25], "like": [20, 34, 36, 40, 42, 43, 45, 49, 50, 51, 53, 65, 66, 67, 68, 71, 79, 85, 89, 90], "likelihood": [17, 35, 36, 39, 40, 42, 43, 88], "lim": 16, "limit": 89, "linalg": 22, "line": 12, "line2d": 12, "linear": [9, 11, 12, 16, 19, 21, 46, 47, 49, 67, 77, 88, 91], "linear_model": [13, 14, 15, 17, 20, 88, 89, 90], "linearmong": 88, "linearotmap": 21, "linearotmappingadapt": [16, 21, 89], "linearregress": 41, "linestyl": 24, "linewidth": 22, "linspac": [4, 12, 13, 14, 18, 22], "list": [12, 18, 25, 41, 43, 52, 53, 77, 89], "listedcolormap": [17, 18, 21], "ll": 25, "load": [89, 90], "load_mnist_usp": [6, 7, 8, 9], "loc": [12, 21, 25], "local": [6, 14, 16, 21], "locat": [12, 49, 66], "lodo": 25, "log": [17, 35, 36, 37, 38, 39, 40, 54, 55, 88], "logist": 14, "logisticregress": [12, 13, 14, 15, 17, 20, 21, 35, 36, 42, 44, 79, 88, 89, 90], "loglog": [37, 38, 54, 55], "logo": [11, 23, 91], "logreg": 14, "loison": 88, "long": [18, 62, 63, 69, 70, 71, 88], "longer": 89, "loog": [17, 88], "look": [17, 89], "loop": [9, 30, 31, 88], "loss": [9, 13, 18, 41, 63, 64, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83], "loss_fn": 9, "loss_func": 79, "loss_ot": 13, "loss_tgt_label": 13, "lounici": [47, 88], "low": [78, 79, 80, 81, 82, 83, 89], "lower": [12, 13, 14, 15, 18, 21], "lowercas": 77, "lp": [14, 21, 30, 31], "lpl1": [21, 30, 31], "lpp": 64, "lr": [6, 7, 8, 9], "lst_loss_ot_": 41, "lst_loss_tgt_labels_": 41, "lstrip": [17, 18, 21], "lw": 25, "m": [17, 18, 32, 62, 63, 78, 88], "m1": 22, "m2": 22, "mach": 88, "machin": [14, 16, 17, 30, 31, 32, 37, 38, 46, 52, 53, 54, 55, 72, 78, 80, 88], "made": [84, 87], "mai": [52, 53, 85, 88], "main": 12, "maintain": 88, "make": [25, 65, 68, 70, 85, 88, 89, 90], "make_da_pipelin": [14, 15, 16, 20, 24, 88, 89], "make_dataset": [4, 21], "make_dataset_from_moons_distribut": [1, 12], "make_pipelin": 20, "make_shifted_dataset": [1, 2, 3, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 89, 90], "make_variable_frequency_dataset": 4, "mandat": 89, "manhattan_dist": [52, 53], "map": [16, 18, 21, 46, 47, 48, 49, 88], "marconcini": [32, 78, 88], "margin": 12, "margin_lin": 12, "mark": [18, 89], "marker": [12, 15, 18, 22, 25, 89], "markers": 12, "masashi": [17, 42, 43, 80, 88], "mask": [25, 89], "match": [13, 45, 62, 63, 88], "mathelin": [17, 88], "mathemat": [17, 88], "matplotlib": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "matrix": [48, 49, 50, 51, 52, 53, 67], "mattia": 88, "mauric": 88, "max": [3, 13, 16, 17, 18, 21, 37, 38, 41, 54, 55], "max_epoch": [6, 7, 8, 9], "max_featur": 69, "max_inner_it": [21, 30, 31], "max_it": [17, 21, 30, 31, 32, 37, 38, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 64], "max_len": [17, 18], "max_n_split": [85, 89], "maxim": [17, 32, 62, 63, 64], "maximum": [18, 21, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 69], "maxpool": 9, "maxpool2d": 9, "mb": [5, 10, 19, 23, 27, 91], "mboula": 88, "mean": [13, 14, 15, 18, 20, 22, 24, 40, 45, 49, 51, 52, 53, 67, 78, 79, 80, 81, 82, 83, 89, 90], "mean_source_": [29, 40], "mean_squared_error": [13, 14], "mean_target_": [29, 40], "mean_test_scor": 26, "measur": 76, "mechan": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "median": [37, 38, 54, 55], "mellot": 88, "mem": [5, 10, 19, 23, 27, 91], "member": 88, "memori": [52, 53, 77], "merg": 25, "meshgrid": [13, 14], "meta": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "metadata": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "metadata_rout": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "method": [1, 2, 3, 4, 10, 12, 19, 20, 23, 25, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 67, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "metric": [13, 14, 20, 21, 24, 26, 30, 31, 37, 38, 41, 52, 53, 54, 55], "metric_param": [21, 52, 53], "michel": 88, "might": [14, 16, 41], "min": [18, 21, 58, 59], "mingsheng": [69, 70, 71], "minim": [17, 43, 45, 49, 51, 70, 81, 88], "minimum": [30, 31, 37, 38], "minkowski": [21, 52, 53], "minkowski_dist": [52, 53], "minut": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "misc": 88, "mline": 12, "mlpregressor": 41, "mm": 22, "mmd": [18, 21, 45, 49, 50, 51, 71, 88], "mmdlsconsmap": [21, 49], "mmdlsconsmappingadapt": 21, "mmdtarsreweight": [21, 51], "mmdtarsreweightadapt": 21, "mnist": [6, 7, 8, 9], "mnist_dataset": [6, 7, 8, 9], "mnist_target": [6, 7, 8, 9], "mnisttouspsnet": [6, 7, 8, 9], "model": [9, 13, 17, 42, 43, 79, 80, 83, 88], "model_select": [20, 24, 25, 26, 88, 89, 90], "modern": 22, "modifi": 25, "modul": [6, 7, 8, 9, 69, 72, 73, 75, 88], "module_": 9, "mong": [11, 19, 46, 47, 67, 77, 88, 91], "montesuma": 88, "month": 88, "moon": [12, 65], "more": [12, 14, 17, 20, 52, 53, 88, 89], "moreau": 88, "moreno": [2, 3, 67], "morerio": [81, 88], "most": [18, 25, 52, 53], "mostli": 89, "motoaki": 88, "move": 89, "mover": 55, "mse": [13, 14, 41], "mse_": [13, 14], "mse_t": [13, 14], "mu": [18, 21, 60, 61, 64], "mu_regress": 67, "muandet": 88, "much": [13, 14, 15], "multi": [1, 11, 19, 67, 77, 88, 89, 91], "multiclass": [2, 7, 13, 14, 15, 67], "multilinear": 70, "multilinearmongealignmentadapt": 15, "multinomi": 13, "multipl": [1, 2, 3, 4, 12, 20, 21, 42, 43, 58, 59, 65, 66, 67, 68, 79, 89], "multipli": 67, "murino": 88, "must": [20, 52, 53, 66, 81, 87, 88], "m\u00fcller": 88, "n": [2, 3, 13, 15, 16, 17, 18, 22, 25, 30, 31, 37, 38, 41, 46, 54, 55, 67, 88], "n_center": [21, 42, 43, 66], "n_channel": [4, 68], "n_class": [4, 6, 7, 8, 9, 49, 51, 68, 69], "n_compon": [18, 20, 21, 58, 59, 60, 61, 62, 63, 64, 89], "n_featur": [29, 34, 36, 40, 43, 45, 49, 51, 53, 58, 59, 66, 85], "n_frequenc": [4, 68], "n_frequency_sourc": 68, "n_iter_max": [21, 41], "n_job": [21, 52, 53], "n_neighbor": [21, 52, 53], "n_sampl": [6, 7, 8, 9, 16, 34, 36, 40, 43, 45, 49, 51, 53, 58, 59, 66, 67, 81, 85], "n_samples_sourc": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 44, 45, 65, 67, 68, 89, 90], "n_samples_target": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 65, 67, 68, 89, 90], "n_sourc": 15, "n_split": [24, 25, 26, 84, 85, 86, 87, 89, 90], "n_splits_lodo": 25, "n_target": 15, "n_tot_sourc": 16, "n_tot_target": 16, "naive_bay": 77, "nakajima": [17, 88], "name": [17, 18, 20, 21, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 65, 66, 67, 68, 69, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "named_step": [16, 77], "names_map": 25, "nan": 25, "natur": [21, 52, 53, 67], "nb": 22, "ndarrai": [65, 66, 67, 68, 81, 85], "nearest": [51, 52, 53, 88], "nearestneighborreweight": [17, 21], "nearestneighborreweightadapt": 21, "necessari": [13, 41, 89, 90], "necessarili": 21, "necessit": 89, "need": [20, 79, 89], "neg": [65, 66, 67, 68, 88, 89], "neighbor": [21, 51, 52, 53, 88], "neighborhood": [52, 53, 82, 88], "neither": 89, "netherland": 88, "network": [18, 60, 61, 69, 70, 71, 72, 88], "neural": [13, 18, 41, 60, 61, 72, 88], "neuralnetclassifi": [6, 7, 8], "neurip": [17, 42, 43, 69, 70], "never": 77, "new": [12, 61, 89], "next": [7, 89], "ngole": 88, "nicola": [75, 76, 88], "nip": [17, 41, 44, 45, 88], "nn": [6, 7, 8, 9], "nois": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 65, 66, 67, 68, 89, 90], "non": [65, 66, 67, 68, 89], "none": [9, 15, 17, 18, 21, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "nonzero": [52, 53], "norm": [21, 22, 30, 31, 37, 38, 54, 55, 64], "normal": [17, 37, 38, 54, 55, 88], "note": [13, 20, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "notic": [12, 88], "now": [12, 13, 25, 89, 90], "np": [1, 4, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 67, 84, 85, 87], "nt": 15, "ntu": 7, "num_featur": [6, 69, 72], "number": [14, 16, 17, 25, 30, 31, 32, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 84, 85, 87, 89], "numer": [37, 38, 54, 55, 79], "numitermax": [14, 16, 21], "numpi": [1, 4, 12, 13, 14, 15, 17, 18, 20, 22, 24, 25, 84, 87], "o": [12, 15, 22, 88], "object": [12, 25, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "observ": [33, 34, 80], "occur": [37, 38, 54, 55], "octob": 88, "odonnat": 88, "odot": 49, "off": [22, 41, 62, 63], "offer": [89, 90], "office31": 89, "oleksii": [17, 18, 88], "onc": [18, 25, 86, 89], "one": [1, 18, 20, 52, 53, 65, 67, 68, 81, 88, 89, 90], "ones": [15, 18, 20, 22, 84, 87], "onli": [12, 20, 24, 25, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 67, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "onto": 18, "open": 88, "oper": 47, "optim": [9, 10, 11, 13, 14, 17, 19, 21, 30, 31, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 64, 67, 75, 76, 77, 88, 91], "optimali": [17, 18], "option": [28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 71, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "orang": 25, "order": 89, "org": 88, "organ": 20, "origin": [13, 14, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "ossci": 7, "ot": [14, 16, 21, 31, 38, 41, 46, 47, 54, 55, 88], "ot_transport_": [16, 31, 38, 47, 55], "otda": [11, 19, 31, 38, 47, 54, 55, 67, 77, 88, 91], "other": [17, 25, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 68, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "otherwis": [34, 36, 40, 43, 45, 51, 53, 56, 57, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "otlabelprop": 21, "otlabelpropadapt": [14, 21], "otmap": [16, 21], "otmappingadapt": [16, 21, 89], "our": [25, 52, 53], "out": [12, 85, 88], "out_featur": 9, "outcom": [78, 79, 80, 81, 82, 83], "output": [9, 20, 42, 43, 58, 59, 65, 66, 67, 68, 69, 72, 73, 75, 79, 89], "over": [21, 79], "overfit": [89, 90], "overrid": [52, 53], "overwrit": 20, "ovr": 21, "p": [9, 17, 18, 21, 51, 52, 53, 62, 63, 77, 88], "p_": 17, "p_sourc": [43, 45, 51], "p_target": [43, 45, 51], "pack": [18, 24, 25, 89], "pack_lodo": [25, 89], "pack_test": [6, 7, 8, 9, 25, 26, 89], "pack_train": [6, 7, 8, 9, 18, 21, 24, 25, 26, 89], "packag": [6, 14, 16, 21], "pad": 9, "page": [17, 18, 52, 53, 62, 63, 64, 88], "pair": [65, 66, 67, 68, 89], "pami": 88, "pan": [18, 60, 61, 88], "paper": [82, 88], "parallel": [52, 53], "parallel_backend": [52, 53], "param": [20, 24, 88, 89], "param_entropicotmappingadapter__reg_": 26, "param_grid": [20, 88], "paramet": [1, 14, 16, 20, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "part": [21, 88], "partial_fit": [56, 57], "particularli": 18, "pass": [9, 20, 24, 34, 36, 40, 42, 43, 45, 51, 52, 53, 56, 57, 58, 59, 65, 66, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "patch": 25, "path": 77, "pattern": [2, 3, 16, 18, 28, 29, 30, 31, 32, 37, 38, 46, 54, 55, 62, 63, 67, 78, 88], "paul": 88, "pca": [18, 20, 58, 59, 60, 61, 62, 63, 64, 89], "pca_source_": 59, "pca_target_": 59, "pdf": [17, 88], "peak": 68, "per": [20, 32, 85, 89], "per_domain": 77, "percentag": [25, 84, 87], "perdomain": [20, 89], "perdomainselector": 89, "perform": [13, 14, 15, 17, 18, 20, 24, 26, 77, 89], "permit": 77, "phase": 88, "pi": 22, "pick": 89, "pietro": 81, "pip": 88, "pipe": [20, 88, 89], "pipe_perdomain": 20, "pipe_train_on_sourc": 20, "pipelin": [17, 21, 24, 26, 28, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "pl": 22, "plai": 89, "plan": [14, 16, 17, 35, 36, 39, 40, 88], "pleas": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "plot": [5, 11, 16, 20, 21, 25, 26, 65, 67, 68, 91], "plot_adversari": [6, 10, 91], "plot_cross_val_score_for_da": [24, 27, 91], "plot_cross_validation_for_da": [25, 27, 91], "plot_cv_indic": 25, "plot_dasvm": [12, 19, 91], "plot_dataset_from_moons_distribut": [1, 5, 91], "plot_diverg": [7, 10, 91], "plot_gridsearch_for_da": [26, 27, 91], "plot_how_to_use_skada": [20, 23, 91], "plot_jdot_da": [13, 19, 91], "plot_label_prop_da": [14, 19, 91], "plot_lodo_indic": 25, "plot_method": 17, "plot_method_comparison": [21, 23, 91], "plot_monge_alignment_da": [15, 19, 91], "plot_optimal_transport": [8, 10, 91], "plot_optimal_transport_da": [16, 19, 91], "plot_reweight": [17, 19, 91], "plot_shifted_dataset": [2, 3, 5, 91], "plot_shifted_dataset_regress": [3, 5, 91], "plot_skada_logo": [22, 23, 91], "plot_st_shuffle_indic": 25, "plot_subspac": [18, 19, 91], "plot_subspace_and_classifi": 18, "plot_training_method": [9, 10, 91], "plot_variable_frequency_dataset": [4, 5, 91], "plot_weights_and_classifi": 17, "plt": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "plug": 89, "pmlr": [14, 88], "png": 22, "point": [12, 17, 18, 21, 26, 32, 41, 52, 53, 65, 66, 67, 68], "poli": 12, "polytechniqu": [3, 17, 18], "pos_sourc": [1, 12, 65], "pos_target": [1, 12, 65], "posit": [12, 52, 53, 65, 88, 89], "possibl": [2, 3, 12, 28, 29, 39, 40, 52, 53, 64, 89], "possibli": 89, "pot": 22, "power": [52, 53], "pp": [14, 88], "practic": 89, "precis": [37, 38], "precomput": [52, 53], "predict": [12, 13, 14, 16, 17, 18, 20, 21, 26, 33, 35, 36, 39, 40, 41, 42, 44, 50, 52, 53, 56, 57, 58, 60, 62, 70, 78, 79, 81, 88, 89], "predict_log_proba": [56, 57], "predict_proba": [56, 57, 89], "predictionentropyscor": [20, 26, 88, 89], "prepar": [24, 25, 26, 89], "preprint": [47, 88], "preprocess": [20, 21, 77, 88], "present": 12, "preserv": [13, 25, 84, 87], "prevent": [52, 53], "previou": 18, "previous": 89, "prgn": 25, "print": [1, 4, 9, 13, 14, 15, 17, 18, 20, 21, 24, 26, 41, 63, 64, 77, 84, 87], "print_scores_as_t": [17, 18], "prior": [77, 88], "probabl": [17, 20, 21, 26, 79], "problem": [12, 25, 30, 31, 32, 37, 38, 41, 43, 52, 53, 54, 55, 60, 61, 64, 78, 85, 88, 89], "procedur": 43, "proceed": 88, "process": [13, 17, 41, 52, 53, 79, 88, 89], "processor": [52, 53], "produc": [0, 84], "progress": 12, "project": [1, 6, 7, 8, 9, 18, 21, 22, 61], "propag": [11, 19, 21, 67, 68, 77, 88, 91], "proport": [14, 84], "propos": [14, 41, 46, 47, 82], "provid": [1, 20, 22, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 69, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "psd": 4, "psu": 88, "publish": 88, "purpos": 17, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 89, 91], "pylab": 22, "pypi": 88, "pyplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "pytest": 89, "python": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "python3": [6, 14, 16, 21], "pytorch": [69, 72, 73, 75], "q": 88, "quadrat": 41, "queri": [52, 53], "quick": 88, "r": [2, 3, 13, 14, 16, 22, 30, 31, 37, 38, 41, 46, 47, 54, 55, 67, 88], "r82": 88, "raeder": [2, 3, 67], "rais": [20, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "rakotomamonji": [13, 16, 30, 31, 37, 38, 41, 46, 54, 55, 88], "rand": 15, "randint": [1, 4], "randn": [15, 22], "random": [1, 2, 3, 4, 15, 21, 22, 24, 42, 43, 58, 59, 65, 66, 67, 68, 79, 84, 85, 87], "random_se": [1, 4, 12, 17, 18, 21, 24, 25, 26, 89, 90], "random_st": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 42, 43, 58, 59, 65, 66, 67, 68, 79, 84, 85, 86, 87, 89, 90], "randomli": [25, 89], "randomst": [42, 43, 58, 59, 65, 66, 67, 68, 79, 84], "rang": [4, 9, 12, 13, 15, 16, 18, 22, 25, 89], "rather": [6, 7, 8, 9, 18, 21], "ratio": [17, 67, 88], "ravel": [13, 14], "raw": 7, "rbf": [13, 14, 16, 18, 21, 30, 42, 43, 44, 45, 60, 61, 62, 63, 64, 67], "rcparam": 22, "rdbu": [17, 18, 21, 25], "re": [33, 34, 35, 36, 39, 40, 52, 53, 84], "reach": [14, 21, 88], "readi": [24, 89], "real": 21, "reason": 89, "recognit": [2, 3, 18, 28, 29, 62, 63, 67, 88], "recommend": [6, 7, 8, 9, 18, 21], "reconstruct": 89, "recov": 16, "red": [12, 22], "redko": 88, "reduc": [71, 74, 76, 79], "reduct": [75, 76, 81], "ref": 18, "refer": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 89], "reflect": [89, 90], "reg": [6, 7, 8, 9, 14, 16, 21, 28, 29, 39, 40, 46, 47, 50, 51, 64, 69, 70, 72, 73, 75], "reg_": [16, 21, 24, 26, 30, 31, 37, 38], "reg_cl": [8, 16, 21, 30, 31, 75, 76], "reg_cor": 20, "reg_k": [21, 48, 49], "reg_m": [21, 48, 49], "reglog": [13, 14], "regress": [3, 41, 67], "regression_scaling_const": 67, "regressor": [11, 19, 41, 67, 88, 91], "regular": [14, 16, 18, 20, 26, 28, 29, 30, 31, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 60, 61, 64, 69, 70, 72, 73, 75, 76, 88], "regulari": 26, "relat": 89, "relev": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "relu": 9, "relu1": 9, "relu2": 9, "relu3": 9, "remain": [25, 86], "rememb": 32, "remi": [13, 14, 15, 16, 20, 22, 75, 76], "remov": [12, 70], "rep1": 88, "repid": 88, "replac": [2, 3], "repres": [12, 18, 52, 53, 84, 89], "represent": [70, 76, 79], "reproduc": [18, 42, 43, 58, 59, 65, 66, 67, 68, 79], "request": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "requir": [20, 37, 38, 52, 53, 77, 88, 89], "requires_grad": [18, 21], "requires_grad_": [6, 7, 8, 9, 18, 21], "research": [72, 80, 88], "reshap": [13, 14, 18], "respect": [49, 65, 66, 67, 68, 89], "response_method": [16, 17, 18, 21, 26], "result": [25, 26, 52, 53, 85], "result_cod": [14, 21], "result_code_str": [14, 21], "retain": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "retrain": 78, "return": [6, 15, 22, 25, 28, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "return_dataset": [6, 7, 8, 9, 18, 21, 24, 25, 26, 65, 66, 67, 68], "return_x_i": [65, 66, 67, 68, 89], "reus": [89, 90], "reweight": [11, 18, 19, 20, 21, 33, 35, 39, 42, 44, 45, 50, 51, 52, 62, 63, 67, 88, 91], "ridg": [13, 14, 41], "right": [3, 17, 18, 21, 25, 82, 88], "risk": 41, "robert": 88, "robust": 14, "rodriguez": [2, 3, 67], "root": 29, "rot": 22, "rotat": 25, "rout": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "row": [1, 2, 3], "rsda": 84, "rslab": 88, "ruben": [3, 12, 17, 18, 88], "run": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 52, 53, 89], "running_loss": 9, "rustamov": [14, 88], "r\u00e9mi": 88, "s2": [25, 89], "s3": 7, "saenko": [7, 28, 29, 73, 74, 88], "saito": [82, 88], "salt": 21, "same": [1, 2, 3, 4, 12, 13, 14, 18, 21, 24, 25, 34, 36, 40, 43, 45, 51, 52, 53, 78, 89], "sampl": [2, 3, 13, 14, 16, 17, 18, 20, 22, 25, 34, 44, 45, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 34, 36, 40, 43, 45, 51, 53, 56, 57, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "sample_domain_": 20, "sample_domain_lodo": 25, "sample_domain_t": 20, "sample_domain_test": [6, 7, 8, 9, 89], "sample_domain_train": [18, 89], "sample_domaini": 15, "sample_select": 67, "sample_weight": [17, 20, 21, 88, 89], "save": 22, "save_estim": [12, 32], "save_indic": [12, 32], "savefig": 22, "scalar": 67, "scale": [21, 49, 64], "scatter": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26], "scenario": 89, "sch\u00f6lkopf": [17, 44, 45, 88], "scikit": [20, 25, 41, 77, 89, 90], "scipi": [44, 45, 52, 53], "sclaroff": 88, "score": [6, 7, 8, 12, 15, 16, 21, 24, 26, 56, 57, 78, 79, 80, 81, 82, 83, 88], "scorer": [20, 24, 26, 78, 79, 80, 81, 82, 83, 88, 89], "scores_dict": [17, 18], "scores_no_da": 24, "scores_sup": 24, "script": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "search": [26, 52, 53, 88], "sebban": 88, "second": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "section": [49, 50, 51, 89], "see": [2, 3, 12, 13, 14, 17, 18, 25, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "seed": [1, 2, 3, 4, 15, 21, 22], "seek": 18, "seen": 89, "select": [17, 25, 42, 43, 44, 45, 67, 79, 88, 90], "select_domain": [16, 89], "selector": [20, 77], "selectsourc": 20, "selectsourcetarget": 20, "self": [6, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "semi": [12, 14, 21, 88], "semi_label": 12, "separ": [24, 67, 89], "septemb": [75, 76], "sequenc": [65, 66, 67, 68], "serv": [62, 63, 89], "set": [12, 17, 21, 25, 44, 45, 52, 53, 58, 59, 65, 66, 67, 68, 77, 82, 84, 85, 86, 89, 90], "set_config": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "set_decision_function_request": [56, 57], "set_fit_request": [17, 20, 21, 34, 36, 40, 43, 45, 51, 53, 56, 57, 88], "set_fit_requir": 88, "set_label": 3, "set_partial_fit_request": [56, 57], "set_predict_log_proba_request": [56, 57], "set_predict_proba_request": [56, 57], "set_predict_request": [56, 57], "set_score_request": [56, 57, 78, 79, 80, 81, 82, 83, 89], "set_split_request": [84, 85, 86, 87], "set_titl": [1, 2, 3, 4, 12, 17, 18, 25], "set_transform_request": [34, 36, 40, 43, 45, 51, 53, 56, 57], "set_xlabel": [1, 2, 3, 4], "set_xlim": [12, 17, 18, 21], "set_xtick": [17, 18, 21], "set_ylabel": [1, 2, 3, 4, 21], "set_ylim": [12, 17, 18, 21], "set_ytick": [17, 18, 21], "setup": [10, 11, 73, 74, 91], "sever": [20, 21, 43, 89, 90], "shape": [12, 13, 14, 15, 16, 17, 18, 20, 29, 34, 36, 40, 43, 45, 49, 51, 52, 53, 66, 67, 81, 85], "share": [21, 77, 89], "sharei": [1, 2, 3, 4, 25], "sharex": [1, 2, 3, 4], "shift": [5, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25, 26, 33, 35, 36, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 58, 60, 62, 64, 65, 66, 67, 68, 80, 88, 89, 90, 91], "shimodaira": [17, 35, 36, 39, 40, 88], "shinichi": 88, "ship": 89, "short": 20, "shorthand": 77, "should": [21, 32, 34, 36, 40, 41, 43, 45, 51, 53, 56, 57, 60, 61, 62, 63, 64, 67, 69, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "show": [1, 2, 3, 4, 12, 13, 14, 17, 18, 21, 24, 25, 26, 52, 53], "showcas": 89, "shown": [89, 90], "shrink": 21, "shrinkag": [28, 29, 39, 40, 64], "shuffl": [66, 84, 86, 87], "shufflesplit": [24, 26, 89, 90], "si": [18, 64, 88], "sigma": [15, 67, 71], "sigma_ch": [4, 68], "sigma_freq": 68, "sigma_regress": 67, "sign": [78, 79, 80, 81, 82, 83], "signal": [4, 17, 52, 53, 68, 88], "signatur": [79, 80, 83], "similar": [82, 89], "similarli": [20, 89], "simpl": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 89], "simplest": 89, "simpli": 89, "simplifi": 89, "simultan": 89, "sin": 22, "sinc": [25, 89], "singl": [20, 79, 86, 89], "singleton": 86, "sinkhorn": [16, 30, 31, 37, 38], "sinno": [18, 60, 61], "site": [6, 14, 16, 21], "size": [17, 18, 21, 52, 53, 68, 69, 72, 84], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 27, 89, 90, 91], "skada_logo": 22, "skada_logo_ful": 22, "skada_logo_full_whit": 22, "skip": 89, "sklearn": [12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 26, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "skorch": [6, 7, 8, 88], "sleep": 88, "small": 79, "smola": [17, 44, 45, 88], "smooth": [17, 44, 45, 52, 53], "smooth_weight": [17, 44, 45], "so": [12, 18, 20, 89], "soft": [82, 88], "softmax": 6, "softneighborhooddens": 89, "sol_": [13, 41], "solid": 21, "solomon": [14, 88], "solut": [18, 22, 41, 43, 61], "solv": [41, 42, 43], "solver": [16, 17, 22, 30, 31, 44, 45], "some": [0, 18, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "sort": 25, "sourc": [5, 6, 7, 8, 9, 11, 12, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "source_idx": 89, "source_mark": [12, 18], "source_scor": 78, "source_target_split": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 24], "source_weights_": [45, 51], "sourcetargetselector": 89, "sourcetargetshufflesplit": [20, 25, 88, 89], "sourcetensor": [6, 7, 8, 9, 18, 21], "space": [17, 18, 69, 89], "spars": [52, 53], "spatial": [52, 53], "special": 89, "specif": [20, 22, 68, 70, 89], "specifi": [77, 81], "speed": [52, 53], "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25], "split": [20, 21, 24, 25, 42, 43, 84, 85, 86, 87, 88, 89, 90], "splitter": [20, 25, 85], "springer": [75, 76, 88], "sqeuclidean": [21, 30, 31, 37, 38, 54, 55], "sqrt": [44, 45], "squar": [12, 29, 41, 52, 53], "stack": 89, "standard": [52, 53, 65, 66, 67, 68, 89], "standardscal": [20, 77, 88, 89], "start": [20, 88, 89, 90], "state": 12, "static": 89, "statist": [17, 35, 36, 39, 40, 88], "std": [13, 14, 20, 24, 68], "step": [9, 12, 16, 18, 21, 32, 77], "still": 89, "stop": [30, 31, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 64], "store": [17, 18, 52, 53, 88], "str": [17, 18, 30, 31, 34, 36, 37, 38, 40, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 64, 67, 69, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "straightforward": 89, "strategi": [18, 24, 26, 32, 42, 43, 78, 88], "strategylorenzo": 88, "stratifi": 87, "stratifieddomainshufflesplit": 25, "stride": 9, "string": [44, 45, 52, 53, 77, 80, 83], "structur": 89, "sub": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "subj_1": 89, "subj_12": 89, "subj_3": 89, "subject": [17, 18, 88], "subplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "subplots_adjust": [1, 2, 3, 4, 25], "subsequ": [20, 88], "subspac": [2, 3, 11, 19, 21, 58, 59, 60, 61, 62, 64, 67, 88, 91], "subspace_estim": 18, "subspacealign": [18, 21, 88], "subspacealignmentadapt": [21, 58, 89], "sugiyama": [17, 42, 43, 80, 88], "suit": 89, "suitabl": 17, "sum": [12, 81], "sun": [7, 18, 28, 29, 62, 63, 73, 74, 88], "supervis": [14, 24, 83, 85, 88, 89], "supervisedscor": [24, 89, 90], "support": [13, 75, 76], "supspac": 18, "suptitl": [1, 2, 3, 4, 12, 17, 18, 25], "sure": 12, "suzuki": [17, 88], "svc": [12, 14, 15, 16, 18, 20, 21, 24, 26, 30, 32], "svg": 22, "svm": [12, 13, 14, 16, 18, 20, 21, 24, 26], "synthet": 21, "system": [13, 41, 88], "t": [2, 3, 7, 13, 16, 17, 18, 21, 24, 25, 26, 49, 52, 53, 67, 82, 88, 89], "t10k": 7, "t2": [25, 89], "tab10": [1, 2, 13, 14, 15, 16, 20, 22], "taiji": 88, "takafumi": 88, "take": [17, 20, 52, 53, 89], "taken": [12, 21, 43, 65, 66, 67, 68], "tao": [18, 64, 88], "tar": [21, 88], "target": [5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 76, 78, 80, 84, 85, 86, 88, 89, 90, 91], "target_criterion": [70, 75, 76], "target_idx": 89, "target_label": [24, 25, 83, 89], "target_mark": [12, 18], "target_shift": [2, 3, 14, 21, 67], "targetaccuracyscor": [24, 89, 90], "task": [6, 7, 8, 9, 13, 16, 41], "tca": [18, 21, 88], "team": 88, "techniqu": [12, 32, 78, 88], "temperatur": 82, "tensor": [6, 7, 8, 9, 18, 21], "term": [75, 76], "test": [0, 17, 21, 24, 25, 84, 85, 86, 87, 88, 90], "test_cv": 89, "test_index": [84, 87], "test_map": 89, "test_offic": 89, "test_pipelin": 89, "test_reweight": 89, "test_samples_gener": 89, "test_scor": 89, "test_siz": [24, 26, 84, 85, 86, 87, 89, 90], "test_subspac": 89, "teterwak": 88, "text": [12, 13, 15, 16, 17, 18, 20, 21, 22, 25], "textsf": 22, "than": [6, 7, 8, 9, 13, 17, 18, 21, 52, 53], "thank": 24, "thei": [12, 89], "them": [52, 53, 89], "theme": 89, "theo": 88, "theoret": 41, "therefor": 77, "theta": 22, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 32, 34, 36, 40, 41, 43, 45, 51, 52, 53, 56, 57, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "thoma": 88, "those": [12, 20, 52, 53, 89], "though": 89, "threshold": [30, 31, 63, 64], "through": 76, "thu": [12, 17, 18, 25, 52, 53], "th\u00e9o": [6, 7, 8, 9, 88], "tight": 22, "tight_layout": [18, 21, 25], "time": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 77], "titl": [2, 3, 13, 14, 15, 16, 20, 88], "tjm": [18, 62, 63], "todo": 9, "togeth": [77, 89], "tol": [21, 24, 30, 31, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 64], "toler": [41, 42, 43, 44, 45, 48, 49, 50, 51], "tool": 89, "toolbox": [22, 88], "torch": [6, 7, 8, 18, 21, 69, 70, 72, 73, 75, 76], "torr": [2, 3, 67], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 65, 66, 67, 68, 91], "toward": [79, 88], "tr": 25, "trade": [41, 62, 63], "tradeoff": [18, 62, 63], "train": [10, 11, 12, 16, 17, 18, 20, 21, 24, 25, 69, 72, 73, 74, 75, 84, 85, 86, 87, 88, 89, 90, 91], "train_index": [84, 87], "train_loss": [6, 7, 8, 9], "train_siz": [84, 85, 86, 87], "train_split": [6, 7, 8, 9], "train_test_split": 79, "tran": 88, "transact": [16, 18, 30, 31, 32, 37, 38, 46, 54, 55, 60, 61, 64, 78, 88], "transfer": [60, 61, 62, 63, 64, 71, 88], "transfercomponentanalysi": [18, 21], "transfercomponentanalysisadapt": [21, 60, 89], "transferjointmatch": 18, "transferjointmatchingadapt": 62, "transfersubspacelearn": [18, 21], "transfersubspacelearningadapt": 21, "transform": [15, 16, 18, 20, 34, 36, 40, 43, 45, 49, 51, 53, 56, 57, 77, 88, 89], "translat": [66, 67], "transpar": [21, 22], "transport": [10, 11, 13, 19, 30, 31, 37, 38, 41, 46, 47, 54, 55, 67, 75, 76, 77, 88, 91], "tree": [52, 53], "tri": [17, 70], "trigger": 77, "true": [6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 32, 34, 36, 40, 41, 43, 44, 45, 46, 47, 51, 52, 53, 56, 57, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "try": [7, 14, 17, 21], "tsang": 88, "tsl": [18, 21], "tt": 25, "tuia": [16, 30, 31, 37, 38, 46, 54, 55, 75, 76, 88], "tune": [82, 88], "tupl": [65, 66, 67, 68, 77, 89], "tuytelaar": 88, "tw": 7, "two": [17, 18, 22, 52, 53, 63, 64, 88, 89, 90], "type": [2, 3, 25, 77, 88], "typic": [69, 89], "u": 16, "ubyt": 7, "unchang": [34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "under": [17, 35, 36, 39, 40, 48, 49, 50, 51, 88], "under_sampl": 84, "understand": 77, "unifi": [2, 3, 67, 88], "uniform": [21, 52, 53], "uniniti": [75, 76], "uninstanti": [69, 72], "uniqu": [1, 89], "unit": 69, "unitn": 88, "unlabel": [17, 44, 45, 88], "unless": [52, 53], "unpredict": 41, "unseen": 89, "unsupervis": [18, 28, 29, 58, 59, 62, 63, 75, 76, 79, 81, 82, 88], "up": 86, "updat": [22, 34, 36, 40, 43, 45, 51, 53, 56, 57, 70, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "update_predict": 89, "upper": [44, 45], "url": 88, "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 36, 43, 51, 53, 59, 61, 63, 69, 70, 76, 78, 79, 82, 88, 89, 90, 91], "usag": 89, "user": [34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "userwarn": [1, 6, 7, 8, 9, 14, 16, 18, 21, 22], "usetex": 22, "usp": [6, 7, 8, 9], "ustinova": 88, "util": [17, 18, 21, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "v": [2, 3, 17, 18, 67, 88], "va": 25, "val": 88, "valid": [24, 26, 27, 32, 42, 43, 52, 53, 67, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91], "valu": [3, 12, 21, 28, 29, 32, 37, 38, 39, 40, 41, 52, 53, 54, 55, 63, 64, 66, 67, 81, 82, 84, 89], "var_smooth": 77, "variabl": 85, "variat": 41, "vector": [13, 52, 53], "verbos": [13, 21, 41, 63, 64, 77], "veri": 25, "version": [25, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "vertic": 25, "via": [1, 18, 22, 60, 61, 70, 82, 88], "view": [2, 3, 67], "virgini": 88, "vision": [18, 28, 29, 58, 59, 62, 63, 75, 76, 82, 88], "visit": 88, "visual": [11, 18, 20, 27, 58, 59, 67, 84, 85, 86, 87, 88, 91], "visualis": 4, "vmax": [1, 2, 3, 12, 13, 14, 15, 16, 20, 22, 25], "vmin": [12, 25], "vo": 22, "von": [17, 88], "vor": 22, "vstack": [15, 22], "w": [17, 22, 43, 45, 49, 88], "w_": 49, "wa": [1, 4, 14, 65, 66, 67, 68], "wai": [82, 88, 89, 90], "wang": [18, 62, 63, 88], "want": [14, 16, 26, 52, 53], "warn": [14, 16, 18, 21, 26, 88], "wasserstein": [14, 30, 31, 37, 38, 54, 55, 88], "we": [2, 3, 13, 14, 15, 16, 20, 22, 24, 25, 26, 52, 53, 67, 88, 89, 90], "webcam": 89, "webcam_idx": 89, "weight": [17, 20, 21, 33, 34, 35, 36, 39, 40, 44, 45, 51, 52, 53, 70, 79, 80, 88, 89], "weight_estim": [17, 21, 33, 34, 80], "weight_estimator_source_": [34, 80], "weight_estimator_target_": [34, 80], "well": [12, 14, 20, 52, 53, 89], "were": [12, 89], "what": [16, 20], "when": [12, 17, 18, 20, 32, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 77, 89], "where": [12, 18, 49, 65, 66, 67, 68, 85, 88, 89], "whether": [78, 79, 80, 81, 82, 83], "which": [12, 16, 17, 18, 20, 25, 52, 53, 67, 68, 88, 89], "while": [12, 13, 25, 41, 77, 85, 86, 89, 90], "whole": 20, "whose": [69, 72, 73, 75], "width": 89, "with_mean": 77, "with_std": 77, "within": [77, 89], "without": [9, 12, 17, 18, 21, 22, 24, 88, 89], "wolf": [17, 28, 29, 39, 40, 44, 45], "won": [17, 18, 89], "work": [14, 17, 18, 20, 34, 36, 40, 43, 45, 51, 52, 53, 56, 57, 69, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "workflow": 89, "workshop": [7, 17, 52, 53, 73, 74, 88], "would": [88, 89], "wrap": [20, 77], "wrapper": 20, "www": [7, 17], "x": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 34, 36, 40, 43, 45, 49, 51, 52, 53, 65, 66, 67, 68, 80, 83, 84, 85, 87, 88, 89, 90], "x0": [18, 21], "x_": [12, 18], "x_adapt": [15, 16], "x_adapted_classreg": 16, "x_adapted_linear": 16, "x_adapted_sinkhorn": 16, "x_dict": 9, "x_lodo": 25, "x_max": [17, 18, 21], "x_min": [17, 18, 21], "x_point": 12, "x_sourc": [1, 2, 3, 4, 16, 24], "x_source_": [45, 49, 51, 61], "x_source_adapt": 16, "x_source_adapted_classreg": 16, "x_source_adapted_linear": 16, "x_source_adapted_sinkhorn": 16, "x_subj1": 89, "x_subj12": 89, "x_subj3": 89, "x_t": 12, "x_target": [1, 2, 3, 4, 16, 24, 26, 89, 90], "x_target_": 61, "x_test": [6, 7, 8, 9, 89], "x_train": [18, 89], "xclass": 22, "xi": 15, "xlabel": [24, 26], "xlim": [12, 25], "xs_subspac": 18, "xt": [12, 13, 14, 15, 17, 18, 20, 21, 22, 88], "xt2": 22, "xt_adapt": 18, "xt_subspac": 18, "xx": [13, 14], "xxx": 87, "y": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 34, 36, 40, 43, 45, 49, 51, 53, 65, 66, 67, 68, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90], "y_": [18, 70, 71, 74, 76], "y_lodo": 25, "y_max": [17, 18, 21], "y_min": [17, 18, 21], "y_point": 12, "y_pred": [78, 79], "y_pred_": [70, 71, 74, 76], "y_pred_t": [70, 71, 74, 76], "y_sourc": [1, 2, 3, 4, 16, 24], "y_subj1": 89, "y_subj12": 89, "y_subj3": 89, "y_target": [1, 2, 3, 4, 16, 24, 26, 89, 90], "y_test": [6, 7, 8, 9, 89], "y_train": [18, 89], "y_true": 79, "yang": 88, "yani": [25, 88], "yann": 7, "yaroslav": 72, "year": 88, "yerr": 24, "yet": 88, "yh": 14, "yht": 14, "yi": 15, "yield": 85, "ylabel": 26, "ylim": [12, 25], "you": [14, 16, 20, 34, 36, 40, 43, 45, 51, 53, 56, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "your": [88, 89], "ypred": 88, "ys_pred": [13, 14], "yt": [12, 13, 14, 15, 17, 18, 20, 21, 22], "yt_pred": [13, 14, 20], "ytick": [24, 25], "yticklabel": 25, "yu": [18, 62, 63, 88], "yy": [13, 14], "z": [13, 14, 88], "z_jcpot": 14, "zero": [9, 22], "zero_grad": 9, "zhang": [48, 49, 50, 51, 88], "zip": [11, 21, 87], "zjdot": [13, 14], "zorder": 22}, "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Label Propagation methods", "Multi-domain Linear Monge Alignment", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Subspace method example on subspace shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "skada.CORAL", "skada.CORALAdapter", "skada.ClassRegularizerOTMapping", "skada.ClassRegularizerOTMappingAdapter", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DensityReweightAdapter", "skada.DiscriminatorReweight", "skada.DiscriminatorReweightAdapter", "skada.EntropicOTMapping", "skada.EntropicOTMappingAdapter", "skada.GaussianReweight", "skada.GaussianReweightAdapter", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.KLIEPReweightAdapter", "skada.KMMReweight", "skada.KMMReweightAdapter", "skada.LinearOTMapping", "skada.LinearOTMappingAdapter", "skada.MMDLSConSMapping", "skada.MMDLSConSMappingAdapter", "skada.MMDTarSReweight", "skada.MMDTarSReweightAdapter", "skada.NearestNeighborReweight", "skada.NearestNeighborReweightAdapter", "skada.OTMapping", "skada.OTMappingAdapter", "skada.PerDomain", "skada.Shared", "skada.SubspaceAlignment", "skada.SubspaceAlignmentAdapter", "skada.TransferComponentAnalysis", "skada.TransferComponentAnalysisAdapter", "skada.TransferJointMatching", "skada.TransferJointMatchingAdapter", "skada.TransferSubspaceLearning", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "SKADA: SciKit Domain Adaptation", "Users Guide", "Metrics: Compute score for domain adaptation problems", "Computation times"], "titleterms": {"2": [12, 17, 18], "2d": [12, 17, 18], "The": 18, "acknowledg": 88, "adapt": [6, 7, 8, 11, 15, 16, 17, 18, 20, 88, 89, 90], "advanc": 20, "adversari": 6, "algorithm": 88, "align": [0, 15, 18], "analysi": 18, "api": 0, "behavior": 25, "between": [17, 18], "cdan": 69, "cdanloss": 70, "circularvalid": 78, "class": [12, 17, 18], "classic": [6, 7, 8], "classif": [13, 14, 15, 21], "classifi": [12, 13, 14, 15, 20], "classregularizerotmap": 30, "classregularizerotmappingadapt": 31, "comparison": [17, 18, 21], "compon": 18, "comput": [5, 10, 19, 23, 27, 90, 91], "concept": [13, 14, 15, 16], "content": 88, "coral": 28, "coraladapt": 29, "covari": 17, "cross": [20, 25], "cross_val_scor": 24, "da": [0, 9, 11, 16, 20, 21, 88, 89], "danloss": 71, "dann": [6, 72], "dasvm": 12, "dasvmclassifi": [12, 32], "data": [13, 14, 15], "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 65, 66, 67, 68, 89], "deep": [0, 9, 11, 69, 70, 71, 72, 73, 74, 75, 76, 88], "deepcor": [7, 73], "deepcoralloss": 74, "deepembeddedvalid": 79, "deepjdot": [8, 75], "deepjdotloss": 76, "densiti": 17, "densityreweight": 33, "densityreweightadapt": 34, "differ": 16, "discr": 17, "discriminatorreweight": 35, "discriminatorreweightadapt": 36, "diverg": 7, "doe": 16, "domain": [1, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 18, 88, 89, 90], "domainshufflesplit": 84, "drift": [13, 14, 15, 16], "entropicotmap": 37, "entropicotmappingadapt": 38, "estim": [20, 89], "exampl": [11, 12, 13, 17, 18, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 60, 62, 64, 65, 67, 68, 72, 73, 74, 75, 77, 80, 81, 83, 84, 85, 86, 87, 88], "full": [14, 22], "galleri": 11, "gaussian": 17, "gaussianreweight": 39, "gaussianreweightadapt": 40, "gener": [12, 13, 14, 15, 16, 17, 18, 22], "grid": 20, "gridsearchcv": 26, "guid": 89, "how": [16, 20], "illustr": [13, 14, 16, 17, 18], "imag": [6, 7, 8, 9], "implement": 88, "importanceweightedscor": 80, "indic": 88, "instal": 88, "jcpot": 14, "jdot": 13, "jdotregressor": 41, "joint": 18, "kernel": 17, "kliepreweight": [17, 42], "kliepreweightadapt": 43, "kmmreweight": 44, "kmmreweightadapt": 45, "labe": 14, "label": [12, 14], "labelprop": 14, "learn": [0, 11, 18, 88], "leaveonedomainout": 85, "licens": 88, "linear": 15, "linearotmap": 46, "linearotmappingadapt": 47, "load": [6, 7, 8, 9], "logo": 22, "main": 0, "make_da_pipelin": 77, "make_dataset_from_moons_distribut": 65, "make_shifted_blob": 66, "make_shifted_dataset": 67, "make_variable_frequency_dataset": 68, "map": 0, "match": [17, 18], "mean": 17, "method": [0, 6, 7, 8, 9, 11, 14, 16, 17, 18, 21], "metric": [0, 78, 79, 80, 81, 82, 83, 88, 89, 90], "mmdlsconsmap": 48, "mmdlsconsmappingadapt": 49, "mmdtarsreweight": 50, "mmdtarsreweightadapt": 51, "model": [0, 6, 7, 8, 14, 89], "model_select": [0, 84, 85, 86, 87], "modul": 0, "mong": 15, "multi": 15, "nearest": 17, "nearestneighborreweight": 52, "nearestneighborreweightadapt": 53, "neighbor": 17, "optim": [8, 16], "ot": 13, "otda": 16, "other": 0, "otmap": 54, "otmappingadapt": 55, "our": [12, 17, 18], "paramet": 9, "perdomain": 56, "pipelin": [0, 20, 89], "plan": 13, "plot": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18, 22], "predictionentropyscor": 81, "problem": [16, 17, 18, 90], "procedur": 11, "propag": 14, "pytorch": 88, "refer": 88, "regress": [13, 14], "regressor": [13, 14], "reweight": [0, 17], "sampl": [0, 89], "scikit": 88, "score": [17, 18, 20, 89, 90], "search": 20, "select": [0, 89], "selector": 89, "setup": 9, "share": 57, "shift": [1, 2, 3, 4, 17, 18], "short": 88, "skada": [0, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "skorch": 9, "small": 22, "softneighborhooddens": 82, "sourc": [1, 2, 3, 4, 13, 14, 15], "sourcetargetshufflesplit": 86, "splitter": 89, "stratifieddomainshufflesplit": 87, "subspac": 18, "subspacealign": 58, "subspacealignmentadapt": 59, "supervisedscor": 83, "svc": 13, "tabl": 88, "target": [1, 2, 3, 4, 12], "test": 89, "time": [5, 10, 19, 23, 27, 89, 91], "torch": 9, "train": [6, 7, 8, 9, 13, 14, 15], "transfer": 18, "transfercomponentanalysi": 60, "transfercomponentanalysisadapt": 61, "transferjointmatch": 62, "transferjointmatchingadapt": 63, "transfersubspacelearn": 64, "transport": [8, 16], "us": [20, 24, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 60, 62, 64, 65, 67, 68, 72, 73, 74, 75, 77, 80, 81, 83, 84, 85, 86, 87], "usag": 12, "user": 89, "util": 0, "valid": [11, 20, 25], "visual": 25, "we": [12, 17, 18], "white": 22, "work": 16}})