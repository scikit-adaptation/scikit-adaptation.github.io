Search.setIndex({"docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "gen_modules/skada.CORAL", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.GaussianReweight", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.OTMapping", "gen_modules/skada.PerDomain", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "index", "quickstart", "scorer", "sg_execution_times"], "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "index.rst", "quickstart.md", "scorer.rst", "sg_execution_times.rst"], "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "skada.CORAL", "skada.ClassRegularizerOTMapping", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DiscriminatorReweight", "skada.EntropicOTMapping", "skada.GaussianReweight", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.LinearOTMapping", "skada.MMDLSConSMapping", "skada.MMDTarSReweight", "skada.NearestNeighborReweight", "skada.OTMapping", "skada.PerDomain", "skada.Shared", "skada.SubspaceAlignment", "skada.TransferComponentAnalysis", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "SKADA: SciKit Domain Adaptation", "Users Guide", "Metrics: Compute score for domain adaptation problems", "Computation times"], "terms": {"some": [0, 15, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "domain": [0, 5, 10, 13, 16, 17, 19, 21, 22, 25, 26, 27, 29, 30, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 69], "adapt": [0, 10, 13, 16, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "produc": [0, 62], "test": [0, 15, 18, 22, 62, 63, 64, 65, 66, 68], "benchmark": 0, "go": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 67], "end": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 45], "download": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "full": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 21, 22, 23, 66], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 67, 69], "code": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 66, 67], "thi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 27, 32, 37, 39, 40, 48, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 12, 17, 18, 21, 22, 23, 66], "make_dataset_from_moons_distribut": [1, 12], "gener": [1, 2, 3, 4, 6, 7, 8, 9, 11, 17, 18, 20, 21, 22, 23, 33, 41, 43, 44, 45, 46, 47, 50, 57, 63, 66, 67, 69], "each": [1, 2, 3, 4, 17, 22, 27, 32, 37, 39, 40, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "method": [1, 2, 3, 4, 10, 12, 16, 17, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "consist": [1, 2, 3, 4, 12], "data": [1, 2, 3, 4, 12, 15, 17, 18, 19, 22, 42, 43, 44, 45, 46, 57, 58, 62, 63, 64, 66, 67, 68], "import": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 33, 37, 55, 58, 62, 65, 66, 67, 68], "matplotlib": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "pyplot": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "plt": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "numpi": [1, 4, 12, 13, 15, 17, 19, 21, 22, 62, 65], "np": [1, 4, 12, 13, 15, 17, 19, 21, 22, 45, 62, 63, 65], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 62, 65, 66, 67, 68, 69], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 24, 67, 68, 69], "source_target_split": [1, 2, 3, 4, 12, 13, 14, 15, 17, 21], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 18, 19, 20, 22, 24, 47, 48, 54, 56, 57, 60, 66, 67, 68, 69], "same": [1, 2, 3, 4, 12, 13, 18, 22, 37, 56, 67], "random": [1, 2, 3, 4, 18, 19, 21, 33, 41, 43, 44, 45, 46, 57, 62, 63, 65], "seed": [1, 2, 3, 4, 18, 19], "multipl": [1, 2, 3, 4, 12, 17, 18, 33, 41, 43, 44, 45, 46, 57, 67], "call": [1, 2, 3, 4, 6, 14, 17, 18, 33, 41, 43, 44, 45, 46, 57, 63, 67], "make_shifted_dataset": [1, 2, 3, 13, 14, 15, 17, 18, 21, 22, 23, 67, 68], "ensur": [1, 2, 3, 4, 18], "distribut": [1, 2, 3, 4, 12, 13, 14, 15, 18, 22, 32, 45, 53, 54, 66, 67, 68], "random_se": [1, 4, 12, 15, 18, 21, 22, 67, 68], "randint": [1, 4], "2": [1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 17, 18, 19, 22, 23, 37, 43, 44, 45, 60, 62, 65, 66, 67], "10": [1, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 22, 26, 32, 35, 36, 43, 44, 46, 62, 63, 64, 65, 66], "x": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 37, 43, 44, 45, 46, 58, 61, 62, 63, 65, 66, 67, 68], "y": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 43, 44, 45, 46, 56, 57, 58, 61, 62, 63, 65, 66, 67, 68], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 21, 22, 23, 39, 40, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "pos_sourc": [1, 12, 43], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 60, 62, 65, 66, 67, 68, 69], "1": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "pos_target": [1, 12, 43], "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 23, 62, 65, 66, 67, 68], "n_samples_sourc": [1, 2, 3, 4, 12, 13, 14, 15, 18, 21, 22, 23, 43, 45, 46, 67, 68], "50": [1, 13], "n_samples_target": [1, 2, 3, 4, 12, 13, 14, 15, 18, 21, 22, 23, 43, 45, 46, 67, 68], "nois": [1, 2, 3, 4, 12, 13, 14, 15, 18, 21, 22, 23, 43, 44, 45, 46, 67, 68], "random_st": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18, 21, 22, 23, 33, 41, 43, 44, 45, 46, 57, 62, 63, 64, 65, 67, 68], "x_sourc": [1, 2, 3, 4, 14, 21], "x_target": [1, 2, 3, 4, 14, 21, 23, 67, 68], "y_sourc": [1, 2, 3, 4, 14, 21], "y_target": [1, 2, 3, 4, 14, 21, 23, 67, 68], "fig": [1, 2, 3, 4, 22], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "subplot": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18, 22], "sharex": [1, 2, 3, 4], "row": [1, 2, 3], "sharei": [1, 2, 3, 4, 22], "figsiz": [1, 2, 3, 4, 12, 14, 15, 18, 21, 22], "8": [1, 2, 3, 4, 6, 9, 12, 13, 14, 15, 18, 22, 23, 41, 45, 62, 65, 66], "suptitl": [1, 2, 3, 4, 12, 15, 22], "One": [1, 17, 46, 63, 66], "one": [1, 17, 37, 43, 45, 46, 59, 67, 68], "fontsiz": [1, 2, 3, 12, 15, 19, 22], "14": [1, 2, 3, 14, 49, 66], "subplots_adjust": [1, 2, 3, 4, 22], "bottom": [1, 2, 3, 4], "15": [1, 2, 3, 4, 12, 13, 15, 18, 19, 20, 22, 50, 57, 66, 69], "scatter": [1, 2, 3, 12, 13, 14, 15, 17, 18, 19, 22, 23], "c": [1, 2, 3, 12, 13, 14, 15, 17, 18, 19, 22, 23], "cmap": [1, 2, 3, 12, 13, 14, 15, 17, 18, 19, 22], "tab10": [1, 2, 13, 14, 17, 19], "vmax": [1, 2, 3, 12, 13, 14, 17, 19, 22], "alpha": [1, 2, 3, 4, 12, 13, 14, 15, 18, 19, 23, 32], "5": [1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 32, 33, 35, 62, 65, 66, 67, 68], "set_titl": [1, 2, 3, 4, 12, 15, 22], "set_xlabel": [1, 2, 3, 4], "featur": [1, 2, 3, 14, 15, 32, 44, 47, 48, 49, 50, 52, 57, 63, 66], "set_ylabel": [1, 2, 3, 4, 18], "grei": 1, "show": [1, 2, 3, 4, 12, 13, 15, 18, 21, 22, 23, 37], "home": [1, 6, 7, 8, 9, 14, 18, 19], "circleci": [1, 6, 7, 8, 9, 14, 18, 19], "project": [1, 6, 7, 8, 9, 18, 19], "plot_dataset_from_moons_distribut": [1, 5, 69], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 67, 69], "51": [1, 13], "userwarn": [1, 6, 7, 8, 9, 14, 18, 19], "No": [1, 19, 21], "colormap": [1, 15, 19], "provid": [1, 17, 19, 32, 39, 40, 47, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "via": [1, 19, 42, 48, 60, 66], "paramet": [1, 14, 17, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "ignor": [1, 19, 23, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "3": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 33, 36, 39, 40, 44, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "9": [1, 6, 7, 8, 12, 13, 14, 17, 18, 19, 26, 30, 42, 45, 62, 65, 66], "domain_sourc": 1, "domain_target": 1, "multi": [1, 67], "i": [1, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 22, 27, 28, 29, 32, 33, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "uniqu": [1, 67], "print": [1, 4, 9, 13, 15, 17, 18, 21, 23, 32, 55, 62, 65], "f": [1, 2, 3, 4, 12, 13, 14, 15, 17, 21, 22, 23, 45, 65, 66], "The": [1, 2, 3, 4, 12, 14, 17, 18, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "wa": [1, 4, 43, 44, 45, 46], "105": [1, 66], "667": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 43, 44, 45, 46, 69], "run": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 37, 67], "time": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 55], "script": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "minut": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "267": [1, 5, 69], "second": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "python": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 66, 69], "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "we": [2, 3, 13, 14, 17, 19, 22, 37, 45, 66, 67, 68], "here": [2, 3, 12, 14, 17, 65, 66], "covari": [2, 3, 11, 12, 16, 25, 28, 29, 31, 33, 34, 37, 45, 51, 52, 58, 66, 69], "concept": [2, 3, 17, 45, 67], "drift": [2, 3, 17, 45], "sampl": [2, 3, 13, 14, 15, 17, 19, 22, 42, 43, 44, 45, 46, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68], "bia": [2, 3, 9, 15, 18, 34, 45, 66], "see": [2, 3, 12, 13, 15, 22, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "detail": [2, 3, 15, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 45, 56, 57, 58, 59, 60, 66, 67], "descript": [2, 3, 43, 44, 45, 46, 67], "moreno": [2, 3, 45], "torr": [2, 3, 45], "j": [2, 3, 12, 13, 14, 15, 45, 66], "g": [2, 3, 14, 32, 39, 40, 45, 47, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "raeder": [2, 3, 45], "t": [2, 3, 7, 13, 14, 15, 18, 21, 22, 23, 37, 45, 60, 66, 67], "alaiz": [2, 3, 45], "rodriguez": [2, 3, 45], "r": [2, 3, 13, 14, 19, 26, 30, 32, 34, 38, 45, 66], "chawla": [2, 3, 45], "n": [2, 3, 13, 14, 15, 19, 22, 26, 30, 32, 34, 38, 45, 66], "v": [2, 3, 45, 66], "herrera": [2, 3, 45], "2012": [2, 3, 15, 37, 45, 66], "A": [2, 3, 13, 14, 15, 18, 26, 27, 30, 32, 34, 38, 41, 42, 45, 47, 50, 51, 53, 56, 58, 61, 66, 67], "unifi": [2, 3, 45, 66], "view": [2, 3, 45], "classif": [2, 3, 6, 7, 8, 9, 11, 14, 20, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 45, 56, 66, 69], "pattern": [2, 3, 14, 25, 26, 27, 30, 34, 38, 45, 56, 66], "recognit": [2, 3, 25, 45], "45": [2, 3, 45], "521": [2, 3, 45], "530": [2, 3, 5, 45, 69], "def": [2, 3, 15, 19, 21, 22], "plot_shifted_dataset": [2, 3, 5, 69], "42": [2, 3, 12, 13, 14, 15, 17, 18, 19, 23], "given": [2, 3, 12, 30, 33, 38, 39, 40, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "type": [2, 3, 22, 55, 66], "possibl": [2, 3, 12, 25, 31, 37, 67], "ar": [2, 3, 12, 14, 15, 17, 21, 22, 37, 39, 40, 41, 44, 45, 47, 48, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "covariate_shift": [2, 3, 18, 45, 67, 68], "target_shift": [2, 3, 18, 45], "concept_drift": [2, 3, 13, 14, 17, 18, 21, 22, 23, 45], "subspac": [2, 3, 18, 41, 45, 66], "20": [2, 3, 7, 12, 13, 14, 15, 17, 18, 21, 23, 57, 66, 67, 68], "label": [2, 3, 4, 7, 9, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 32, 35, 36, 39, 43, 44, 45, 46, 54, 56, 57, 63, 66, 67, 68], "multiclass": [2, 7, 13, 45], "replac": [2, 3], "_": [2, 3, 12, 21, 22, 23, 47, 50, 59, 60, 67], "titl": [2, 3, 13, 14, 17], "author": [3, 6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 22], "ruben": [3, 12, 15, 66], "bueno": [3, 12, 15, 66], "polytechniqu": [3, 15], "edu": [3, 7, 15, 66], "licens": [3, 6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 22], "bsd": [3, 6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 22, 66], "claus": [3, 6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 22, 66], "regress": [3, 32, 45], "max": [3, 13, 14, 15, 18, 30, 32, 38], "autumn": [3, 12], "": [3, 4, 7, 12, 15, 18, 19, 21, 22, 23, 37, 45, 47, 50, 51, 53, 58, 61, 66, 67, 68], "right": [3, 15, 18, 22, 60, 66], "cbar_ax": 3, "add_ax": 3, "85": 3, "05": [3, 16, 18, 23, 32, 35, 60, 69], "80": [3, 15, 19], "cb": 3, "colorbar": 3, "cax": 3, "set_label": 3, "valu": [3, 12, 18, 25, 27, 30, 31, 32, 37, 38, 44, 45, 59, 60, 62, 67], "655": [3, 5, 69], "plot_shifted_dataset_regress": [3, 5, 69], "make_variable_frequency_dataset": 4, "make_dataset": [4, 18], "n_channel": [4, 46], "n_frequenc": [4, 46], "n_class": [4, 6, 7, 8, 9, 46], "delta_f": [4, 46], "band_siz": [4, 46], "sigma_ch": [4, 46], "ax": [4, 13, 14, 15, 17, 18, 19, 22], "all": [4, 11, 17, 22, 27, 37, 41, 43, 44, 45, 46, 66, 67, 69], "signal": [4, 15, 37, 46, 66], "visualis": 4, "linspac": [4, 12, 13, 19], "100": [4, 7, 12, 13, 15, 18, 19, 32, 33, 35, 43, 44, 45, 46], "rang": [4, 9, 12, 13, 14, 19, 22, 67], "1000": [4, 15, 18, 27, 30, 33, 36], "1100": 4, "7": [4, 12, 13, 14, 15, 19, 22, 37, 45, 62, 65, 66], "chan": 4, "class": [4, 9, 14, 17, 18, 19, 22, 26, 27, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "legend": [4, 12, 13, 21, 22], "psd": 4, "frequenc": [4, 46], "870": 4, "600": [4, 5, 23, 24, 69], "plot_variable_frequency_dataset": [4, 5, 69], "00": [5, 7, 14, 16, 20, 21, 24, 69], "02": [5, 22, 24, 69], "050": 5, "execut": [5, 10, 16, 17, 20, 24, 67, 69], "file": [5, 10, 11, 16, 19, 20, 24, 69], "auto_exampl": [5, 10, 16, 20, 24], "dataset": [5, 16, 18, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 41, 59, 60, 61, 62, 63, 68, 69], "mem": [5, 10, 16, 20, 24, 69], "mb": [5, 10, 16, 20, 24, 69], "plot": [5, 11, 14, 17, 18, 22, 23, 43, 45, 46, 69], "sourc": [5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "shift": [5, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 28, 29, 31, 33, 35, 36, 37, 43, 44, 45, 46, 58, 66, 67, 68, 69], "target": [5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36, 38, 42, 43, 44, 45, 46, 49, 52, 54, 56, 58, 62, 63, 64, 66, 67, 68, 69], "simpl": [6, 7, 8, 9, 12, 13, 14, 15, 17, 21, 67], "task": [6, 7, 8, 9, 13, 14, 32], "th\u00e9o": [6, 7, 8, 9, 66], "gnassoun": [6, 7, 8, 9, 66], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 22], "skorch": [6, 7, 8, 66], "neuralnetclassifi": [6, 7, 8], "torch": [6, 7, 8, 18, 47, 48, 50, 51, 53, 54], "nn": [6, 7, 8, 9], "load_mnist_usp": [6, 7, 8, 9], "deep": [6, 7, 8, 10, 57, 59, 67, 69], "modul": [6, 7, 8, 9, 47, 50, 51, 53, 66], "mnisttouspsnet": [6, 7, 8, 9], "n_sampl": [6, 7, 8, 9, 14, 41, 44, 45, 59, 63], "return_dataset": [6, 7, 8, 9, 18, 21, 22, 23, 43, 44, 45, 46], "true": [6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 27, 32, 34, 37, 39, 40, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "pack_train": [6, 7, 8, 9, 18, 21, 22, 23, 67], "as_sourc": [6, 7, 8, 9, 18, 21, 22, 23, 67], "mnist": [6, 7, 8, 9], "as_target": [6, 7, 8, 9, 18, 21, 22, 23, 67], "usp": [6, 7, 8, 9], "x_test": [6, 7, 8, 9, 67], "y_test": [6, 7, 8, 9, 67], "sample_domain_test": [6, 7, 8, 9, 67], "pack_test": [6, 7, 8, 9, 22, 23, 67], "_mnist_usp": [6, 7, 8, 9], "72": [6, 7, 8, 9], "To": [6, 7, 8, 9, 18, 67, 68], "copi": [6, 7, 8, 9, 18, 19, 55], "construct": [6, 7, 8, 9, 18, 37, 55], "tensor": [6, 7, 8, 9, 18], "recommend": [6, 7, 8, 9, 18], "sourcetensor": [6, 7, 8, 9, 18], "clone": [6, 7, 8, 9, 12, 18, 55, 67], "detach": [6, 7, 8, 9, 18], "requires_grad_": [6, 7, 8, 9, 18], "rather": [6, 7, 8, 9, 18], "than": [6, 7, 8, 9, 13, 15, 18, 37], "mnist_target": [6, 7, 8, 9], "mnist_dataset": [6, 7, 8, 9], "criterion": [6, 7, 8, 33, 35, 36, 47, 48, 50, 53, 54], "crossentropyloss": [6, 7, 8, 9], "batch_siz": [6, 7, 8, 9], "128": [6, 7, 8, 9], "max_epoch": [6, 7, 8, 9], "train_split": [6, 7, 8, 9], "fals": [6, 7, 8, 9, 15, 18, 21, 22, 27, 32, 37, 39, 40, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "lr": [6, 7, 8, 9], "1e": [6, 7, 8, 9, 18, 21, 26, 30, 32, 33, 34, 35, 36, 55, 57], "fit": [6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 55, 58, 66, 67, 68], "score": [6, 7, 8, 12, 14, 18, 21, 23, 39, 40, 56, 57, 58, 59, 60, 61, 66], "epoch": [6, 7, 8, 9], "train_loss": [6, 7, 8, 9], "dur": [6, 7, 8, 9], "3492": 6, "5960": 6, "2240": 6, "2008": [6, 15, 66], "0919": 6, "6011": 6, "0529": 6, "7996": 6, "0419": 6, "5970": 6, "909967845659164": 6, "layer_nam": [6, 7, 8, 9, 47, 50, 51, 53], "fc1": [6, 7, 8, 9], "reg": [6, 7, 8, 9, 14, 18, 25, 31, 34, 36, 47, 48, 50, 51, 53], "01": [6, 7, 8, 10, 12, 13, 16, 20, 21, 22, 23, 69], "num_featur": [6, 47, 50], "local": [6, 14], "lib": [6, 14], "python3": [6, 14], "site": [6, 14], "packag": [6, 14], "1511": 6, "implicit": 6, "dimens": 6, "choic": [6, 17, 67], "softmax": 6, "ha": [6, 12, 22, 26, 30, 38, 39, 40, 47, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "been": [6, 12, 66], "deprec": 6, "chang": [6, 13, 19, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "includ": [6, 55, 62, 66, 67], "dim": 6, "an": [6, 14, 15, 17, 19, 33, 37, 39, 40, 41, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "argument": [6, 37, 67], "return": [6, 19, 21, 22, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "self": [6, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "_call_impl": 6, "arg": 6, "kwarg": [6, 27, 32, 39, 40, 47, 50, 51, 53, 57], "6588": 6, "9853": 6, "3486": 6, "2999": 6, "1203": 6, "0970": 6, "0698": 6, "0017": 6, "0500": 6, "8992": 6, "9067524115755627": 6, "13": [6, 10, 16, 53, 54, 66, 69], "981": [6, 10, 69], "plot_adversari": [6, 10, 69], "baochen": [7, 25, 51, 52, 66], "sun": [7, 25, 51, 52, 66], "kate": [7, 25, 51, 52, 66], "saenko": [7, 25, 51, 52, 66], "coral": [7, 17, 18, 35, 51, 52, 66], "correl": [7, 25, 51, 52, 59, 66], "align": [7, 13, 18, 25, 41, 51, 52, 59, 66], "In": [7, 15, 17, 19, 25, 29, 31, 33, 35, 36, 37, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68], "eccv": [7, 51, 52, 53, 54, 66], "workshop": [7, 15, 37, 51, 52, 66], "2016": [7, 47, 48, 50, 51, 52, 66], "http": [7, 15, 66], "yann": 7, "lecun": 7, "com": 7, "exdb": 7, "idx3": 7, "ubyt": 7, "gz": 7, "raw": 7, "9912422": 7, "418616261": 7, "51it": 7, "extract": 7, "idx1": 7, "28881": 7, "197289403": 7, "62it": 7, "t10k": 7, "1648877": 7, "420189039": 7, "23it": 7, "4542": 7, "35213546": 7, "71it": 7, "www": [7, 15], "csie": 7, "ntu": 7, "tw": 7, "cjlin": 7, "libsvmtool": 7, "bz2": 7, "1831726": 7, "32768": 7, "11": [7, 27, 56, 66], "160340": 7, "37it": 7, "65536": 7, "160046": 7, "35it": 7, "98304": 7, "159881": 7, "65it": 7, "163840": 7, "07": 7, "223032": 7, "82it": 7, "360448": 7, "03": [7, 24], "488624": 7, "30it": 7, "39": 7, "720896": 7, "920305": 7, "07it": 7, "77": [7, 13], "1409024": 7, "1716433": 7, "1273536": 7, "57it": 7, "4363": 7, "9029": 7, "2173": 7, "3960": 7, "0823": 7, "6978": 7, "0467": 7, "4034": 7, "0329": 7, "0949": 7, "9292604501607717": 7, "5618": 7, "3806": 7, "4025": 7, "4941": 7, "1928": 7, "12": [7, 14, 15, 51, 52, 66], "3002": 7, "1274": 7, "4999": [7, 8], "1043": 7, "9968": 7, "9196141479099679": [7, 8], "23": [7, 10, 66, 69], "258": [7, 10, 69], "plot_diverg": [7, 10, 69], "da": [8, 10, 12, 15, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 45, 51, 52, 68, 69], "4658": 8, "1998": 8, "2421": 8, "1008": 8, "0911": 8, "5992": 8, "0544": 8, "4981": 8, "0402": 8, "3980": 8, "9517684887459807": 8, "reg_cl": [8, 14, 18, 26, 53, 54], "0339": 8, "2867": 8, "0759": 8, "0994": 8, "6837": 8, "4008": 8, "5463": 8, "8988": 8, "4750": 8, "17": [8, 10, 17, 58, 66, 69], "891": [8, 10, 69], "plot_optimal_transport": [8, 10, 69], "deepcor": [9, 52, 66], "deepcoralloss": 9, "base": [9, 12, 13, 14, 15, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 56, 57, 58, 59, 60, 66, 67], "domainawarecriterion": 9, "domainawaremodul": 9, "domainbalanceddataload": 9, "256": [9, 19], "devic": 9, "cuda": 9, "is_avail": 9, "els": [9, 12, 15, 18], "cpu": 9, "model": [9, 13, 15, 33, 57, 58, 61, 66], "1758": 9, "2985": 9, "0393": 9, "1953": 9, "domainawarenet": 9, "initi": [9, 48, 67, 68], "module_": 9, "conv1": 9, "conv2d": 9, "32": [9, 66], "kernel_s": 9, "stride": 9, "relu1": 9, "relu": 9, "conv2": 9, "64": [9, 66], "relu2": 9, "dropout1": 9, "dropout": 9, "p": [9, 15, 18, 37, 55, 66], "25": [9, 15, 46], "inplac": 9, "dropout2": 9, "linear": [9, 12, 14, 18, 34, 66], "in_featur": 9, "9216": 9, "out_featur": 9, "relu3": 9, "fc2": 9, "maxpool": 9, "maxpool2d": 9, "pad": 9, "dilat": 9, "ceil_mod": 9, "x_dict": 9, "todo": 9, "creat": [9, 12, 15, 17, 22, 47, 50, 66, 67], "also": [9, 13, 14, 17, 22, 47, 50, 62, 66, 67], "without": [9, 12, 15, 18, 19, 21, 66, 67], "none": [9, 15, 18, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68], "2222": 9, "8875": 9, "1007": 9, "3034": 9, "optim": [9, 10, 11, 13, 15, 16, 18, 26, 30, 32, 33, 34, 35, 36, 37, 38, 42, 45, 53, 54, 55, 66, 69], "adam": 9, "dataload": 9, "loss_fn": 9, "loop": [9, 26, 66], "running_loss": 9, "iter": [9, 13, 14, 18, 22, 26, 27, 30, 32, 33, 35, 36, 38, 62, 63, 67], "input": [9, 15, 17, 37, 47, 50, 66], "zero": [9, 19], "gradient": [9, 18], "zero_grad": 9, "forward": [9, 48, 49, 52, 54], "pass": [9, 17, 21, 33, 37, 39, 40, 41, 43, 44, 45, 46, 47, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "output": [9, 17, 33, 41, 43, 44, 45, 46, 47, 50, 51, 53, 57, 67], "is_fit": 9, "loss": [9, 13, 32, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61], "backward": 9, "step": [9, 12, 14, 18, 27, 55], "item": 9, "9277472257614136": 9, "15315481126308442": 9, "741": [9, 10, 69], "plot_training_method": [9, 10, 69], "04": [10, 16, 17, 69], "56": 10, "871": 10, "diverg": [10, 11, 15, 48, 51, 66, 69], "transport": [10, 11, 13, 16, 26, 30, 32, 34, 38, 45, 53, 54, 55, 66, 69], "adversari": [10, 11, 47, 48, 50, 66, 69], "train": [10, 11, 12, 14, 15, 17, 18, 21, 22, 47, 50, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69], "setup": [10, 11, 51, 52, 69], "how": [11, 13, 20, 22, 25, 39, 40, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69], "logo": [11, 20, 69], "comparison": [11, 20, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 45, 69], "dasvm": [11, 16, 27, 43, 56, 66, 69], "classifi": [11, 14, 15, 16, 18, 19, 27, 29, 32, 43, 45, 47, 48, 50, 57, 66, 69], "jdot": [11, 16, 18, 32, 45, 66, 69], "regressor": [11, 16, 32, 45, 66, 69], "reweight": [11, 16, 17, 18, 28, 29, 31, 33, 36, 37, 45, 66, 69], "otda": [11, 16, 38, 45, 55, 66, 69], "gridsearchcv": [11, 17, 24, 30, 45, 58, 59, 66, 67, 68, 69], "cross_val_scor": [11, 17, 24, 30, 45, 61, 66, 67, 68, 69], "visual": [11, 17, 24, 41, 45, 62, 63, 64, 65, 66, 69], "cross": [11, 21, 24, 33, 45, 57, 58, 62, 63, 64, 65, 66, 67, 69], "behavior": [11, 24, 32, 45, 62, 63, 64, 65, 69], "auto_examples_python": 11, "zip": [11, 18, 65], "auto_examples_jupyt": 11, "21": [12, 35, 36, 66], "line": 12, "mline": 12, "sklearn": [12, 13, 14, 15, 17, 18, 21, 23, 28, 29, 31, 33, 36, 37, 39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "svm": [12, 13, 14, 17, 18, 21, 23], "svc": [12, 14, 17, 18, 21, 23, 26, 27], "_self_label": 12, "base_estim": [12, 13, 15, 17, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 55, 67, 68], "can": [12, 13, 14, 17, 22, 27, 30, 32, 37, 38, 63, 66, 67, 68], "ani": [12, 15, 17, 27, 32, 66, 67], "equip": [12, 27], "decision_funct": [12, 27, 39, 40], "kernel": [12, 13, 14, 18, 26, 33, 35, 36, 42, 45, 49], "poli": 12, "logisticregress": [12, 13, 15, 17, 18, 29, 33, 57, 66, 67, 68], "etc": [12, 66], "howev": 12, "estim": [12, 13, 15, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "onli": [12, 17, 21, 22, 37, 39, 40, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "target_mark": 12, "source_mark": 12, "o": [12, 19], "xlim": [12, 22], "ylim": [12, 22], "moon": [12, 43], "where": [12, 43, 44, 45, 46, 63, 66, 67], "taken": [12, 18, 43, 44, 45, 46], "locat": [12, 44], "thu": [12, 15, 22, 37], "present": 12, "6": [12, 13, 15, 19, 21, 22, 26, 30, 33, 34, 36, 37, 38, 62, 65, 66], "xt": [12, 13, 15, 17, 18, 19, 66], "yt": [12, 13, 15, 17, 18, 19], "As": [12, 22], "have": [12, 22, 37, 43, 44, 45, 46, 57, 67, 68], "differ": [12, 17, 18, 22, 46, 63, 67, 68], "point": [12, 15, 18, 23, 27, 32, 37, 43, 44, 45, 46], "posit": [12, 37, 43, 66, 67], "case": [12, 13, 15, 17, 37, 56, 57, 58, 59, 60, 61, 67], "figur": [12, 13, 14, 15, 17, 18, 19, 21], "axi": [12, 13, 14, 17, 19], "marker": [12, 19, 22, 67], "set_xlim": [12, 15, 18], "set_ylim": [12, 15, 18], "text": [12, 13, 14, 15, 17, 18, 19, 22], "98": [12, 15, 21], "main": 12, "problem": [12, 22, 26, 27, 30, 32, 37, 38, 42, 56, 63, 66, 67], "know": 12, "goal": [12, 15], "algorithm": [12, 18, 26, 27, 30, 37, 38, 67], "remov": [12, 48], "k": [12, 13, 15, 21, 27, 66], "which": [12, 14, 15, 17, 22, 37, 45, 46, 67], "current": [12, 66], "do": [12, 67, 68], "well": [12, 15, 17, 37, 67], "ad": [12, 27, 34, 37, 43, 44, 45, 46], "out": [12, 63, 66], "so": [12, 15, 21, 67], "sure": 12, "about": 12, "predict": [12, 13, 14, 15, 17, 18, 23, 28, 29, 31, 32, 33, 36, 37, 39, 40, 41, 42, 48, 56, 57, 59, 66, 67], "those": [12, 15, 17, 37, 67], "margin": 12, "band": [12, 46], "close": 12, "semi": [12, 18], "were": [12, 67], "set": [12, 15, 18, 22, 37, 41, 43, 44, 45, 46, 55, 60, 62, 63, 64, 67, 68], "came": 12, "new": [12, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "progress": 12, "when": [12, 15, 17, 27, 37, 43, 44, 45, 46, 55, 67], "save_estim": [12, 27], "save_indic": [12, 27], "epsilon": [12, 57], "len": [12, 15, 18, 22], "concaten": [12, 67], "list": [12, 15, 22, 32, 37, 55, 67], "e": [12, 32, 39, 40, 47, 48, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "x_point": 12, "500": 12, "y_point": 12, "arrai": [12, 15, 17, 19, 22, 33, 36, 37, 43, 44, 45, 46, 49, 62, 63, 65, 67, 68], "x_": 12, "absolut": [12, 62, 67], "shape": [12, 13, 14, 15, 17, 37, 44, 45, 59, 63], "grai": [12, 19], "decis": [12, 13, 18, 37], "boundari": [12, 13, 18, 37], "indices_source_delet": 12, "x_t": 12, "indices_target_ad": 12, "sum": [12, 59], "semi_label": 12, "vmin": [12, 22], "evolut": 12, "margin_lin": 12, "line2d": 12, "color": [12, 15, 18, 19, 21, 22], "black": 12, "markers": 12, "decision_boundari": 12, "red": [12, 19], "handl": [12, 17], "loc": [12, 18, 22], "lower": [12, 13, 18], "left": [12, 22], "object": [12, 22, 25, 26, 27, 28, 30, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68], "0x7f32202f5c60": 12, "state": 12, "At": [12, 45], "first": [12, 15, 18, 22, 64, 66, 67], "circl": 12, "datapoint": [12, 22], "repres": [12, 37, 62, 67], "squar": [12, 32, 37], "thei": [12, 21, 22, 67], "further": [12, 37], "notic": [12, 66], "more": [12, 15, 17, 37, 66, 67], "now": [12, 13, 22, 67, 68], "while": [12, 13, 15, 22, 32, 55, 63, 64, 67, 68], "improv": [12, 15, 29, 31, 66], "techniqu": [12, 27, 56, 66], "992": [12, 16, 69], "plot_dasvm": [12, 16, 69], "jdotregressor": 13, "learn": [13, 15, 22, 32, 37, 41, 42, 49, 50, 55, 58, 63, 67, 68], "2d": [13, 17], "ridg": [13, 32], "krr": 13, "compar": [13, 21, 67], "perform": [13, 15, 17, 22, 55, 67], "between": [13, 14, 19, 25, 31, 32, 37, 42, 48, 49, 52, 54, 56, 57, 60, 62, 67, 68], "courti": [13, 14, 26, 30, 32, 34, 38, 53, 54, 66], "flamari": [13, 14, 17, 19, 26, 30, 32, 34, 38, 53, 54, 66], "habrard": [13, 32, 66], "rakotomamonji": [13, 14, 26, 30, 32, 34, 38, 66], "2017": [13, 25, 32, 66], "joint": [13, 32, 53, 54, 66], "advanc": [13, 25, 66], "neural": [13, 32, 42, 50, 66], "inform": [13, 32, 66], "process": [13, 15, 32, 37, 66, 67], "system": [13, 32, 66], "30": [13, 18, 21, 23, 37, 66, 67, 68], "remi": [13, 14, 17, 19, 53, 54], "kernel_ridg": 13, "kernelridg": 13, "linear_model": [13, 15, 17, 66, 67, 68], "metric": [13, 17, 18, 21, 23, 26, 30, 32, 37, 38], "mean_squared_error": 13, "jdotclassifi": [13, 18], "mean": [13, 17, 19, 21, 37, 45, 56, 57, 58, 59, 60, 61, 67, 68], "std": [13, 17, 21, 46], "570318895725525": 13, "744989537549497": 13, "9610814126500358": 13, "45933195939893": 13, "evalu": [13, 58, 61, 67, 68], "its": [13, 15, 67], "much": 13, "due": 13, "clf": [13, 14, 15, 17, 18, 19], "rbf": [13, 14, 18, 26, 33, 42, 45], "comput": [13, 14, 15, 19, 25, 33, 37, 41, 42, 47, 48, 49, 50, 52, 53, 54, 56, 57, 60, 61, 66, 67], "accuraci": [13, 14, 15, 17, 18, 21], "ys_pred": 13, "yt_pred": [13, 17], "mse_": 13, "mse_t": 13, "mse": [13, 32], "2f": [13, 14, 15, 17, 18, 21], "xx": 13, "yy": 13, "meshgrid": 13, "z": [13, 66], "c_": 13, "ravel": 13, "reshap": 13, "imshow": 13, "extent": 13, "origin": [13, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "06": [13, 18, 33, 36], "better": 13, "zjdot": 13, "abl": 13, "preserv": [13, 22, 62, 65], "sol_": [13, 32], "c0": [13, 19], "c1": 13, "3676169789533272": 13, "53817259426296": 13, "7964573229829714": 13, "336863129384494": 13, "acc_": 13, "acc_t": 13, "acc": [13, 14], "99": [13, 15], "verbos": [13, 18, 32, 55], "reglog": 13, "loss_ot": 13, "075493682966016": 13, "loss_tgt_label": 13, "22983129554592746": 13, "18530735809550575": 13, "21420445266620783": 13, "18279941870395425": 13, "84": 13, "97": [13, 66], "support": [13, 53, 54], "vector": [13, 37], "note": [13, 17, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "necessari": [13, 32, 67, 68], "default": [13, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "multinomi": 13, "hing": [13, 18], "match": [13, 66], "82": 13, "656": [13, 16, 69], "plot_jdot_da": [13, 16, 69], "d": [14, 18, 26, 30, 34, 38, 66], "tuia": [14, 26, 30, 34, 38, 53, 54, 66], "ieee": [14, 15, 26, 27, 30, 34, 37, 38, 41, 42, 56, 66], "transact": [14, 26, 27, 30, 34, 38, 42, 56, 66], "analysi": [14, 26, 27, 30, 34, 38, 42, 56, 66], "machin": [14, 15, 26, 27, 30, 34, 37, 38, 50, 56, 58, 66], "intellig": [14, 26, 27, 30, 34, 38, 56, 66], "inspect": [14, 15, 18, 23, 55], "decisionboundarydisplai": [14, 15, 18, 23], "classregularizerotmappingadapt": [14, 18, 67], "entropicotmappingadapt": [14, 18, 67], "linearotmappingadapt": [14, 18, 67], "otmap": [14, 18], "make_da_pipelin": [14, 17, 66, 67], "n_tot_sourc": 14, "n_tot_target": 14, "121": 14, "lim": 14, "122": 14, "1321138905671275": 14, "218866137683906": 14, "5244703189443227": 14, "288146109474553": 14, "acc_sourc": 14, "acc_target": 14, "from_estim": [14, 15, 18, 23], "ep": [14, 15, 18, 23], "response_method": [14, 15, 18, 23], "gca": 14, "clf_otda": 14, "follow": [14, 15, 17, 22, 43, 44, 45, 46, 47, 50, 64, 66, 67], "idea": [14, 15], "give": 14, "u": [14, 22], "what": [14, 17], "plan": [14, 15, 29, 31, 66], "Then": [14, 56], "map": [14, 18, 34, 35, 66], "below": [14, 17, 43, 44, 45, 46, 66, 67, 68], "recov": 14, "ot": [14, 18, 32, 34, 38], "named_step": [14, 55], "otmappingadapt": [14, 18, 67], "get_estim": [14, 39, 40], "ot_transport_": 14, "coupling_": 14, "x_adapt": 14, "transform": [14, 17, 39, 40, 55, 66, 67], "allow_sourc": [14, 39, 40], "could": [14, 67], "done": [14, 17, 19, 66, 67, 68], "select_domain": [14, 67], "helper": [14, 67], "x_source_adapt": 14, "131": 14, "c7": [14, 19], "132": 14, "133": 14, "solver": [14, 19, 26], "avail": [14, 17, 21, 55, 66, 67, 68], "sinkhorn": [14, 26, 30], "clf_otda_sinkhorn": 14, "reg_": [14, 18, 21, 23, 26, 30], "acc_sinkhorn": 14, "x_adapted_sinkhorn": 14, "x_source_adapted_sinkhorn": 14, "regular": [14, 17, 23, 25, 26, 30, 31, 32, 34, 35, 36, 42, 47, 48, 50, 51, 53, 54], "clf_otds_classreg": 14, "acc_classreg": 14, "x_adapted_classreg": 14, "x_source_adapted_classreg": 14, "clf_otda_linear": 14, "acc_linear": 14, "x_adapted_linear": 14, "x_source_adapted_linear": 14, "241": 14, "242": 14, "243": 14, "244": [14, 66], "245": 14, "246": 14, "247": 14, "248": 14, "bregman": [14, 66], "_sinkhorn": 14, "531": 14, "did": [14, 18], "converg": [14, 18, 26, 30, 32, 38], "you": [14, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "might": [14, 32], "want": [14, 37], "increas": 14, "number": [14, 15, 26, 27, 30, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 57, 62, 63, 65, 67], "numitermax": 14, "warn": [14, 18, 23, 66], "713": [14, 16, 69], "plot_optimal_transport_da": [14, 16, 69], "subject": [15, 66], "antoin": [15, 66], "de": [15, 66], "mathelin": [15, 66], "listedcolormap": [15, 18], "kerneldens": [15, 18, 28, 58], "densityreweight": [15, 18, 36, 37, 67, 68], "discriminatorreweight": [15, 18], "gaussianreweight": [15, 17, 18], "kmmreweight": [15, 66], "nearestneighborreweight": [15, 18], "util": [15, 18, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "extract_source_indic": 15, "weight": [15, 17, 18, 28, 29, 31, 37, 48, 57, 58, 66, 67], "order": [15, 67], "take": [15, 37, 67], "account": [15, 67], "suit": [15, 67], "drawn": [15, 22], "implement": [15, 64, 67], "For": [15, 17, 22, 32, 37, 55, 66, 67], "look": [15, 67], "sugiyama": [15, 33, 58, 66], "et": [15, 33, 35, 36, 41, 42, 47, 48, 49, 50, 57, 58, 59, 60], "al": [15, 33, 35, 36, 41, 42, 47, 48, 49, 50, 57, 58, 59, 60], "m": [15, 27, 56, 66], "suzuki": [15, 66], "nakajima": [15, 66], "kashima": [15, 66], "h": [15, 66], "von": [15, 66], "b\u00fcnau": [15, 66], "kawanab": [15, 66], "direct": [15, 33, 66], "annal": [15, 66], "institut": [15, 66], "statist": [15, 29, 31, 66], "mathemat": [15, 66], "60": [15, 66], "699": [15, 66], "746": [15, 66], "ism": 15, "ac": 15, "jp": 15, "editsec": 15, "aism": 15, "pdf": [15, 66], "060_4_0699": 15, "base_classifi": 15, "set_fit_request": [15, 17, 18, 39, 40, 66], "sample_weight": [15, 17, 18, 66, 67], "Will": [15, 45], "x_min": [15, 18], "x_max": [15, 18], "y_min": [15, 18], "y_max": [15, 18], "cm": [15, 18, 22], "rdbu": [15, 18, 22], "ffa056": 15, "6c4c7c": 15, "set_xtick": [15, 18], "set_ytick": [15, 18], "16": [15, 47, 48, 66], "won": [15, 67], "optimali": 15, "dict": [15, 37, 43, 44, 45, 46], "store": [15, 37, 66], "scores_dict": 15, "plot_weights_and_classifi": 15, "name": [15, 17, 18, 37, 39, 40, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "w": [15, 19, 66], "plot_method": 15, "contour": 15, "size": [15, 18, 37, 46, 47, 50, 62], "lstrip": [15, 18], "horizontalalign": [15, 18], "try": 15, "ratio": [15, 45, 66], "two": [15, 19, 37, 67, 68], "probabl": [15, 17, 18, 23, 57], "function": [15, 17, 22, 29, 31, 32, 33, 37, 41, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68], "defin": [15, 22, 33, 37, 67, 68], "pipelin": [15, 18, 21, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "weight_estim": [15, 18, 28, 58], "bandwidth": [15, 18], "get": [15, 17, 67], "base_estimator_": 15, "idx": 15, "tri": [15, 48], "approxim": [15, 31], "assum": [15, 19, 32, 37], "normal": [15, 30, 38], "both": [15, 62, 66, 67], "hidetoshi": [15, 29, 31, 66], "shimodaira": [15, 29, 31, 66], "infer": [15, 29, 31, 66], "under": [15, 29, 31, 35, 36, 66], "log": [15, 29, 30, 31, 38, 66], "likelihood": [15, 29, 31, 33, 66], "journal": [15, 29, 31, 50, 58, 66], "2000": [15, 29, 31, 66], "deriv": [15, 67], "maxim": [15, 27], "Such": [15, 67], "approach": [15, 32], "effect": [15, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "find": 15, "kullback": 15, "leibler": 15, "kl": 15, "p_": 15, "minim": [15, 48, 59, 66], "masashi": [15, 33, 58, 66], "select": [15, 17, 33, 45, 57, 66, 68], "Its": [15, 33], "applic": [15, 33, 66], "neurip": [15, 33, 47, 48], "2007": [15, 33, 58, 66], "gamma": [15, 18, 33, 35, 36, 45], "001": [15, 18, 22], "count": 15, "closer": [15, 37], "other": [15, 22, 32, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "24": 15, "loog": [15, 66], "intern": [15, 37, 41, 60, 66], "page": [15, 37, 66], "laplace_smooth": [15, 18, 37], "1nn": [15, 18, 37], "correct": [15, 66], "work": [15, 17, 37, 39, 40, 47, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "assumpt": 15, "space": [15, 67], "huang": [15, 66], "gretton": [15, 66], "borgwardt": [15, 66], "b": [15, 65, 66, 67], "sch\u00f6lkopf": [15, 66], "smola": [15, 66], "unlabel": [15, 66], "nip": [15, 32, 66], "max_it": [15, 18, 26, 27, 30, 33, 35, 36, 38], "smooth_weight": 15, "smooth": [15, 37], "print_scores_as_t": 15, "kei": [15, 67], "length": [15, 44], "max_lenght": 15, "str": [15, 26, 30, 37, 38, 39, 40, 45, 47, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "625": [15, 22, 24, 69], "375": 15, "125": 15, "091": [15, 16, 69], "plot_reweight": [15, 16, 69], "452": 16, "short": 17, "api": [17, 66, 67, 68], "specif": [17, 19, 46, 48, 67], "decomposit": 17, "pca": [17, 41, 42, 67], "model_select": [17, 21, 22, 23, 66, 67, 68], "make_pipelin": 17, "preprocess": [17, 18, 55, 66], "standardscal": [17, 55, 66, 67], "coraladapt": [17, 18, 66, 67], "gaussianreweightadapt": [17, 18, 66, 67], "perdomain": [17, 67], "selectsourc": 17, "selectsourcetarget": 17, "predictionentropyscor": [17, 23, 66, 67], "sourcetargetshufflesplit": [17, 22, 66, 67], "organ": 17, "integ": [17, 43, 44, 45, 46, 57, 63, 67], "split": [17, 18, 22, 33, 62, 63, 64, 65, 66, 67, 68], "sample_domain_": 17, "ones": [17, 19, 62, 65], "sample_domain_t": 17, "exactli": [17, 67], "must": [17, 37, 44, 59, 65, 66], "design": [17, 64, 67], "88125": 17, "94375": 17, "final": [17, 18, 66], "dure": [17, 37, 47, 50, 51, 53, 67], "pipe": [17, 66, 67], "mani": 17, "correspond": [17, 32, 46], "need": [17, 57, 67], "subsequ": [17, 66], "requir": [17, 21, 30, 37, 55, 66, 67], "weigh": 17, "If": [17, 26, 28, 29, 30, 33, 37, 38, 41, 43, 44, 45, 46, 47, 48, 50, 55, 57, 58, 59, 61, 62, 64, 66, 67], "doe": [17, 18, 55, 67, 68], "rais": [17, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "error": [17, 26, 30, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "param": [17, 21, 66, 67], "dictionari": [17, 43, 44, 45, 46, 67], "splitter": [17, 22, 63], "cv": [17, 18, 21, 22, 23, 33, 63, 66, 67, 68], "scorer": [17, 21, 23, 56, 57, 58, 59, 60, 61, 66, 67], "entropi": [17, 23, 57, 59, 60, 66], "reg_cor": 17, "auto": [17, 18, 25, 31, 37], "grid_search": [17, 23, 66], "param_grid": [17, 66], "coraladapter__reg": [17, 66], "best": [17, 23, 33, 67, 68], "best_params_": [17, 23], "But": 17, "importantli": 17, "wrap": [17, 55], "automat": [17, 25, 31, 55, 62, 67], "selector": [17, 55], "wrapper": 17, "allow": [17, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "instanc": [17, 32, 33, 41, 43, 44, 45, 46, 47, 50, 51, 53, 55, 57, 62, 66], "per": [17, 27, 63, 67], "singl": [17, 64, 67], "similarli": [17, 67], "whole": 17, "pipe_train_on_sourc": 17, "default_selector": [17, 55], "overwrit": 17, "last": [17, 37, 47, 50, 55], "pipe_perdomain": 17, "n_compon": [17, 18, 41, 42, 67], "723": [17, 20, 69], "plot_how_to_use_skada": [17, 20, 69], "sever": [18, 67, 68], "synthet": 18, "natur": [18, 37, 45], "should": [18, 27, 32, 39, 40, 42, 45, 47, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "grain": 18, "salt": 18, "intuit": 18, "convei": 18, "necessarili": 18, "carri": 18, "over": [18, 57], "real": 18, "solid": 18, "transpar": [18, 19], "densiti": [18, 28, 37, 58, 60, 66], "densityreweightadapt": [18, 67], "share": [18, 55, 67], "break_ti": 18, "cache_s": 18, "200": [18, 26], "class_weight": 18, "coef0": 18, "decision_function_shap": 18, "ovr": 18, "degre": 18, "scale": 18, "shrink": 18, "tol": [18, 21, 26, 30, 32, 33, 35, 36], "gaussian": [18, 31, 35, 43, 44, 45, 46, 49, 66], "discr": 18, "discriminatorreweightadapt": [18, 67], "domain_classifi": [18, 29, 47, 50, 57], "kliepreweight": [18, 66], "kliepreweightadapt": [18, 67], "n_center": [18, 33, 44], "nearestneighborreweightadapt": 18, "leaf_siz": [18, 37], "minkowski": [18, 37], "metric_param": [18, 37], "n_job": [18, 37], "uniform": [18, 37], "mmd": [18, 36, 49, 66], "tar": [18, 66], "mmdtarsreweightadapt": 18, "subspacealignmentadapt": [18, 41, 67], "tca": [18, 66], "transfercomponentanalysisadapt": [18, 42, 67], "mu": [18, 42], "100000": [18, 38], "sqeuclidean": [18, 26, 30, 38], "norm": [18, 19, 26, 30, 38], "entrop": [18, 26, 30], "08": [18, 26, 30, 34], "max_inner_it": [18, 26], "lpl1": [18, 26], "mmdlsconsmappingadapt": 18, "reg_k": [18, 35], "reg_m": [18, 35], "663": 18, "x0": 18, "requires_grad": 18, "dtype": 18, "float64": 18, "683": 18, "maximum": [18, 33, 35, 36, 38, 47], "21e": 18, "00e": 18, "neighbor": [18, 37, 66], "classregularizerotmap": 18, "entropicotmap": [18, 21, 23, 67, 68], "linearotmap": 18, "mmdlsconsmap": 18, "mmdtarsreweight": 18, "subspacealign": [18, 66], "transfercomponentanalysi": 18, "binari": [18, 21, 22, 23, 45, 67, 68], "27": [18, 45], "ds_cnt": 18, "enumer": [18, 22, 65], "part": [18, 66], "get_domain": 18, "min": [18, 41], "just": 18, "cm_bright": 18, "ff0000": 18, "0000ff": 18, "tight_layout": [18, 22], "678": [18, 20, 69], "plot_method_comparison": [18, 20, 69], "toolbox": [19, 66], "solut": [19, 32], "emd": 19, "pot": 19, "pylab": 19, "pl": 19, "rcparam": 19, "updat": [19, 39, 40, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "usetex": 19, "font": 19, "famili": 19, "modern": 19, "get_lda_interp": 19, "len_": 19, "lda": 19, "interpol": 19, "balanc": 19, "m1": 19, "m2": 19, "vo": 19, "linalg": 19, "theta": 19, "pi": 19, "rot": 19, "co": 19, "sin": 19, "vor": 19, "dot": 19, "mm": 19, "vstack": 19, "40": [19, 66], "randn": 19, "blue": [19, 22], "global": 19, "nb": 19, "alpha0": 19, "alphalist": 19, "c3": 19, "xclass": 19, "c2": 19, "zorder": 19, "linewidth": 19, "off": [19, 32], "save": 19, "savefig": 19, "skada_logo": 19, "svg": 19, "bbox_inch": 19, "tight": 19, "dpi": 19, "400": 19, "png": 19, "plot_skada_logo": [19, 20, 69], "90": [19, 66], "110": 19, "120": 19, "xt2": 19, "18": [19, 20, 59, 66, 69], "bf": 19, "textsf": 19, "skada_logo_ful": 19, "169": 19, "179": 19, "189": 19, "199": [19, 66], "skada_logo_full_whit": 19, "266": 19, "276": 19, "286": 19, "029": [19, 20, 69], "430": 20, "targetaccuracyscor": [21, 67, 68], "prepar": [21, 22, 23, 67], "shufflesplit": [21, 23, 67, 68], "supervisedscor": [21, 67, 68], "n_split": [21, 22, 23, 62, 63, 64, 65, 67, 68], "test_siz": [21, 23, 62, 63, 64, 65, 67, 68], "valid": [21, 24, 27, 33, 37, 45, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69], "supervis": [21, 61, 63, 67], "separ": [21, 45, 67], "target_label": [21, 22, 61, 67], "pack": [21, 22, 67], "scores_sup": 21, "_scorer": 21, "scores_no_da": 21, "barh": 21, "yerr": 21, "ytick": [21, 22], "xlabel": [21, 23], "axvlin": 21, "linestyl": 21, "guess": 21, "251": [21, 24, 69], "plot_cross_val_score_for_da": [21, 24, 69], "domainshufflesplit": 22, "let": [22, 67, 68], "yani": [22, 66], "lalou": [22, 66], "patch": 22, "leaveonedomainout": [22, 67], "stratifieddomainshufflesplit": 22, "cmap_data": 22, "prgn": 22, "cmap_domain": 22, "cmap_cv": 22, "coolwarm": 22, "sinc": [22, 67], "ll": 22, "lodo": 22, "most": [22, 37], "n_splits_lodo": 22, "our": [22, 37], "respect": [22, 43, 44, 45, 46, 67], "dataset2": 22, "merg": 22, "names_map": 22, "s2": [22, 67], "t2": [22, 67], "sort": 22, "indx_sort": 22, "lexsort": 22, "x_lodo": 22, "y_lodo": 22, "sample_domain_lodo": 22, "pack_lodo": [22, 67], "On": 22, "indic": [22, 37, 43, 44, 45, 46, 62, 63, 64], "chosen": 22, "orang": 22, "scikit": [22, 32, 55, 67, 68], "document": [22, 37, 58, 61, 66], "modifi": 22, "plot_cv_indic": 22, "lw": 22, "cv_arg": 22, "ii": 22, "tr": 22, "tt": 22, "fill": 22, "nan": 22, "result": [22, 23, 37, 63], "format": [22, 66], "yticklabel": 22, "arang": 22, "__name__": 22, "plot_lodo_indic": 22, "plot_st_shuffle_indic": 22, "datas": 22, "mask": [22, 67], "center": [22, 33, 43, 44, 45], "48": 22, "index": [22, 65, 66, 67], "va": 22, "rotat": 22, "vertic": 22, "make": [22, 43, 46, 48, 63, 66, 67, 68], "behav": 22, "veri": 22, "onc": [22, 64, 67], "remain": [22, 64], "form": [22, 55, 56, 64], "randomli": [22, 67], "depend": [22, 37, 62, 66], "fold": [22, 33, 62, 65], "compos": [22, 62], "come": [22, 62], "percentag": [22, 62, 65], "plot_cross_validation_for_da": [22, 24, 69], "importanceweightedscor": [23, 67], "filterwarn": 23, "grid": [23, 66], "search": [23, 37, 66], "entropicotmappingadapter__reg_": 23, "best_reg_": 23, "cv_results_": 23, "param_entropicotmappingadapter__reg_": 23, "mean_test_scor": 23, "regulari": 23, "ylabel": 23, "best_estimator_": 23, "plot_gridsearch_for_da": [23, 24, 69], "476": 24, "option": [25, 26, 28, 29, 30, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "float": [25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 59, 60, 62], "shrinkag": [25, 31], "ledoit": [25, 31], "wolf": [25, 31], "lemma": [25, 31], "fix": [25, 31, 32, 44], "contain": [25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 67], "refer": [25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67], "jiashi": [25, 66], "feng": [25, 66], "unsupervis": [25, 41, 53, 54, 57, 59, 60, 66], "vision": [25, 41, 53, 54, 60, 66], "classregularizedotmap": 26, "lp": 26, "l1": [26, 37], "l1l2": 26, "l2": [26, 32, 37], "ground": [26, 30, 38], "wasserstein": [26, 30, 38], "int": [26, 27, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 57, 62, 63, 65], "minimum": [26, 30], "befor": [26, 30, 33, 35, 36, 38, 55], "stop": [26, 30, 32, 33, 35, 36, 38], "inner": 26, "10e": [26, 30], "threshold": 26, "baseestim": [27, 39, 40, 55], "It": [27, 43, 44, 45, 46, 56, 67], "discard": 27, "bool": [27, 32, 34, 37, 39, 40, 44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "rememb": 27, "index_source_delet": 27, "index_target_ad": 27, "bruzzon": [27, 56, 66], "l": [27, 56, 66], "marconcini": [27, 56, 66], "circular": [27, 56, 66], "strategi": [27, 33, 56, 66], "2009": [27, 56, 66], "re": [28, 29, 31, 37, 62], "observ": [28, 58], "discrimin": [29, 66], "median": [30, 38], "loglog": [30, 38], "avoid": [30, 38, 57, 67, 68], "numer": [30, 38, 57], "occur": [30, 38], "larg": [30, 38, 67], "precis": 30, "n_iter_max": 32, "propos": [32, 60], "quadrat": 32, "linearregress": 32, "even": [32, 55, 67], "mlpregressor": 32, "guarante": 32, "unpredict": 32, "solv": [32, 33], "least": [32, 65], "theoret": 32, "risk": 32, "trade": 32, "alternat": 32, "toler": [32, 33, 35, 36], "variat": 32, "along": 32, "as_integer_ratio": 32, "attribut": [32, 43, 44, 45, 46, 55, 58], "estimator_": 32, "lst_loss_ot_": 32, "lst_loss_tgt_labels_": 32, "like": [33, 36, 43, 44, 45, 46, 49, 63, 67, 68], "choos": [33, 45], "determin": [33, 41, 43, 44, 45, 46, 57], "randomst": [33, 41, 43, 44, 45, 46, 57, 62], "creation": [33, 41, 43, 44, 45, 46], "reproduc": [33, 41, 43, 44, 45, 46, 57], "across": [33, 41, 43, 44, 45, 46, 57], "diagon": 34, "matrix": [35, 36, 37, 45], "kun": [35, 36], "zhang": [35, 36, 66], "condit": [35, 36, 47, 48, 66], "icml": [35, 36, 49, 57], "2013": [35, 36, 41, 66], "section": [36, 67], "22": [37, 66], "laplac": 37, "prevent": 37, "them": [37, 67], "distanc": [37, 49, 52, 53, 54], "callabl": [37, 55, 56, 57, 58, 61], "neighborhood": [37, 60, 66], "equal": [37, 42, 44], "invers": 37, "queri": 37, "greater": 37, "influenc": 37, "awai": 37, "user": [37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "accept": [37, 55, 67], "entitl": 37, "nearest": [37, 66], "impact": 37, "ball_tre": 37, "kd_tree": 37, "brute": 37, "balltre": 37, "kdtree": 37, "forc": 37, "attempt": 37, "decid": 37, "appropri": 37, "spars": 37, "overrid": 37, "leaf": 37, "affect": 37, "speed": 37, "memori": [37, 55], "tree": 37, "power": 37, "equival": 37, "manhattan_dist": 37, "euclidean_dist": 37, "arbitrari": 37, "minkowski_dist": 37, "l_p": 37, "expect": 37, "standard": [37, 43, 44, 45, 46, 67], "euclidean": 37, "scipi": 37, "spatial": 37, "distance_metr": 37, "precomput": 37, "mai": [37, 63, 66], "graph": 37, "nonzero": 37, "element": [37, 43, 44, 45, 46], "consid": [37, 67], "1d": 37, "less": [37, 42], "effici": 37, "string": [37, 55, 58, 61], "addit": [37, 67], "keyword": 37, "parallel": 37, "job": [37, 67], "unless": 37, "joblib": [37, 55], "parallel_backend": 37, "context": 37, "processor": 37, "glossari": 37, "doesn": 37, "100_000": 38, "domain_label": 39, "access": [39, 40, 67], "set_decision_function_request": [39, 40], "unchang": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "request": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "metadata": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "relev": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "enable_metadata_rout": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "set_config": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "pleas": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "guid": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "rout": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "mechan": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "meta": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "alia": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "instead": [39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "metadata_rout": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "retain": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "exist": [39, 40, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "version": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "sub": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "insid": [39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "otherwis": [39, 40, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "set_partial_fit_request": [39, 40], "partial_fit": [39, 40], "set_predict_log_proba_request": [39, 40], "predict_log_proba": [39, 40], "set_predict_proba_request": [39, 40], "predict_proba": [39, 40, 67], "set_predict_request": [39, 40], "set_score_request": [39, 40, 56, 57, 58, 59, 60, 61, 67], "set_transform_request": [39, 40], "x_contain": [39, 40], "compon": [41, 42, 66], "kept": 41, "n_featur": [41, 44, 63], "basura": 41, "fernando": [41, 66], "confer": [41, 53, 54, 60, 66], "transfer": [42, 49, 66], "sinno": 42, "jialin": 42, "pan": [42, 66], "network": [42, 47, 48, 49, 50, 66], "2011": 42, "return_x_i": [43, 44, 45, 46, 67], "among": [43, 44, 45, 46], "cluster": [43, 44, 45, 46], "array_lik": [43, 44, 45, 46], "deviat": [43, 44, 45, 46], "sequenc": [43, 44, 45, 46], "boolean": [43, 44, 45, 46], "pair": [43, 44, 45, 46, 67], "tupl": [43, 44, 45, 46, 55, 67], "categor": [43, 44, 45, 46], "domainawaredataset": [43, 44, 45, 46, 67], "bunch": [43, 44, 45, 46, 67], "ndarrai": [43, 44, 45, 46, 59, 63], "By": [43, 44, 45, 46, 55], "convent": [43, 44, 45, 46, 67], "non": [43, 44, 45, 46, 67], "neg": [43, 44, 45, 46, 66, 67], "alwai": [43, 44, 45, 46, 63, 67], "domain_nam": [43, 44, 45, 46, 67], "associ": [43, 44, 45, 46], "cluster_std": 44, "isotrop": 44, "blob": 44, "divid": 44, "translat": [44, 45], "everi": 44, "either": 44, "shuffl": [44, 62, 64, 65], "sigma": [45, 49], "mu_regress": 45, "sigma_regress": 45, "regression_scaling_const": 45, "independ": 45, "sample_select": 45, "2x1": 45, "scalar": 45, "2x2": 45, "constant": [45, 57], "multipli": 45, "sigma_freq": 46, "peak": 46, "channel": 46, "n_frequency_sourc": 46, "propag": 46, "max_featur": 47, "4096": 47, "domain_criterion": [47, 48, 50], "pytorch": [47, 50, 51, 53], "uninstanti": [47, 50], "although": [47, 50], "instanti": [47, 50], "layer": [47, 50, 51, 53], "whose": [47, 50, 51, 53], "collect": [47, 50, 51, 53], "largest": 47, "unit": 47, "typic": [47, 67], "accord": 47, "extractor": [47, 50], "bceloss": [47, 48, 50], "mingsheng": [47, 48, 49], "long": [47, 48, 49, 66], "cdan": [48, 66], "harder": 48, "multilinear": 48, "captur": 48, "crosscovari": 48, "represent": [48, 54, 57], "target_criterion": [48, 53, 54], "y_": [48, 49, 52, 54], "y_pred_": [48, 49, 52, 54], "y_pred_t": [48, 49, 52, 54], "domain_pred_": [48, 49, 52, 54], "domain_pred_t": [48, 49, 52, 54], "features_": [48, 49, 52, 54], "features_t": [48, 49, 52, 54], "dan": [49, 66], "reduc": [49, 52, 54, 57], "2015": [49, 66], "yaroslav": 50, "ganin": [50, 66], "research": [50, 58, 66], "term": [53, 54], "uniniti": [53, 54], "reduct": [53, 54, 59], "bharath": [53, 54], "bhushan": [53, 54], "damodaran": [53, 54, 66], "benjamin": [53, 54], "kellenberg": [53, 54, 66], "devi": [53, 54, 66], "nicola": [53, 54, 66], "2018": [53, 54, 59, 66], "15th": [53, 54], "european": [53, 54, 66], "septemb": [53, 54], "springer": [53, 54, 66], "deepjdot": [54, 66], "through": 54, "measur": 54, "discrep": 54, "baseselector": 55, "shorthand": 55, "constructor": 55, "permit": 55, "lowercas": 55, "chain": 55, "togeth": [55, 67], "interfac": [55, 67], "cach": 55, "never": 55, "path": 55, "directori": 55, "enabl": 55, "trigger": 55, "therefor": 55, "cannot": 55, "directli": 55, "within": [55, 67], "advantag": 55, "consum": 55, "elaps": 55, "complet": 55, "specifi": [55, 59], "alreadi": [55, 67], "understand": 55, "per_domain": 55, "integr": [55, 67], "custom": 55, "encapsul": 55, "naive_bay": 55, "gaussiannb": 55, "prior": [55, 66], "with_mean": 55, "with_std": 55, "var_smooth": 55, "09": 55, "source_scor": 56, "balanced_accuracy_scor": 56, "greater_is_bett": [56, 57, 58, 59, 60, 61], "retrain": 56, "exact": 56, "y_pred": [56, 57], "whether": [56, 57, 58, 59, 60, 61], "high": [56, 57, 58, 59, 60, 61, 67, 68], "good": [56, 57, 58, 59, 60, 61], "low": [56, 57, 58, 59, 60, 61, 67], "latter": [56, 57, 58, 59, 60, 61], "sign": [56, 57, 58, 59, 60, 61], "flip": [56, 57, 58, 59, 60, 61], "outcom": [56, 57, 58, 59, 60, 61], "loss_func": 57, "signatur": [57, 58, 61], "train_test_split": 57, "kaichao": 57, "toward": [57, 66], "accur": [57, 66], "2019": [57, 66], "cross_entropy_loss": 57, "y_true": 57, "num_class": 57, "small": 57, "instabl": 57, "weight_estimator_source_": 58, "weight_estimator_target_": 58, "appli": 59, "pietro": 59, "morerio": [59, 66], "iclr": 59, "similar": [60, 67], "19": [60, 66], "temperatur": 60, "eq": 60, "paper": 60, "kuniaki": 60, "saito": [60, 66], "tune": [60, 66], "wai": [60, 66, 67, 68], "soft": [60, 66], "2021": [60, 66], "train_siz": [62, 63, 64, 65], "under_sampl": 62, "made": [62, 65], "proport": 62, "complement": 62, "control": 62, "rsda": 62, "train_index": [62, 65], "test_index": [62, 65], "set_split_request": [62, 63, 64, 65], "max_n_split": [63, 67], "leav": 63, "get_n_split": [63, 65], "compat": [63, 66, 67], "variabl": 63, "yield": 63, "ident": 63, "singleton": 64, "hierarch": 64, "up": 64, "stratifi": 65, "da_shufflesplit": 65, "group": 65, "xxx": 65, "docstr": 65, "librari": [66, 67], "phase": 66, "activ": 66, "develop": 66, "interest": 66, "collabor": 66, "feel": [66, 67], "free": [66, 67], "reach": 66, "open": 66, "issu": 66, "start": [66, 67, 68], "discuss": 66, "densityratio": 66, "linearmong": 66, "con": 66, "cast": 66, "visit": 66, "dann": 66, "embed": 66, "dev": 66, "yet": 66, "pypi": 66, "few": [66, 67], "quick": 66, "ho": 66, "ypred": 66, "set_fit_requir": 66, "would": [66, 67], "val": 66, "maintain": 66, "team": 66, "member": 66, "oleksii": 66, "kachaiev": 66, "r\u00e9mi": 66, "colla": 66, "227": 66, "taiji": 66, "takafumi": 66, "kanamori": 66, "framework": [66, 67], "1009": 66, "1044": 66, "shinichi": 66, "hisashi": 66, "paul": 66, "motoaki": 66, "klau": 66, "robert": 66, "m\u00fcller": 66, "2005": 66, "249": 66, "279": [66, 69], "153": 66, "171": 66, "alain": 66, "tran": 66, "anal": 66, "mach": 66, "intel": 66, "lounici": 66, "ferrari": 66, "concentr": 66, "bound": 66, "mong": 66, "arxiv": 66, "preprint": 66, "1905": 66, "10155": 66, "sebban": 66, "tuytelaar": 66, "proceed": 66, "pp": 66, "2960": 66, "2967": 66, "tsang": 66, "kwok": 66, "yang": 66, "q": 66, "2010": 66, "210": 66, "770": 66, "787": 66, "amsterdam": 66, "netherland": 66, "octob": 66, "iii": 66, "443": 66, "450": 66, "publish": 66, "447": 66, "463": 66, "cao": 66, "wang": 66, "jordan": 66, "june": 66, "pmlr": 66, "ustinova": 66, "ajakan": 66, "germain": 66, "larochel": 66, "laviolett": 66, "lempitski": 66, "59": 66, "35": 66, "31": 66, "krauledat": 66, "cavazza": 66, "murino": 66, "1711": 66, "10288": 66, "kim": 66, "teterwak": 66, "sclaroff": 66, "darrel": 66, "cvf": 66, "9184": 66, "9193": 66, "7124": 66, "7133": 66, "muandet": 66, "819": 66, "827": 66, "org": 66, "2102": 66, "02291": 66, "citeseerx": 66, "ist": 66, "psu": 66, "repid": 66, "rep1": 66, "doi": 66, "07117994f0971b2fc2df95adb373c31c3d313442": 66, "core": 67, "introduc": 67, "test_map": 67, "test_reweight": 67, "test_subspac": 67, "test_pipelin": 67, "test_scor": 67, "test_cv": 67, "test_samples_gener": 67, "test_offic": 67, "simpli": 67, "pytest": 67, "office31": 67, "bit": 67, "longer": 67, "fetch": 67, "deal": 67, "x_train": 67, "y_train": 67, "With": 67, "complic": 67, "theme": 67, "explicit": 67, "assign": 67, "mark": 67, "straightforward": 67, "common": 67, "domainawareestim": 67, "sample_domain_train": 67, "skip": 67, "special": 67, "scenario": 67, "act": 67, "built": 67, "around": 67, "add_domain": 67, "x_subj1": 67, "y_subj1": 67, "subj_1": 67, "x_subj3": 67, "y_subj3": 67, "subj_3": 67, "x_subj12": 67, "y_subj12": 67, "subj_12": 67, "fetcher": 67, "fetch_office31_surf_al": 67, "amazon": 67, "dslr": 67, "webcam": 67, "fetch_all_office31_surf": 67, "dict_kei": 67, "mostli": 67, "cover": 67, "easier": 67, "reconstruct": 67, "static": 67, "fluctuat": 67, "being": 67, "webcam_idx": 67, "pick": 67, "source_idx": 67, "domainawar": 67, "target_idx": 67, "include_all_target": 67, "simplifi": 67, "flow": 67, "fly": 67, "next": 67, "build": 67, "block": 67, "baseadapt": 67, "possibli": 67, "closest": 67, "analogi": 67, "workflow": 67, "move": 67, "awar": 67, "combin": 67, "your": 67, "expos": 67, "relat": 67, "stack": 67, "simplest": 67, "entiti": 67, "conveni": 67, "still": 67, "perdomainselector": 67, "sourcetargetselector": 67, "though": 67, "don": 67, "reason": 67, "readi": 67, "usag": 67, "neither": 67, "level": 67, "seen": 67, "update_predict": 67, "fit_predict": 67, "previous": 67, "unseen": 67, "tool": 67, "cross_valid": 67, "practic": 67, "showcas": 67, "ship": 67, "plug": 67, "plai": 67, "softneighborhooddens": 67, "necessit": 67, "consider": 67, "mandat": 67, "da_dataset": 67, "fail": 67, "distinct": 67, "structur": 67, "serv": 67, "after": 67, "limit": 67, "absenc": 67, "simultan": 67, "achiev": 67, "clariti": 67, "demonstr": 67, "found": 67, "overfit": [67, 68], "load": [67, 68], "shown": [67, 68], "imag": [67, 68], "chanc": [67, 68], "reflect": [67, 68], "becaus": [67, 68], "width": 67, "400px": 67, "height": 67, "240px": 67, "fit_param": [67, 68], "72222222": [67, 68], "83333333": [67, 68], "81944444": [67, 68], "offer": [67, 68], "reus": [67, 68], "975": [67, 68], "95625": [67, 68], "34": 69}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[25, 1, 1, "", "CORAL"], [26, 1, 1, "", "ClassRegularizerOTMapping"], [27, 1, 1, "", "DASVMClassifier"], [28, 1, 1, "", "DensityReweight"], [29, 1, 1, "", "DiscriminatorReweight"], [30, 1, 1, "", "EntropicOTMapping"], [31, 1, 1, "", "GaussianReweight"], [32, 1, 1, "", "JDOTRegressor"], [33, 1, 1, "", "KLIEPReweight"], [34, 1, 1, "", "LinearOTMapping"], [35, 1, 1, "", "MMDLSConSMapping"], [36, 1, 1, "", "MMDTarSReweight"], [37, 1, 1, "", "NearestNeighborReweight"], [38, 1, 1, "", "OTMapping"], [39, 2, 1, "", "PerDomain"], [40, 2, 1, "", "Shared"], [41, 1, 1, "", "SubspaceAlignment"], [42, 1, 1, "", "TransferComponentAnalysis"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [55, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"]], "skada.PerDomain": [[39, 3, 1, "", "get_estimator"], [39, 3, 1, "", "set_decision_function_request"], [39, 3, 1, "", "set_fit_request"], [39, 3, 1, "", "set_partial_fit_request"], [39, 3, 1, "", "set_predict_log_proba_request"], [39, 3, 1, "", "set_predict_proba_request"], [39, 3, 1, "", "set_predict_request"], [39, 3, 1, "", "set_score_request"], [39, 3, 1, "", "set_transform_request"]], "skada.Shared": [[40, 3, 1, "", "get_estimator"], [40, 3, 1, "", "set_decision_function_request"], [40, 3, 1, "", "set_fit_request"], [40, 3, 1, "", "set_partial_fit_request"], [40, 3, 1, "", "set_predict_log_proba_request"], [40, 3, 1, "", "set_predict_proba_request"], [40, 3, 1, "", "set_predict_request"], [40, 3, 1, "", "set_score_request"], [40, 3, 1, "", "set_transform_request"]], "skada.datasets": [[43, 1, 1, "", "make_dataset_from_moons_distribution"], [44, 1, 1, "", "make_shifted_blobs"], [45, 1, 1, "", "make_shifted_datasets"], [46, 1, 1, "", "make_variable_frequency_dataset"]], "skada.deep": [[47, 1, 1, "", "CDAN"], [48, 2, 1, "", "CDANLoss"], [49, 2, 1, "", "DANLoss"], [50, 1, 1, "", "DANN"], [51, 1, 1, "", "DeepCoral"], [52, 2, 1, "", "DeepCoralLoss"], [53, 1, 1, "", "DeepJDOT"], [54, 2, 1, "", "DeepJDOTLoss"]], "skada.deep.CDANLoss": [[48, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[49, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[52, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[54, 3, 1, "", "forward"]], "skada.metrics": [[56, 2, 1, "", "CircularValidation"], [57, 2, 1, "", "DeepEmbeddedValidation"], [58, 2, 1, "", "ImportanceWeightedScorer"], [59, 2, 1, "", "PredictionEntropyScorer"], [60, 2, 1, "", "SoftNeighborhoodDensity"], [61, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[56, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[57, 3, 1, "", "cross_entropy_loss"], [57, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[58, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[59, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[60, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[61, 3, 1, "", "set_score_request"]], "skada.model_selection": [[62, 2, 1, "", "DomainShuffleSplit"], [63, 2, 1, "", "LeaveOneDomainOut"], [64, 2, 1, "", "SourceTargetShuffleSplit"], [65, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[62, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[63, 3, 1, "", "get_n_splits"], [63, 3, 1, "", "set_split_request"], [63, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[64, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[65, 3, 1, "", "set_split_request"], [65, 3, 1, "", "split"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "modul": 0, "main": 0, "skada": [0, 17, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "sampl": [0, 67], "reweight": [0, 15], "da": [0, 9, 11, 14, 17, 18, 66, 67], "method": [0, 6, 7, 8, 9, 11, 14, 15, 18], "map": 0, "align": 0, "other": 0, "pipelin": [0, 17, 67], "util": 0, "deep": [0, 9, 11, 47, 48, 49, 50, 51, 52, 53, 54, 66], "learn": [0, 11, 66], "metric": [0, 56, 57, 58, 59, 60, 61, 66, 67, 68], "model": [0, 6, 7, 8, 67], "select": [0, 67], "model_select": [0, 62, 63, 64, 65], "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 43, 44, 45, 46, 67], "plot": [1, 2, 3, 4, 12, 13, 15, 19], "sourc": [1, 2, 3, 4, 13], "domain": [1, 2, 3, 4, 6, 7, 8, 11, 14, 15, 66, 67, 68], "shift": [1, 2, 3, 4, 15], "target": [1, 2, 3, 4, 12], "comput": [5, 10, 16, 20, 24, 68, 69], "time": [5, 10, 16, 20, 24, 67, 69], "adversari": 6, "adapt": [6, 7, 8, 11, 14, 15, 17, 66, 67, 68], "load": [6, 7, 8, 9], "imag": [6, 7, 8, 9], "train": [6, 7, 8, 9, 13], "classic": [6, 7, 8], "dann": [6, 50], "diverg": 7, "deepcor": [7, 51], "optim": [8, 14], "transport": [8, 14], "deepjdot": [8, 53], "setup": 9, "paramet": 9, "skorch": 9, "torch": 9, "exampl": [11, 12, 13, 15, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 55, 58, 59, 61, 62, 63, 64, 65, 66], "galleri": 11, "valid": [11, 17, 22], "procedur": 11, "dasvm": 12, "classifi": [12, 13, 17], "we": [12, 15], "gener": [12, 13, 14, 15, 19], "our": [12, 15], "2d": [12, 15], "2": [12, 15], "class": [12, 15], "usag": 12, "dasvmclassifi": [12, 27], "label": 12, "jdot": 13, "regressor": 13, "concept": [13, 14], "drift": [13, 14], "regress": 13, "data": 13, "illustr": [13, 14, 15], "ot": 13, "plan": 13, "classif": [13, 18], "svc": 13, "otda": 14, "problem": [14, 15, 68], "how": [14, 17], "doe": 14, "work": 14, "differ": 14, "covari": 15, "The": 15, "densiti": 15, "gaussian": 15, "discr": 15, "kliepreweight": [15, 33], "nearest": 15, "neighbor": 15, "kernel": 15, "mean": 15, "match": 15, "comparison": [15, 18], "score": [15, 17, 67, 68], "between": 15, "us": [17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 55, 58, 59, 61, 62, 63, 64, 65], "estim": [17, 67], "cross": [17, 22], "grid": 17, "search": 17, "advanc": 17, "logo": 19, "small": 19, "full": 19, "white": 19, "cross_val_scor": 21, "visual": 22, "behavior": 22, "gridsearchcv": 23, "coral": 25, "classregularizerotmap": 26, "densityreweight": 28, "discriminatorreweight": 29, "entropicotmap": 30, "gaussianreweight": 31, "jdotregressor": 32, "linearotmap": 34, "mmdlsconsmap": 35, "mmdtarsreweight": 36, "nearestneighborreweight": 37, "otmap": 38, "perdomain": 39, "share": 40, "subspacealign": 41, "transfercomponentanalysi": 42, "make_dataset_from_moons_distribut": 43, "make_shifted_blob": 44, "make_shifted_dataset": 45, "make_variable_frequency_dataset": 46, "cdan": 47, "cdanloss": 48, "danloss": 49, "deepcoralloss": 52, "deepjdotloss": 54, "make_da_pipelin": 55, "circularvalid": 56, "deepembeddedvalid": 57, "importanceweightedscor": 58, "predictionentropyscor": 59, "softneighborhooddens": 60, "supervisedscor": 61, "domainshufflesplit": 62, "leaveonedomainout": 63, "sourcetargetshufflesplit": 64, "stratifieddomainshufflesplit": 65, "scikit": 66, "content": 66, "pytorch": 66, "implement": 66, "algorithm": 66, "instal": 66, "short": 66, "acknowledg": 66, "licens": 66, "refer": 66, "indic": 66, "tabl": 66, "user": 67, "guid": 67, "selector": 67, "test": 67, "splitter": 67}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main module skada": [[0, "module-skada"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Other DA methods": [[0, "other-da-methods"]], "DA pipeline": [[0, "da-pipeline"]], "Utilities": [[0, "utilities"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Plot dataset source domain and shifted target domain": [[1, "plot-dataset-source-domain-and-shifted-target-domain"], [2, "plot-dataset-source-domain-and-shifted-target-domain"], [3, "plot-dataset-source-domain-and-shifted-target-domain"], [4, "plot-dataset-source-domain-and-shifted-target-domain"]], "Computation times": [[5, "computation-times"], [10, "computation-times"], [16, "computation-times"], [20, "computation-times"], [24, "computation-times"], [69, "computation-times"]], "Adversarial domain adaptation methods.": [[6, "adversarial-domain-adaptation-methods"]], "Load the image datasets": [[6, "load-the-image-datasets"], [7, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"]], "Train a classic model": [[6, "train-a-classic-model"], [7, "train-a-classic-model"], [8, "train-a-classic-model"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Divergence domain adaptation methods.": [[7, "divergence-domain-adaptation-methods"]], "Train a DeepCoral model": [[7, "train-a-deepcoral-model"]], "Optimal transport domain adaptation methods.": [[8, "optimal-transport-domain-adaptation-methods"]], "Train a DeepJDOT model": [[8, "train-a-deepjdot-model"]], "Training setup for deep DA method.": [[9, "training-setup-for-deep-da-method"]], "Training parameters": [[9, "training-parameters"]], "Training with skorch": [[9, "training-with-skorch"]], "Training with skorch with dataset": [[9, "training-with-skorch-with-dataset"]], "Training with torch": [[9, "training-with-torch"]], "Examples gallery": [[11, "examples-gallery"]], "Domain Adaptation Datasets": [[11, "domain-adaptation-datasets"]], "Deep learning DA methods": [[11, "deep-learning-da-methods"]], "DA methods": [[11, "da-methods"]], "DA validation procedures": [[11, "da-validation-procedures"]], "DASVM classifier example": [[12, "dasvm-classifier-example"]], "We generate our 2D dataset with 2 classes": [[12, "we-generate-our-2d-dataset-with-2-classes"], [15, "we-generate-our-2d-dataset-with-2-classes"]], "Plots of the dataset": [[12, "plots-of-the-dataset"]], "Usage of the DASVMClassifier": [[12, "usage-of-the-dasvmclassifier"]], "Labeling the target dataset": [[12, "labeling-the-target-dataset"]], "JDOT Regressor and Classifier examples": [[13, "jdot-regressor-and-classifier-examples"]], "Generate concept drift regression dataset and plot it": [[13, "generate-concept-drift-regression-dataset-and-plot-it"]], "Train a regressor on source data": [[13, "train-a-regressor-on-source-data"]], "Train with JDOT regressor": [[13, "train-with-jdot-regressor"]], "Illustration of the OT plan": [[13, "illustration-of-the-ot-plan"]], "Generate concept drift classification dataset and plot it": [[13, "generate-concept-drift-classification-dataset-and-plot-it"]], "Train a classifier on source data": [[13, "train-a-classifier-on-source-data"]], "Train with JDOT classifier": [[13, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[13, "train-with-jdot-classifier-with-svc"]], "Optimal Transport Domain Adaptation (OTDA)": [[14, "optimal-transport-domain-adaptation-otda"]], "Generate concept drift dataset": [[14, "generate-concept-drift-dataset"]], "Illustration of the DA problem": [[14, "illustration-of-the-da-problem"]], "Optimal Transport Domain Adaptation": [[14, "optimal-transport-domain-adaptation"]], "How does OTDA works?": [[14, "how-does-otda-works"]], "Different OTDA methods": [[14, "different-otda-methods"]], "Reweighting method example on covariate shift dataset": [[15, "reweighting-method-example-on-covariate-shift-dataset"]], "The reweighting methods": [[15, "the-reweighting-methods"]], "Plot of the dataset:": [[15, "plot-of-the-dataset"]], "Illustration of the problem with no domain adaptation": [[15, "illustration-of-the-problem-with-no-domain-adaptation"]], "Illustration of the Density Reweighting method": [[15, "illustration-of-the-density-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[15, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the Discr. reweighting method": [[15, "illustration-of-the-discr-reweighting-method"]], "Illustration of the KLIEPReweight method": [[15, "illustration-of-the-kliepreweight-method"]], "Illustration of the Nearest Neighbor reweighting method": [[15, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the Kernel Mean Matching method": [[15, "illustration-of-the-kernel-mean-matching-method"]], "Comparison of score between reweighting methods:": [[15, "comparison-of-score-between-reweighting-methods"]], "How to use SKADA": [[17, "how-to-use-skada"]], "DA dataset": [[17, "da-dataset"]], "DA Classifier estimator": [[17, "da-classifier-estimator"]], "DA Adapter pipeline": [[17, "da-adapter-pipeline"]], "DA estimator with cross-validation of score": [[17, "da-estimator-with-cross-validation-of-score"]], "DA estimator with grid search": [[17, "da-estimator-with-grid-search"]], "Advanced DA pipeline": [[17, "advanced-da-pipeline"]], "Comparison of DA classification methods": [[18, "comparison-of-da-classification-methods"]], "SKADA logo generation": [[19, "skada-logo-generation"]], "Plot the small logo": [[19, "plot-the-small-logo"]], "Plot the full logo": [[19, "plot-the-full-logo"]], "Plot the full logo in white": [[19, "plot-the-full-logo-in-white"]], "Using cross_val_score with skada": [[21, "using-cross-val-score-with-skada"]], "Visualizing cross-validation behavior in skada": [[22, "visualizing-cross-validation-behavior-in-skada"]], "Using GridSearchCV with skada": [[23, "using-gridsearchcv-with-skada"]], "skada.CORAL": [[25, "skada-coral"]], "Examples using skada.CORAL": [[25, "examples-using-skada-coral"]], "skada.ClassRegularizerOTMapping": [[26, "skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMapping": [[26, "examples-using-skada-classregularizerotmapping"]], "skada.DASVMClassifier": [[27, "skada-dasvmclassifier"]], "Examples using skada.DASVMClassifier": [[27, "examples-using-skada-dasvmclassifier"]], "skada.DensityReweight": [[28, "skada-densityreweight"]], "Examples using skada.DensityReweight": [[28, "examples-using-skada-densityreweight"]], "skada.DiscriminatorReweight": [[29, "skada-discriminatorreweight"]], "Examples using skada.DiscriminatorReweight": [[29, "examples-using-skada-discriminatorreweight"]], "skada.EntropicOTMapping": [[30, "skada-entropicotmapping"]], "Examples using skada.EntropicOTMapping": [[30, "examples-using-skada-entropicotmapping"]], "skada.GaussianReweight": [[31, "skada-gaussianreweight"]], "Examples using skada.GaussianReweight": [[31, "examples-using-skada-gaussianreweight"]], "skada.JDOTRegressor": [[32, "skada-jdotregressor"]], "Examples using skada.JDOTRegressor": [[32, "examples-using-skada-jdotregressor"]], "skada.KLIEPReweight": [[33, "skada-kliepreweight"]], "Examples using skada.KLIEPReweight": [[33, "examples-using-skada-kliepreweight"]], "skada.LinearOTMapping": [[34, "skada-linearotmapping"]], "Examples using skada.LinearOTMapping": [[34, "examples-using-skada-linearotmapping"]], "skada.MMDLSConSMapping": [[35, "skada-mmdlsconsmapping"]], "Examples using skada.MMDLSConSMapping": [[35, "examples-using-skada-mmdlsconsmapping"]], "skada.MMDTarSReweight": [[36, "skada-mmdtarsreweight"]], "Examples using skada.MMDTarSReweight": [[36, "examples-using-skada-mmdtarsreweight"]], "skada.NearestNeighborReweight": [[37, "skada-nearestneighborreweight"]], "Examples using skada.NearestNeighborReweight": [[37, "examples-using-skada-nearestneighborreweight"]], "skada.OTMapping": [[38, "skada-otmapping"]], "Examples using skada.OTMapping": [[38, "examples-using-skada-otmapping"]], "skada.PerDomain": [[39, "skada-perdomain"]], "Examples using skada.PerDomain": [[39, "examples-using-skada-perdomain"]], "skada.Shared": [[40, "skada-shared"]], "Examples using skada.Shared": [[40, "examples-using-skada-shared"]], "skada.SubspaceAlignment": [[41, "skada-subspacealignment"]], "Examples using skada.SubspaceAlignment": [[41, "examples-using-skada-subspacealignment"]], "skada.TransferComponentAnalysis": [[42, "skada-transfercomponentanalysis"]], "Examples using skada.TransferComponentAnalysis": [[42, "examples-using-skada-transfercomponentanalysis"]], "skada.datasets.make_dataset_from_moons_distribution": [[43, "skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[43, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "skada.datasets.make_shifted_blobs": [[44, "skada-datasets-make-shifted-blobs"]], "skada.datasets.make_shifted_datasets": [[45, "skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_shifted_datasets": [[45, "examples-using-skada-datasets-make-shifted-datasets"]], "skada.datasets.make_variable_frequency_dataset": [[46, "skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[46, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "skada.deep.CDAN": [[47, "skada-deep-cdan"]], "skada.deep.CDANLoss": [[48, "skada-deep-cdanloss"]], "skada.deep.DANLoss": [[49, "skada-deep-danloss"]], "skada.deep.DANN": [[50, "skada-deep-dann"]], "Examples using skada.deep.DANN": [[50, "examples-using-skada-deep-dann"]], "skada.deep.DeepCoral": [[51, "skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoral": [[51, "examples-using-skada-deep-deepcoral"]], "skada.deep.DeepCoralLoss": [[52, "skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepCoralLoss": [[52, "examples-using-skada-deep-deepcoralloss"]], "skada.deep.DeepJDOT": [[53, "skada-deep-deepjdot"]], "Examples using skada.deep.DeepJDOT": [[53, "examples-using-skada-deep-deepjdot"]], "skada.deep.DeepJDOTLoss": [[54, "skada-deep-deepjdotloss"]], "skada.make_da_pipeline": [[55, "skada-make-da-pipeline"]], "Examples using skada.make_da_pipeline": [[55, "examples-using-skada-make-da-pipeline"]], "skada.metrics.CircularValidation": [[56, "skada-metrics-circularvalidation"]], "skada.metrics.DeepEmbeddedValidation": [[57, "skada-metrics-deepembeddedvalidation"]], "skada.metrics.ImportanceWeightedScorer": [[58, "skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[58, "examples-using-skada-metrics-importanceweightedscorer"]], "skada.metrics.PredictionEntropyScorer": [[59, "skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[59, "examples-using-skada-metrics-predictionentropyscorer"]], "skada.metrics.SoftNeighborhoodDensity": [[60, "skada-metrics-softneighborhooddensity"]], "skada.metrics.SupervisedScorer": [[61, "skada-metrics-supervisedscorer"]], "Examples using skada.metrics.SupervisedScorer": [[61, "examples-using-skada-metrics-supervisedscorer"]], "skada.model_selection.DomainShuffleSplit": [[62, "skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.DomainShuffleSplit": [[62, "examples-using-skada-model-selection-domainshufflesplit"]], "skada.model_selection.LeaveOneDomainOut": [[63, "skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[63, "examples-using-skada-model-selection-leaveonedomainout"]], "skada.model_selection.SourceTargetShuffleSplit": [[64, "skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[64, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[65, "skada-model-selection-stratifieddomainshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[65, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "SKADA: SciKit Domain Adaptation": [[66, "skada-scikit-domain-adaptation"]], "Contents": [[66, "contents"]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[66, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "Implemented algorithms": [[66, "implemented-algorithms"]], "Domain adaptation algorithms": [[66, "domain-adaptation-algorithms"]], "Deep learning domain adaptation algorithms": [[66, "deep-learning-domain-adaptation-algorithms"]], "DA metrics": [[66, "da-metrics"]], "Installation": [[66, "installation"]], "Short examples": [[66, "short-examples"]], "Acknowledgements": [[66, "acknowledgements"]], "License": [[66, "license"]], "References": [[66, "references"]], "Indices and tables": [[66, "indices-and-tables"]], "Users Guide": [[67, "users-guide"]], "Sample Domain": [[67, "sample-domain"]], "Dataset": [[67, "dataset"]], "Adapters and Estimators": [[67, "adapters-and-estimators"]], "Adapter": [[67, "adapter"]], "Pipeline": [[67, "pipeline"]], "Selector": [[67, "selector"]], "Test-time Domain Adaptation": [[67, "test-time-domain-adaptation"]], "Model Selection": [[67, "model-selection"]], "Scoring": [[67, "scoring"]], "Splitters": [[67, "splitters"]], "Metrics for DA": [[67, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[68, "metrics-compute-score-for-domain-adaptation-problems"]]}, "indexentries": {"module": [[0, "module-skada"], [0, "module-skada.datasets"], [0, "module-skada.deep"], [0, "module-skada.metrics"], [0, "module-skada.model_selection"]], "skada": [[0, "module-skada"]], "skada.datasets": [[0, "module-skada.datasets"]], "skada.deep": [[0, "module-skada.deep"]], "skada.metrics": [[0, "module-skada.metrics"]], "skada.model_selection": [[0, "module-skada.model_selection"]], "coral() (in module skada)": [[25, "skada.CORAL"]], "classregularizerotmapping() (in module skada)": [[26, "skada.ClassRegularizerOTMapping"]], "dasvmclassifier() (in module skada)": [[27, "skada.DASVMClassifier"]], "densityreweight() (in module skada)": [[28, "skada.DensityReweight"]], "discriminatorreweight() (in module skada)": [[29, "skada.DiscriminatorReweight"]], "entropicotmapping() (in module skada)": [[30, "skada.EntropicOTMapping"]], "gaussianreweight() (in module skada)": [[31, "skada.GaussianReweight"]], "jdotregressor() (in module skada)": [[32, "skada.JDOTRegressor"]], "kliepreweight() (in module skada)": [[33, "skada.KLIEPReweight"]], "linearotmapping() (in module skada)": [[34, "skada.LinearOTMapping"]], "mmdlsconsmapping() (in module skada)": [[35, "skada.MMDLSConSMapping"]], "mmdtarsreweight() (in module skada)": [[36, "skada.MMDTarSReweight"]], "nearestneighborreweight() (in module skada)": [[37, "skada.NearestNeighborReweight"]], "otmapping() (in module skada)": [[38, "skada.OTMapping"]], "perdomain (class in skada)": [[39, "skada.PerDomain"]], "get_estimator() (skada.perdomain method)": [[39, "skada.PerDomain.get_estimator"]], "set_decision_function_request() (skada.perdomain method)": [[39, "skada.PerDomain.set_decision_function_request"]], "set_fit_request() (skada.perdomain method)": [[39, "skada.PerDomain.set_fit_request"]], "set_partial_fit_request() (skada.perdomain method)": [[39, "skada.PerDomain.set_partial_fit_request"]], "set_predict_log_proba_request() (skada.perdomain method)": [[39, "skada.PerDomain.set_predict_log_proba_request"]], "set_predict_proba_request() (skada.perdomain method)": [[39, "skada.PerDomain.set_predict_proba_request"]], "set_predict_request() (skada.perdomain method)": [[39, "skada.PerDomain.set_predict_request"]], "set_score_request() (skada.perdomain method)": [[39, "skada.PerDomain.set_score_request"]], "set_transform_request() (skada.perdomain method)": [[39, "skada.PerDomain.set_transform_request"]], "shared (class in skada)": [[40, "skada.Shared"]], "get_estimator() (skada.shared method)": [[40, "skada.Shared.get_estimator"]], "set_decision_function_request() (skada.shared method)": [[40, "skada.Shared.set_decision_function_request"]], "set_fit_request() (skada.shared method)": [[40, "skada.Shared.set_fit_request"]], "set_partial_fit_request() (skada.shared method)": [[40, "skada.Shared.set_partial_fit_request"]], "set_predict_log_proba_request() (skada.shared method)": [[40, "skada.Shared.set_predict_log_proba_request"]], "set_predict_proba_request() (skada.shared method)": [[40, "skada.Shared.set_predict_proba_request"]], "set_predict_request() (skada.shared method)": [[40, "skada.Shared.set_predict_request"]], "set_score_request() (skada.shared method)": [[40, "skada.Shared.set_score_request"]], "set_transform_request() (skada.shared method)": [[40, "skada.Shared.set_transform_request"]], "subspacealignment() (in module skada)": [[41, "skada.SubspaceAlignment"]], "transfercomponentanalysis() (in module skada)": [[42, "skada.TransferComponentAnalysis"]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[43, "skada.datasets.make_dataset_from_moons_distribution"]], "make_shifted_blobs() (in module skada.datasets)": [[44, "skada.datasets.make_shifted_blobs"]], "make_shifted_datasets() (in module skada.datasets)": [[45, "skada.datasets.make_shifted_datasets"]], "make_variable_frequency_dataset() (in module skada.datasets)": [[46, "skada.datasets.make_variable_frequency_dataset"]], "cdan() (in module skada.deep)": [[47, "skada.deep.CDAN"]], "cdanloss (class in skada.deep)": [[48, "skada.deep.CDANLoss"]], "forward() (skada.deep.cdanloss method)": [[48, "skada.deep.CDANLoss.forward"]], "danloss (class in skada.deep)": [[49, "skada.deep.DANLoss"]], "forward() (skada.deep.danloss method)": [[49, "skada.deep.DANLoss.forward"]], "dann() (in module skada.deep)": [[50, "skada.deep.DANN"]], "deepcoral() (in module skada.deep)": [[51, "skada.deep.DeepCoral"]], "deepcoralloss (class in skada.deep)": [[52, "skada.deep.DeepCoralLoss"]], "forward() (skada.deep.deepcoralloss method)": [[52, "skada.deep.DeepCoralLoss.forward"]], "deepjdot() (in module skada.deep)": [[53, "skada.deep.DeepJDOT"]], "deepjdotloss (class in skada.deep)": [[54, "skada.deep.DeepJDOTLoss"]], "forward() (skada.deep.deepjdotloss method)": [[54, "skada.deep.DeepJDOTLoss.forward"]], "make_da_pipeline() (in module skada)": [[55, "skada.make_da_pipeline"]], "circularvalidation (class in skada.metrics)": [[56, "skada.metrics.CircularValidation"]], "set_score_request() (skada.metrics.circularvalidation method)": [[56, "skada.metrics.CircularValidation.set_score_request"]], "deepembeddedvalidation (class in skada.metrics)": [[57, "skada.metrics.DeepEmbeddedValidation"]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[57, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss"]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[57, "skada.metrics.DeepEmbeddedValidation.set_score_request"]], "importanceweightedscorer (class in skada.metrics)": [[58, "skada.metrics.ImportanceWeightedScorer"]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[58, "skada.metrics.ImportanceWeightedScorer.set_score_request"]], "predictionentropyscorer (class in skada.metrics)": [[59, "skada.metrics.PredictionEntropyScorer"]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[59, "skada.metrics.PredictionEntropyScorer.set_score_request"]], "softneighborhooddensity (class in skada.metrics)": [[60, "skada.metrics.SoftNeighborhoodDensity"]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[60, "skada.metrics.SoftNeighborhoodDensity.set_score_request"]], "supervisedscorer (class in skada.metrics)": [[61, "skada.metrics.SupervisedScorer"]], "set_score_request() (skada.metrics.supervisedscorer method)": [[61, "skada.metrics.SupervisedScorer.set_score_request"]], "domainshufflesplit (class in skada.model_selection)": [[62, "skada.model_selection.DomainShuffleSplit"]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[62, "skada.model_selection.DomainShuffleSplit.set_split_request"]], "leaveonedomainout (class in skada.model_selection)": [[63, "skada.model_selection.LeaveOneDomainOut"]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[63, "skada.model_selection.LeaveOneDomainOut.get_n_splits"]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[63, "skada.model_selection.LeaveOneDomainOut.set_split_request"]], "split() (skada.model_selection.leaveonedomainout method)": [[63, "skada.model_selection.LeaveOneDomainOut.split"]], "sourcetargetshufflesplit (class in skada.model_selection)": [[64, "skada.model_selection.SourceTargetShuffleSplit"]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[64, "skada.model_selection.SourceTargetShuffleSplit.set_split_request"]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[65, "skada.model_selection.StratifiedDomainShuffleSplit"]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[65, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request"]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[65, "skada.model_selection.StratifiedDomainShuffleSplit.split"]]}})