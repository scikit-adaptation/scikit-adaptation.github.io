Search.setIndex({"alltitles": {"API and modules": [[0, "api-and-modules"]], "Acknowledgements": [[86, "acknowledgements"]], "Adapter": [[87, "adapter"]], "Adapters and Estimators": [[87, "adapters-and-estimators"]], "Advanced DA pipeline": [[18, "advanced-da-pipeline"]], "Adversarial domain adaptation methods.": [[6, "adversarial-domain-adaptation-methods"]], "Comparison of DA classification methods": [[19, "comparison-of-da-classification-methods"]], "Comparison of score between reweighting methods:": [[15, "comparison-of-score-between-reweighting-methods"]], "Comparison of score between subspace methods:": [[16, "comparison-of-score-between-subspace-methods"]], "Computation times": [[5, "computation-times"], [10, "computation-times"], [17, "computation-times"], [21, "computation-times"], [25, "computation-times"], [89, "computation-times"]], "Contents": [[86, "contents"]], "DA Adapter pipeline": [[18, "da-adapter-pipeline"]], "DA Classifier estimator": [[18, "da-classifier-estimator"]], "DA dataset": [[18, "da-dataset"]], "DA estimator in a pipeline": [[18, "da-estimator-in-a-pipeline"]], "DA estimator with grid search": [[18, "da-estimator-with-grid-search"]], "DA estimators with score cross-validation": [[18, "da-estimators-with-score-cross-validation"]], "DA methods": [[11, "da-methods"]], "DA metrics": [[86, "da-metrics"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "DA pipeline": [[0, "da-pipeline"]], "DA validation procedures": [[11, "da-validation-procedures"]], "DASVM classifier example": [[12, "dasvm-classifier-example"]], "Dataset": [[87, "dataset"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Deep learning DA methods": [[11, "deep-learning-da-methods"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "Deep learning domain adaptation algorithms": [[86, "deep-learning-domain-adaptation-algorithms"]], "Different OTDA methods": [[14, "different-otda-methods"]], "Divergence domain adaptation methods.": [[7, "divergence-domain-adaptation-methods"]], "Domain Adaptation Datasets": [[11, "domain-adaptation-datasets"]], "Domain adaptation algorithms": [[86, "domain-adaptation-algorithms"]], "Examples gallery": [[11, "examples-gallery"]], "Examples using skada.CORAL": [[26, "examples-using-skada-coral"]], "Examples using skada.CORALAdapter": [[27, "examples-using-skada-coraladapter"]], "Examples using skada.ClassRegularizerOTMapping": [[28, "examples-using-skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMappingAdapter": [[29, "examples-using-skada-classregularizerotmappingadapter"]], "Examples using skada.DASVMClassifier": [[30, "examples-using-skada-dasvmclassifier"]], "Examples using skada.DensityReweight": [[31, "examples-using-skada-densityreweight"]], "Examples using skada.DiscriminatorReweight": [[33, "examples-using-skada-discriminatorreweight"]], "Examples using skada.EntropicOTMapping": [[35, "examples-using-skada-entropicotmapping"]], "Examples using skada.EntropicOTMappingAdapter": [[36, "examples-using-skada-entropicotmappingadapter"]], "Examples using skada.GaussianReweight": [[37, "examples-using-skada-gaussianreweight"]], "Examples using skada.GaussianReweightAdapter": [[38, "examples-using-skada-gaussianreweightadapter"]], "Examples using skada.JDOTRegressor": [[39, "examples-using-skada-jdotregressor"]], "Examples using skada.KLIEPReweight": [[40, "examples-using-skada-kliepreweight"]], "Examples using skada.KMMReweight": [[42, "examples-using-skada-kmmreweight"]], "Examples using skada.KMMReweightAdapter": [[43, "examples-using-skada-kmmreweightadapter"]], "Examples using skada.LinearOTMapping": [[44, "examples-using-skada-linearotmapping"]], "Examples using skada.LinearOTMappingAdapter": [[45, "examples-using-skada-linearotmappingadapter"]], "Examples using skada.MMDLSConSMapping": [[46, "examples-using-skada-mmdlsconsmapping"]], "Examples using skada.MMDTarSReweight": [[48, "examples-using-skada-mmdtarsreweight"]], "Examples using skada.NearestNeighborReweight": [[50, "examples-using-skada-nearestneighborreweight"]], "Examples using skada.OTMapping": [[52, "examples-using-skada-otmapping"]], "Examples using skada.OTMappingAdapter": [[53, "examples-using-skada-otmappingadapter"]], "Examples using skada.PerDomain": [[54, "examples-using-skada-perdomain"]], "Examples using skada.Shared": [[55, "examples-using-skada-shared"]], "Examples using skada.SubspaceAlignment": [[56, "examples-using-skada-subspacealignment"]], "Examples using skada.TransferComponentAnalysis": [[58, "examples-using-skada-transfercomponentanalysis"]], "Examples using skada.TransferJointMatching": [[60, "examples-using-skada-transferjointmatching"]], "Examples using skada.TransferSubspaceLearning": [[62, "examples-using-skada-transfersubspacelearning"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[63, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_shifted_datasets": [[65, "examples-using-skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[66, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.deep.DANN": [[70, "examples-using-skada-deep-dann"]], "Examples using skada.deep.DeepCoral": [[71, "examples-using-skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoralLoss": [[72, "examples-using-skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepJDOT": [[73, "examples-using-skada-deep-deepjdot"]], "Examples using skada.make_da_pipeline": [[75, "examples-using-skada-make-da-pipeline"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[78, "examples-using-skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[79, "examples-using-skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.SupervisedScorer": [[81, "examples-using-skada-metrics-supervisedscorer"]], "Examples using skada.model_selection.DomainShuffleSplit": [[82, "examples-using-skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[83, "examples-using-skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[84, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[85, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "Generate concept drift classification dataset and plot it": [[13, "generate-concept-drift-classification-dataset-and-plot-it"]], "Generate concept drift dataset": [[14, "generate-concept-drift-dataset"]], "Generate concept drift regression dataset and plot it": [[13, "generate-concept-drift-regression-dataset-and-plot-it"]], "How does OTDA works?": [[14, "how-does-otda-works"]], "How to use SKADA": [[18, "how-to-use-skada"]], "Illustration of the DA problem": [[14, "illustration-of-the-da-problem"]], "Illustration of the Density Reweighting method": [[15, "illustration-of-the-density-reweighting-method"]], "Illustration of the Discr. reweighting method": [[15, "illustration-of-the-discr-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[15, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the KLIEPReweight method": [[15, "illustration-of-the-kliepreweight-method"]], "Illustration of the Kernel Mean Matching method": [[15, "illustration-of-the-kernel-mean-matching-method"]], "Illustration of the Nearest Neighbor reweighting method": [[15, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the OT plan": [[13, "illustration-of-the-ot-plan"]], "Illustration of the Subspace Alignment method": [[16, "illustration-of-the-subspace-alignment-method"]], "Illustration of the Transfer Component Analysis method": [[16, "illustration-of-the-transfer-component-analysis-method"]], "Illustration of the Transfer Joint Matching method": [[16, "illustration-of-the-transfer-joint-matching-method"]], "Illustration of the Transfer Subspace Learning method": [[16, "illustration-of-the-transfer-subspace-learning-method"]], "Illustration of the problem with no domain adaptation": [[15, "illustration-of-the-problem-with-no-domain-adaptation"], [16, "illustration-of-the-problem-with-no-domain-adaptation"]], "Implemented algorithms": [[86, "implemented-algorithms"]], "Indices and tables": [[86, "indices-and-tables"]], "Installation": [[86, "installation"]], "JDOT Regressor and Classifier examples": [[13, "jdot-regressor-and-classifier-examples"]], "Labeling the target dataset": [[12, "labeling-the-target-dataset"]], "License": [[86, "license"]], "Load the image datasets": [[6, "load-the-image-datasets"], [7, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"]], "Main module skada": [[0, "module-skada"]], "Metrics for DA": [[87, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[88, "metrics-compute-score-for-domain-adaptation-problems"]], "Model Selection": [[87, "model-selection"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Optimal Transport Domain Adaptation": [[14, "optimal-transport-domain-adaptation"]], "Optimal Transport Domain Adaptation (OTDA)": [[14, "optimal-transport-domain-adaptation-otda"]], "Optimal transport domain adaptation methods.": [[8, "optimal-transport-domain-adaptation-methods"]], "Other DA methods": [[0, "other-da-methods"]], "Pipeline": [[87, "pipeline"]], "Plot dataset source domain and shifted target domain": [[1, "plot-dataset-source-domain-and-shifted-target-domain"], [2, "plot-dataset-source-domain-and-shifted-target-domain"], [3, "plot-dataset-source-domain-and-shifted-target-domain"], [4, "plot-dataset-source-domain-and-shifted-target-domain"]], "Plot of the dataset:": [[15, "plot-of-the-dataset"], [16, "plot-of-the-dataset"]], "Plot the full logo": [[20, "plot-the-full-logo"]], "Plot the full logo in white": [[20, "plot-the-full-logo-in-white"]], "Plot the small logo": [[20, "plot-the-small-logo"]], "Plots of the dataset": [[12, "plots-of-the-dataset"]], "References": [[86, "references"]], "Reweighting method example on covariate shift dataset": [[15, "reweighting-method-example-on-covariate-shift-dataset"]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[86, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "SKADA logo generation": [[20, "skada-logo-generation"]], "SKADA: SciKit Domain Adaptation": [[86, "skada-scikit-domain-adaptation"]], "Sample Domain": [[87, "sample-domain"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Scoring": [[87, "scoring"]], "Selector": [[87, "selector"]], "Short examples": [[86, "short-examples"]], "Splitters": [[87, "splitters"]], "Subspace method example on subspace shift dataset": [[16, "subspace-method-example-on-subspace-shift-dataset"]], "Test-time Domain Adaptation": [[87, "test-time-domain-adaptation"]], "The reweighting methods": [[15, "the-reweighting-methods"]], "The subspaces methods": [[16, "the-subspaces-methods"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Train a DeepCoral model": [[7, "train-a-deepcoral-model"]], "Train a DeepJDOT model": [[8, "train-a-deepjdot-model"]], "Train a classic model": [[6, "train-a-classic-model"], [7, "train-a-classic-model"], [8, "train-a-classic-model"]], "Train a classifier on source data": [[13, "train-a-classifier-on-source-data"]], "Train a regressor on source data": [[13, "train-a-regressor-on-source-data"]], "Train with JDOT classifier": [[13, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[13, "train-with-jdot-classifier-with-svc"]], "Train with JDOT regressor": [[13, "train-with-jdot-regressor"]], "Training parameters": [[9, "training-parameters"]], "Training setup for deep DA method.": [[9, "training-setup-for-deep-da-method"]], "Training with skorch": [[9, "training-with-skorch"]], "Training with skorch with dataset": [[9, "training-with-skorch-with-dataset"]], "Training with torch": [[9, "training-with-torch"]], "Usage of the DASVMClassifier": [[12, "usage-of-the-dasvmclassifier"]], "Users Guide": [[87, "users-guide"]], "Using GridSearchCV with skada": [[24, "using-gridsearchcv-with-skada"]], "Using cross_val_score with skada": [[22, "using-cross-val-score-with-skada"]], "Utilities": [[0, "utilities"]], "Visualizing cross-validation behavior in skada": [[23, "visualizing-cross-validation-behavior-in-skada"]], "We generate our 2D dataset with 2 classes": [[12, "we-generate-our-2d-dataset-with-2-classes"], [15, "we-generate-our-2d-dataset-with-2-classes"], [16, "we-generate-our-2d-dataset-with-2-classes"]], "skada.CORAL": [[26, "skada-coral"]], "skada.CORALAdapter": [[27, "skada-coraladapter"]], "skada.ClassRegularizerOTMapping": [[28, "skada-classregularizerotmapping"]], "skada.ClassRegularizerOTMappingAdapter": [[29, "skada-classregularizerotmappingadapter"]], "skada.DASVMClassifier": [[30, "skada-dasvmclassifier"]], "skada.DensityReweight": [[31, "skada-densityreweight"]], "skada.DensityReweightAdapter": [[32, "skada-densityreweightadapter"]], "skada.DiscriminatorReweight": [[33, "skada-discriminatorreweight"]], "skada.DiscriminatorReweightAdapter": [[34, "skada-discriminatorreweightadapter"]], "skada.EntropicOTMapping": [[35, "skada-entropicotmapping"]], "skada.EntropicOTMappingAdapter": [[36, "skada-entropicotmappingadapter"]], "skada.GaussianReweight": [[37, "skada-gaussianreweight"]], "skada.GaussianReweightAdapter": [[38, "skada-gaussianreweightadapter"]], "skada.JDOTRegressor": [[39, "skada-jdotregressor"]], "skada.KLIEPReweight": [[40, "skada-kliepreweight"]], "skada.KLIEPReweightAdapter": [[41, "skada-kliepreweightadapter"]], "skada.KMMReweight": [[42, "skada-kmmreweight"]], "skada.KMMReweightAdapter": [[43, "skada-kmmreweightadapter"]], "skada.LinearOTMapping": [[44, "skada-linearotmapping"]], "skada.LinearOTMappingAdapter": [[45, "skada-linearotmappingadapter"]], "skada.MMDLSConSMapping": [[46, "skada-mmdlsconsmapping"]], "skada.MMDLSConSMappingAdapter": [[47, "skada-mmdlsconsmappingadapter"]], "skada.MMDTarSReweight": [[48, "skada-mmdtarsreweight"]], "skada.MMDTarSReweightAdapter": [[49, "skada-mmdtarsreweightadapter"]], "skada.NearestNeighborReweight": [[50, "skada-nearestneighborreweight"]], "skada.NearestNeighborReweightAdapter": [[51, "skada-nearestneighborreweightadapter"]], "skada.OTMapping": [[52, "skada-otmapping"]], "skada.OTMappingAdapter": [[53, "skada-otmappingadapter"]], "skada.PerDomain": [[54, "skada-perdomain"]], "skada.Shared": [[55, "skada-shared"]], "skada.SubspaceAlignment": [[56, "skada-subspacealignment"]], "skada.SubspaceAlignmentAdapter": [[57, "skada-subspacealignmentadapter"]], "skada.TransferComponentAnalysis": [[58, "skada-transfercomponentanalysis"]], "skada.TransferComponentAnalysisAdapter": [[59, "skada-transfercomponentanalysisadapter"]], "skada.TransferJointMatching": [[60, "skada-transferjointmatching"]], "skada.TransferJointMatchingAdapter": [[61, "skada-transferjointmatchingadapter"]], "skada.TransferSubspaceLearning": [[62, "skada-transfersubspacelearning"]], "skada.datasets.make_dataset_from_moons_distribution": [[63, "skada-datasets-make-dataset-from-moons-distribution"]], "skada.datasets.make_shifted_blobs": [[64, "skada-datasets-make-shifted-blobs"]], "skada.datasets.make_shifted_datasets": [[65, "skada-datasets-make-shifted-datasets"]], "skada.datasets.make_variable_frequency_dataset": [[66, "skada-datasets-make-variable-frequency-dataset"]], "skada.deep.CDAN": [[67, "skada-deep-cdan"]], "skada.deep.CDANLoss": [[68, "skada-deep-cdanloss"]], "skada.deep.DANLoss": [[69, "skada-deep-danloss"]], "skada.deep.DANN": [[70, "skada-deep-dann"]], "skada.deep.DeepCoral": [[71, "skada-deep-deepcoral"]], "skada.deep.DeepCoralLoss": [[72, "skada-deep-deepcoralloss"]], "skada.deep.DeepJDOT": [[73, "skada-deep-deepjdot"]], "skada.deep.DeepJDOTLoss": [[74, "skada-deep-deepjdotloss"]], "skada.make_da_pipeline": [[75, "skada-make-da-pipeline"]], "skada.metrics.CircularValidation": [[76, "skada-metrics-circularvalidation"]], "skada.metrics.DeepEmbeddedValidation": [[77, "skada-metrics-deepembeddedvalidation"]], "skada.metrics.ImportanceWeightedScorer": [[78, "skada-metrics-importanceweightedscorer"]], "skada.metrics.PredictionEntropyScorer": [[79, "skada-metrics-predictionentropyscorer"]], "skada.metrics.SoftNeighborhoodDensity": [[80, "skada-metrics-softneighborhooddensity"]], "skada.metrics.SupervisedScorer": [[81, "skada-metrics-supervisedscorer"]], "skada.model_selection.DomainShuffleSplit": [[82, "skada-model-selection-domainshufflesplit"]], "skada.model_selection.LeaveOneDomainOut": [[83, "skada-model-selection-leaveonedomainout"]], "skada.model_selection.SourceTargetShuffleSplit": [[84, "skada-model-selection-sourcetargetshufflesplit"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[85, "skada-model-selection-stratifieddomainshufflesplit"]]}, "docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/plot_subspace", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "gen_modules/skada.CORAL", "gen_modules/skada.CORALAdapter", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.ClassRegularizerOTMappingAdapter", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DensityReweightAdapter", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.DiscriminatorReweightAdapter", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.EntropicOTMappingAdapter", "gen_modules/skada.GaussianReweight", "gen_modules/skada.GaussianReweightAdapter", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.KLIEPReweightAdapter", "gen_modules/skada.KMMReweight", "gen_modules/skada.KMMReweightAdapter", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.LinearOTMappingAdapter", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDLSConSMappingAdapter", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.MMDTarSReweightAdapter", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.NearestNeighborReweightAdapter", "gen_modules/skada.OTMapping", "gen_modules/skada.OTMappingAdapter", "gen_modules/skada.PerDomain", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.SubspaceAlignmentAdapter", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.TransferComponentAnalysisAdapter", "gen_modules/skada.TransferJointMatching", "gen_modules/skada.TransferJointMatchingAdapter", "gen_modules/skada.TransferSubspaceLearning", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "index", "quickstart", "scorer", "sg_execution_times"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/plot_subspace.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.CORALAdapter.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.ClassRegularizerOTMappingAdapter.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DensityReweightAdapter.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.DiscriminatorReweightAdapter.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.EntropicOTMappingAdapter.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.GaussianReweightAdapter.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.KLIEPReweightAdapter.rst", "gen_modules/skada.KMMReweight.rst", "gen_modules/skada.KMMReweightAdapter.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.LinearOTMappingAdapter.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDLSConSMappingAdapter.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.MMDTarSReweightAdapter.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.NearestNeighborReweightAdapter.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.OTMappingAdapter.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.SubspaceAlignmentAdapter.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.TransferComponentAnalysisAdapter.rst", "gen_modules/skada.TransferJointMatching.rst", "gen_modules/skada.TransferJointMatchingAdapter.rst", "gen_modules/skada.TransferSubspaceLearning.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "index.rst", "quickstart.md", "scorer.rst", "sg_execution_times.rst"], "indexentries": {"cdan() (in module skada.deep)": [[67, "skada.deep.CDAN", false]], "cdanloss (class in skada.deep)": [[68, "skada.deep.CDANLoss", false]], "circularvalidation (class in skada.metrics)": [[76, "skada.metrics.CircularValidation", false]], "classregularizerotmapping() (in module skada)": [[28, "skada.ClassRegularizerOTMapping", false]], "classregularizerotmappingadapter() (in module skada)": [[29, "skada.ClassRegularizerOTMappingAdapter", false]], "coral() (in module skada)": [[26, "skada.CORAL", false]], "coraladapter() (in module skada)": [[27, "skada.CORALAdapter", false]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[77, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss", false]], "danloss (class in skada.deep)": [[69, "skada.deep.DANLoss", false]], "dann() (in module skada.deep)": [[70, "skada.deep.DANN", false]], "dasvmclassifier() (in module skada)": [[30, "skada.DASVMClassifier", false]], "deepcoral() (in module skada.deep)": [[71, "skada.deep.DeepCoral", false]], "deepcoralloss (class in skada.deep)": [[72, "skada.deep.DeepCoralLoss", false]], "deepembeddedvalidation (class in skada.metrics)": [[77, "skada.metrics.DeepEmbeddedValidation", false]], "deepjdot() (in module skada.deep)": [[73, "skada.deep.DeepJDOT", false]], "deepjdotloss (class in skada.deep)": [[74, "skada.deep.DeepJDOTLoss", false]], "densityreweight() (in module skada)": [[31, "skada.DensityReweight", false]], "densityreweightadapter (class in skada)": [[32, "skada.DensityReweightAdapter", false]], "discriminatorreweight() (in module skada)": [[33, "skada.DiscriminatorReweight", false]], "discriminatorreweightadapter (class in skada)": [[34, "skada.DiscriminatorReweightAdapter", false]], "domainshufflesplit (class in skada.model_selection)": [[82, "skada.model_selection.DomainShuffleSplit", false]], "entropicotmapping() (in module skada)": [[35, "skada.EntropicOTMapping", false]], "entropicotmappingadapter() (in module skada)": [[36, "skada.EntropicOTMappingAdapter", false]], "fit() (skada.densityreweightadapter method)": [[32, "skada.DensityReweightAdapter.fit", false]], "fit() (skada.discriminatorreweightadapter method)": [[34, "skada.DiscriminatorReweightAdapter.fit", false]], "fit() (skada.gaussianreweightadapter method)": [[38, "skada.GaussianReweightAdapter.fit", false]], "fit() (skada.kliepreweightadapter method)": [[41, "skada.KLIEPReweightAdapter.fit", false]], "fit() (skada.kmmreweightadapter method)": [[43, "skada.KMMReweightAdapter.fit", false]], "fit() (skada.mmdtarsreweightadapter method)": [[49, "skada.MMDTarSReweightAdapter.fit", false]], "fit() (skada.nearestneighborreweightadapter method)": [[51, "skada.NearestNeighborReweightAdapter.fit", false]], "forward() (skada.deep.cdanloss method)": [[68, "skada.deep.CDANLoss.forward", false]], "forward() (skada.deep.danloss method)": [[69, "skada.deep.DANLoss.forward", false]], "forward() (skada.deep.deepcoralloss method)": [[72, "skada.deep.DeepCoralLoss.forward", false]], "forward() (skada.deep.deepjdotloss method)": [[74, "skada.deep.DeepJDOTLoss.forward", false]], "gaussianreweight() (in module skada)": [[37, "skada.GaussianReweight", false]], "gaussianreweightadapter (class in skada)": [[38, "skada.GaussianReweightAdapter", false]], "get_estimator() (skada.perdomain method)": [[54, "skada.PerDomain.get_estimator", false]], "get_estimator() (skada.shared method)": [[55, "skada.Shared.get_estimator", false]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[83, "skada.model_selection.LeaveOneDomainOut.get_n_splits", false]], "importanceweightedscorer (class in skada.metrics)": [[78, "skada.metrics.ImportanceWeightedScorer", false]], "jdotregressor() (in module skada)": [[39, "skada.JDOTRegressor", false]], "kliepreweight() (in module skada)": [[40, "skada.KLIEPReweight", false]], "kliepreweightadapter (class in skada)": [[41, "skada.KLIEPReweightAdapter", false]], "kmmreweight() (in module skada)": [[42, "skada.KMMReweight", false]], "kmmreweightadapter (class in skada)": [[43, "skada.KMMReweightAdapter", false]], "leaveonedomainout (class in skada.model_selection)": [[83, "skada.model_selection.LeaveOneDomainOut", false]], "linearotmapping() (in module skada)": [[44, "skada.LinearOTMapping", false]], "linearotmappingadapter() (in module skada)": [[45, "skada.LinearOTMappingAdapter", false]], "make_da_pipeline() (in module skada)": [[75, "skada.make_da_pipeline", false]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[63, "skada.datasets.make_dataset_from_moons_distribution", false]], "make_shifted_blobs() (in module skada.datasets)": [[64, "skada.datasets.make_shifted_blobs", false]], "make_shifted_datasets() (in module skada.datasets)": [[65, "skada.datasets.make_shifted_datasets", false]], "make_variable_frequency_dataset() (in module skada.datasets)": [[66, "skada.datasets.make_variable_frequency_dataset", false]], "mmdlsconsmapping() (in module skada)": [[46, "skada.MMDLSConSMapping", false]], "mmdlsconsmappingadapter() (in module skada)": [[47, "skada.MMDLSConSMappingAdapter", false]], "mmdtarsreweight() (in module skada)": [[48, "skada.MMDTarSReweight", false]], "mmdtarsreweightadapter (class in skada)": [[49, "skada.MMDTarSReweightAdapter", false]], "module": [[0, "module-skada", false], [0, "module-skada.datasets", false], [0, "module-skada.deep", false], [0, "module-skada.metrics", false], [0, "module-skada.model_selection", false]], "nearestneighborreweight() (in module skada)": [[50, "skada.NearestNeighborReweight", false]], "nearestneighborreweightadapter (class in skada)": [[51, "skada.NearestNeighborReweightAdapter", false]], "otmapping() (in module skada)": [[52, "skada.OTMapping", false]], "otmappingadapter() (in module skada)": [[53, "skada.OTMappingAdapter", false]], "perdomain (class in skada)": [[54, "skada.PerDomain", false]], "predictionentropyscorer (class in skada.metrics)": [[79, "skada.metrics.PredictionEntropyScorer", false]], "set_decision_function_request() (skada.perdomain method)": [[54, "skada.PerDomain.set_decision_function_request", false]], "set_decision_function_request() (skada.shared method)": [[55, "skada.Shared.set_decision_function_request", false]], "set_fit_request() (skada.densityreweightadapter method)": [[32, "skada.DensityReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.discriminatorreweightadapter method)": [[34, "skada.DiscriminatorReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.gaussianreweightadapter method)": [[38, "skada.GaussianReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kliepreweightadapter method)": [[41, "skada.KLIEPReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kmmreweightadapter method)": [[43, "skada.KMMReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.mmdtarsreweightadapter method)": [[49, "skada.MMDTarSReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.nearestneighborreweightadapter method)": [[51, "skada.NearestNeighborReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.perdomain method)": [[54, "skada.PerDomain.set_fit_request", false]], "set_fit_request() (skada.shared method)": [[55, "skada.Shared.set_fit_request", false]], "set_partial_fit_request() (skada.perdomain method)": [[54, "skada.PerDomain.set_partial_fit_request", false]], "set_partial_fit_request() (skada.shared method)": [[55, "skada.Shared.set_partial_fit_request", false]], "set_predict_log_proba_request() (skada.perdomain method)": [[54, "skada.PerDomain.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.shared method)": [[55, "skada.Shared.set_predict_log_proba_request", false]], "set_predict_proba_request() (skada.perdomain method)": [[54, "skada.PerDomain.set_predict_proba_request", false]], "set_predict_proba_request() (skada.shared method)": [[55, "skada.Shared.set_predict_proba_request", false]], "set_predict_request() (skada.perdomain method)": [[54, "skada.PerDomain.set_predict_request", false]], "set_predict_request() (skada.shared method)": [[55, "skada.Shared.set_predict_request", false]], "set_score_request() (skada.metrics.circularvalidation method)": [[76, "skada.metrics.CircularValidation.set_score_request", false]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[77, "skada.metrics.DeepEmbeddedValidation.set_score_request", false]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[78, "skada.metrics.ImportanceWeightedScorer.set_score_request", false]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[79, "skada.metrics.PredictionEntropyScorer.set_score_request", false]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[80, "skada.metrics.SoftNeighborhoodDensity.set_score_request", false]], "set_score_request() (skada.metrics.supervisedscorer method)": [[81, "skada.metrics.SupervisedScorer.set_score_request", false]], "set_score_request() (skada.perdomain method)": [[54, "skada.PerDomain.set_score_request", false]], "set_score_request() (skada.shared method)": [[55, "skada.Shared.set_score_request", false]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[82, "skada.model_selection.DomainShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[83, "skada.model_selection.LeaveOneDomainOut.set_split_request", false]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[84, "skada.model_selection.SourceTargetShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[85, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request", false]], "set_transform_request() (skada.densityreweightadapter method)": [[32, "skada.DensityReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.discriminatorreweightadapter method)": [[34, "skada.DiscriminatorReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.gaussianreweightadapter method)": [[38, "skada.GaussianReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kliepreweightadapter method)": [[41, "skada.KLIEPReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kmmreweightadapter method)": [[43, "skada.KMMReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.mmdtarsreweightadapter method)": [[49, "skada.MMDTarSReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.nearestneighborreweightadapter method)": [[51, "skada.NearestNeighborReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.perdomain method)": [[54, "skada.PerDomain.set_transform_request", false]], "set_transform_request() (skada.shared method)": [[55, "skada.Shared.set_transform_request", false]], "shared (class in skada)": [[55, "skada.Shared", false]], "skada": [[0, "module-skada", false]], "skada.datasets": [[0, "module-skada.datasets", false]], "skada.deep": [[0, "module-skada.deep", false]], "skada.metrics": [[0, "module-skada.metrics", false]], "skada.model_selection": [[0, "module-skada.model_selection", false]], "softneighborhooddensity (class in skada.metrics)": [[80, "skada.metrics.SoftNeighborhoodDensity", false]], "sourcetargetshufflesplit (class in skada.model_selection)": [[84, "skada.model_selection.SourceTargetShuffleSplit", false]], "split() (skada.model_selection.leaveonedomainout method)": [[83, "skada.model_selection.LeaveOneDomainOut.split", false]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[85, "skada.model_selection.StratifiedDomainShuffleSplit.split", false]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[85, "skada.model_selection.StratifiedDomainShuffleSplit", false]], "subspacealignment() (in module skada)": [[56, "skada.SubspaceAlignment", false]], "subspacealignmentadapter() (in module skada)": [[57, "skada.SubspaceAlignmentAdapter", false]], "supervisedscorer (class in skada.metrics)": [[81, "skada.metrics.SupervisedScorer", false]], "transfercomponentanalysis() (in module skada)": [[58, "skada.TransferComponentAnalysis", false]], "transfercomponentanalysisadapter() (in module skada)": [[59, "skada.TransferComponentAnalysisAdapter", false]], "transferjointmatching() (in module skada)": [[60, "skada.TransferJointMatching", false]], "transferjointmatchingadapter() (in module skada)": [[61, "skada.TransferJointMatchingAdapter", false]], "transfersubspacelearning() (in module skada)": [[62, "skada.TransferSubspaceLearning", false]]}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[26, 1, 1, "", "CORAL"], [27, 1, 1, "", "CORALAdapter"], [28, 1, 1, "", "ClassRegularizerOTMapping"], [29, 1, 1, "", "ClassRegularizerOTMappingAdapter"], [30, 1, 1, "", "DASVMClassifier"], [31, 1, 1, "", "DensityReweight"], [32, 2, 1, "", "DensityReweightAdapter"], [33, 1, 1, "", "DiscriminatorReweight"], [34, 2, 1, "", "DiscriminatorReweightAdapter"], [35, 1, 1, "", "EntropicOTMapping"], [36, 1, 1, "", "EntropicOTMappingAdapter"], [37, 1, 1, "", "GaussianReweight"], [38, 2, 1, "", "GaussianReweightAdapter"], [39, 1, 1, "", "JDOTRegressor"], [40, 1, 1, "", "KLIEPReweight"], [41, 2, 1, "", "KLIEPReweightAdapter"], [42, 1, 1, "", "KMMReweight"], [43, 2, 1, "", "KMMReweightAdapter"], [44, 1, 1, "", "LinearOTMapping"], [45, 1, 1, "", "LinearOTMappingAdapter"], [46, 1, 1, "", "MMDLSConSMapping"], [47, 1, 1, "", "MMDLSConSMappingAdapter"], [48, 1, 1, "", "MMDTarSReweight"], [49, 2, 1, "", "MMDTarSReweightAdapter"], [50, 1, 1, "", "NearestNeighborReweight"], [51, 2, 1, "", "NearestNeighborReweightAdapter"], [52, 1, 1, "", "OTMapping"], [53, 1, 1, "", "OTMappingAdapter"], [54, 2, 1, "", "PerDomain"], [55, 2, 1, "", "Shared"], [56, 1, 1, "", "SubspaceAlignment"], [57, 1, 1, "", "SubspaceAlignmentAdapter"], [58, 1, 1, "", "TransferComponentAnalysis"], [59, 1, 1, "", "TransferComponentAnalysisAdapter"], [60, 1, 1, "", "TransferJointMatching"], [61, 1, 1, "", "TransferJointMatchingAdapter"], [62, 1, 1, "", "TransferSubspaceLearning"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [75, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"]], "skada.DensityReweightAdapter": [[32, 3, 1, "", "fit"], [32, 3, 1, "", "set_fit_request"], [32, 3, 1, "", "set_transform_request"]], "skada.DiscriminatorReweightAdapter": [[34, 3, 1, "", "fit"], [34, 3, 1, "", "set_fit_request"], [34, 3, 1, "", "set_transform_request"]], "skada.GaussianReweightAdapter": [[38, 3, 1, "", "fit"], [38, 3, 1, "", "set_fit_request"], [38, 3, 1, "", "set_transform_request"]], "skada.KLIEPReweightAdapter": [[41, 3, 1, "", "fit"], [41, 3, 1, "", "set_fit_request"], [41, 3, 1, "", "set_transform_request"]], "skada.KMMReweightAdapter": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "set_fit_request"], [43, 3, 1, "", "set_transform_request"]], "skada.MMDTarSReweightAdapter": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "set_fit_request"], [49, 3, 1, "", "set_transform_request"]], "skada.NearestNeighborReweightAdapter": [[51, 3, 1, "", "fit"], [51, 3, 1, "", "set_fit_request"], [51, 3, 1, "", "set_transform_request"]], "skada.PerDomain": [[54, 3, 1, "", "get_estimator"], [54, 3, 1, "", "set_decision_function_request"], [54, 3, 1, "", "set_fit_request"], [54, 3, 1, "", "set_partial_fit_request"], [54, 3, 1, "", "set_predict_log_proba_request"], [54, 3, 1, "", "set_predict_proba_request"], [54, 3, 1, "", "set_predict_request"], [54, 3, 1, "", "set_score_request"], [54, 3, 1, "", "set_transform_request"]], "skada.Shared": [[55, 3, 1, "", "get_estimator"], [55, 3, 1, "", "set_decision_function_request"], [55, 3, 1, "", "set_fit_request"], [55, 3, 1, "", "set_partial_fit_request"], [55, 3, 1, "", "set_predict_log_proba_request"], [55, 3, 1, "", "set_predict_proba_request"], [55, 3, 1, "", "set_predict_request"], [55, 3, 1, "", "set_score_request"], [55, 3, 1, "", "set_transform_request"]], "skada.datasets": [[63, 1, 1, "", "make_dataset_from_moons_distribution"], [64, 1, 1, "", "make_shifted_blobs"], [65, 1, 1, "", "make_shifted_datasets"], [66, 1, 1, "", "make_variable_frequency_dataset"]], "skada.deep": [[67, 1, 1, "", "CDAN"], [68, 2, 1, "", "CDANLoss"], [69, 2, 1, "", "DANLoss"], [70, 1, 1, "", "DANN"], [71, 1, 1, "", "DeepCoral"], [72, 2, 1, "", "DeepCoralLoss"], [73, 1, 1, "", "DeepJDOT"], [74, 2, 1, "", "DeepJDOTLoss"]], "skada.deep.CDANLoss": [[68, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[69, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[72, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[74, 3, 1, "", "forward"]], "skada.metrics": [[76, 2, 1, "", "CircularValidation"], [77, 2, 1, "", "DeepEmbeddedValidation"], [78, 2, 1, "", "ImportanceWeightedScorer"], [79, 2, 1, "", "PredictionEntropyScorer"], [80, 2, 1, "", "SoftNeighborhoodDensity"], [81, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[76, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[77, 3, 1, "", "cross_entropy_loss"], [77, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[78, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[79, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[80, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[81, 3, 1, "", "set_score_request"]], "skada.model_selection": [[82, 2, 1, "", "DomainShuffleSplit"], [83, 2, 1, "", "LeaveOneDomainOut"], [84, 2, 1, "", "SourceTargetShuffleSplit"], [85, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[82, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[83, 3, 1, "", "get_n_splits"], [83, 3, 1, "", "set_split_request"], [83, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[84, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[85, 3, 1, "", "set_split_request"], [85, 3, 1, "", "split"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [3, 4, 7, 12, 15, 16, 19, 20, 22, 23, 24, 47, 50, 53, 62, 65, 67, 70, 71, 73, 78, 81, 86, 87, 88], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 80, 82, 85, 86, 87, 88, 89], "00": [5, 7, 10, 14, 17, 21, 22, 25, 89], "0000ff": 19, "0002": 7, "001": [15, 19, 23], "0051": 8, "0070": 6, "00e": 19, "01": [6, 7, 8, 10, 12, 13, 17, 19, 21, 22, 23, 24, 60, 61, 62, 89], "0151": 8, "02": [5, 7, 10, 16, 17, 23, 25, 89], "02291": 86, "02it": 7, "03": [10, 18, 89], "0363": 6, "0388": 6, "04": [17, 89], "0453": 8, "0468": 6, "05": [3, 7, 19, 24, 39, 46, 47, 80], "0502": 6, "0515": 7, "06": [13, 19, 40, 41, 42, 43, 48, 49], "060_4_0699": 15, "0628": 9, "0657": 6, "0685": 8, "07": [10, 89], "07117994f0971b2fc2df95adb373c31c3d313442": 86, "075493682966016": 13, "08": [19, 28, 29, 35, 36, 44, 45], "0821": 7, "0834": 6, "0890": 7, "09": [10, 75, 89], "0910": 7, "0x7f9394d443d0": 12, "1": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 54, 55, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "10": [1, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 23, 28, 29, 39, 46, 47, 48, 49, 63, 64, 66, 82, 83, 84, 85, 86], "100": [4, 7, 12, 13, 15, 16, 19, 20, 39, 40, 41, 42, 43, 46, 47, 60, 61, 62, 63, 64, 65, 66], "1000": [4, 7, 15, 19, 30, 35, 36, 40, 41, 42, 43, 48, 49], "100000": [19, 52, 53], "1009": 86, "100_000": [52, 53], "10155": 86, "1018": 1, "10288": 86, "1044": 86, "105": [1, 86], "10e": [28, 29, 35, 36], "11": [7, 30, 76, 86], "110": 20, "1100": 4, "1116": 7, "1151262670755386": 9, "1191": 8, "12": [14, 15, 16, 17, 71, 72, 86], "120": 20, "121": 14, "122": 14, "1234": 7, "125": 15, "1272975": 7, "128": [6, 7, 8, 9], "13": [6, 10, 73, 74, 86, 89], "130": [24, 25, 89], "131": 14, "132": 14, "1321138905671275": 14, "133": [5, 14], "136": [19, 21, 89], "139": 21, "13it": 7, "14": [1, 2, 3, 7, 14, 69, 86], "1410": [16, 60, 61, 86], "1417": [16, 60, 61, 86], "1420": 7, "146087799": 7, "14779308": 7, "15": [1, 2, 3, 4, 12, 13, 15, 16, 19, 20, 23, 70, 77, 86], "151266216": 7, "153": 86, "1532": 6, "1572864": 7, "159696": 7, "159710": 7, "159770": 7, "15th": [73, 74], "16": [15, 16, 19, 21, 67, 68, 86, 89], "1639": 7, "1648877": 7, "169": 20, "17": [18, 78, 86], "171": 86, "1711": 86, "175": 89, "179": 20, "18": [20, 79, 86], "1817": 6, "18279941870395425": 13, "1831726": 7, "18530735809550575": 13, "189": 20, "19": [7, 8, 21, 80, 86, 89], "1905": 86, "1921": 7, "1925471": 7, "196608": 7, "199": [20, 86], "1d": 50, "1e": [6, 7, 8, 9, 19, 22, 28, 29, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 60, 61, 75, 77], "1nn": [15, 19, 50, 51], "2": [1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 18, 19, 20, 23, 24, 50, 51, 60, 61, 62, 63, 64, 65, 80, 82, 85, 86, 87], "20": [2, 3, 10, 12, 13, 14, 15, 16, 18, 19, 22, 24, 77, 86, 87, 88], "200": [19, 28, 29], "2000": [15, 33, 34, 37, 38, 86], "2003": 8, "2005": 86, "2007": [15, 40, 41, 42, 43, 78, 86], "2008": [15, 86], "2009": [30, 76, 86], "2010": [16, 62, 86], "2011": [16, 58, 59], "2012": [2, 3, 15, 50, 51, 65, 86], "2013": [6, 16, 46, 47, 48, 49, 56, 57, 86], "2014": [16, 60, 61, 86], "2015": [69, 86], "2016": [7, 67, 68, 70, 71, 72, 86], "2017": [13, 26, 27, 39, 86], "2018": [73, 74, 79, 86], "2019": [77, 86], "202": [20, 21, 89], "2021": [80, 86], "2074": [6, 9], "21": [7, 12, 46, 47, 48, 49, 86], "210": 86, "2102": 86, "21141640841960907": 9, "21420445266620783": 13, "218866137683906": 14, "21e": 19, "22": [50, 51, 86], "227": 86, "229": [22, 25, 89], "22983129554592746": 13, "22it": 7, "23": [42, 43, 86], "24": [15, 86], "240px": 87, "241": 14, "242": 14, "2420": 9, "243": 14, "244": [14, 86], "245": 14, "246": 14, "247": 14, "248": 14, "249": 86, "25": [9, 15, 16, 66, 86], "256": [9, 20], "26": [16, 60, 61, 86], "264": [1, 5, 89], "266": 20, "27": [16, 19, 62, 65, 86], "276": 20, "279": 86, "2823": 7, "285852": 7, "2859": 9, "286": 20, "288146109474553": 14, "28881": 7, "2960": 86, "2967": [6, 86], "2d": [13, 18], "2f": [13, 14, 15, 16, 18, 19, 22], "2x1": 65, "2x2": 65, "3": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 34, 38, 40, 41, 42, 43, 48, 49, 51, 54, 55, 64, 66, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "30": [13, 19, 22, 24, 50, 51, 86, 87, 88], "31": [7, 86], "3118": 9, "32": [9, 86], "3215": 6, "32768": 7, "32it": 7, "336863129384494": 13, "3449": 7, "35": 86, "350": [8, 10, 89], "360": 10, "3676169789533272": 13, "36it": 7, "375": 15, "3794": 8, "393216": 7, "3961": 6, "3983": 6, "3998": 7, "3999": 6, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 22, 23, 24, 47, 82, 85, 86, 87, 88], "40": [20, 86], "400": 20, "4006": 8, "400px": 87, "403": 7, "4049": 6, "4096": 67, "41": 8, "42": [2, 3, 12, 13, 14, 15, 16, 18, 19, 20, 24], "43": 7, "436": [7, 10, 89], "443": 86, "447": 86, "45": [2, 3, 65], "450": 86, "4542": 7, "45933195939893": 13, "463": 86, "48": 23, "4877": 8, "4909": 7, "4949": 7, "49it": 7, "5": [1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 39, 40, 41, 46, 47, 82, 85, 86, 87, 88], "50": [1, 13, 16], "500": 12, "51": [1, 13], "521": [2, 3, 65], "5244703189443227": 14, "527923": 7, "530": [2, 3, 65], "531": 14, "53817259426296": 13, "55": [9, 10, 89], "560": [16, 17, 89], "5640": 8, "57": 89, "570318895725525": 13, "581": [4, 5, 89], "59": 86, "590": [23, 25, 89], "594": 17, "5993": 7, "59it": 7, "6": [12, 13, 15, 16, 20, 22, 23, 28, 29, 35, 36, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 82, 85, 86], "60": [15, 86], "6013": 7, "606": [15, 17, 89], "61it": 7, "625": 15, "62it": 7, "637": [3, 5, 89], "64": [7, 9, 86], "652": [2, 5, 89], "65536": 7, "667": 4, "679": [13, 17, 89], "6833": 8, "68it": 7, "692": [6, 10, 89], "6940": 8, "699": [15, 86], "6c4c7c": [15, 16], "7": [4, 9, 12, 13, 14, 15, 16, 20, 23, 50, 65, 82, 85, 86], "7001": 8, "7007": 8, "7124": 86, "7133": 86, "7171": 8, "7191": 7, "72": [6, 7, 8, 9], "72222222": [87, 88], "744989537549497": 13, "746": [15, 86], "77": 13, "770": 86, "77156492": 7, "786432": 7, "787": 86, "7903": 8, "7946": 9, "7952": 6, "7964573229829714": 13, "7969": 6, "7991": 6, "8": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 23, 24, 56, 57, 65, 82, 85, 86], "80": [3, 15, 16, 20], "801": [18, 21, 89], "819": 86, "81944444": [87, 88], "82": 13, "827": 86, "832": [14, 17, 89], "83333333": [87, 88], "84": 13, "85": 3, "86": 7, "864951768488746": 7, "88125": 18, "882": [9, 10, 89], "88it": 7, "8906752411575563": 8, "8971061093247589": 7, "8991": 8, "9": [1, 6, 7, 8, 9, 12, 13, 14, 16, 18, 19, 20, 28, 29, 35, 36, 58, 59, 65, 82, 85, 86], "90": [16, 20, 86], "9014": 9, "9042": 8, "909967845659164": 8, "918": [12, 17, 89], "9184": 86, "9193": 86, "920": [16, 19], "9216": 9, "929": [16, 62], "932475884244373": 6, "9356913183279743": 6, "93it": 7, "942": [16, 62], "943": 19, "94375": 18, "9451": 8, "949": 25, "95625": [87, 88], "96": 16, "9610814126500358": 13, "9670": 8, "97": [13, 86], "975": [87, 88], "98": [12, 15, 22], "98304": 7, "99": [13, 15], "9912422": 7, "9969": 6, "9977": 7, "9997": 9, "999955": 7, "A": [2, 3, 13, 14, 15, 19, 28, 29, 30, 35, 36, 39, 42, 43, 44, 52, 53, 56, 58, 60, 62, 65, 67, 70, 71, 73, 76, 78, 81, 86, 87], "As": [12, 16, 23], "At": [12, 65], "But": 18, "By": [63, 64, 65, 66, 75], "For": [15, 18, 23, 39, 50, 75, 86, 87], "If": [18, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 50, 51, 52, 53, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 70, 75, 77, 78, 79, 81, 82, 84, 86, 87], "In": [7, 15, 16, 18, 20, 26, 27, 33, 34, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88], "It": [18, 30, 60, 61, 63, 64, 65, 66, 76, 87], "Its": [15, 40, 41, 87], "No": [1, 20, 22], "On": 23, "One": [1, 18, 66, 83, 86], "Such": [15, 87], "The": [1, 2, 3, 4, 12, 14, 18, 19, 23, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "Then": [14, 18, 76], "To": [6, 7, 8, 9, 16, 19, 87, 88], "Will": [15, 16, 65], "With": 87, "_": [2, 3, 12, 22, 23, 24, 27, 67, 70, 79, 80, 87], "__name__": 23, "_call_impl": 6, "_mnist_usp": [6, 7, 8, 9], "_scorer": 22, "_self_label": 12, "_sinkhorn": 14, "ab": 16, "abl": 13, "about": 12, "absenc": 87, "absolut": [12, 82, 87], "ac": 15, "acc": [13, 14], "acc_": 13, "acc_classreg": 14, "acc_linear": 14, "acc_sinkhorn": 14, "acc_sourc": 14, "acc_t": 13, "acc_target": 14, "accept": [50, 75, 87], "access": [54, 55, 87], "accord": 67, "account": [15, 87], "accur": [77, 86], "accuraci": [13, 14, 15, 16, 18, 19, 22], "achiev": 87, "across": [16, 40, 41, 56, 57, 63, 64, 65, 66, 77], "act": 87, "activ": 86, "ad": [12, 16, 30, 32, 34, 38, 41, 43, 44, 45, 49, 50, 51, 54, 55, 63, 64, 65, 66, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "adam": 9, "adapt": [0, 10, 13, 17, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89], "add_ax": 3, "add_domain": 87, "addit": [50, 87], "advanc": [13, 26, 27, 86], "advantag": 75, "adversari": [10, 11, 67, 68, 70, 86, 89], "affect": 50, "after": 87, "again": 18, "aim": 16, "aism": 15, "ajakan": 86, "al": [15, 16, 40, 41, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 77, 78, 79, 80], "alain": 86, "alaiz": [2, 3, 65], "algorithm": [12, 19, 28, 29, 30, 35, 36, 50, 51, 52, 53, 60, 61, 62, 87], "alia": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "align": [7, 13, 19, 26, 27, 56, 57, 71, 72, 79, 86], "all": [4, 11, 16, 18, 23, 30, 50, 56, 57, 63, 64, 65, 66, 86, 87, 89], "allow": [18, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "allow_sourc": [14, 16, 32, 34, 38, 41, 43, 49, 51, 54, 55], "along": 39, "alpha": [1, 2, 3, 4, 12, 13, 14, 15, 16, 19, 20, 24, 39], "alpha0": 20, "alpha_": [41, 49], "alphalist": 20, "alreadi": [75, 87], "also": [9, 13, 14, 18, 23, 67, 70, 82, 86, 87], "alternat": 39, "although": [67, 70], "alwai": [63, 64, 65, 66, 83, 87], "amazon": 87, "amazonaw": 7, "among": [63, 64, 65, 66], "amsterdam": 86, "an": [6, 14, 15, 16, 18, 20, 32, 34, 38, 40, 41, 43, 49, 50, 51, 54, 55, 56, 57, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "anal": 86, "analogi": 87, "analysi": [14, 28, 29, 30, 35, 36, 44, 52, 53, 58, 59, 76, 86], "ani": [12, 15, 18, 30, 39, 86, 87], "annal": [15, 86], "antoin": [15, 16, 86], "antoinecolla": 16, "api": [18, 86, 87, 88], "appli": 79, "applic": [15, 40, 41, 86], "approach": [15, 39, 49], "appropri": 50, "approxim": [15, 34, 37, 38], "ar": [2, 3, 12, 14, 15, 16, 18, 22, 23, 32, 34, 38, 41, 42, 43, 47, 49, 50, 51, 54, 55, 56, 57, 62, 64, 65, 67, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "arang": 23, "arbitrari": 50, "arg": 6, "argument": [6, 50, 87], "around": 87, "arrai": [12, 15, 18, 20, 23, 27, 32, 34, 38, 40, 41, 43, 47, 48, 49, 50, 51, 59, 63, 64, 65, 66, 69, 82, 83, 85, 87, 88], "array_lik": [63, 64, 65, 66], "arxiv": 86, "as_integer_ratio": 39, "as_sourc": [6, 7, 8, 9, 16, 19, 22, 23, 24, 87], "as_target": [6, 7, 8, 9, 16, 19, 22, 23, 24, 87], "assign": 87, "associ": [63, 64, 65, 66], "assum": [15, 16, 20, 39, 50], "assumpt": [15, 49], "attempt": 50, "attribut": [27, 29, 32, 34, 36, 38, 39, 41, 43, 45, 47, 49, 51, 53, 57, 59, 61, 63, 64, 65, 66, 75, 78], "author": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 23], "auto": [18, 19, 26, 27, 37, 38, 50, 51], "auto_exampl": [5, 10, 17, 21, 25], "auto_examples_jupyt": 11, "auto_examples_python": 11, "automat": [18, 26, 27, 37, 38, 75, 82, 87], "autumn": [3, 12], "avail": [14, 18, 22, 42, 43, 75, 86, 87, 88], "avoid": [35, 36, 52, 53, 77, 87, 88], "awai": 50, "awar": 87, "ax": [4, 13, 14, 15, 16, 18, 19, 20, 23], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "axi": [12, 13, 14, 18, 20], "axvlin": 22, "b": [15, 16, 42, 43, 47, 62, 85, 86, 87], "b_": 47, "backward": 9, "balanc": 20, "balanced_accuracy_scor": 76, "ball_tre": 50, "balltre": 50, "band": [12, 66], "band_siz": [4, 66], "bandwidth": [15, 19], "baochen": [7, 26, 27, 71, 72, 86], "barh": 22, "base": [9, 12, 13, 14, 15, 16, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 62, 74, 76, 77, 78, 79, 80, 86, 87], "base_classifi": [15, 16], "base_estim": [12, 13, 15, 18, 19, 22, 24, 26, 28, 30, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 50, 51, 52, 54, 55, 56, 58, 60, 62, 75, 87, 88], "base_method": [19, 62], "base_module_": 9, "baseadapt": 87, "baseestim": [30, 54, 55, 75], "baseselector": 75, "basura": [16, 56, 57], "batch_siz": [6, 7, 8, 9], "bbox_inch": 20, "bceloss": [67, 68, 70], "becaus": [87, 88], "been": [6, 12, 86], "befor": [28, 29, 35, 36, 40, 41, 42, 43, 46, 47, 48, 49, 52, 53, 60, 61, 62, 75], "behav": 23, "behavior": [11, 25, 39, 65, 82, 83, 84, 85, 89], "being": 87, "below": [14, 18, 63, 64, 65, 66, 86, 87, 88], "benchmark": 0, "benjamin": [73, 74], "best": [18, 24, 40, 41, 87, 88], "best_estimator_": 24, "best_gamma_": 41, "best_params_": [18, 24], "best_reg_": 24, "beta": 49, "better": 13, "between": [13, 14, 20, 26, 27, 37, 38, 39, 41, 43, 45, 47, 49, 50, 58, 59, 60, 61, 62, 68, 69, 72, 74, 76, 77, 80, 82, 87, 88], "bf": 20, "bharath": [73, 74], "bhushan": [73, 74], "bia": [2, 3, 9, 15, 19, 42, 43, 44, 45, 47, 65, 86], "binari": [19, 22, 23, 24, 65, 87, 88], "bit": 87, "black": 12, "blob": 64, "block": 87, "blue": [20, 23], "bool": [30, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 54, 55, 61, 62, 64, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "boolean": [63, 64, 65, 66], "borgwardt": [15, 42, 43, 86], "both": [15, 16, 49, 82, 86, 87], "bottom": [1, 2, 3, 4], "bound": [42, 43, 86], "boundari": [12, 13, 19, 50], "break_ti": 19, "bregman": [14, 16, 62, 86], "brute": 50, "bruzzon": [30, 76, 86], "bsd": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 23, 86], "bueno": [3, 12, 15, 16, 86], "build": 87, "built": 87, "bunch": [63, 64, 65, 66, 87], "bz2": 7, "b\u00fcnau": [15, 86], "c": [1, 2, 3, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24], "c0": [13, 20], "c1": 13, "c2": 20, "c3": 20, "c7": [14, 20], "c_": 13, "cach": 75, "cache_s": 19, "call": [1, 2, 3, 4, 6, 14, 18, 19, 40, 41, 56, 57, 63, 64, 65, 66, 77, 83, 87], "callabl": [50, 75, 76, 77, 78, 81], "came": 12, "can": [12, 13, 14, 18, 23, 30, 35, 36, 39, 50, 52, 53, 83, 86, 87, 88], "cannot": 75, "cao": 86, "captur": 68, "carri": 19, "case": [12, 13, 15, 16, 18, 50, 76, 77, 78, 79, 80, 81, 87], "cast": 86, "categor": [63, 64, 65, 66], "cavazza": 86, "cax": 3, "cb": 3, "cbar_ax": 3, "cdan": [68, 86], "ceil_mod": 9, "center": [23, 40, 41, 63, 64, 65], "centers_": 41, "chain": 75, "chan": 4, "chanc": [87, 88], "chang": [6, 13, 20, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "channel": 66, "chawla": [2, 3, 65], "choic": [6, 18, 87], "choos": [18, 40, 41, 65], "chosen": [23, 41], "circl": 12, "circleci": [1, 6, 7, 8, 9, 14, 16, 19, 20], "circular": [30, 76, 86], "citeseerx": 86, "cjlin": 7, "clariti": 87, "class": [4, 9, 14, 18, 19, 20, 23, 28, 29, 30, 32, 34, 38, 41, 43, 49, 51, 54, 55, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "class_weight": 19, "classic": 16, "classif": [2, 3, 6, 7, 8, 9, 11, 14, 21, 26, 28, 30, 31, 33, 35, 37, 40, 44, 46, 48, 50, 52, 56, 58, 62, 65, 76, 86, 89], "classifi": [11, 14, 15, 16, 17, 19, 20, 30, 33, 34, 39, 63, 65, 67, 68, 70, 77, 86, 89], "classificationtechniqu": 86, "classregularizedotmap": 28, "classregularizerotmap": 19, "classregularizerotmappingadapt": [14, 19, 87], "claus": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 23, 86], "clf": [13, 14, 15, 16, 18, 19, 20], "clf_on_subspac": 16, "clf_otda": 14, "clf_otda_linear": 14, "clf_otda_sinkhorn": 14, "clf_otds_classreg": 14, "clone": [6, 7, 8, 9, 12, 16, 19, 75, 87], "close": 12, "closer": [15, 50], "closest": 87, "cluster": [63, 64, 65, 66], "cluster_std": 64, "cm": [15, 16, 19, 23], "cm_bright": 19, "cmap": [1, 2, 3, 12, 13, 14, 15, 16, 18, 19, 20, 23], "cmap_cv": 23, "cmap_data": 23, "cmap_domain": 23, "co": 20, "code": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 86, 87], "coef0": [19, 42, 43], "colla": [16, 86], "collabor": 86, "collect": [67, 70, 71, 73], "color": [12, 15, 16, 19, 20, 22, 23], "colorbar": 3, "colormap": [1, 15, 16, 20], "com": [7, 15, 16, 86], "combin": 87, "come": [23, 82], "common": 87, "compar": [13, 22, 87], "comparison": [11, 21, 26, 28, 31, 33, 35, 37, 40, 44, 46, 48, 50, 52, 56, 58, 62, 65, 89], "compat": [18, 83, 86, 87], "complement": 82, "complet": 75, "complic": 87, "compon": [56, 57, 58, 59, 60, 61, 62, 86], "compos": [23, 82], "comput": [13, 14, 15, 16, 20, 26, 27, 40, 41, 49, 50, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 81, 86, 87], "compute_weight": 15, "con": 86, "concaten": [12, 87], "concentr": 86, "concept": [2, 3, 18, 65, 87], "concept_drift": [2, 3, 13, 14, 18, 19, 22, 23, 24, 65], "condit": [46, 47, 48, 49, 67, 68, 86], "confer": [16, 56, 57, 60, 61, 73, 74, 80, 86], "consid": [50, 87], "consider": 87, "consist": [1, 2, 3, 4, 12], "constant": [16, 60, 61, 65, 77], "construct": [6, 7, 8, 9, 16, 19, 50, 75], "constructor": 75, "consum": 75, "contact": 16, "contain": [26, 28, 31, 33, 35, 37, 40, 42, 44, 46, 48, 50, 52, 56, 58, 60, 62, 87], "context": 50, "contour": 15, "control": 82, "conv1": 9, "conv2": 9, "conv2d": 9, "convei": 19, "conveni": 87, "convent": [63, 64, 65, 66, 87], "converg": [14, 19, 28, 29, 35, 36, 39, 52, 53], "coolwarm": 23, "copi": [6, 7, 8, 9, 16, 19, 20, 75], "coral": [7, 18, 19, 46, 71, 72, 86], "coraladapt": [18, 19, 86, 87], "coraladapter__reg": [18, 86], "core": 87, "correct": [15, 42, 43, 86], "correl": [7, 26, 27, 71, 72, 79, 86], "correspond": [39, 66], "could": [14, 87], "count": 15, "coupling_": 14, "courti": [13, 14, 28, 29, 35, 36, 39, 44, 52, 53, 73, 74, 86], "cov_source_": 38, "cov_source_inv_sqrt_": 27, "cov_target_": 38, "cov_target_sqrt_": 27, "covari": [2, 3, 11, 12, 17, 26, 27, 31, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 50, 62, 65, 71, 72, 78, 86, 89], "covariate_shift": [2, 3, 19, 65, 87, 88], "cover": 87, "cpu": 9, "creat": [9, 12, 15, 16, 18, 23, 67, 70, 86, 87], "creation": [40, 41, 56, 57, 63, 64, 65, 66], "criterion": [6, 7, 8, 40, 41, 42, 43, 46, 47, 48, 49, 67, 68, 70, 73, 74], "cross": [11, 22, 25, 40, 41, 65, 77, 78, 82, 83, 84, 85, 86, 87, 89], "cross_entropy_loss": 77, "cross_val_scor": [11, 18, 25, 35, 65, 81, 86, 87, 88, 89], "cross_valid": 87, "crosscovari": 68, "crossentropyloss": [6, 7, 8, 9], "csie": 7, "cuda": 9, "current": [12, 86], "custom": 75, "cv": [18, 19, 22, 23, 24, 40, 41, 83, 86, 87, 88], "cv_arg": 23, "cv_results_": 24, "cvf": 86, "cvpr": [16, 60, 61, 86], "d": [14, 16, 19, 28, 29, 35, 36, 44, 52, 53, 62, 86], "da": [8, 10, 12, 15, 16, 21, 22, 23, 24, 26, 28, 31, 33, 35, 37, 40, 44, 46, 48, 50, 52, 56, 58, 62, 65, 71, 72, 88, 89], "da_dataset": 87, "da_shufflesplit": 85, "daestim": 0, "damodaran": [73, 74, 86], "dan": [69, 86], "dann": 86, "darrel": 86, "dasvm": [11, 17, 30, 63, 76, 86, 89], "data": [1, 2, 3, 4, 12, 15, 16, 18, 19, 20, 23, 27, 29, 32, 34, 36, 38, 41, 42, 43, 45, 47, 49, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 82, 83, 84, 86, 87, 88], "dataload": 9, "datapoint": [12, 23], "datas": 23, "dataset": [5, 17, 19, 22, 23, 24, 26, 28, 31, 33, 35, 37, 40, 41, 42, 43, 44, 46, 50, 52, 56, 57, 58, 60, 62, 79, 80, 81, 82, 83, 88, 89], "dataset2": 23, "de": [15, 86], "deal": 87, "decid": 50, "decis": [12, 13, 19, 50], "decision_boundari": 12, "decision_funct": [12, 30, 54, 55], "decision_function_shap": 19, "decisionboundarydisplai": [14, 15, 16, 19, 24], "decomposit": 18, "deep": [6, 7, 8, 10, 77, 79, 87, 89], "deepcor": [9, 72, 86], "deepcoralloss": 9, "deepjdot": [74, 86], "def": [2, 3, 15, 16, 20, 22, 23], "default": [13, 15, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "default_selector": [18, 75], "defin": [15, 23, 40, 41, 50, 87, 88], "degre": [19, 42, 43], "delta_f": [4, 66], "demonstr": 87, "densiti": [19, 31, 32, 41, 43, 49, 50, 51, 78, 80, 86], "densityratio": 86, "densityreweight": [15, 19, 48, 50, 87, 88], "densityreweightadapt": [19, 87], "depend": [23, 50, 82, 86], "deprec": 6, "deriv": [15, 87], "describ": 16, "descript": [2, 3, 63, 64, 65, 66, 87], "design": [18, 84, 87], "detach": [6, 7, 8, 9, 16, 19], "detail": [2, 3, 15, 16, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 65, 76, 77, 78, 79, 80, 86, 87], "determin": [40, 41, 56, 57, 63, 64, 65, 66, 77], "dev": 86, "develop": 86, "devi": [73, 74, 86], "deviat": [63, 64, 65, 66], "devic": 9, "diagon": [44, 45], "dict": [15, 16, 50, 63, 64, 65, 66], "dict_kei": 87, "dictionari": [18, 63, 64, 65, 66, 87], "did": [14, 19], "differ": [12, 18, 19, 23, 49, 61, 62, 66, 83, 87, 88], "dilat": 9, "dim": 6, "dimens": 6, "dimension": 16, "ding": [16, 60, 61, 86], "direct": [15, 40, 41, 86], "directli": 75, "directori": 75, "discard": 30, "discr": 19, "discrep": [16, 43, 47, 49, 74], "discrimin": [33, 86], "discriminatorreweight": [15, 19], "discriminatorreweightadapt": [19, 87], "discuss": 86, "disi": 86, "distanc": [50, 53, 59, 69, 72, 73, 74], "distance_metr": 50, "distinct": 87, "distribut": [1, 2, 3, 4, 12, 13, 14, 15, 16, 19, 23, 39, 45, 49, 65, 73, 74, 86, 87, 88], "diverg": [10, 11, 15, 16, 41, 43, 49, 62, 68, 71, 86, 89], "divid": 64, "do": [12, 87, 88], "docstr": 85, "document": [23, 50, 78, 81, 86], "doe": [18, 19, 75, 87, 88], "doesn": 50, "doi": 86, "domain": [0, 5, 10, 13, 17, 18, 20, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 89], "domain_classifi": [19, 33, 34, 67, 70, 77], "domain_classifier_": 34, "domain_criterion": [67, 68, 70], "domain_label": 54, "domain_nam": [63, 64, 65, 66, 87], "domain_pred_": [68, 69, 72, 74], "domain_pred_t": [68, 69, 72, 74], "domain_sourc": 1, "domain_target": 1, "domainawar": 87, "domainawarecriterion": 9, "domainawaredataset": [63, 64, 65, 66, 87], "domainawareestim": 87, "domainawaremodul": 9, "domainawarenet": 9, "domainbalanceddataload": 9, "domainshufflesplit": 23, "don": 87, "done": [14, 18, 20, 86, 87, 88], "dot": 20, "download": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "dpi": 20, "drawn": [15, 23], "drift": [2, 3, 18, 65], "dropout": 9, "dropout1": 9, "dropout2": 9, "ds_cnt": 19, "dslr": 87, "dtype": [16, 19], "due": 13, "dur": [6, 7, 8, 9], "dure": [18, 50, 67, 70, 71, 73, 87], "e": [12, 16, 32, 34, 38, 39, 41, 43, 49, 51, 54, 55, 67, 68, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "each": [1, 2, 3, 4, 18, 23, 30, 32, 34, 38, 39, 41, 43, 49, 50, 51, 54, 55, 61, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "earth": 53, "easier": 87, "eccv": [7, 71, 72, 73, 74, 86], "editsec": 15, "edu": [3, 7, 15, 16, 86], "effect": [15, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "effici": 50, "eigenvector": [16, 59], "eigvects_": 59, "either": 64, "elaps": 75, "element": [50, 63, 64, 65, 66], "els": [9, 12, 15, 16, 19], "embed": [67, 86], "emd": 20, "empir": 45, "enabl": 75, "enable_metadata_rout": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "encapsul": 75, "encod": 18, "end": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 65], "engin": [16, 62, 86], "ensur": [1, 2, 3, 4, 19], "entiti": 87, "entitl": 50, "entrop": [19, 28, 29, 35, 36], "entropi": [18, 24, 77, 79, 80, 86], "entropicotmap": [19, 22, 24, 87, 88], "entropicotmappingadapt": [14, 19, 87], "entropicotmappingadapter__reg_": 24, "enumer": [19, 23, 85], "ep": [14, 15, 16, 19, 24, 42, 43], "epoch": [6, 7, 8, 9], "epsilon": [12, 77], "eq": 80, "equal": [49, 50, 58, 59, 60, 61, 62, 64], "equip": [12, 30], "equival": 50, "error": [7, 18, 28, 29, 32, 34, 35, 36, 38, 41, 43, 49, 51, 52, 53, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "especi": 16, "estim": [12, 13, 15, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], "estimator_": 39, "et": [15, 16, 40, 41, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 77, 78, 79, 80], "etc": [12, 86], "euclidean": 50, "euclidean_dist": 50, "european": [73, 74, 86], "evalu": [13, 78, 81, 87, 88], "even": [39, 75, 87], "everi": 64, "evolut": 12, "exact": 76, "exactli": 87, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 87, 89], "exdb": 7, "execut": [5, 10, 17, 21, 25, 87, 89], "exist": [32, 34, 38, 41, 43, 49, 51, 54, 55, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "expect": 50, "explicit": 87, "explor": 16, "expos": 87, "extent": 13, "extract": 7, "extract_source_indic": 15, "extractor": 70, "f": [1, 2, 3, 4, 12, 13, 14, 15, 16, 18, 22, 23, 24, 65, 85, 86], "fail": [7, 87], "fals": [6, 7, 8, 9, 15, 16, 19, 22, 23, 30, 32, 34, 38, 39, 41, 42, 43, 49, 50, 51, 54, 55, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "famili": 20, "fc1": [6, 7, 8, 9], "fc2": 9, "featur": [1, 2, 3, 14, 15, 16, 39, 60, 61, 64, 68, 69, 70, 72, 77, 83, 86], "features_": [68, 69, 72, 74], "features_t": [68, 69, 72, 74], "feel": [86, 87], "fellow": 86, "feng": [26, 27, 86], "fernando": [16, 56, 57, 86], "ferrari": 86, "fetch": 87, "fetch_all_office31_surf": 87, "fetch_office31_surf_al": 87, "fetcher": 87, "few": [86, 87], "ff0000": 19, "ffa056": [15, 16], "fig": [1, 2, 3, 4, 23], "figsiz": [1, 2, 3, 4, 12, 14, 15, 16, 19, 22, 23], "figur": [12, 13, 14, 15, 16, 18, 19, 20, 22], "file": [5, 10, 11, 17, 20, 21, 25, 89], "fill": 23, "filterwarn": 24, "final": [18, 19, 62, 86], "find": [15, 41, 43, 47, 49], "first": [12, 15, 19, 23, 84, 86, 87], "firstli": 16, "fisher": 16, "fit": [6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 75, 78, 86, 87, 88], "fit_param": [87, 88], "fit_predict": 87, "fix": [26, 27, 37, 38, 39, 62, 64], "flamari": [13, 14, 18, 20, 28, 29, 35, 36, 39, 44, 52, 53, 73, 74, 86], "flda": [19, 62], "flip": [76, 77, 78, 79, 80, 81], "float": [26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 79, 80, 82], "float64": [16, 19], "flow": 87, "fluctuat": 87, "fly": 87, "fold": [23, 40, 41, 82, 85], "follow": [14, 15, 16, 18, 23, 63, 64, 65, 66, 67, 70, 84, 86, 87], "font": 20, "fontsiz": [1, 2, 3, 12, 15, 16, 20, 23], "forbidden": 7, "forc": 50, "form": [23, 75, 76, 84], "format": [23, 86], "forward": [9, 68, 69, 72, 74], "found": 87, "fr": 16, "framework": [86, 87], "frank": [15, 42, 43], "free": [86, 87], "frequenc": [4, 66], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 39, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 82, 85, 86, 87, 88, 89], "from_estim": [14, 15, 16, 19, 24], "full": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 86], "function": [15, 16, 18, 23, 33, 34, 37, 38, 39, 40, 41, 42, 43, 50, 56, 57, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88], "further": [12, 50], "g": [2, 3, 14, 16, 32, 34, 38, 39, 41, 43, 49, 51, 54, 55, 60, 61, 65, 67, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "g_": 47, "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 86, 89], "gamma": [15, 19, 40, 41, 42, 43, 46, 47, 48, 49, 65], "ganin": [70, 86], "gaussian": [19, 34, 37, 38, 46, 47, 63, 64, 65, 66, 69, 86], "gaussiannb": 75, "gaussianreweight": [15, 18, 19], "gaussianreweightadapt": [18, 19, 86, 87], "gca": 14, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 11, 18, 19, 21, 22, 23, 24, 40, 41, 56, 57, 63, 64, 65, 66, 67, 70, 77, 83, 86, 87, 89], "geng": [16, 62, 86], "germain": 86, "get": [15, 18, 87], "get_domain": 19, "get_estim": [14, 15, 16, 54, 55], "get_lda_interp": 20, "get_n_split": [83, 85], "git": 86, "github": 86, "give": 14, "given": [2, 3, 12, 32, 34, 35, 36, 38, 40, 41, 43, 49, 51, 52, 53, 54, 55, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "global": 20, "glossari": 50, "gmail": [15, 16], "gnassoun": [6, 7, 8, 9, 86], "go": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 87], "goal": [12, 15, 16], "good": [16, 76, 77, 78, 79, 80, 81], "gradient": [9, 19, 62], "grai": [12, 20], "grain": 19, "graph": 50, "greater": 50, "greater_is_bett": [76, 77, 78, 79, 80, 81], "grei": 1, "gretton": [15, 42, 43, 86], "grid": [24, 86], "grid_search": [18, 24, 86], "gridsearchcv": [11, 18, 25, 35, 65, 78, 79, 86, 87, 88, 89], "ground": [28, 29, 35, 36, 52, 53], "group": 85, "guarante": 39, "guess": 22, "guid": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "gz": 7, "h": [15, 86], "h_": 47, "ha": [6, 12, 23, 28, 29, 32, 34, 35, 36, 38, 41, 43, 49, 51, 52, 53, 54, 55, 67, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "habrard": [13, 39, 86], "handl": [12, 18], "harder": 68, "have": [12, 16, 23, 50, 63, 64, 65, 66, 77, 87, 88], "height": 87, "helper": [14, 87], "here": [2, 3, 12, 14, 18, 85, 86], "herrera": [2, 3, 65], "hidetoshi": [15, 33, 34, 37, 38, 86], "hierarch": 84, "high": [76, 77, 78, 79, 80, 81, 87, 88], "highest": 59, "hilbert": 16, "hing": [13, 19], "hisashi": 86, "ho": 86, "home": [1, 6, 7, 8, 9, 14, 16, 19, 20], "horizontalalign": [15, 16, 19], "how": [11, 13, 21, 23, 26, 27, 32, 34, 38, 41, 43, 49, 51, 54, 55, 65, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "howev": 12, "http": [7, 15, 86], "huang": [15, 42, 43, 86], "hyperparamet": 86, "i": [1, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 49, 50, 51, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "iclr": 79, "icml": [46, 47, 48, 49, 69, 77], "idea": [14, 15, 41, 43, 49], "ident": 83, "idx": 15, "idx1": 7, "idx3": 7, "ieee": [14, 15, 16, 28, 29, 30, 35, 36, 44, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 76, 86], "ignor": [1, 20, 24, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "ii": 23, "iii": 86, "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 12, 18, 19, 22, 23, 24, 86], "imag": [87, 88], "impact": 50, "implement": [15, 16, 84, 87], "implicit": 6, "import": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 40, 41, 43, 49, 50, 51, 75, 78, 82, 85, 86, 87, 88], "importanceweightedscor": [24, 87], "importantli": 18, "improv": [12, 15, 33, 34, 37, 38, 86], "imshow": 13, "in_featur": 9, "includ": [6, 18, 75, 82, 86, 87], "include_all_target": 87, "increas": 14, "independ": [16, 65], "index": [23, 85, 86, 87], "index_source_delet": 30, "index_target_ad": 30, "indic": [23, 50, 63, 64, 65, 66, 82, 83, 84], "indices_source_delet": 12, "indices_target_ad": 12, "indx_sort": 23, "infer": [15, 33, 34, 37, 38, 86], "influenc": 50, "inform": [13, 39, 86], "initi": [9, 68, 87, 88], "inner": [28, 29], "inplac": 9, "input": [9, 15, 18, 41, 43, 49, 50, 67, 70, 86], "insid": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "inspect": [14, 15, 16, 19, 24, 75], "instabl": 77, "instanc": [16, 18, 39, 40, 41, 56, 57, 60, 61, 63, 64, 65, 66, 67, 70, 71, 73, 75, 77, 82, 86], "instanti": [67, 70], "instead": [32, 34, 38, 41, 43, 49, 51, 54, 55, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "institut": [15, 86], "int": [28, 29, 30, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 77, 82, 83, 85], "integ": [18, 63, 64, 65, 66, 77, 83, 87], "integr": [75, 87], "intel": 86, "intellig": [14, 28, 29, 30, 35, 36, 44, 52, 53, 76, 86], "interest": 86, "interfac": [75, 87], "intern": [15, 16, 50, 51, 56, 57, 80, 86], "interpol": 20, "introduc": 87, "intuit": 19, "invers": [27, 50], "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "is_avail": 9, "is_fit": 9, "ism": 15, "isotrop": 64, "issu": 86, "ist": 86, "item": [9, 15, 16], "iter": [9, 13, 14, 19, 23, 28, 29, 30, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 52, 53, 60, 61, 62, 82, 83, 87], "its": [13, 15, 41, 49, 87], "j": [2, 3, 12, 13, 14, 15, 16, 42, 43, 60, 61, 65, 86], "jdot": [11, 17, 19, 39, 65, 86, 89], "jdotclassifi": [13, 19], "jdotregressor": 13, "jialin": [16, 58, 59], "jiashi": [26, 27, 86], "job": [50, 87], "joblib": [50, 75], "joint": [13, 39, 60, 61, 73, 74, 86], "jordan": 86, "journal": [15, 33, 34, 37, 38, 70, 78, 86], "jp": 15, "june": 86, "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "just": 19, "k": [12, 13, 15, 16, 22, 30, 42, 43, 86], "k_": 59, "kachaiev": [15, 16, 86], "kachayev": [15, 16], "kaichao": 77, "kanamori": 86, "kashima": [15, 86], "kate": [7, 26, 27, 71, 72, 86], "kawanab": [15, 86], "kd_tree": 50, "kdtree": 50, "kei": [15, 16, 87], "kellenberg": [73, 74, 86], "kept": [56, 57], "kernel": [12, 13, 14, 16, 19, 28, 40, 41, 42, 43, 46, 47, 48, 49, 58, 59, 60, 61, 62, 65, 69], "kernel_ridg": 13, "kernel_s": 9, "kerneldens": [15, 19, 31, 32, 78], "kernelridg": 13, "keyword": 50, "kim": 86, "kind": 16, "kl": [15, 41], "klau": 86, "kliepreweight": [19, 41, 86], "kliepreweightadapt": [19, 87], "kmmreweight": [15, 43, 86], "kneighborsclassifi": 51, "know": [12, 16], "knowledg": [16, 62, 86], "krauledat": 86, "krr": 13, "kullback": [15, 41], "kun": [46, 47, 48, 49], "kuniaki": 80, "kwarg": [6, 30, 39, 41, 54, 55, 67, 70, 71, 73, 77], "kwok": 86, "l": [30, 76, 86], "l1": [28, 29, 50], "l1l2": [28, 29], "l2": [28, 29, 39, 50], "l_p": 50, "label": [2, 3, 4, 7, 9, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 28, 29, 32, 34, 38, 39, 41, 43, 46, 47, 48, 49, 51, 54, 63, 64, 65, 66, 74, 76, 77, 83, 86, 87, 88], "lalou": [23, 86], "laplac": 50, "laplace_smooth": [15, 19, 50, 51], "larg": [35, 36, 52, 53, 87], "largest": 67, "larochel": 86, "last": [18, 50, 70, 75], "latter": [76, 77, 78, 79, 80, 81], "laviolett": 86, "layer": [67, 70, 71, 73], "layer_nam": [6, 7, 8, 9, 67, 70, 71, 73], "lda": [16, 20], "leaf": 50, "leaf_siz": [19, 50, 51], "learn": [13, 15, 18, 23, 39, 43, 47, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 69, 70, 75, 78, 83, 87, 88], "least": [39, 85], "leav": 83, "leaveonedomainout": [23, 87], "lecun": 7, "ledoit": [26, 27, 37, 38], "left": [12, 23], "legend": [4, 12, 13, 22, 23], "leibler": [15, 41], "lemma": [26, 27, 37, 38], "lempitski": 86, "len": [12, 15, 16, 19, 23], "len_": 20, "length": [62, 64], "length_scal": [19, 62], "less": [50, 58, 59, 60, 61, 62], "let": [23, 87, 88], "level": 87, "lexsort": 23, "lib": [6, 14], "librari": [86, 87], "libsvmtool": 7, "licens": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 23], "like": [18, 32, 34, 38, 40, 41, 43, 47, 48, 49, 51, 63, 64, 65, 66, 69, 83, 87, 88], "likelihood": [15, 33, 34, 37, 38, 40, 41, 86], "lim": 14, "limit": 87, "linalg": 20, "line": 12, "line2d": 12, "linear": [9, 12, 14, 19, 44, 45, 47, 86], "linear_model": [13, 15, 18, 86, 87, 88], "linearmong": 86, "linearotmap": 19, "linearotmappingadapt": [14, 19, 87], "linearregress": 39, "linestyl": 22, "linewidth": 20, "linspac": [4, 12, 13, 16, 20], "list": [12, 16, 23, 39, 41, 50, 75, 87], "listedcolormap": [15, 16, 19], "ll": 23, "load": [87, 88], "load_mnist_usp": [6, 7, 8, 9], "loc": [12, 19, 23], "local": [6, 14], "locat": [12, 47, 64], "lodo": 23, "log": [15, 33, 34, 35, 36, 37, 38, 52, 53, 86], "logisticregress": [12, 13, 15, 18, 19, 33, 34, 40, 42, 77, 86, 87, 88], "loglog": [35, 36, 52, 53], "logo": [11, 21, 89], "long": [16, 60, 61, 67, 68, 69, 86], "longer": 87, "loog": [15, 86], "look": [15, 87], "loop": [9, 28, 29, 86], "loss": [9, 13, 16, 39, 61, 62, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81], "loss_fn": 9, "loss_func": 77, "loss_ot": 13, "loss_tgt_label": 13, "lounici": 86, "low": [76, 77, 78, 79, 80, 81, 87], "lower": [12, 13, 19], "lowercas": 75, "lp": [28, 29], "lpl1": [19, 28, 29], "lpp": 62, "lr": [6, 7, 8, 9], "lst_loss_ot_": 39, "lst_loss_tgt_labels_": 39, "lstrip": [15, 16, 19], "lw": 23, "m": [15, 16, 30, 60, 61, 76, 86], "m1": 20, "m2": 20, "mach": 86, "machin": [14, 15, 28, 29, 30, 35, 36, 44, 50, 51, 52, 53, 70, 76, 78, 86], "made": [82, 85], "mai": [50, 83, 86], "main": 12, "maintain": 86, "make": [23, 63, 66, 68, 83, 86, 87, 88], "make_da_pipelin": [14, 18, 86, 87], "make_dataset": [4, 19], "make_dataset_from_moons_distribut": [1, 12], "make_pipelin": 18, "make_shifted_dataset": [1, 2, 3, 13, 14, 15, 16, 18, 19, 22, 23, 24, 87, 88], "make_variable_frequency_dataset": 4, "mandat": 87, "manhattan_dist": 50, "map": [14, 16, 19, 44, 46, 47, 86], "marconcini": [30, 76, 86], "margin": 12, "margin_lin": 12, "mark": [16, 87], "marker": [12, 16, 20, 23, 87], "markers": 12, "masashi": [15, 40, 41, 78, 86], "mask": [23, 87], "match": [13, 43, 60, 61, 86], "mathelin": [15, 86], "mathemat": [15, 86], "matplotlib": [1, 2, 3, 4, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "matrix": [46, 47, 48, 49, 50, 65], "mattia": 86, "max": [3, 13, 14, 15, 16, 19, 35, 36, 39, 52, 53], "max_epoch": [6, 7, 8, 9], "max_featur": 67, "max_inner_it": [19, 28, 29], "max_it": [15, 19, 28, 29, 30, 35, 36, 40, 41, 42, 43, 46, 47, 48, 49, 52, 53, 60, 61, 62], "max_len": [15, 16], "max_n_split": [83, 87], "maxim": [15, 30, 60, 61, 62], "maximum": [16, 19, 40, 41, 42, 43, 46, 47, 48, 49, 52, 53, 67], "maxpool": 9, "maxpool2d": 9, "mb": [5, 10, 17, 21, 25, 89], "mean": [13, 16, 18, 20, 22, 38, 43, 47, 49, 50, 65, 76, 77, 78, 79, 80, 81, 87, 88], "mean_source_": 38, "mean_squared_error": 13, "mean_target_": 38, "mean_test_scor": 24, "measur": 74, "mechan": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "median": [35, 36, 52, 53], "mem": [5, 10, 17, 21, 25, 89], "member": 86, "memori": [50, 75], "merg": 23, "meshgrid": 13, "meta": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "metadata": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "metadata_rout": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "method": [1, 2, 3, 4, 10, 12, 17, 18, 21, 23, 26, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 65, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "metric": [13, 18, 19, 22, 24, 28, 29, 35, 36, 39, 50, 51, 52, 53], "metric_param": [19, 50, 51], "might": [14, 39], "min": [16, 19, 56, 57], "mingsheng": [67, 68, 69], "minim": [15, 41, 43, 47, 49, 68, 79, 86], "minimum": [28, 29, 35, 36], "minkowski": [19, 50, 51], "minkowski_dist": 50, "minut": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "mline": 12, "mlpregressor": 39, "mm": 20, "mmd": [16, 19, 43, 47, 48, 49, 69, 86], "mmdlsconsmap": [19, 47], "mmdlsconsmappingadapt": 19, "mmdtarsreweight": [19, 49], "mmdtarsreweightadapt": 19, "mnist": [6, 7, 8, 9], "mnist_dataset": [6, 7, 8, 9], "mnist_target": [6, 7, 8, 9], "mnisttouspsnet": [6, 7, 8, 9], "model": [9, 13, 15, 40, 41, 77, 78, 81, 86], "model_select": [18, 22, 23, 24, 86, 87, 88], "modern": 20, "modifi": 23, "modul": [6, 7, 8, 9, 67, 70, 71, 73, 86], "module_": 9, "mong": 86, "moon": [12, 63], "more": [12, 15, 18, 50, 86, 87], "moreno": [2, 3, 65], "morerio": [79, 86], "most": [16, 23, 50], "mostli": 87, "motoaki": 86, "move": 87, "mover": 53, "mse": [13, 39], "mse_": 13, "mse_t": 13, "mu": [16, 19, 58, 59, 62], "mu_regress": 65, "muandet": 86, "much": 13, "multi": [1, 87], "multiclass": [2, 7, 13, 65], "multilinear": 68, "multinomi": 13, "multipl": [1, 2, 3, 4, 12, 18, 19, 40, 41, 56, 57, 63, 64, 65, 66, 77, 87], "multipli": 65, "murino": 86, "must": [18, 50, 64, 79, 85, 86], "m\u00fcller": 86, "n": [2, 3, 13, 14, 15, 16, 20, 23, 28, 29, 35, 36, 39, 44, 52, 53, 65, 86], "n_center": [19, 40, 41, 64], "n_channel": [4, 66], "n_class": [4, 6, 7, 8, 9, 47, 49, 66, 67], "n_compon": [16, 18, 19, 56, 57, 58, 59, 60, 61, 62, 87], "n_featur": [27, 32, 34, 38, 41, 43, 47, 49, 51, 56, 57, 64, 83], "n_frequenc": [4, 66], "n_frequency_sourc": 66, "n_iter_max": 39, "n_job": [19, 50, 51], "n_neighbor": 51, "n_sampl": [6, 7, 8, 9, 14, 32, 34, 38, 41, 43, 47, 49, 51, 56, 57, 64, 65, 79, 83], "n_samples_sourc": [1, 2, 3, 4, 12, 13, 14, 15, 16, 19, 22, 23, 24, 42, 43, 63, 65, 66, 87, 88], "n_samples_target": [1, 2, 3, 4, 12, 13, 14, 15, 16, 19, 22, 23, 24, 63, 65, 66, 87, 88], "n_split": [22, 23, 24, 82, 83, 84, 85, 87, 88], "n_splits_lodo": 23, "n_tot_sourc": 14, "n_tot_target": 14, "naive_bay": 75, "nakajima": [15, 86], "name": [15, 16, 18, 19, 32, 34, 38, 41, 43, 49, 50, 51, 54, 55, 63, 64, 65, 66, 67, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "named_step": [14, 75], "names_map": 23, "nan": 23, "natur": [19, 50, 65], "nb": 20, "ndarrai": [63, 64, 65, 66, 79, 83], "nearest": [49, 50, 51, 86], "nearestneighborreweight": [15, 19], "nearestneighborreweightadapt": 19, "necessari": [13, 39, 87, 88], "necessarili": 19, "necessit": 87, "need": [18, 77, 87], "neg": [63, 64, 65, 66, 86, 87], "neighbor": [19, 49, 50, 51, 86], "neighborhood": [50, 80, 86], "neither": 87, "netherland": 86, "network": [16, 58, 59, 67, 68, 69, 70, 86], "neural": [13, 16, 39, 58, 59, 70, 86], "neuralnetclassifi": [6, 7, 8], "neurip": [15, 40, 41, 67, 68], "never": 75, "new": [12, 59, 87], "next": [7, 87], "nicola": [73, 74, 86], "nip": [15, 39, 42, 43, 86], "nn": [6, 7, 8, 9], "nois": [1, 2, 3, 4, 12, 13, 14, 15, 16, 19, 22, 23, 24, 63, 64, 65, 66, 87, 88], "non": [63, 64, 65, 66, 87], "none": [9, 15, 16, 19, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88], "nonzero": 50, "norm": [19, 20, 28, 29, 35, 36, 52, 53, 62], "normal": [15, 35, 36, 52, 53], "note": [13, 18, 32, 34, 38, 41, 43, 49, 50, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "notic": [12, 86], "now": [12, 13, 23, 87, 88], "np": [1, 4, 12, 13, 15, 16, 18, 20, 22, 23, 65, 82, 83, 85], "ntu": 7, "num_class": 77, "num_featur": [6, 67, 70], "number": [14, 15, 28, 29, 30, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 85, 87], "numer": [35, 36, 52, 53, 77], "numitermax": 14, "numpi": [1, 4, 12, 13, 15, 16, 18, 20, 22, 23, 82, 85], "o": [12, 20], "object": [12, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88], "observ": [31, 32, 51, 78], "occur": [35, 36, 52, 53], "octob": 86, "odot": 47, "off": [20, 39, 60, 61], "offer": [87, 88], "office31": 87, "oleksii": [15, 16, 86], "onc": [16, 23, 84, 87], "one": [1, 16, 18, 50, 63, 65, 66, 79, 86, 87, 88], "ones": [16, 18, 20, 82, 85], "onli": [12, 18, 22, 23, 32, 34, 38, 41, 43, 49, 50, 51, 54, 55, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "open": 86, "oper": 45, "optim": [9, 10, 11, 13, 15, 17, 19, 28, 29, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 58, 59, 62, 65, 73, 74, 75, 86, 89], "optimali": [15, 16], "option": [26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 63, 64, 65, 66, 69, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "orang": 23, "order": [15, 87], "org": 86, "organ": 18, "origin": [13, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "ossci": 7, "ot": [14, 19, 29, 36, 39, 44, 45, 52, 53], "ot_transport_": [14, 29, 36, 45, 53], "otda": [11, 17, 29, 36, 45, 52, 53, 65, 75, 86, 89], "other": [15, 23, 32, 34, 38, 39, 41, 43, 49, 51, 54, 55, 66, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "otherwis": [32, 34, 38, 41, 43, 49, 51, 54, 55, 63, 64, 65, 66, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "otmap": [14, 19], "otmappingadapt": [14, 19, 87], "our": [23, 50], "out": [12, 83, 86], "out_featur": 9, "outcom": [76, 77, 78, 79, 80, 81], "output": [9, 18, 40, 41, 56, 57, 63, 64, 65, 66, 67, 70, 71, 73, 77, 87], "over": [19, 77], "overfit": [87, 88], "overrid": 50, "overwrit": 18, "ovr": 19, "p": [9, 15, 16, 19, 49, 50, 51, 60, 61, 75, 86], "p_": 15, "p_sourc": [41, 43, 49], "p_target": [41, 43, 49], "pack": [16, 22, 23, 87], "pack_lodo": [23, 87], "pack_test": [6, 7, 8, 9, 23, 24, 87], "pack_train": [6, 7, 8, 9, 16, 19, 22, 23, 24, 87], "packag": [6, 14], "pad": 9, "page": [15, 16, 50, 51, 60, 61, 62, 86], "pair": [63, 64, 65, 66, 87], "pami": 86, "pan": [16, 58, 59, 86], "paper": [80, 86], "parallel": 50, "parallel_backend": 50, "param": [18, 22, 86, 87], "param_entropicotmappingadapter__reg_": 24, "param_grid": [18, 86], "paramet": [1, 14, 18, 20, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88], "part": [19, 86], "partial_fit": [54, 55], "pass": [9, 18, 22, 32, 34, 38, 40, 41, 43, 49, 50, 51, 54, 55, 56, 57, 63, 64, 65, 66, 67, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "patch": 23, "path": 75, "pattern": [2, 3, 14, 16, 26, 27, 28, 29, 30, 35, 36, 44, 52, 53, 60, 61, 65, 76, 86], "paul": 86, "pca": [16, 18, 56, 57, 58, 59, 60, 61, 62, 87], "pca_source_": 57, "pca_target_": 57, "pdf": [15, 86], "peak": 66, "per": [18, 30, 83, 87], "per_domain": 75, "percentag": [23, 82, 85], "perdomain": [18, 87], "perdomainselector": 87, "perform": [13, 15, 16, 18, 23, 75, 87], "permit": 75, "phase": 86, "pi": 20, "pick": 87, "pietro": 79, "pip": 86, "pipe": [18, 86, 87], "pipe_perdomain": 18, "pipe_train_on_sourc": 18, "pipelin": [15, 19, 22, 26, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "pl": 20, "plai": 87, "plan": [14, 15, 33, 34, 37, 38, 86], "pleas": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "plot": [5, 11, 14, 18, 19, 23, 24, 63, 65, 66, 89], "plot_adversari": [6, 10, 89], "plot_cross_val_score_for_da": [22, 25, 89], "plot_cross_validation_for_da": [23, 25, 89], "plot_cv_indic": 23, "plot_dasvm": [12, 17, 89], "plot_dataset_from_moons_distribut": [1, 5, 89], "plot_diverg": [7, 10, 89], "plot_gridsearch_for_da": [24, 25, 89], "plot_how_to_use_skada": [18, 21, 89], "plot_jdot_da": [13, 17, 89], "plot_lodo_indic": 23, "plot_method": 15, "plot_method_comparison": [19, 21, 89], "plot_optimal_transport": [8, 10, 89], "plot_optimal_transport_da": [14, 17, 89], "plot_reweight": [15, 17, 89], "plot_shifted_dataset": [2, 3, 5, 89], "plot_shifted_dataset_regress": [3, 5, 89], "plot_skada_logo": [20, 21, 89], "plot_st_shuffle_indic": 23, "plot_subspac": [16, 17, 89], "plot_subspace_and_classifi": 16, "plot_training_method": [9, 10, 89], "plot_variable_frequency_dataset": [4, 5, 89], "plot_weights_and_classifi": 15, "plt": [1, 2, 3, 4, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "plug": 87, "pmlr": 86, "png": 20, "point": [12, 15, 16, 19, 24, 30, 39, 50, 63, 64, 65, 66], "poli": 12, "polytechniqu": [3, 15, 16], "pos_sourc": [1, 12, 63], "pos_target": [1, 12, 63], "posit": [12, 50, 63, 86, 87], "possibl": [2, 3, 12, 26, 27, 37, 38, 50, 62, 87], "possibli": 87, "pot": 20, "power": 50, "pp": 86, "practic": 87, "precis": [35, 36], "precomput": 50, "predict": [12, 13, 14, 15, 16, 18, 19, 24, 31, 33, 34, 37, 38, 39, 40, 42, 48, 50, 54, 55, 56, 58, 60, 68, 76, 77, 79, 86, 87], "predict_log_proba": [54, 55], "predict_proba": [54, 55, 87], "predictionentropyscor": [18, 24, 86, 87], "prepar": [22, 23, 24, 87], "preprint": 86, "preprocess": [18, 19, 75, 86], "present": 12, "preserv": [13, 23, 82, 85], "prevent": 50, "previou": 16, "previous": 87, "prgn": 23, "print": [1, 4, 9, 13, 15, 16, 18, 19, 22, 24, 39, 61, 62, 75, 82, 85], "print_scores_as_t": [15, 16], "prior": [75, 86], "probabl": [15, 18, 19, 24, 77], "problem": [12, 23, 28, 29, 30, 35, 36, 39, 41, 50, 52, 53, 58, 59, 62, 76, 83, 86, 87], "procedur": 41, "proceed": 86, "process": [13, 15, 39, 50, 51, 86, 87], "processor": 50, "produc": [0, 82], "progress": 12, "project": [1, 6, 7, 8, 9, 16, 19, 20, 59], "propag": 66, "proport": 82, "propos": [39, 80], "provid": [1, 18, 20, 32, 34, 38, 39, 41, 43, 49, 51, 54, 55, 67, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "psd": 4, "psu": 86, "publish": 86, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 87, 89], "pylab": 20, "pypi": 86, "pyplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "pytest": 87, "python": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "python3": [6, 14], "pytorch": [67, 70, 71, 73], "q": 86, "quadrat": 39, "queri": 50, "quick": 86, "r": [2, 3, 13, 14, 20, 28, 29, 35, 36, 39, 44, 52, 53, 65, 86], "r82": 86, "raeder": [2, 3, 65], "rais": [18, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "rakotomamonji": [13, 14, 28, 29, 35, 36, 39, 44, 52, 53, 86], "randint": [1, 4], "randn": 20, "random": [1, 2, 3, 4, 19, 20, 22, 40, 41, 56, 57, 63, 64, 65, 66, 77, 82, 83, 85], "random_se": [1, 4, 12, 15, 16, 19, 22, 23, 87, 88], "random_st": [1, 2, 3, 4, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 40, 41, 56, 57, 63, 64, 65, 66, 77, 82, 83, 84, 85, 87, 88], "randomli": [23, 87], "randomst": [40, 41, 56, 57, 63, 64, 65, 66, 77, 82], "rang": [4, 9, 12, 13, 14, 16, 20, 23, 87], "rather": [6, 7, 8, 9, 16, 19], "ratio": [15, 65, 86], "ravel": 13, "raw": 7, "rbf": [13, 14, 16, 19, 28, 40, 41, 42, 43, 58, 59, 60, 61, 62, 65], "rcparam": 20, "rdbu": [15, 16, 19, 23], "re": [31, 32, 33, 34, 37, 38, 50, 51, 82], "reach": 86, "readi": 87, "real": 19, "reason": 87, "recognit": [2, 3, 16, 26, 27, 60, 61, 65, 86], "recommend": [6, 7, 8, 9, 16, 19], "reconstruct": 87, "recov": 14, "red": [12, 20], "reduc": [69, 72, 74, 77], "reduct": [73, 74, 79], "refer": [26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87], "reflect": [87, 88], "reg": [6, 7, 8, 9, 14, 19, 26, 27, 37, 38, 44, 45, 48, 49, 62, 67, 68, 70, 71, 73], "reg_": [14, 19, 22, 24, 28, 29, 35, 36], "reg_cl": [8, 14, 19, 28, 29, 73, 74], "reg_cor": 18, "reg_k": [19, 46, 47], "reg_m": [19, 46, 47], "reglog": 13, "regress": [3, 39, 65], "regression_scaling_const": 65, "regressor": [11, 17, 39, 65, 86, 89], "regular": [14, 16, 18, 24, 26, 27, 28, 29, 35, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 58, 59, 62, 67, 68, 70, 71, 73, 74, 86], "regulari": 24, "relat": 87, "relev": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "relu": 9, "relu1": 9, "relu2": 9, "relu3": 9, "remain": [23, 84], "rememb": 30, "remi": [13, 14, 18, 20, 73, 74], "remov": [12, 68], "rep1": 86, "repid": 86, "replac": [2, 3], "repres": [12, 16, 50, 82, 87], "represent": [68, 74, 77], "reproduc": [16, 40, 41, 56, 57, 63, 64, 65, 66, 77], "request": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "requir": [18, 22, 35, 36, 50, 75, 86, 87], "requires_grad": [16, 19], "requires_grad_": [6, 7, 8, 9, 16, 19], "research": [70, 78, 86], "reshap": [13, 16], "respect": [23, 47, 63, 64, 65, 66, 87], "response_method": [14, 15, 16, 19, 24], "result": [23, 24, 50, 83], "retain": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "retrain": 76, "return": [6, 20, 22, 23, 26, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "return_dataset": [6, 7, 8, 9, 16, 19, 22, 23, 24, 63, 64, 65, 66], "return_x_i": [63, 64, 65, 66, 87], "reus": [87, 88], "reweight": [11, 16, 17, 18, 19, 31, 33, 37, 40, 42, 43, 48, 49, 50, 60, 61, 65, 86, 89], "ridg": [13, 39], "right": [3, 15, 16, 19, 23, 80, 86], "risk": 39, "robert": 86, "rodriguez": [2, 3, 65], "root": 27, "rot": 20, "rotat": 23, "rout": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "row": [1, 2, 3], "rsda": 82, "rslab": 86, "ruben": [3, 12, 15, 16, 86], "run": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 50, 87], "running_loss": 9, "r\u00e9mi": 86, "s2": [23, 87], "s3": 7, "saenko": [7, 26, 27, 71, 72, 86], "saito": [80, 86], "salt": 19, "same": [1, 2, 3, 4, 12, 13, 16, 19, 23, 32, 34, 38, 41, 43, 49, 50, 51, 76, 87], "sampl": [2, 3, 13, 14, 15, 16, 18, 20, 23, 32, 42, 43, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 32, 34, 38, 41, 43, 49, 51, 54, 55, 63, 64, 65, 66, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "sample_domain_": 18, "sample_domain_lodo": 23, "sample_domain_t": 18, "sample_domain_test": [6, 7, 8, 9, 87], "sample_domain_train": [16, 87], "sample_select": 65, "sample_weight": [15, 18, 19, 86, 87], "save": 20, "save_estim": [12, 30], "save_indic": [12, 30], "savefig": 20, "scalar": 65, "scale": [19, 47, 62], "scatter": [1, 2, 3, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24], "scenario": 87, "sch\u00f6lkopf": [15, 42, 43, 86], "scikit": [18, 23, 39, 75, 87, 88], "scipi": [42, 43, 50], "sclaroff": 86, "score": [6, 7, 8, 12, 14, 19, 22, 24, 54, 55, 76, 77, 78, 79, 80, 81, 86], "scorer": [18, 22, 24, 76, 77, 78, 79, 80, 81, 86, 87], "scores_dict": [15, 16], "scores_no_da": 22, "scores_sup": 22, "script": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "search": [24, 50, 86], "sebban": 86, "second": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "section": [47, 48, 49, 87], "see": [2, 3, 12, 13, 15, 16, 23, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "seed": [1, 2, 3, 4, 19, 20], "seek": 16, "seen": 87, "select": [15, 40, 41, 42, 43, 65, 77, 86, 88], "select_domain": [14, 87], "selector": [18, 75], "selectsourc": 18, "selectsourcetarget": 18, "self": [6, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "semi": [12, 19], "semi_label": 12, "separ": [22, 65, 87], "septemb": [73, 74], "sequenc": [63, 64, 65, 66], "serv": [60, 61, 87], "set": [12, 15, 19, 23, 42, 43, 50, 56, 57, 63, 64, 65, 66, 75, 80, 82, 83, 84, 87, 88], "set_config": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "set_decision_function_request": [54, 55], "set_fit_request": [15, 18, 19, 32, 34, 38, 41, 43, 49, 51, 54, 55, 86], "set_fit_requir": 86, "set_label": 3, "set_partial_fit_request": [54, 55], "set_predict_log_proba_request": [54, 55], "set_predict_proba_request": [54, 55], "set_predict_request": [54, 55], "set_score_request": [54, 55, 76, 77, 78, 79, 80, 81, 87], "set_split_request": [82, 83, 84, 85], "set_titl": [1, 2, 3, 4, 12, 15, 16, 23], "set_transform_request": [32, 34, 38, 41, 43, 49, 51, 54, 55], "set_xlabel": [1, 2, 3, 4], "set_xlim": [12, 15, 16, 19], "set_xtick": [15, 16, 19], "set_ylabel": [1, 2, 3, 4, 19], "set_ylim": [12, 15, 16, 19], "set_ytick": [15, 16, 19], "setup": [10, 11, 71, 72, 89], "sever": [18, 19, 41, 87, 88], "shape": [12, 13, 14, 15, 16, 18, 27, 32, 34, 38, 41, 43, 47, 49, 50, 51, 64, 65, 79, 83], "share": [19, 75, 87], "sharei": [1, 2, 3, 4, 23], "sharex": [1, 2, 3, 4], "shift": [5, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 31, 33, 34, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 56, 58, 60, 62, 63, 64, 65, 66, 78, 86, 87, 88, 89], "shimodaira": [15, 33, 34, 37, 38, 86], "shinichi": 86, "ship": 87, "short": 18, "shorthand": 75, "should": [19, 30, 32, 34, 38, 39, 41, 43, 49, 51, 54, 55, 58, 59, 60, 61, 62, 65, 67, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "show": [1, 2, 3, 4, 12, 13, 15, 16, 19, 22, 23, 24, 50], "showcas": 87, "shown": [87, 88], "shrink": 19, "shrinkag": [26, 27, 37, 38, 62], "shuffl": [64, 82, 84, 85], "shufflesplit": [22, 24, 87, 88], "si": [16, 62, 86], "sigma": [65, 69], "sigma_ch": [4, 66], "sigma_freq": 66, "sigma_regress": 65, "sign": [76, 77, 78, 79, 80, 81], "signal": [4, 15, 50, 51, 66, 86], "signatur": [77, 78, 81], "similar": [80, 87], "similarli": [18, 87], "simpl": [6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 22, 87], "simplest": 87, "simpli": 87, "simplifi": 87, "simultan": 87, "sin": 20, "sinc": [23, 87], "singl": [18, 84, 87], "singleton": 84, "sinkhorn": [14, 28, 29, 35, 36], "sinno": [16, 58, 59], "site": [6, 14], "size": [15, 16, 19, 50, 66, 67, 70, 82], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 21, 25, 87, 88, 89], "skada_logo": 20, "skada_logo_ful": 20, "skada_logo_full_whit": 20, "skip": 87, "sklearn": [12, 13, 14, 15, 16, 18, 19, 22, 24, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "skorch": [6, 7, 8, 86], "small": 77, "smola": [15, 42, 43, 86], "smooth": [15, 42, 43, 50], "smooth_weight": [15, 42, 43], "so": [12, 15, 16, 18, 22, 87], "soft": [80, 86], "softmax": 6, "softneighborhooddens": 87, "sol_": [13, 39], "solid": 19, "solut": [16, 20, 39, 41, 59], "solv": [39, 40, 41], "solver": [14, 15, 20, 28, 29, 42, 43], "some": [0, 15, 16, 32, 34, 38, 41, 43, 49, 50, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "sort": 23, "sourc": [5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "source_idx": 87, "source_mark": [12, 16], "source_scor": 76, "source_target_split": [1, 2, 3, 4, 12, 13, 14, 15, 16, 18, 22], "source_weights_": [43, 49], "sourcetargetselector": 87, "sourcetargetshufflesplit": [18, 23, 86, 87], "sourcetensor": [6, 7, 8, 9, 16, 19], "space": [15, 16, 67, 87], "spars": 50, "spatial": 50, "special": 87, "specif": [18, 20, 66, 68, 87], "specifi": [75, 79], "speed": 50, "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 23], "split": [18, 19, 23, 40, 41, 82, 83, 84, 85, 86, 87, 88], "splitter": [18, 23, 83], "springer": [73, 74, 86], "sqeuclidean": [19, 28, 29, 35, 36, 52, 53], "sqrt": [42, 43], "squar": [12, 27, 39, 50], "stack": 87, "standard": [50, 63, 64, 65, 66, 87], "standardscal": [18, 75, 86, 87], "start": [18, 86, 87, 88], "state": 12, "static": 87, "statist": [15, 33, 34, 37, 38, 86], "std": [13, 18, 22, 66], "step": [9, 12, 14, 16, 19, 30, 75], "still": 87, "stop": [28, 29, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 52, 53, 60, 61, 62], "store": [15, 16, 50, 86], "str": [15, 16, 28, 29, 32, 34, 35, 36, 38, 41, 42, 43, 49, 50, 51, 52, 53, 54, 55, 62, 65, 67, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "straightforward": 87, "strategi": [16, 30, 40, 41, 76, 86], "strategylorenzo": 86, "stratifi": 85, "stratifieddomainshufflesplit": 23, "stride": 9, "string": [42, 43, 50, 75, 78, 81], "structur": 87, "sub": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "subj_1": 87, "subj_12": 87, "subj_3": 87, "subject": [15, 16, 86], "subplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 18, 19, 23], "subplots_adjust": [1, 2, 3, 4, 23], "subsequ": [18, 86], "subspac": [2, 3, 11, 17, 19, 56, 57, 58, 59, 60, 62, 65, 86, 89], "subspace_estim": 16, "subspacealign": [16, 19, 86], "subspacealignmentadapt": [19, 56, 87], "sugiyama": [15, 40, 41, 78, 86], "suit": [15, 87], "sum": [12, 79], "sun": [7, 16, 26, 27, 60, 61, 71, 72, 86], "supervis": [22, 81, 83, 87], "supervisedscor": [22, 87, 88], "support": [13, 73, 74], "suptitl": [1, 2, 3, 4, 12, 15, 16, 23], "sure": 12, "suzuki": [15, 86], "svc": [12, 14, 16, 18, 19, 22, 24, 28, 30], "svg": 20, "svm": [12, 13, 14, 16, 18, 19, 22, 24], "synthet": 19, "system": [13, 39, 86], "t": [2, 3, 7, 13, 14, 15, 16, 19, 22, 23, 24, 47, 50, 65, 80, 86, 87], "t10k": 7, "t2": [23, 87], "tab10": [1, 2, 13, 14, 18, 20], "taiji": 86, "takafumi": 86, "take": [15, 18, 50, 87], "taken": [12, 19, 41, 63, 64, 65, 66], "tao": [16, 62, 86], "tar": [19, 86], "target": [5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 72, 74, 76, 78, 82, 83, 84, 86, 87, 88, 89], "target_criterion": [68, 73, 74], "target_idx": 87, "target_label": [22, 23, 81, 87], "target_mark": [12, 16], "target_shift": [2, 3, 19, 65], "targetaccuracyscor": [22, 87, 88], "task": [6, 7, 8, 9, 13, 14, 39], "tca": [16, 19, 86], "team": 86, "techniqu": [12, 30, 76, 86], "temperatur": 80, "tensor": [6, 7, 8, 9, 16, 19], "term": [73, 74], "test": [0, 15, 19, 23, 82, 83, 84, 85, 86, 88], "test_cv": 87, "test_index": [82, 85], "test_map": 87, "test_offic": 87, "test_pipelin": 87, "test_reweight": 87, "test_samples_gener": 87, "test_scor": 87, "test_siz": [22, 24, 82, 83, 84, 85, 87, 88], "test_subspac": 87, "teterwak": 86, "text": [12, 13, 14, 15, 16, 18, 19, 20, 23], "textsf": 20, "than": [6, 7, 8, 9, 13, 15, 16, 19, 50], "thei": [12, 22, 23, 87], "them": [50, 87], "theme": 87, "theoret": 39, "therefor": 75, "theta": 20, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 30, 32, 34, 38, 39, 41, 43, 49, 50, 51, 54, 55, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "those": [12, 15, 18, 50, 87], "though": 87, "threshold": [28, 29, 61, 62], "through": 74, "thu": [12, 15, 16, 23, 50], "th\u00e9o": [6, 7, 8, 9, 86], "tight": 20, "tight_layout": [16, 19, 23], "time": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 75], "titl": [2, 3, 13, 14, 18], "tjm": [16, 60, 61], "todo": 9, "togeth": [75, 87], "tol": [19, 22, 28, 29, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 60, 61, 62], "toler": [39, 40, 41, 42, 43, 46, 47, 48, 49], "tool": 87, "toolbox": [20, 86], "torch": [6, 7, 8, 16, 19, 67, 68, 70, 71, 73, 74], "torr": [2, 3, 65], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 63, 64, 65, 66, 89], "toward": [77, 86], "tr": 23, "trade": [39, 60, 61], "tradeoff": [16, 60, 61], "train": [10, 11, 12, 14, 15, 16, 18, 19, 22, 23, 67, 70, 71, 72, 73, 82, 83, 84, 85, 86, 87, 88, 89], "train_index": [82, 85], "train_loss": [6, 7, 8, 9], "train_siz": [82, 83, 84, 85], "train_split": [6, 7, 8, 9], "train_test_split": 77, "tran": 86, "transact": [14, 16, 28, 29, 30, 35, 36, 44, 52, 53, 58, 59, 62, 76, 86], "transfer": [58, 59, 60, 61, 62, 69, 86], "transfercomponentanalysi": [16, 19], "transfercomponentanalysisadapt": [19, 58, 87], "transferjointmatch": 16, "transferjointmatchingadapt": 60, "transfersubspacelearn": [16, 19], "transfersubspacelearningadapt": 19, "transform": [14, 16, 18, 32, 34, 38, 41, 43, 47, 49, 51, 54, 55, 75, 86, 87], "translat": [64, 65], "transpar": [19, 20], "transport": [10, 11, 13, 17, 28, 29, 35, 36, 39, 44, 45, 52, 53, 65, 73, 74, 75, 86, 89], "tree": 50, "tri": [15, 68], "trigger": 75, "true": [6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 30, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 54, 55, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "try": [7, 15], "tsang": 86, "tsl": [16, 19], "tt": 23, "tuia": [14, 28, 29, 35, 36, 44, 52, 53, 73, 74, 86], "tune": [80, 86], "tupl": [63, 64, 65, 66, 75, 87], "tuytelaar": 86, "tw": 7, "two": [15, 16, 20, 50, 61, 62, 86, 87, 88], "type": [2, 3, 23, 75, 86], "typic": [67, 87], "u": [14, 23], "ubyt": 7, "unchang": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "under": [15, 33, 34, 37, 38, 46, 47, 48, 49, 86], "under_sampl": 82, "understand": 75, "unifi": [2, 3, 65, 86], "uniform": [19, 50, 51], "uniniti": [73, 74], "uninstanti": [67, 70], "uniqu": [1, 87], "unit": 67, "unitn": 86, "unlabel": [15, 42, 43, 86], "unless": 50, "unpredict": 39, "unseen": 87, "unsupervis": [16, 26, 27, 56, 57, 60, 61, 73, 74, 77, 79, 80, 86], "up": 84, "updat": [20, 32, 34, 38, 41, 43, 49, 51, 54, 55, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "update_predict": 87, "upper": [42, 43], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 21, 23, 25, 32, 34, 41, 49, 51, 57, 59, 61, 67, 68, 74, 76, 77, 80, 86, 87, 88, 89], "usag": 87, "user": [32, 34, 38, 41, 43, 49, 50, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "userwarn": [1, 6, 7, 8, 9, 14, 16, 19, 20], "usetex": 20, "usp": [6, 7, 8, 9], "ustinova": 86, "util": [15, 16, 19, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "v": [2, 3, 15, 16, 65, 86], "va": 23, "val": 86, "valid": [22, 25, 30, 40, 41, 50, 65, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89], "valu": [3, 12, 19, 26, 27, 30, 35, 36, 37, 38, 39, 50, 52, 53, 61, 62, 64, 65, 79, 80, 82, 87], "var_smooth": 75, "variabl": 83, "variat": 39, "vector": [13, 50], "verbos": [13, 19, 39, 61, 62, 75], "veri": 23, "version": [32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "vertic": 23, "via": [1, 16, 20, 58, 59, 68, 80, 86], "view": [2, 3, 65], "vision": [16, 26, 27, 56, 57, 60, 61, 73, 74, 80, 86], "visit": 86, "visual": [11, 16, 18, 25, 56, 57, 65, 82, 83, 84, 85, 86, 89], "visualis": 4, "vmax": [1, 2, 3, 12, 13, 14, 18, 20, 23], "vmin": [12, 23], "vo": 20, "von": [15, 86], "vor": 20, "vstack": 20, "w": [15, 20, 41, 43, 47, 86], "w_": 47, "wa": [1, 4, 63, 64, 65, 66], "wai": [80, 86, 87, 88], "wang": [16, 60, 61, 86], "want": [14, 50], "warn": [14, 19, 24, 86], "wasserstein": [28, 29, 35, 36, 52, 53], "we": [2, 3, 13, 14, 18, 20, 23, 50, 65, 86, 87, 88], "webcam": 87, "webcam_idx": 87, "weight": [15, 18, 19, 31, 32, 33, 34, 37, 38, 42, 43, 49, 50, 51, 68, 77, 78, 86, 87], "weight_estim": [15, 19, 31, 32, 78], "weight_estimator_source_": [32, 51, 78], "weight_estimator_target_": [32, 51, 78], "well": [12, 15, 18, 50, 87], "were": [12, 87], "what": [14, 18], "when": [12, 15, 16, 18, 30, 49, 50, 60, 61, 62, 63, 64, 65, 66, 75, 87], "where": [12, 47, 63, 64, 65, 66, 83, 86, 87], "whether": [76, 77, 78, 79, 80, 81], "which": [12, 14, 15, 16, 18, 23, 50, 65, 66, 86, 87], "while": [12, 13, 15, 23, 39, 75, 83, 84, 87, 88], "whole": 18, "whose": [67, 70, 71, 73], "width": 87, "with_mean": 75, "with_std": 75, "within": [75, 87], "without": [9, 12, 15, 16, 19, 20, 22, 86, 87], "wolf": [15, 26, 27, 37, 38, 42, 43], "won": [15, 16, 87], "work": [15, 16, 18, 32, 34, 38, 41, 43, 49, 50, 51, 54, 55, 67, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "workflow": 87, "workshop": [7, 15, 50, 51, 71, 72, 86], "would": [86, 87], "wrap": [18, 75], "wrapper": 18, "www": [7, 15], "x": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 32, 34, 38, 41, 43, 47, 49, 50, 51, 63, 64, 65, 66, 78, 81, 82, 83, 85, 86, 87, 88], "x0": [16, 19], "x_": [12, 16], "x_adapt": 14, "x_adapted_classreg": 14, "x_adapted_linear": 14, "x_adapted_sinkhorn": 14, "x_dict": 9, "x_lodo": 23, "x_max": [15, 16, 19], "x_min": [15, 16, 19], "x_point": 12, "x_sourc": [1, 2, 3, 4, 14, 22], "x_source_": [43, 47, 49, 59], "x_source_adapt": 14, "x_source_adapted_classreg": 14, "x_source_adapted_linear": 14, "x_source_adapted_sinkhorn": 14, "x_subj1": 87, "x_subj12": 87, "x_subj3": 87, "x_t": 12, "x_target": [1, 2, 3, 4, 14, 22, 24, 87, 88], "x_target_": 59, "x_test": [6, 7, 8, 9, 87], "x_train": [16, 87], "xclass": 20, "xlabel": [22, 24], "xlim": [12, 23], "xs_subspac": 16, "xt": [12, 13, 15, 16, 18, 19, 20, 86], "xt2": 20, "xt_adapt": 16, "xt_subspac": 16, "xx": 13, "xxx": 85, "y": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 32, 34, 38, 41, 43, 47, 49, 51, 63, 64, 65, 66, 76, 77, 78, 81, 82, 83, 85, 86, 87, 88], "y_": [16, 68, 69, 72, 74], "y_lodo": 23, "y_max": [15, 16, 19], "y_min": [15, 16, 19], "y_point": 12, "y_pred": [76, 77], "y_pred_": [68, 69, 72, 74], "y_pred_t": [68, 69, 72, 74], "y_sourc": [1, 2, 3, 4, 14, 22], "y_subj1": 87, "y_subj12": 87, "y_subj3": 87, "y_target": [1, 2, 3, 4, 14, 22, 24, 87, 88], "y_test": [6, 7, 8, 9, 87], "y_train": [16, 87], "y_true": 77, "yang": 86, "yani": [23, 86], "yann": 7, "yaroslav": 70, "yerr": 22, "yet": 86, "yield": 83, "ylabel": 24, "ylim": [12, 23], "you": [14, 18, 32, 34, 38, 41, 43, 49, 51, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "your": 87, "ypred": 86, "ys_pred": 13, "yt": [12, 13, 15, 16, 18, 19, 20], "yt_pred": [13, 18], "ytick": [22, 23], "yticklabel": 23, "yu": [16, 60, 61, 86], "yy": 13, "z": [13, 86], "zero": [9, 20], "zero_grad": 9, "zhang": [46, 47, 48, 49, 86], "zip": [11, 19, 85], "zjdot": 13, "zorder": 20}, "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Subspace method example on subspace shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "skada.CORAL", "skada.CORALAdapter", "skada.ClassRegularizerOTMapping", "skada.ClassRegularizerOTMappingAdapter", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DensityReweightAdapter", "skada.DiscriminatorReweight", "skada.DiscriminatorReweightAdapter", "skada.EntropicOTMapping", "skada.EntropicOTMappingAdapter", "skada.GaussianReweight", "skada.GaussianReweightAdapter", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.KLIEPReweightAdapter", "skada.KMMReweight", "skada.KMMReweightAdapter", "skada.LinearOTMapping", "skada.LinearOTMappingAdapter", "skada.MMDLSConSMapping", "skada.MMDLSConSMappingAdapter", "skada.MMDTarSReweight", "skada.MMDTarSReweightAdapter", "skada.NearestNeighborReweight", "skada.NearestNeighborReweightAdapter", "skada.OTMapping", "skada.OTMappingAdapter", "skada.PerDomain", "skada.Shared", "skada.SubspaceAlignment", "skada.SubspaceAlignmentAdapter", "skada.TransferComponentAnalysis", "skada.TransferComponentAnalysisAdapter", "skada.TransferJointMatching", "skada.TransferJointMatchingAdapter", "skada.TransferSubspaceLearning", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "SKADA: SciKit Domain Adaptation", "Users Guide", "Metrics: Compute score for domain adaptation problems", "Computation times"], "titleterms": {"2": [12, 15, 16], "2d": [12, 15, 16], "The": [15, 16], "acknowledg": 86, "adapt": [6, 7, 8, 11, 14, 15, 16, 18, 86, 87, 88], "advanc": 18, "adversari": 6, "algorithm": 86, "align": [0, 16], "analysi": 16, "api": 0, "behavior": 23, "between": [15, 16], "cdan": 67, "cdanloss": 68, "circularvalid": 76, "class": [12, 15, 16], "classic": [6, 7, 8], "classif": [13, 19], "classifi": [12, 13, 18], "classregularizerotmap": 28, "classregularizerotmappingadapt": 29, "comparison": [15, 16, 19], "compon": 16, "comput": [5, 10, 17, 21, 25, 88, 89], "concept": [13, 14], "content": 86, "coral": 26, "coraladapt": 27, "covari": 15, "cross": [18, 23], "cross_val_scor": 22, "da": [0, 9, 11, 14, 18, 19, 86, 87], "danloss": 69, "dann": [6, 70], "dasvm": 12, "dasvmclassifi": [12, 30], "data": 13, "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 63, 64, 65, 66, 87], "deep": [0, 9, 11, 67, 68, 69, 70, 71, 72, 73, 74, 86], "deepcor": [7, 71], "deepcoralloss": 72, "deepembeddedvalid": 77, "deepjdot": [8, 73], "deepjdotloss": 74, "densiti": 15, "densityreweight": 31, "densityreweightadapt": 32, "differ": 14, "discr": 15, "discriminatorreweight": 33, "discriminatorreweightadapt": 34, "diverg": 7, "doe": 14, "domain": [1, 2, 3, 4, 6, 7, 8, 11, 14, 15, 16, 86, 87, 88], "domainshufflesplit": 82, "drift": [13, 14], "entropicotmap": 35, "entropicotmappingadapt": 36, "estim": [18, 87], "exampl": [11, 12, 13, 15, 16, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 58, 60, 62, 63, 65, 66, 70, 71, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86], "full": 20, "galleri": 11, "gaussian": 15, "gaussianreweight": 37, "gaussianreweightadapt": 38, "gener": [12, 13, 14, 15, 16, 20], "grid": 18, "gridsearchcv": 24, "guid": 87, "how": [14, 18], "illustr": [13, 14, 15, 16], "imag": [6, 7, 8, 9], "implement": 86, "importanceweightedscor": 78, "indic": 86, "instal": 86, "jdot": 13, "jdotregressor": 39, "joint": 16, "kernel": 15, "kliepreweight": [15, 40], "kliepreweightadapt": 41, "kmmreweight": 42, "kmmreweightadapt": 43, "label": 12, "learn": [0, 11, 16, 86], "leaveonedomainout": 83, "licens": 86, "linearotmap": 44, "linearotmappingadapt": 45, "load": [6, 7, 8, 9], "logo": 20, "main": 0, "make_da_pipelin": 75, "make_dataset_from_moons_distribut": 63, "make_shifted_blob": 64, "make_shifted_dataset": 65, "make_variable_frequency_dataset": 66, "map": 0, "match": [15, 16], "mean": 15, "method": [0, 6, 7, 8, 9, 11, 14, 15, 16, 19], "metric": [0, 76, 77, 78, 79, 80, 81, 86, 87, 88], "mmdlsconsmap": 46, "mmdlsconsmappingadapt": 47, "mmdtarsreweight": 48, "mmdtarsreweightadapt": 49, "model": [0, 6, 7, 8, 87], "model_select": [0, 82, 83, 84, 85], "modul": 0, "nearest": 15, "nearestneighborreweight": 50, "nearestneighborreweightadapt": 51, "neighbor": 15, "optim": [8, 14], "ot": 13, "otda": 14, "other": 0, "otmap": 52, "otmappingadapt": 53, "our": [12, 15, 16], "paramet": 9, "perdomain": 54, "pipelin": [0, 18, 87], "plan": 13, "plot": [1, 2, 3, 4, 12, 13, 15, 16, 20], "predictionentropyscor": 79, "problem": [14, 15, 16, 88], "procedur": 11, "pytorch": 86, "refer": 86, "regress": 13, "regressor": 13, "reweight": [0, 15], "sampl": [0, 87], "scikit": 86, "score": [15, 16, 18, 87, 88], "search": 18, "select": [0, 87], "selector": 87, "setup": 9, "share": 55, "shift": [1, 2, 3, 4, 15, 16], "short": 86, "skada": [0, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "skorch": 9, "small": 20, "softneighborhooddens": 80, "sourc": [1, 2, 3, 4, 13], "sourcetargetshufflesplit": 84, "splitter": 87, "stratifieddomainshufflesplit": 85, "subspac": 16, "subspacealign": 56, "subspacealignmentadapt": 57, "supervisedscor": 81, "svc": 13, "tabl": 86, "target": [1, 2, 3, 4, 12], "test": 87, "time": [5, 10, 17, 21, 25, 87, 89], "torch": 9, "train": [6, 7, 8, 9, 13], "transfer": 16, "transfercomponentanalysi": 58, "transfercomponentanalysisadapt": 59, "transferjointmatch": 60, "transferjointmatchingadapt": 61, "transfersubspacelearn": 62, "transport": [8, 14], "us": [18, 22, 24, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 58, 60, 62, 63, 65, 66, 70, 71, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85], "usag": 12, "user": 87, "util": 0, "valid": [11, 18, 23], "visual": 23, "we": [12, 15, 16], "white": 20, "work": 14}})