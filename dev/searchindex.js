Search.setIndex({"alltitles": {"API and modules": [[0, null]], "Acknowledgements": [[109, "acknowledgements"]], "Adapter": [[110, "adapter"]], "Adapters and Estimators": [[110, "adapters-and-estimators"]], "Advanced DA pipeline": [[20, "advanced-da-pipeline"]], "Adversarial domain adaptation methods.": [[6, null]], "Comparison of DA classification methods": [[21, null]], "Comparison of score between reweighting methods:": [[17, "comparison-of-score-between-reweighting-methods"]], "Comparison of score between subspace methods:": [[18, "comparison-of-score-between-subspace-methods"]], "Computation times": [[5, null], [10, null], [19, null], [23, null], [27, null], [113, null]], "Contents": [[109, "contents"]], "Contributing to SKADA": [[28, null]], "DA Adapter pipeline": [[20, "da-adapter-pipeline"]], "DA Classifier estimator": [[20, "da-classifier-estimator"]], "DA dataset": [[20, "da-dataset"]], "DA estimator in a pipeline": [[20, "da-estimator-in-a-pipeline"]], "DA estimator with grid search": [[20, "da-estimator-with-grid-search"]], "DA estimators with score cross-validation": [[20, "da-estimators-with-score-cross-validation"]], "DA methods": [[11, "da-methods"]], "DA metrics": [[109, "da-metrics"]], "DA metrics skada.metrics": [[0, "module-skada.metrics"]], "DA pipeline": [[0, "da-pipeline"]], "DA validation procedures": [[11, "da-validation-procedures"]], "DASVM classifier example": [[12, null]], "Dataset": [[110, "dataset"]], "Datasets skada.datasets": [[0, "module-skada.datasets"]], "Deep learning DA methods": [[0, "deep-learning-da-methods"], [11, "deep-learning-da-methods"]], "Deep learning DA skada.deep:": [[0, "module-skada.deep"]], "Deep learning domain adaptation algorithms": [[109, "deep-learning-domain-adaptation-algorithms"]], "Different OTDA methods": [[16, "different-otda-methods"]], "Divergence domain adaptation methods.": [[7, null]], "Documentation": [[28, "documentation"]], "Domain Adaptation Datasets": [[11, "domain-adaptation-datasets"]], "Domain adaptation algorithms": [[109, "domain-adaptation-algorithms"]], "Examples gallery": [[11, null]], "Examples using skada.CORAL": [[29, "examples-using-skada-coral"]], "Examples using skada.CORALAdapter": [[30, "examples-using-skada-coraladapter"]], "Examples using skada.ClassRegularizerOTMapping": [[31, "examples-using-skada-classregularizerotmapping"]], "Examples using skada.ClassRegularizerOTMappingAdapter": [[32, "examples-using-skada-classregularizerotmappingadapter"]], "Examples using skada.DASVMClassifier": [[33, "examples-using-skada-dasvmclassifier"]], "Examples using skada.DensityReweight": [[34, "examples-using-skada-densityreweight"]], "Examples using skada.DiscriminatorReweight": [[36, "examples-using-skada-discriminatorreweight"]], "Examples using skada.EntropicOTMapping": [[38, "examples-using-skada-entropicotmapping"]], "Examples using skada.EntropicOTMappingAdapter": [[39, "examples-using-skada-entropicotmappingadapter"]], "Examples using skada.GaussianReweight": [[40, "examples-using-skada-gaussianreweight"]], "Examples using skada.GaussianReweightAdapter": [[41, "examples-using-skada-gaussianreweightadapter"]], "Examples using skada.JDOTRegressor": [[42, "examples-using-skada-jdotregressor"]], "Examples using skada.KLIEPReweight": [[43, "examples-using-skada-kliepreweight"]], "Examples using skada.KMMReweight": [[45, "examples-using-skada-kmmreweight"]], "Examples using skada.KMMReweightAdapter": [[46, "examples-using-skada-kmmreweightadapter"]], "Examples using skada.LinearOTMapping": [[47, "examples-using-skada-linearotmapping"]], "Examples using skada.LinearOTMappingAdapter": [[48, "examples-using-skada-linearotmappingadapter"]], "Examples using skada.MMDLSConSMapping": [[49, "examples-using-skada-mmdlsconsmapping"]], "Examples using skada.MMDTarSReweight": [[51, "examples-using-skada-mmdtarsreweight"]], "Examples using skada.NearestNeighborReweight": [[53, "examples-using-skada-nearestneighborreweight"]], "Examples using skada.OTMapping": [[55, "examples-using-skada-otmapping"]], "Examples using skada.OTMappingAdapter": [[56, "examples-using-skada-otmappingadapter"]], "Examples using skada.PerDomain": [[57, "examples-using-skada-perdomain"]], "Examples using skada.SelectSource": [[58, "examples-using-skada-selectsource"]], "Examples using skada.Shared": [[60, "examples-using-skada-shared"]], "Examples using skada.SubspaceAlignment": [[61, "examples-using-skada-subspacealignment"]], "Examples using skada.TransferComponentAnalysis": [[63, "examples-using-skada-transfercomponentanalysis"]], "Examples using skada.TransferJointMatching": [[65, "examples-using-skada-transferjointmatching"]], "Examples using skada.TransferSubspaceLearning": [[67, "examples-using-skada-transfersubspacelearning"]], "Examples using skada.datasets.make_dataset_from_moons_distribution": [[68, "examples-using-skada-datasets-make-dataset-from-moons-distribution"]], "Examples using skada.datasets.make_shifted_datasets": [[70, "examples-using-skada-datasets-make-shifted-datasets"]], "Examples using skada.datasets.make_variable_frequency_dataset": [[71, "examples-using-skada-datasets-make-variable-frequency-dataset"]], "Examples using skada.deep.DANN": [[77, "examples-using-skada-deep-dann"]], "Examples using skada.deep.DeepCoral": [[78, "examples-using-skada-deep-deepcoral"]], "Examples using skada.deep.DeepCoralLoss": [[79, "examples-using-skada-deep-deepcoralloss"]], "Examples using skada.deep.DeepJDOT": [[80, "examples-using-skada-deep-deepjdot"]], "Examples using skada.make_da_pipeline": [[91, "examples-using-skada-make-da-pipeline"]], "Examples using skada.metrics.ImportanceWeightedScorer": [[94, "examples-using-skada-metrics-importanceweightedscorer"]], "Examples using skada.metrics.PredictionEntropyScorer": [[96, "examples-using-skada-metrics-predictionentropyscorer"]], "Examples using skada.metrics.SupervisedScorer": [[98, "examples-using-skada-metrics-supervisedscorer"]], "Examples using skada.model_selection.DomainShuffleSplit": [[99, "examples-using-skada-model-selection-domainshufflesplit"]], "Examples using skada.model_selection.LeaveOneDomainOut": [[100, "examples-using-skada-model-selection-leaveonedomainout"]], "Examples using skada.model_selection.SourceTargetShuffleSplit": [[101, "examples-using-skada-model-selection-sourcetargetshufflesplit"]], "Examples using skada.model_selection.StratifiedDomainShuffleSplit": [[102, "examples-using-skada-model-selection-stratifieddomainshufflesplit"]], "Examples using skada.source_target_split": [[104, "examples-using-skada-source-target-split"]], "Examples using skada.utils.extract_source_indices": [[107, "examples-using-skada-utils-extract-source-indices"]], "Filing bugs": [[28, "filing-bugs"]], "Generate classification classification dataset and plot it": [[14, "generate-classification-classification-dataset-and-plot-it"]], "Generate concept drift classification dataset and plot it": [[13, "generate-concept-drift-classification-dataset-and-plot-it"], [14, "generate-concept-drift-classification-dataset-and-plot-it"], [15, "generate-concept-drift-classification-dataset-and-plot-it"]], "Generate concept drift dataset": [[16, "generate-concept-drift-dataset"]], "Generate concept drift regression dataset and plot it": [[13, "generate-concept-drift-regression-dataset-and-plot-it"], [14, "generate-concept-drift-regression-dataset-and-plot-it"]], "How does OTDA works?": [[16, "how-does-otda-works"]], "How to contribute": [[28, "how-to-contribute"]], "How to use SKADA": [[20, null]], "Illustration of the DA problem": [[16, "illustration-of-the-da-problem"]], "Illustration of the Density Reweighting method": [[17, "illustration-of-the-density-reweighting-method"]], "Illustration of the Discr. reweighting method": [[17, "illustration-of-the-discr-reweighting-method"]], "Illustration of the Gaussian reweighting method": [[17, "illustration-of-the-gaussian-reweighting-method"]], "Illustration of the KLIEPReweight method": [[17, "illustration-of-the-kliepreweight-method"]], "Illustration of the Kernel Mean Matching method": [[17, "illustration-of-the-kernel-mean-matching-method"]], "Illustration of the Nearest Neighbor reweighting method": [[17, "illustration-of-the-nearest-neighbor-reweighting-method"]], "Illustration of the OT plan": [[13, "illustration-of-the-ot-plan"]], "Illustration of the Subspace Alignment method": [[18, "illustration-of-the-subspace-alignment-method"]], "Illustration of the Transfer Component Analysis method": [[18, "illustration-of-the-transfer-component-analysis-method"]], "Illustration of the Transfer Joint Matching method": [[18, "illustration-of-the-transfer-joint-matching-method"]], "Illustration of the Transfer Subspace Learning method": [[18, "illustration-of-the-transfer-subspace-learning-method"]], "Illustration of the problem with no domain adaptation": [[17, "illustration-of-the-problem-with-no-domain-adaptation"], [18, "illustration-of-the-problem-with-no-domain-adaptation"]], "Illustration of the propagated labels": [[14, "illustration-of-the-propagated-labels"], [14, "id3"]], "Implemented algorithms": [[109, "implemented-algorithms"]], "Indices and tables": [[109, "indices-and-tables"]], "Installation": [[109, "installation"]], "JDOT Regressor and Classifier examples": [[13, null]], "Label Propagation methods": [[14, null]], "Labeling the target dataset": [[12, "labeling-the-target-dataset"]], "License": [[109, "license"]], "Load the image datasets": [[6, "load-the-image-datasets"], [7, "load-the-image-datasets"], [8, "load-the-image-datasets"], [9, "load-the-image-datasets"]], "Main module skada": [[0, "module-skada"]], "Metrics for DA": [[110, "metrics-for-da"]], "Metrics: Compute score for domain adaptation problems": [[112, null]], "Model Selection": [[110, "model-selection"]], "Model Selection skada.model_selection": [[0, "module-skada.model_selection"]], "Multi-domain Linear Monge Alignment": [[15, null]], "New contributor tips": [[28, "new-contributor-tips"]], "Optimal Transport Domain Adaptation": [[16, "optimal-transport-domain-adaptation"]], "Optimal Transport Domain Adaptation (OTDA)": [[16, null]], "Optimal transport domain adaptation methods.": [[8, null]], "Other DA methods": [[0, "other-da-methods"]], "Pipeline": [[110, "pipeline"]], "Plot dataset source domain and shifted target domain": [[1, null], [2, null], [3, null], [4, null]], "Plot of the dataset:": [[17, "plot-of-the-dataset"], [18, "plot-of-the-dataset"]], "Plots of the dataset": [[12, "plots-of-the-dataset"]], "Pull Request Checklist": [[28, "pull-request-checklist"]], "References": [[109, "references"]], "Release of SKADA": [[111, null]], "Reweighting Methods": [[17, "reweighting-methods"]], "Reweighting method example on covariate shift dataset": [[17, null]], "SKADA - Domain Adaptation with scikit-learn and PyTorch": [[109, "skada-domain-adaptation-with-scikit-learn-and-pytorch"]], "SKADA deep learning DA losses": [[0, "skada-deep-learning-da-losses"]], "SKADA logo generation": [[22, null]], "SKADA: SciKit Domain Adaptation": [[109, null]], "Sample Domain": [[110, "sample-domain"]], "Sample mapping and alignment DA methods": [[0, "sample-mapping-and-alignment-da-methods"]], "Sample reweighting DA methods": [[0, "sample-reweighting-da-methods"]], "Scoring": [[110, "scoring"]], "Selector": [[110, "selector"]], "Short examples": [[109, "short-examples"]], "Skada v0.4.0": [[111, "skada-v0-4-0"]], "Splitters": [[110, "splitters"]], "Subspace method example on subspace shift dataset": [[18, null]], "Test-time Domain Adaptation": [[110, "test-time-domain-adaptation"]], "The subspaces methods": [[18, "the-subspaces-methods"]], "Torch compatible DA losses in skada.deep.losses": [[0, "module-skada.deep.losses"]], "Train a DANN model": [[6, "train-a-dann-model"]], "Train a DeepCoral model": [[7, "train-a-deepcoral-model"]], "Train a DeepJDOT model": [[8, "train-a-deepjdot-model"]], "Train a classic model": [[6, "train-a-classic-model"], [7, "train-a-classic-model"], [8, "train-a-classic-model"]], "Train a classifier on adapted data": [[15, "train-a-classifier-on-adapted-data"], [15, "id1"]], "Train a classifier on source data": [[13, "train-a-classifier-on-source-data"], [14, "train-a-classifier-on-source-data"], [15, "train-a-classifier-on-source-data"]], "Train a regressor on source data": [[13, "train-a-regressor-on-source-data"], [14, "train-a-regressor-on-source-data"]], "Train the full Labe Propagation model": [[14, "train-the-full-labe-propagation-model"]], "Train with JDOT classifier": [[13, "train-with-jdot-classifier"]], "Train with JDOT classifier with SVC": [[13, "train-with-jdot-classifier-with-svc"]], "Train with JDOT regressor": [[13, "train-with-jdot-regressor"]], "Train with LabelProp + classifier": [[14, "train-with-labelprop-classifier"]], "Train with LabelProp and JCPOT + classifier": [[14, "train-with-labelprop-and-jcpot-classifier"]], "Training parameters": [[9, "training-parameters"]], "Training setup for deep DA method.": [[9, null]], "Training with skorch": [[9, "training-with-skorch"]], "Training with skorch with dataset": [[9, "training-with-skorch-with-dataset"]], "Training with torch": [[9, "training-with-torch"]], "Usage of the DASVMClassifier": [[12, "usage-of-the-dasvmclassifier"]], "Users Guide": [[110, null]], "Using GridSearchCV with skada": [[26, null]], "Using cross_val_score with skada": [[24, null]], "Utilities": [[0, "utilities"]], "Utilities skada.utils": [[0, "module-skada.utils"]], "Visualizing cross-validation behavior in skada": [[25, null]], "We generate our 2D dataset with 2 classes": [[12, "we-generate-our-2d-dataset-with-2-classes"], [17, "we-generate-our-2d-dataset-with-2-classes"], [18, "we-generate-our-2d-dataset-with-2-classes"]], "What's Changed": [[111, "what-s-changed"]], "skada.CORAL": [[29, null]], "skada.CORALAdapter": [[30, null]], "skada.ClassRegularizerOTMapping": [[31, null]], "skada.ClassRegularizerOTMappingAdapter": [[32, null]], "skada.DASVMClassifier": [[33, null]], "skada.DensityReweight": [[34, null]], "skada.DensityReweightAdapter": [[35, null]], "skada.DiscriminatorReweight": [[36, null]], "skada.DiscriminatorReweightAdapter": [[37, null]], "skada.EntropicOTMapping": [[38, null]], "skada.EntropicOTMappingAdapter": [[39, null]], "skada.GaussianReweight": [[40, null]], "skada.GaussianReweightAdapter": [[41, null]], "skada.JDOTRegressor": [[42, null]], "skada.KLIEPReweight": [[43, null]], "skada.KLIEPReweightAdapter": [[44, null]], "skada.KMMReweight": [[45, null]], "skada.KMMReweightAdapter": [[46, null]], "skada.LinearOTMapping": [[47, null]], "skada.LinearOTMappingAdapter": [[48, null]], "skada.MMDLSConSMapping": [[49, null]], "skada.MMDLSConSMappingAdapter": [[50, null]], "skada.MMDTarSReweight": [[51, null]], "skada.MMDTarSReweightAdapter": [[52, null]], "skada.NearestNeighborReweight": [[53, null]], "skada.NearestNeighborReweightAdapter": [[54, null]], "skada.OTMapping": [[55, null]], "skada.OTMappingAdapter": [[56, null]], "skada.PerDomain": [[57, null]], "skada.SelectSource": [[58, null]], "skada.SelectTarget": [[59, null]], "skada.Shared": [[60, null]], "skada.SubspaceAlignment": [[61, null]], "skada.SubspaceAlignmentAdapter": [[62, null]], "skada.TransferComponentAnalysis": [[63, null]], "skada.TransferComponentAnalysisAdapter": [[64, null]], "skada.TransferJointMatching": [[65, null]], "skada.TransferJointMatchingAdapter": [[66, null]], "skada.TransferSubspaceLearning": [[67, null]], "skada.datasets.make_dataset_from_moons_distribution": [[68, null]], "skada.datasets.make_shifted_blobs": [[69, null]], "skada.datasets.make_shifted_datasets": [[70, null]], "skada.datasets.make_variable_frequency_dataset": [[71, null]], "skada.deep.CAN": [[72, null]], "skada.deep.CANLoss": [[73, null]], "skada.deep.CDAN": [[74, null]], "skada.deep.CDANLoss": [[75, null]], "skada.deep.DANLoss": [[76, null]], "skada.deep.DANN": [[77, null]], "skada.deep.DeepCoral": [[78, null]], "skada.deep.DeepCoralLoss": [[79, null]], "skada.deep.DeepJDOT": [[80, null]], "skada.deep.DeepJDOTLoss": [[81, null]], "skada.deep.MCC": [[82, null]], "skada.deep.MCCLoss": [[83, null]], "skada.deep.MDD": [[84, null]], "skada.deep.MDDLoss": [[85, null]], "skada.deep.losses.cdd_loss": [[86, null]], "skada.deep.losses.dan_loss": [[87, null]], "skada.deep.losses.deepcoral_loss": [[88, null]], "skada.deep.losses.deepjdot_loss": [[89, null]], "skada.deep.losses.mcc_loss": [[90, null]], "skada.make_da_pipeline": [[91, null]], "skada.metrics.CircularValidation": [[92, null]], "skada.metrics.DeepEmbeddedValidation": [[93, null]], "skada.metrics.ImportanceWeightedScorer": [[94, null]], "skada.metrics.MixValScorer": [[95, null]], "skada.metrics.PredictionEntropyScorer": [[96, null]], "skada.metrics.SoftNeighborhoodDensity": [[97, null]], "skada.metrics.SupervisedScorer": [[98, null]], "skada.model_selection.DomainShuffleSplit": [[99, null]], "skada.model_selection.LeaveOneDomainOut": [[100, null]], "skada.model_selection.SourceTargetShuffleSplit": [[101, null]], "skada.model_selection.StratifiedDomainShuffleSplit": [[102, null]], "skada.per_domain_split": [[103, null]], "skada.source_target_split": [[104, null]], "skada.utils.check_X_y_domain": [[105, null]], "skada.utils.extract_domains_indices": [[106, null]], "skada.utils.extract_source_indices": [[107, null]], "skada.utils.source_target_merge": [[108, null]]}, "docnames": ["all", "auto_examples/datasets/plot_dataset_from_moons_distribution", "auto_examples/datasets/plot_shifted_dataset", "auto_examples/datasets/plot_shifted_dataset_regression", "auto_examples/datasets/plot_variable_frequency_dataset", "auto_examples/datasets/sg_execution_times", "auto_examples/deep/plot_adversarial", "auto_examples/deep/plot_divergence", "auto_examples/deep/plot_optimal_transport", "auto_examples/deep/plot_training_method", "auto_examples/deep/sg_execution_times", "auto_examples/index", "auto_examples/methods/plot_dasvm", "auto_examples/methods/plot_jdot_da", "auto_examples/methods/plot_label_prop_da", "auto_examples/methods/plot_monge_alignment_da", "auto_examples/methods/plot_optimal_transport_da", "auto_examples/methods/plot_reweighting", "auto_examples/methods/plot_subspace", "auto_examples/methods/sg_execution_times", "auto_examples/plot_how_to_use_skada", "auto_examples/plot_method_comparison", "auto_examples/plot_skada_logo", "auto_examples/sg_execution_times", "auto_examples/validation/plot_cross_val_score_for_da", "auto_examples/validation/plot_cross_validation_for_da", "auto_examples/validation/plot_gridsearch_for_da", "auto_examples/validation/sg_execution_times", "contributing", "gen_modules/skada.CORAL", "gen_modules/skada.CORALAdapter", "gen_modules/skada.ClassRegularizerOTMapping", "gen_modules/skada.ClassRegularizerOTMappingAdapter", "gen_modules/skada.DASVMClassifier", "gen_modules/skada.DensityReweight", "gen_modules/skada.DensityReweightAdapter", "gen_modules/skada.DiscriminatorReweight", "gen_modules/skada.DiscriminatorReweightAdapter", "gen_modules/skada.EntropicOTMapping", "gen_modules/skada.EntropicOTMappingAdapter", "gen_modules/skada.GaussianReweight", "gen_modules/skada.GaussianReweightAdapter", "gen_modules/skada.JDOTRegressor", "gen_modules/skada.KLIEPReweight", "gen_modules/skada.KLIEPReweightAdapter", "gen_modules/skada.KMMReweight", "gen_modules/skada.KMMReweightAdapter", "gen_modules/skada.LinearOTMapping", "gen_modules/skada.LinearOTMappingAdapter", "gen_modules/skada.MMDLSConSMapping", "gen_modules/skada.MMDLSConSMappingAdapter", "gen_modules/skada.MMDTarSReweight", "gen_modules/skada.MMDTarSReweightAdapter", "gen_modules/skada.NearestNeighborReweight", "gen_modules/skada.NearestNeighborReweightAdapter", "gen_modules/skada.OTMapping", "gen_modules/skada.OTMappingAdapter", "gen_modules/skada.PerDomain", "gen_modules/skada.SelectSource", "gen_modules/skada.SelectTarget", "gen_modules/skada.Shared", "gen_modules/skada.SubspaceAlignment", "gen_modules/skada.SubspaceAlignmentAdapter", "gen_modules/skada.TransferComponentAnalysis", "gen_modules/skada.TransferComponentAnalysisAdapter", "gen_modules/skada.TransferJointMatching", "gen_modules/skada.TransferJointMatchingAdapter", "gen_modules/skada.TransferSubspaceLearning", "gen_modules/skada.datasets.make_dataset_from_moons_distribution", "gen_modules/skada.datasets.make_shifted_blobs", "gen_modules/skada.datasets.make_shifted_datasets", "gen_modules/skada.datasets.make_variable_frequency_dataset", "gen_modules/skada.deep.CAN", "gen_modules/skada.deep.CANLoss", "gen_modules/skada.deep.CDAN", "gen_modules/skada.deep.CDANLoss", "gen_modules/skada.deep.DANLoss", "gen_modules/skada.deep.DANN", "gen_modules/skada.deep.DeepCoral", "gen_modules/skada.deep.DeepCoralLoss", "gen_modules/skada.deep.DeepJDOT", "gen_modules/skada.deep.DeepJDOTLoss", "gen_modules/skada.deep.MCC", "gen_modules/skada.deep.MCCLoss", "gen_modules/skada.deep.MDD", "gen_modules/skada.deep.MDDLoss", "gen_modules/skada.deep.losses.cdd_loss", "gen_modules/skada.deep.losses.dan_loss", "gen_modules/skada.deep.losses.deepcoral_loss", "gen_modules/skada.deep.losses.deepjdot_loss", "gen_modules/skada.deep.losses.mcc_loss", "gen_modules/skada.make_da_pipeline", "gen_modules/skada.metrics.CircularValidation", "gen_modules/skada.metrics.DeepEmbeddedValidation", "gen_modules/skada.metrics.ImportanceWeightedScorer", "gen_modules/skada.metrics.MixValScorer", "gen_modules/skada.metrics.PredictionEntropyScorer", "gen_modules/skada.metrics.SoftNeighborhoodDensity", "gen_modules/skada.metrics.SupervisedScorer", "gen_modules/skada.model_selection.DomainShuffleSplit", "gen_modules/skada.model_selection.LeaveOneDomainOut", "gen_modules/skada.model_selection.SourceTargetShuffleSplit", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit", "gen_modules/skada.per_domain_split", "gen_modules/skada.source_target_split", "gen_modules/skada.utils.check_X_y_domain", "gen_modules/skada.utils.extract_domains_indices", "gen_modules/skada.utils.extract_source_indices", "gen_modules/skada.utils.source_target_merge", "index", "quickstart", "releases", "scorer", "sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/datasets/plot_dataset_from_moons_distribution.rst", "auto_examples/datasets/plot_shifted_dataset.rst", "auto_examples/datasets/plot_shifted_dataset_regression.rst", "auto_examples/datasets/plot_variable_frequency_dataset.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/deep/plot_adversarial.rst", "auto_examples/deep/plot_divergence.rst", "auto_examples/deep/plot_optimal_transport.rst", "auto_examples/deep/plot_training_method.rst", "auto_examples/deep/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/methods/plot_dasvm.rst", "auto_examples/methods/plot_jdot_da.rst", "auto_examples/methods/plot_label_prop_da.rst", "auto_examples/methods/plot_monge_alignment_da.rst", "auto_examples/methods/plot_optimal_transport_da.rst", "auto_examples/methods/plot_reweighting.rst", "auto_examples/methods/plot_subspace.rst", "auto_examples/methods/sg_execution_times.rst", "auto_examples/plot_how_to_use_skada.rst", "auto_examples/plot_method_comparison.rst", "auto_examples/plot_skada_logo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/validation/plot_cross_val_score_for_da.rst", "auto_examples/validation/plot_cross_validation_for_da.rst", "auto_examples/validation/plot_gridsearch_for_da.rst", "auto_examples/validation/sg_execution_times.rst", "contributing.rst", "gen_modules/skada.CORAL.rst", "gen_modules/skada.CORALAdapter.rst", "gen_modules/skada.ClassRegularizerOTMapping.rst", "gen_modules/skada.ClassRegularizerOTMappingAdapter.rst", "gen_modules/skada.DASVMClassifier.rst", "gen_modules/skada.DensityReweight.rst", "gen_modules/skada.DensityReweightAdapter.rst", "gen_modules/skada.DiscriminatorReweight.rst", "gen_modules/skada.DiscriminatorReweightAdapter.rst", "gen_modules/skada.EntropicOTMapping.rst", "gen_modules/skada.EntropicOTMappingAdapter.rst", "gen_modules/skada.GaussianReweight.rst", "gen_modules/skada.GaussianReweightAdapter.rst", "gen_modules/skada.JDOTRegressor.rst", "gen_modules/skada.KLIEPReweight.rst", "gen_modules/skada.KLIEPReweightAdapter.rst", "gen_modules/skada.KMMReweight.rst", "gen_modules/skada.KMMReweightAdapter.rst", "gen_modules/skada.LinearOTMapping.rst", "gen_modules/skada.LinearOTMappingAdapter.rst", "gen_modules/skada.MMDLSConSMapping.rst", "gen_modules/skada.MMDLSConSMappingAdapter.rst", "gen_modules/skada.MMDTarSReweight.rst", "gen_modules/skada.MMDTarSReweightAdapter.rst", "gen_modules/skada.NearestNeighborReweight.rst", "gen_modules/skada.NearestNeighborReweightAdapter.rst", "gen_modules/skada.OTMapping.rst", "gen_modules/skada.OTMappingAdapter.rst", "gen_modules/skada.PerDomain.rst", "gen_modules/skada.SelectSource.rst", "gen_modules/skada.SelectTarget.rst", "gen_modules/skada.Shared.rst", "gen_modules/skada.SubspaceAlignment.rst", "gen_modules/skada.SubspaceAlignmentAdapter.rst", "gen_modules/skada.TransferComponentAnalysis.rst", "gen_modules/skada.TransferComponentAnalysisAdapter.rst", "gen_modules/skada.TransferJointMatching.rst", "gen_modules/skada.TransferJointMatchingAdapter.rst", "gen_modules/skada.TransferSubspaceLearning.rst", "gen_modules/skada.datasets.make_dataset_from_moons_distribution.rst", "gen_modules/skada.datasets.make_shifted_blobs.rst", "gen_modules/skada.datasets.make_shifted_datasets.rst", "gen_modules/skada.datasets.make_variable_frequency_dataset.rst", "gen_modules/skada.deep.CAN.rst", "gen_modules/skada.deep.CANLoss.rst", "gen_modules/skada.deep.CDAN.rst", "gen_modules/skada.deep.CDANLoss.rst", "gen_modules/skada.deep.DANLoss.rst", "gen_modules/skada.deep.DANN.rst", "gen_modules/skada.deep.DeepCoral.rst", "gen_modules/skada.deep.DeepCoralLoss.rst", "gen_modules/skada.deep.DeepJDOT.rst", "gen_modules/skada.deep.DeepJDOTLoss.rst", "gen_modules/skada.deep.MCC.rst", "gen_modules/skada.deep.MCCLoss.rst", "gen_modules/skada.deep.MDD.rst", "gen_modules/skada.deep.MDDLoss.rst", "gen_modules/skada.deep.losses.cdd_loss.rst", "gen_modules/skada.deep.losses.dan_loss.rst", "gen_modules/skada.deep.losses.deepcoral_loss.rst", "gen_modules/skada.deep.losses.deepjdot_loss.rst", "gen_modules/skada.deep.losses.mcc_loss.rst", "gen_modules/skada.make_da_pipeline.rst", "gen_modules/skada.metrics.CircularValidation.rst", "gen_modules/skada.metrics.DeepEmbeddedValidation.rst", "gen_modules/skada.metrics.ImportanceWeightedScorer.rst", "gen_modules/skada.metrics.MixValScorer.rst", "gen_modules/skada.metrics.PredictionEntropyScorer.rst", "gen_modules/skada.metrics.SoftNeighborhoodDensity.rst", "gen_modules/skada.metrics.SupervisedScorer.rst", "gen_modules/skada.model_selection.DomainShuffleSplit.rst", "gen_modules/skada.model_selection.LeaveOneDomainOut.rst", "gen_modules/skada.model_selection.SourceTargetShuffleSplit.rst", "gen_modules/skada.model_selection.StratifiedDomainShuffleSplit.rst", "gen_modules/skada.per_domain_split.rst", "gen_modules/skada.source_target_split.rst", "gen_modules/skada.utils.check_X_y_domain.rst", "gen_modules/skada.utils.extract_domains_indices.rst", "gen_modules/skada.utils.extract_source_indices.rst", "gen_modules/skada.utils.source_target_merge.rst", "index.rst", "quickstart.md", "releases.rst", "scorer.rst", "sg_execution_times.rst"], "indexentries": {"can() (in module skada.deep)": [[72, "skada.deep.CAN", false]], "canloss (class in skada.deep)": [[73, "skada.deep.CANLoss", false]], "cdan() (in module skada.deep)": [[74, "skada.deep.CDAN", false]], "cdanloss (class in skada.deep)": [[75, "skada.deep.CDANLoss", false]], "cdd_loss() (in module skada.deep.losses)": [[86, "skada.deep.losses.cdd_loss", false]], "check_x_y_domain() (in module skada.utils)": [[105, "skada.utils.check_X_y_domain", false]], "circularvalidation (class in skada.metrics)": [[92, "skada.metrics.CircularValidation", false]], "classregularizerotmapping() (in module skada)": [[31, "skada.ClassRegularizerOTMapping", false]], "classregularizerotmappingadapter() (in module skada)": [[32, "skada.ClassRegularizerOTMappingAdapter", false]], "coral() (in module skada)": [[29, "skada.CORAL", false]], "coraladapter() (in module skada)": [[30, "skada.CORALAdapter", false]], "cross_entropy_loss() (skada.metrics.deepembeddedvalidation method)": [[93, "skada.metrics.DeepEmbeddedValidation.cross_entropy_loss", false]], "dan_loss() (in module skada.deep.losses)": [[87, "skada.deep.losses.dan_loss", false]], "danloss (class in skada.deep)": [[76, "skada.deep.DANLoss", false]], "dann() (in module skada.deep)": [[77, "skada.deep.DANN", false]], "dasvmclassifier() (in module skada)": [[33, "skada.DASVMClassifier", false]], "deepcoral() (in module skada.deep)": [[78, "skada.deep.DeepCoral", false]], "deepcoral_loss() (in module skada.deep.losses)": [[88, "skada.deep.losses.deepcoral_loss", false]], "deepcoralloss (class in skada.deep)": [[79, "skada.deep.DeepCoralLoss", false]], "deepembeddedvalidation (class in skada.metrics)": [[93, "skada.metrics.DeepEmbeddedValidation", false]], "deepjdot() (in module skada.deep)": [[80, "skada.deep.DeepJDOT", false]], "deepjdot_loss() (in module skada.deep.losses)": [[89, "skada.deep.losses.deepjdot_loss", false]], "deepjdotloss (class in skada.deep)": [[81, "skada.deep.DeepJDOTLoss", false]], "densityreweight() (in module skada)": [[34, "skada.DensityReweight", false]], "densityreweightadapter (class in skada)": [[35, "skada.DensityReweightAdapter", false]], "discriminatorreweight() (in module skada)": [[36, "skada.DiscriminatorReweight", false]], "discriminatorreweightadapter (class in skada)": [[37, "skada.DiscriminatorReweightAdapter", false]], "domainshufflesplit (class in skada.model_selection)": [[99, "skada.model_selection.DomainShuffleSplit", false]], "entropicotmapping() (in module skada)": [[38, "skada.EntropicOTMapping", false]], "entropicotmappingadapter() (in module skada)": [[39, "skada.EntropicOTMappingAdapter", false]], "extract_domains_indices() (in module skada.utils)": [[106, "skada.utils.extract_domains_indices", false]], "extract_source_indices() (in module skada.utils)": [[107, "skada.utils.extract_source_indices", false]], "fit() (skada.densityreweightadapter method)": [[35, "skada.DensityReweightAdapter.fit", false]], "fit() (skada.discriminatorreweightadapter method)": [[37, "skada.DiscriminatorReweightAdapter.fit", false]], "fit() (skada.gaussianreweightadapter method)": [[41, "skada.GaussianReweightAdapter.fit", false]], "fit() (skada.kliepreweightadapter method)": [[44, "skada.KLIEPReweightAdapter.fit", false]], "fit() (skada.kmmreweightadapter method)": [[46, "skada.KMMReweightAdapter.fit", false]], "fit() (skada.mmdtarsreweightadapter method)": [[52, "skada.MMDTarSReweightAdapter.fit", false]], "fit() (skada.nearestneighborreweightadapter method)": [[54, "skada.NearestNeighborReweightAdapter.fit", false]], "forward() (skada.deep.canloss method)": [[73, "skada.deep.CANLoss.forward", false]], "forward() (skada.deep.cdanloss method)": [[75, "skada.deep.CDANLoss.forward", false]], "forward() (skada.deep.danloss method)": [[76, "skada.deep.DANLoss.forward", false]], "forward() (skada.deep.deepcoralloss method)": [[79, "skada.deep.DeepCoralLoss.forward", false]], "forward() (skada.deep.deepjdotloss method)": [[81, "skada.deep.DeepJDOTLoss.forward", false]], "forward() (skada.deep.mccloss method)": [[83, "skada.deep.MCCLoss.forward", false]], "forward() (skada.deep.mddloss method)": [[85, "skada.deep.MDDLoss.forward", false]], "gaussianreweight() (in module skada)": [[40, "skada.GaussianReweight", false]], "gaussianreweightadapter (class in skada)": [[41, "skada.GaussianReweightAdapter", false]], "get_estimator() (skada.perdomain method)": [[57, "skada.PerDomain.get_estimator", false]], "get_estimator() (skada.shared method)": [[60, "skada.Shared.get_estimator", false]], "get_n_splits() (skada.model_selection.leaveonedomainout method)": [[100, "skada.model_selection.LeaveOneDomainOut.get_n_splits", false]], "importanceweightedscorer (class in skada.metrics)": [[94, "skada.metrics.ImportanceWeightedScorer", false]], "jdotregressor() (in module skada)": [[42, "skada.JDOTRegressor", false]], "kliepreweight() (in module skada)": [[43, "skada.KLIEPReweight", false]], "kliepreweightadapter (class in skada)": [[44, "skada.KLIEPReweightAdapter", false]], "kmmreweight() (in module skada)": [[45, "skada.KMMReweight", false]], "kmmreweightadapter (class in skada)": [[46, "skada.KMMReweightAdapter", false]], "leaveonedomainout (class in skada.model_selection)": [[100, "skada.model_selection.LeaveOneDomainOut", false]], "linearotmapping() (in module skada)": [[47, "skada.LinearOTMapping", false]], "linearotmappingadapter() (in module skada)": [[48, "skada.LinearOTMappingAdapter", false]], "make_da_pipeline() (in module skada)": [[91, "skada.make_da_pipeline", false]], "make_dataset_from_moons_distribution() (in module skada.datasets)": [[68, "skada.datasets.make_dataset_from_moons_distribution", false]], "make_shifted_blobs() (in module skada.datasets)": [[69, "skada.datasets.make_shifted_blobs", false]], "make_shifted_datasets() (in module skada.datasets)": [[70, "skada.datasets.make_shifted_datasets", false]], "make_variable_frequency_dataset() (in module skada.datasets)": [[71, "skada.datasets.make_variable_frequency_dataset", false]], "mcc() (in module skada.deep)": [[82, "skada.deep.MCC", false]], "mcc_loss() (in module skada.deep.losses)": [[90, "skada.deep.losses.mcc_loss", false]], "mccloss (class in skada.deep)": [[83, "skada.deep.MCCLoss", false]], "mdd() (in module skada.deep)": [[84, "skada.deep.MDD", false]], "mddloss (class in skada.deep)": [[85, "skada.deep.MDDLoss", false]], "mixvalscorer (class in skada.metrics)": [[95, "skada.metrics.MixValScorer", false]], "mmdlsconsmapping() (in module skada)": [[49, "skada.MMDLSConSMapping", false]], "mmdlsconsmappingadapter() (in module skada)": [[50, "skada.MMDLSConSMappingAdapter", false]], "mmdtarsreweight() (in module skada)": [[51, "skada.MMDTarSReweight", false]], "mmdtarsreweightadapter (class in skada)": [[52, "skada.MMDTarSReweightAdapter", false]], "module": [[0, "module-skada", false], [0, "module-skada.datasets", false], [0, "module-skada.deep", false], [0, "module-skada.deep.losses", false], [0, "module-skada.metrics", false], [0, "module-skada.model_selection", false], [0, "module-skada.utils", false]], "nearestneighborreweight() (in module skada)": [[53, "skada.NearestNeighborReweight", false]], "nearestneighborreweightadapter (class in skada)": [[54, "skada.NearestNeighborReweightAdapter", false]], "otmapping() (in module skada)": [[55, "skada.OTMapping", false]], "otmappingadapter() (in module skada)": [[56, "skada.OTMappingAdapter", false]], "per_domain_split() (in module skada)": [[103, "skada.per_domain_split", false]], "perdomain (class in skada)": [[57, "skada.PerDomain", false]], "predictionentropyscorer (class in skada.metrics)": [[96, "skada.metrics.PredictionEntropyScorer", false]], "selectsource (class in skada)": [[58, "skada.SelectSource", false]], "selecttarget (class in skada)": [[59, "skada.SelectTarget", false]], "set_decision_function_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_decision_function_request", false]], "set_decision_function_request() (skada.selectsource method)": [[58, "skada.SelectSource.set_decision_function_request", false]], "set_decision_function_request() (skada.selecttarget method)": [[59, "skada.SelectTarget.set_decision_function_request", false]], "set_decision_function_request() (skada.shared method)": [[60, "skada.Shared.set_decision_function_request", false]], "set_fit_request() (skada.densityreweightadapter method)": [[35, "skada.DensityReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.discriminatorreweightadapter method)": [[37, "skada.DiscriminatorReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.gaussianreweightadapter method)": [[41, "skada.GaussianReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kliepreweightadapter method)": [[44, "skada.KLIEPReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.kmmreweightadapter method)": [[46, "skada.KMMReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.mmdtarsreweightadapter method)": [[52, "skada.MMDTarSReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.nearestneighborreweightadapter method)": [[54, "skada.NearestNeighborReweightAdapter.set_fit_request", false]], "set_fit_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_fit_request", false]], "set_fit_request() (skada.selectsource method)": [[58, "skada.SelectSource.set_fit_request", false]], "set_fit_request() (skada.selecttarget method)": [[59, "skada.SelectTarget.set_fit_request", false]], "set_fit_request() (skada.shared method)": [[60, "skada.Shared.set_fit_request", false]], "set_partial_fit_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_partial_fit_request", false]], "set_partial_fit_request() (skada.selectsource method)": [[58, "skada.SelectSource.set_partial_fit_request", false]], "set_partial_fit_request() (skada.selecttarget method)": [[59, "skada.SelectTarget.set_partial_fit_request", false]], "set_partial_fit_request() (skada.shared method)": [[60, "skada.Shared.set_partial_fit_request", false]], "set_predict_log_proba_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.selectsource method)": [[58, "skada.SelectSource.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.selecttarget method)": [[59, "skada.SelectTarget.set_predict_log_proba_request", false]], "set_predict_log_proba_request() (skada.shared method)": [[60, "skada.Shared.set_predict_log_proba_request", false]], "set_predict_proba_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_predict_proba_request", false]], "set_predict_proba_request() (skada.selectsource method)": [[58, "skada.SelectSource.set_predict_proba_request", false]], "set_predict_proba_request() (skada.selecttarget method)": [[59, "skada.SelectTarget.set_predict_proba_request", false]], "set_predict_proba_request() (skada.shared method)": [[60, "skada.Shared.set_predict_proba_request", false]], "set_predict_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_predict_request", false]], "set_predict_request() (skada.selectsource method)": [[58, "skada.SelectSource.set_predict_request", false]], "set_predict_request() (skada.selecttarget method)": [[59, "skada.SelectTarget.set_predict_request", false]], "set_predict_request() (skada.shared method)": [[60, "skada.Shared.set_predict_request", false]], "set_score_request() (skada.metrics.circularvalidation method)": [[92, "skada.metrics.CircularValidation.set_score_request", false]], "set_score_request() (skada.metrics.deepembeddedvalidation method)": [[93, "skada.metrics.DeepEmbeddedValidation.set_score_request", false]], "set_score_request() (skada.metrics.importanceweightedscorer method)": [[94, "skada.metrics.ImportanceWeightedScorer.set_score_request", false]], "set_score_request() (skada.metrics.mixvalscorer method)": [[95, "skada.metrics.MixValScorer.set_score_request", false]], "set_score_request() (skada.metrics.predictionentropyscorer method)": [[96, "skada.metrics.PredictionEntropyScorer.set_score_request", false]], "set_score_request() (skada.metrics.softneighborhooddensity method)": [[97, "skada.metrics.SoftNeighborhoodDensity.set_score_request", false]], "set_score_request() (skada.metrics.supervisedscorer method)": [[98, "skada.metrics.SupervisedScorer.set_score_request", false]], "set_score_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_score_request", false]], "set_score_request() (skada.selectsource method)": [[58, "skada.SelectSource.set_score_request", false]], "set_score_request() (skada.selecttarget method)": [[59, "skada.SelectTarget.set_score_request", false]], "set_score_request() (skada.shared method)": [[60, "skada.Shared.set_score_request", false]], "set_split_request() (skada.model_selection.domainshufflesplit method)": [[99, "skada.model_selection.DomainShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.leaveonedomainout method)": [[100, "skada.model_selection.LeaveOneDomainOut.set_split_request", false]], "set_split_request() (skada.model_selection.sourcetargetshufflesplit method)": [[101, "skada.model_selection.SourceTargetShuffleSplit.set_split_request", false]], "set_split_request() (skada.model_selection.stratifieddomainshufflesplit method)": [[102, "skada.model_selection.StratifiedDomainShuffleSplit.set_split_request", false]], "set_transform_request() (skada.densityreweightadapter method)": [[35, "skada.DensityReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.discriminatorreweightadapter method)": [[37, "skada.DiscriminatorReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.gaussianreweightadapter method)": [[41, "skada.GaussianReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kliepreweightadapter method)": [[44, "skada.KLIEPReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.kmmreweightadapter method)": [[46, "skada.KMMReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.mmdtarsreweightadapter method)": [[52, "skada.MMDTarSReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.nearestneighborreweightadapter method)": [[54, "skada.NearestNeighborReweightAdapter.set_transform_request", false]], "set_transform_request() (skada.perdomain method)": [[57, "skada.PerDomain.set_transform_request", false]], "set_transform_request() (skada.selectsource method)": [[58, "skada.SelectSource.set_transform_request", false]], "set_transform_request() (skada.selecttarget method)": [[59, "skada.SelectTarget.set_transform_request", false]], "set_transform_request() (skada.shared method)": [[60, "skada.Shared.set_transform_request", false]], "shared (class in skada)": [[60, "skada.Shared", false]], "skada": [[0, "module-skada", false]], "skada.datasets": [[0, "module-skada.datasets", false]], "skada.deep": [[0, "module-skada.deep", false]], "skada.deep.losses": [[0, "module-skada.deep.losses", false]], "skada.metrics": [[0, "module-skada.metrics", false]], "skada.model_selection": [[0, "module-skada.model_selection", false]], "skada.utils": [[0, "module-skada.utils", false]], "softneighborhooddensity (class in skada.metrics)": [[97, "skada.metrics.SoftNeighborhoodDensity", false]], "source_target_merge() (in module skada.utils)": [[108, "skada.utils.source_target_merge", false]], "source_target_split() (in module skada)": [[104, "skada.source_target_split", false]], "sourcetargetshufflesplit (class in skada.model_selection)": [[101, "skada.model_selection.SourceTargetShuffleSplit", false]], "split() (skada.model_selection.leaveonedomainout method)": [[100, "skada.model_selection.LeaveOneDomainOut.split", false]], "split() (skada.model_selection.stratifieddomainshufflesplit method)": [[102, "skada.model_selection.StratifiedDomainShuffleSplit.split", false]], "stratifieddomainshufflesplit (class in skada.model_selection)": [[102, "skada.model_selection.StratifiedDomainShuffleSplit", false]], "subspacealignment() (in module skada)": [[61, "skada.SubspaceAlignment", false]], "subspacealignmentadapter() (in module skada)": [[62, "skada.SubspaceAlignmentAdapter", false]], "supervisedscorer (class in skada.metrics)": [[98, "skada.metrics.SupervisedScorer", false]], "transfercomponentanalysis() (in module skada)": [[63, "skada.TransferComponentAnalysis", false]], "transfercomponentanalysisadapter() (in module skada)": [[64, "skada.TransferComponentAnalysisAdapter", false]], "transferjointmatching() (in module skada)": [[65, "skada.TransferJointMatching", false]], "transferjointmatchingadapter() (in module skada)": [[66, "skada.TransferJointMatchingAdapter", false]], "transfersubspacelearning() (in module skada)": [[67, "skada.TransferSubspaceLearning", false]]}, "objects": {"": [[0, 0, 0, "-", "skada"]], "skada": [[29, 1, 1, "", "CORAL"], [30, 1, 1, "", "CORALAdapter"], [31, 1, 1, "", "ClassRegularizerOTMapping"], [32, 1, 1, "", "ClassRegularizerOTMappingAdapter"], [33, 1, 1, "", "DASVMClassifier"], [34, 1, 1, "", "DensityReweight"], [35, 2, 1, "", "DensityReweightAdapter"], [36, 1, 1, "", "DiscriminatorReweight"], [37, 2, 1, "", "DiscriminatorReweightAdapter"], [38, 1, 1, "", "EntropicOTMapping"], [39, 1, 1, "", "EntropicOTMappingAdapter"], [40, 1, 1, "", "GaussianReweight"], [41, 2, 1, "", "GaussianReweightAdapter"], [42, 1, 1, "", "JDOTRegressor"], [43, 1, 1, "", "KLIEPReweight"], [44, 2, 1, "", "KLIEPReweightAdapter"], [45, 1, 1, "", "KMMReweight"], [46, 2, 1, "", "KMMReweightAdapter"], [47, 1, 1, "", "LinearOTMapping"], [48, 1, 1, "", "LinearOTMappingAdapter"], [49, 1, 1, "", "MMDLSConSMapping"], [50, 1, 1, "", "MMDLSConSMappingAdapter"], [51, 1, 1, "", "MMDTarSReweight"], [52, 2, 1, "", "MMDTarSReweightAdapter"], [53, 1, 1, "", "NearestNeighborReweight"], [54, 2, 1, "", "NearestNeighborReweightAdapter"], [55, 1, 1, "", "OTMapping"], [56, 1, 1, "", "OTMappingAdapter"], [57, 2, 1, "", "PerDomain"], [58, 2, 1, "", "SelectSource"], [59, 2, 1, "", "SelectTarget"], [60, 2, 1, "", "Shared"], [61, 1, 1, "", "SubspaceAlignment"], [62, 1, 1, "", "SubspaceAlignmentAdapter"], [63, 1, 1, "", "TransferComponentAnalysis"], [64, 1, 1, "", "TransferComponentAnalysisAdapter"], [65, 1, 1, "", "TransferJointMatching"], [66, 1, 1, "", "TransferJointMatchingAdapter"], [67, 1, 1, "", "TransferSubspaceLearning"], [0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "deep"], [91, 1, 1, "", "make_da_pipeline"], [0, 0, 0, "-", "metrics"], [0, 0, 0, "-", "model_selection"], [103, 1, 1, "", "per_domain_split"], [104, 1, 1, "", "source_target_split"], [0, 0, 0, "-", "utils"]], "skada.DensityReweightAdapter": [[35, 3, 1, "", "fit"], [35, 3, 1, "", "set_fit_request"], [35, 3, 1, "", "set_transform_request"]], "skada.DiscriminatorReweightAdapter": [[37, 3, 1, "", "fit"], [37, 3, 1, "", "set_fit_request"], [37, 3, 1, "", "set_transform_request"]], "skada.GaussianReweightAdapter": [[41, 3, 1, "", "fit"], [41, 3, 1, "", "set_fit_request"], [41, 3, 1, "", "set_transform_request"]], "skada.KLIEPReweightAdapter": [[44, 3, 1, "", "fit"], [44, 3, 1, "", "set_fit_request"], [44, 3, 1, "", "set_transform_request"]], "skada.KMMReweightAdapter": [[46, 3, 1, "", "fit"], [46, 3, 1, "", "set_fit_request"], [46, 3, 1, "", "set_transform_request"]], "skada.MMDTarSReweightAdapter": [[52, 3, 1, "", "fit"], [52, 3, 1, "", "set_fit_request"], [52, 3, 1, "", "set_transform_request"]], "skada.NearestNeighborReweightAdapter": [[54, 3, 1, "", "fit"], [54, 3, 1, "", "set_fit_request"], [54, 3, 1, "", "set_transform_request"]], "skada.PerDomain": [[57, 3, 1, "", "get_estimator"], [57, 3, 1, "", "set_decision_function_request"], [57, 3, 1, "", "set_fit_request"], [57, 3, 1, "", "set_partial_fit_request"], [57, 3, 1, "", "set_predict_log_proba_request"], [57, 3, 1, "", "set_predict_proba_request"], [57, 3, 1, "", "set_predict_request"], [57, 3, 1, "", "set_score_request"], [57, 3, 1, "", "set_transform_request"]], "skada.SelectSource": [[58, 3, 1, "", "set_decision_function_request"], [58, 3, 1, "", "set_fit_request"], [58, 3, 1, "", "set_partial_fit_request"], [58, 3, 1, "", "set_predict_log_proba_request"], [58, 3, 1, "", "set_predict_proba_request"], [58, 3, 1, "", "set_predict_request"], [58, 3, 1, "", "set_score_request"], [58, 3, 1, "", "set_transform_request"]], "skada.SelectTarget": [[59, 3, 1, "", "set_decision_function_request"], [59, 3, 1, "", "set_fit_request"], [59, 3, 1, "", "set_partial_fit_request"], [59, 3, 1, "", "set_predict_log_proba_request"], [59, 3, 1, "", "set_predict_proba_request"], [59, 3, 1, "", "set_predict_request"], [59, 3, 1, "", "set_score_request"], [59, 3, 1, "", "set_transform_request"]], "skada.Shared": [[60, 3, 1, "", "get_estimator"], [60, 3, 1, "", "set_decision_function_request"], [60, 3, 1, "", "set_fit_request"], [60, 3, 1, "", "set_partial_fit_request"], [60, 3, 1, "", "set_predict_log_proba_request"], [60, 3, 1, "", "set_predict_proba_request"], [60, 3, 1, "", "set_predict_request"], [60, 3, 1, "", "set_score_request"], [60, 3, 1, "", "set_transform_request"]], "skada.datasets": [[68, 1, 1, "", "make_dataset_from_moons_distribution"], [69, 1, 1, "", "make_shifted_blobs"], [70, 1, 1, "", "make_shifted_datasets"], [71, 1, 1, "", "make_variable_frequency_dataset"]], "skada.deep": [[72, 1, 1, "", "CAN"], [73, 2, 1, "", "CANLoss"], [74, 1, 1, "", "CDAN"], [75, 2, 1, "", "CDANLoss"], [76, 2, 1, "", "DANLoss"], [77, 1, 1, "", "DANN"], [78, 1, 1, "", "DeepCoral"], [79, 2, 1, "", "DeepCoralLoss"], [80, 1, 1, "", "DeepJDOT"], [81, 2, 1, "", "DeepJDOTLoss"], [82, 1, 1, "", "MCC"], [83, 2, 1, "", "MCCLoss"], [84, 1, 1, "", "MDD"], [85, 2, 1, "", "MDDLoss"], [0, 0, 0, "-", "losses"]], "skada.deep.CANLoss": [[73, 3, 1, "", "forward"]], "skada.deep.CDANLoss": [[75, 3, 1, "", "forward"]], "skada.deep.DANLoss": [[76, 3, 1, "", "forward"]], "skada.deep.DeepCoralLoss": [[79, 3, 1, "", "forward"]], "skada.deep.DeepJDOTLoss": [[81, 3, 1, "", "forward"]], "skada.deep.MCCLoss": [[83, 3, 1, "", "forward"]], "skada.deep.MDDLoss": [[85, 3, 1, "", "forward"]], "skada.deep.losses": [[86, 1, 1, "", "cdd_loss"], [87, 1, 1, "", "dan_loss"], [88, 1, 1, "", "deepcoral_loss"], [89, 1, 1, "", "deepjdot_loss"], [90, 1, 1, "", "mcc_loss"]], "skada.metrics": [[92, 2, 1, "", "CircularValidation"], [93, 2, 1, "", "DeepEmbeddedValidation"], [94, 2, 1, "", "ImportanceWeightedScorer"], [95, 2, 1, "", "MixValScorer"], [96, 2, 1, "", "PredictionEntropyScorer"], [97, 2, 1, "", "SoftNeighborhoodDensity"], [98, 2, 1, "", "SupervisedScorer"]], "skada.metrics.CircularValidation": [[92, 3, 1, "", "set_score_request"]], "skada.metrics.DeepEmbeddedValidation": [[93, 3, 1, "", "cross_entropy_loss"], [93, 3, 1, "", "set_score_request"]], "skada.metrics.ImportanceWeightedScorer": [[94, 3, 1, "", "set_score_request"]], "skada.metrics.MixValScorer": [[95, 3, 1, "", "set_score_request"]], "skada.metrics.PredictionEntropyScorer": [[96, 3, 1, "", "set_score_request"]], "skada.metrics.SoftNeighborhoodDensity": [[97, 3, 1, "", "set_score_request"]], "skada.metrics.SupervisedScorer": [[98, 3, 1, "", "set_score_request"]], "skada.model_selection": [[99, 2, 1, "", "DomainShuffleSplit"], [100, 2, 1, "", "LeaveOneDomainOut"], [101, 2, 1, "", "SourceTargetShuffleSplit"], [102, 2, 1, "", "StratifiedDomainShuffleSplit"]], "skada.model_selection.DomainShuffleSplit": [[99, 3, 1, "", "set_split_request"]], "skada.model_selection.LeaveOneDomainOut": [[100, 3, 1, "", "get_n_splits"], [100, 3, 1, "", "set_split_request"], [100, 3, 1, "", "split"]], "skada.model_selection.SourceTargetShuffleSplit": [[101, 3, 1, "", "set_split_request"]], "skada.model_selection.StratifiedDomainShuffleSplit": [[102, 3, 1, "", "set_split_request"], [102, 3, 1, "", "split"]], "skada.utils": [[105, 1, 1, "", "check_X_y_domain"], [106, 1, 1, "", "extract_domains_indices"], [107, 1, 1, "", "extract_source_indices"], [108, 1, 1, "", "source_target_merge"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [3, 4, 7, 12, 17, 18, 21, 22, 24, 25, 26, 28, 50, 53, 54, 56, 67, 70, 72, 74, 77, 78, 80, 82, 84, 94, 95, 98, 103, 104, 108, 109, 110, 112], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 53, 54, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 95, 97, 99, 102, 106, 108, 109, 110, 112, 113], "00": [5, 7, 10, 16, 19, 23, 27, 113], "0000ff": 21, "0009": 8, "001": [17, 21, 25], "00e": 21, "01": [6, 7, 8, 10, 12, 13, 19, 20, 21, 23, 24, 25, 26, 65, 66, 67, 113], "02": [5, 7, 18, 19, 20, 25, 113], "02291": 109, "03": [10, 26], "0313": 8, "0349": 7, "0351": 8, "04": [24, 113], "0410": 7, "0492": 8, "05": [3, 7, 19, 21, 26, 42, 49, 50, 97, 113], "0519": 6, "0532": 6, "054": 5, "05mb": 7, "06": [13, 14, 21, 43, 44, 45, 46, 51, 52], "060_4_0699": 17, "0671": 7, "0689": 6, "07": [10, 73, 76, 83, 86, 87, 90, 113], "07117994f0971b2fc2df95adb373c31c3d313442": 109, "075493682966016": 13, "0794": 6, "08": [7, 21, 26, 31, 32, 38, 39, 47, 48], "085": [9, 10, 113], "0866": 8, "0878": 7, "088": [8, 10, 113], "09": 91, "096": [26, 27, 113], "0978": 7, "0999": 8, "0x7c5a42225c30": 12, "1": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 108, 109, 110], "10": [1, 2, 4, 6, 9, 12, 13, 14, 15, 16, 17, 20, 21, 22, 25, 26, 27, 31, 32, 42, 49, 50, 51, 52, 68, 69, 71, 99, 100, 101, 102, 108, 109, 113], "100": [4, 7, 12, 13, 14, 15, 17, 18, 21, 22, 42, 43, 44, 45, 46, 49, 50, 65, 66, 67, 68, 69, 70, 71], "1000": [4, 17, 21, 33, 38, 39, 43, 44, 45, 46, 51, 52], "100000": [21, 55, 56], "1004": [18, 21], "1009": 109, "100_000": [55, 56], "10155": [48, 109], "1027": 21, "10288": 109, "1044": 109, "1047": 14, "105": [1, 109], "106": [12, 19, 113], "10e": [31, 32, 38, 39], "11": [22, 33, 92, 109], "1100": 4, "115": 23, "1153": 7, "12": [7, 16, 17, 18, 78, 79, 88, 109], "121": 16, "122": 16, "125": 17, "128": [6, 7, 8, 9], "12mb": 7, "13": [7, 19, 80, 81, 89, 109], "131": 16, "131k": 7, "132": 16, "1321138905671275": 16, "133": 16, "1356": 6, "14": [1, 2, 3, 7, 16, 21, 23, 76, 87, 109, 113], "1410": [18, 65, 66, 109], "1417": [18, 65, 66, 109], "143kb": 7, "1443686989830857": 15, "144kb": 7, "15": [1, 2, 3, 4, 12, 13, 17, 18, 21, 25, 77, 93, 109], "153": 109, "1561": 6, "1594": 7, "15th": [80, 81, 89], "16": [17, 18, 74, 75, 109], "1664": 7, "16785": 109, "16793": 109, "16e": 21, "17": [22, 23, 94, 109], "171": 109, "1711": 109, "1736": 6, "18": [22, 96, 109], "180": 111, "1800": 9, "181mb": 7, "18279941870395425": 13, "18530735809550572": 13, "186": [22, 23, 113], "19": [97, 109], "1905": [48, 109], "1925": 9, "194": 113, "1986": 7, "199": 109, "1990": 6, "1994": 8, "1d": [53, 54], "1e": [6, 7, 8, 9, 21, 24, 31, 32, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 65, 66, 73, 76, 83, 86, 87, 90, 91, 93], "1nn": [17, 21], "2": [1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 16, 20, 21, 22, 25, 28, 53, 54, 65, 66, 67, 68, 69, 70, 88, 90, 97, 99, 102, 104, 108, 109, 110], "20": [2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 26, 93, 109, 110, 112], "200": [21, 22, 31, 32], "2000": [17, 36, 37, 40, 41, 109], "2002": 7, "2005": 109, "2007": [17, 43, 44, 45, 46, 94, 109], "2008": [17, 109], "2009": [33, 92, 109], "2010": [18, 67, 109], "2011": [18, 63, 64], "2012": [2, 3, 17, 53, 54, 70, 109], "2013": [18, 49, 50, 51, 52, 61, 62, 109], "2014": [14, 18, 65, 66, 109], "2015": [76, 87, 109], "2016": [7, 74, 75, 77, 78, 79, 88, 109], "2017": [13, 29, 30, 42, 109], "2018": [80, 81, 89, 96, 109], "2019": [48, 72, 73, 84, 85, 86, 93, 109], "2020": [82, 83, 90, 109], "2021": [97, 109], "2023": [95, 109], "2024": 109, "205": [24, 27, 113], "2098209410905838": 9, "209kb": 7, "21": [12, 49, 50, 51, 52, 109, 113], "210": 109, "2102": 109, "2106": 8, "2115": 7, "21420445266620786": 13, "216": 111, "217": 111, "2184": 7, "218866137683906": 16, "22": 109, "220": 111, "221": 111, "222": 111, "223": 111, "225": 111, "226": 111, "227": [109, 111], "22983129554592746": 13, "229k": 7, "22nd": 109, "23": [22, 45, 46, 109], "230": 111, "232": 111, "233": 111, "234": 111, "235": 111, "2364aa": 22, "24": [17, 53, 54, 109], "240px": 110, "241": [16, 111], "242": [16, 111], "243": [16, 111], "244": [16, 109, 111], "245": 16, "246": [16, 111], "247": [16, 111], "248": [16, 111], "249": 109, "25": [7, 9, 17, 18, 71, 109], "250": 111, "251": 111, "2528": 9, "256": [9, 111], "256mb": 7, "257": 111, "258": 111, "259": 111, "26": [18, 65, 66, 109], "260": 111, "261": 111, "263": 111, "265": 111, "266": 111, "267": 111, "268": 111, "269": 111, "27": [18, 21, 67, 70, 109], "270": 111, "271": 111, "2719": 9, "274": 111, "275": [18, 19, 111, 113], "276": 111, "277": 111, "279": [109, 111], "28": [7, 14, 109], "280": 111, "2809": 8, "282": 111, "288146109474553": 16, "29": 109, "2960": 109, "2967": 109, "298kb": 7, "2d": [13, 14, 15, 20, 111], "2f": [13, 14, 16, 17, 18, 20, 21, 24], "2x1": 70, "2x2": 70, "3": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 33, 35, 37, 41, 43, 44, 45, 46, 51, 52, 54, 57, 58, 59, 60, 69, 71, 72, 73, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 111, 112], "30": [13, 21, 22, 24, 26, 53, 54, 109, 110, 112], "300": 22, "3027": 8, "306": [14, 109], "31": 109, "310098338155625": 15, "314": [14, 109], "32": [7, 9, 95, 109], "3260": 8, "33": [72, 73, 82, 83, 86, 90, 109], "331": [1, 5, 113], "336863129384494": [13, 14, 15], "34": 109, "3447": 6, "35": [22, 84, 85, 109], "352173719537829": 14, "36": 109, "364": [21, 23, 113], "367467726151268": 14, "3676169789533272": [13, 14, 15], "36th": 109, "37": 113, "375": 17, "3938": 9, "3972": 9, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 50, 84, 85, 88, 90, 99, 102, 108, 109, 110, 112], "40": 109, "400px": 110, "4010": 6, "4020": 7, "4022": 7, "403": 7, "4037": 7, "404": 4, "4096": 74, "42": [2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 26], "4269298070320042": 14, "43": 15, "443": 109, "444": [13, 19, 113], "447": 109, "45": [2, 3, 70], "450": 109, "4527": 6, "45933195939893": [13, 14], "459k": 7, "463": 109, "464886123797522": 15, "472": [16, 19, 113], "48": 25, "4842": 6, "4893": [72, 73, 86, 109], "490": [25, 27, 113], "4902": [72, 73, 86, 109], "4938": 7, "4970": 8, "4974": 8, "5": [1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 29, 30, 42, 43, 44, 49, 50, 72, 73, 86, 99, 102, 108, 109, 110, 112], "50": [1, 7, 13, 14, 15, 18], "500": 12, "5009": 8, "51": [1, 13], "5183": 6, "51m": 7, "520": 10, "521": [2, 3, 70], "5244703189443227": 16, "527": [2, 5, 113], "53": 10, "530": [2, 3, 70], "53817259426296": [13, 14, 15], "53mb": 7, "54": [6, 10, 113], "54k": 7, "55": [9, 10, 95, 113], "5518": 7, "555kb": 7, "5585726101363702": 14, "56": [8, 10, 113], "565": [20, 23, 113], "57": 14, "570318895725525": [13, 14], "576": [14, 21], "58": 24, "5826": 8, "59": 109, "591": [4, 5, 113], "5980": 8, "5k": 7, "6": [6, 12, 13, 14, 17, 18, 22, 24, 25, 31, 32, 38, 39, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 99, 102, 108, 109], "60": [17, 109], "6009": 9, "603": 18, "606": [3, 5, 113], "625": 17, "64": [9, 109], "65": 7, "658": [7, 10, 113], "65m": 7, "667": 16, "6863": 6, "689": [6, 10, 113], "699": [17, 109], "6c4c7c": [17, 18], "7": [4, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 25, 47, 48, 53, 70, 73, 76, 83, 86, 87, 90, 99, 102, 108, 109], "70": 22, "7025": 8, "708": [14, 19, 113], "7116": 6, "7124": 109, "713": 19, "7133": 109, "72": [6, 7, 8, 9], "72222222": [110, 112], "7404": 109, "7413": 109, "744989537549497": [13, 14], "746": [17, 109], "7479": 7, "75": 7, "756925382279493": 15, "76": 14, "762": [15, 19, 113], "77": [13, 14], "770": 109, "787": 109, "792": 27, "7964573229829714": [13, 14, 15], "7989": 6, "7990": 8, "7mb": 7, "8": [1, 2, 3, 4, 7, 9, 12, 13, 16, 17, 18, 21, 22, 25, 26, 61, 62, 70, 99, 102, 108, 109], "80": [3, 17, 18], "8011": 6, "8119": 6, "819": 109, "81944444": [110, 112], "82": [7, 13], "827": 109, "83333333": [110, 112], "834": 1, "83m": 7, "84": 13, "84375": 20, "849": 109, "85": [3, 22], "858": 109, "87": 14, "8998": 6, "8k": 7, "8mb": 7, "9": [1, 7, 12, 13, 14, 15, 16, 18, 20, 21, 22, 31, 32, 38, 39, 63, 64, 70, 99, 102, 108, 109], "90": [18, 109], "9003215434083601": 8, "9020": 7, "9037": 8, "9062": 6, "9067524115755627": 7, "9131832797427653": 6, "9158331863582134": 9, "9184": 109, "918k": 7, "9193": 109, "91m": 7, "9216": 9, "9228295819935691": 8, "9260450160771704": 7, "929": [18, 67], "9292604501607717": 6, "9396": 8, "942": [18, 67], "946": [17, 19, 113], "95625": [110, 112], "96": 18, "9610814126500358": [13, 14], "97": [13, 109], "975": [110, 112], "98": [12, 17, 24], "9875": 15, "99": [13, 14, 17], "9933": 6, "9957": 9, "9992": 7, "999c81": 22, "9k": 7, "A": [2, 3, 13, 14, 16, 17, 21, 22, 28, 31, 32, 33, 38, 39, 42, 45, 46, 47, 48, 55, 56, 61, 63, 65, 67, 70, 72, 73, 74, 77, 78, 80, 82, 84, 86, 92, 93, 94, 95, 98, 105, 106, 109, 110], "As": [12, 18, 25], "At": [12, 28, 70], "But": 20, "By": [68, 69, 70, 71, 91], "For": [17, 20, 25, 28, 42, 53, 54, 91, 109, 110], "If": [20, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 53, 54, 55, 56, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 91, 93, 94, 95, 96, 98, 99, 101, 105, 106, 108, 109, 110], "In": [7, 14, 17, 18, 20, 22, 28, 29, 30, 36, 37, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 108, 109, 110, 111, 112], "It": [20, 28, 33, 65, 66, 68, 69, 70, 71, 84, 92, 110], "Its": [17, 43, 44, 110], "No": [1, 24], "On": 14, "One": [1, 20, 71, 100, 109], "Such": [17, 110], "The": [1, 2, 3, 4, 12, 16, 17, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 112], "Then": [16, 20, 24, 26, 92], "These": [17, 28], "To": [6, 7, 8, 9, 18, 21, 24, 110, 112], "Will": [17, 18, 70], "With": 110, "_": [2, 3, 12, 24, 25, 26, 30, 72, 73, 74, 77, 84, 86, 87, 96, 97, 108, 110], "__init__": [14, 21], "__name__": 25, "__version__": 28, "_barycent": 14, "_call_impl": 6, "_domain": 111, "_mnist_usp": [6, 7, 8, 9], "_self_label": 12, "_sign": 95, "_sinkhorn": 16, "_subspac": 18, "ab": [18, 22], "abl": 13, "abort": 28, "about": [12, 28], "abov": 28, "absenc": 110, "absolut": [12, 99, 110], "ac": 17, "acc": [13, 14, 16], "acc_": [13, 14], "acc_classreg": 16, "acc_linear": 16, "acc_s_jcpot": 14, "acc_sinkhorn": 16, "acc_sourc": 16, "acc_t": [13, 14], "acc_target": 16, "accept": [28, 53, 54, 91, 110], "access": [57, 60, 110], "accord": 74, "account": [17, 28, 110], "accur": [18, 93, 109], "accuraci": [13, 14, 15, 16, 17, 18, 20, 21, 24], "achiev": 110, "acquisit": 111, "across": [18, 43, 44, 61, 62, 68, 69, 70, 71, 93], "act": 110, "activ": 109, "ad": [12, 18, 28, 33, 35, 37, 41, 44, 46, 47, 48, 52, 53, 54, 57, 58, 59, 60, 68, 69, 70, 71, 73, 76, 83, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111], "adam": 9, "adapt": [0, 10, 13, 14, 19, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 111, 113], "add": [28, 111], "add_ax": 3, "add_domain": 110, "addit": [28, 53, 54, 105, 110], "address": 28, "advanc": [13, 29, 30, 109], "advantag": 91, "adversari": [10, 11, 74, 75, 77, 85, 109, 113], "affect": [53, 54], "after": 110, "again": 20, "aim": 18, "aism": 17, "ajakan": 109, "al": [17, 18, 43, 44, 49, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 84, 85, 87, 93, 94, 95, 96, 97], "alain": 109, "alaiz": [2, 3, 70], "alexandr": 109, "algorithm": [12, 14, 21, 28, 31, 32, 33, 38, 39, 53, 54, 55, 56, 65, 66, 67, 84, 85, 110], "alia": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "align": [7, 11, 13, 19, 21, 29, 30, 47, 48, 61, 62, 70, 78, 79, 88, 91, 96, 104, 109, 111, 113], "all": [4, 11, 15, 18, 20, 25, 28, 33, 53, 54, 61, 62, 68, 69, 70, 71, 103, 104, 105, 109, 110, 113], "allow": [20, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111], "allow_auto_sample_domain": 105, "allow_common_domain_idx": 105, "allow_label_mask": 105, "allow_multi_sourc": 105, "allow_multi_target": 105, "allow_nd": 105, "allow_sourc": [15, 16, 18, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 105, 111], "allow_target": 105, "along": 42, "alpha": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 42, 95], "alpha_": [44, 52], "alreadi": [91, 110], "also": [9, 13, 14, 15, 16, 20, 24, 25, 28, 74, 77, 84, 99, 109, 110], "altern": 28, "alternat": 42, "although": [74, 77, 84], "alwai": [28, 68, 69, 70, 71, 100, 110], "amazon": 110, "amazonaw": 7, "ambrois": 109, "ambroiseodt": 111, "among": [68, 69, 70, 71], "amsterdam": 109, "an": [6, 16, 17, 18, 20, 28, 35, 37, 41, 43, 44, 46, 52, 53, 54, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110, 112], "anal": 109, "analogi": 110, "analysi": [16, 28, 31, 32, 33, 38, 39, 47, 55, 56, 63, 64, 92, 109], "angl": 22, "angle_step": 22, "ani": [12, 17, 20, 28, 33, 42, 109, 110], "annal": [17, 109], "anoth": 28, "antoin": [17, 18, 109], "antoinecolla": [18, 111], "antoinedemathelin": 111, "api": [20, 28, 109, 110, 112], "apmellot": 111, "apollin": 109, "append": 22, "appli": [96, 111], "applic": [17, 43, 44, 109], "appreci": 28, "approach": [17, 42, 52], "appropri": [28, 53, 54], "approv": 28, "approxim": [17, 37, 40, 41], "ar": [2, 3, 12, 14, 16, 17, 18, 20, 24, 25, 28, 29, 30, 35, 37, 41, 44, 45, 46, 50, 52, 53, 54, 57, 58, 59, 60, 61, 62, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 84, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112], "arang": 25, "arbitrari": [53, 54], "architectur": 84, "area": 28, "arg": [6, 111], "argmin": 22, "argument": [6, 53, 54, 110], "around": 110, "arrai": [12, 17, 20, 22, 25, 30, 35, 37, 41, 43, 44, 46, 50, 51, 52, 53, 54, 64, 68, 69, 70, 71, 72, 73, 76, 86, 87, 93, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112], "array_lik": [68, 69, 70, 71], "artifici": 109, "arxiv": [48, 109], "as_integer_ratio": 42, "as_sourc": [6, 7, 8, 9, 18, 21, 24, 25, 26, 110], "as_target": [6, 7, 8, 9, 18, 21, 24, 25, 26, 110], "ask": 28, "assign": [105, 110], "assist": 28, "associ": [68, 69, 70, 71], "assum": [17, 18, 42, 53, 54], "assume_cent": [21, 29, 30, 78, 79, 88], "assumpt": [17, 52], "attempt": [53, 54], "attribut": [30, 32, 35, 37, 39, 41, 42, 44, 46, 48, 50, 52, 56, 62, 64, 66, 68, 69, 70, 71, 91, 94, 95], "author": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 109], "auto": [20, 21, 29, 30, 40, 41, 53, 54], "auto_exampl": [5, 10, 19, 23, 27], "auto_examples_jupyt": 11, "auto_examples_python": 11, "automat": [20, 24, 28, 29, 30, 40, 41, 91, 99, 105, 110], "autumn": [3, 12], "avail": [16, 20, 28, 45, 46, 91, 109, 110, 112], "averag": [15, 95], "avoid": [28, 38, 39, 55, 56, 93, 105, 110, 112], "awai": [53, 54], "awar": 110, "ax": [4, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25], "ax1": [1, 2, 3], "ax2": [1, 2, 3], "axi": [12, 13, 14, 15, 16, 20, 22], "axvlin": 24, "b": [7, 17, 18, 28, 45, 46, 50, 67, 102, 109, 110], "b_": 50, "back": 28, "backward": 9, "badg": 111, "bai": 109, "balanced_accuracy_scor": 92, "ball_tre": [53, 54], "balltre": [53, 54], "band": [12, 71], "band_siz": [4, 71], "bandwidth": [17, 21], "baochen": [7, 29, 30, 78, 79, 88, 109], "barh": 24, "barycent": 109, "base": [9, 12, 13, 16, 17, 18, 24, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 67, 72, 74, 77, 78, 80, 81, 82, 84, 86, 87, 92, 93, 94, 96, 97, 108, 109, 110], "base_classifi": [17, 18], "base_criterion": [72, 74, 77, 78, 80, 82, 84, 111], "base_estim": [12, 13, 17, 20, 21, 24, 26, 29, 31, 33, 34, 36, 38, 40, 42, 43, 45, 47, 49, 51, 53, 55, 57, 58, 59, 60, 61, 63, 65, 67, 91, 110, 112], "base_method": [21, 67], "base_module_": 9, "baseadapt": 110, "baseestim": [33, 57, 58, 59, 60, 91], "baseselector": 91, "basura": [18, 61, 62], "batch": 111, "batch_siz": [6, 7, 8, 9], "batchnormfix2": 111, "bbox_inch": 22, "bceloss": [74, 75, 77], "becaus": [14, 110, 112], "been": [6, 12, 109], "befor": [14, 21, 28, 29, 30, 31, 32, 38, 39, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 65, 66, 67, 78, 79, 88, 91], "behav": 25, "behavior": [11, 27, 28, 42, 70, 99, 100, 101, 102, 113], "being": [28, 108, 110], "belong": 106, "below": [16, 20, 68, 69, 70, 71, 109, 110, 112], "benchmark": [0, 28], "benefit": 28, "benjamin": [80, 81, 89], "best": [20, 26, 28, 43, 44, 110, 112], "best_estimator_": 26, "best_gamma_": 44, "best_params_": [20, 26], "best_reg_": 26, "beta": 52, "better": [13, 95], "between": [13, 14, 16, 24, 28, 29, 30, 40, 41, 42, 44, 46, 48, 50, 52, 53, 54, 63, 64, 65, 66, 67, 75, 76, 79, 81, 85, 92, 93, 97, 99, 110, 112], "bezier_curv": 22, "bf": 22, "bharath": [80, 81, 89], "bhushan": [80, 81, 89], "bia": [2, 3, 9, 17, 21, 45, 46, 47, 48, 50, 70, 109], "bibtex": 109, "binari": [21, 24, 25, 26, 70, 110, 112], "bit": 110, "black": [12, 22], "blob": 69, "block": [28, 110], "blue": 25, "bonu": 28, "bool": [29, 30, 33, 35, 37, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 57, 58, 59, 60, 66, 67, 69, 70, 78, 79, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106], "boolean": [68, 69, 70, 71, 107], "borgwardt": [17, 45, 46, 109], "both": [17, 18, 52, 95, 99, 109, 110], "bottom": [1, 2, 3, 4], "bound": [45, 46, 48, 109], "boundari": [12, 13, 14, 15, 21, 53, 54], "branch": 28, "break_ti": 21, "bregman": [14, 16, 18, 67, 109], "bridg": [84, 85, 109], "bring": 111, "broad": 28, "browser": 28, "brute": [53, 54], "bruzzon": [33, 92, 109], "bsd": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 109], "bueno": [3, 12, 17, 18, 109], "bug": 111, "build": [28, 110], "built": 110, "bunch": [68, 69, 70, 71, 110], "butscher": [14, 109], "button": 28, "bz2": 7, "b\u00e9zier": 22, "b\u00fcnau": [17, 109], "c": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 109], "c0": 13, "c1": 13, "c7": 16, "c84630": 22, "c_": [13, 14], "cach": 91, "cache_s": 21, "calcul": [70, 73, 76, 83, 86, 87, 90], "call": [1, 2, 3, 4, 6, 16, 20, 21, 43, 44, 61, 62, 68, 69, 70, 71, 93, 100, 110], "callabl": [53, 54, 91, 92, 93, 94, 95, 98], "callback": [72, 111], "came": 12, "can": [12, 13, 14, 16, 20, 25, 26, 28, 33, 38, 39, 42, 53, 54, 55, 56, 73, 100, 105, 109, 110, 111, 112], "cannot": 91, "cao": 109, "captur": 75, "carri": 21, "case": [12, 13, 14, 17, 18, 20, 28, 53, 54, 92, 93, 94, 96, 97, 98, 110, 111], "cast": 109, "categor": [68, 69, 70, 71], "cavazza": 109, "cax": 3, "cb": 3, "cbar_ax": 3, "cd": 28, "cdan": [75, 109], "cdd": 73, "ceil_mod": 9, "center": [25, 29, 30, 43, 44, 68, 69, 70, 78, 79, 88], "center_cov_shift": 70, "centers_": 44, "centroid": [72, 73, 86, 111], "chain": 91, "chan": 4, "chanc": [110, 112], "chang": [6, 13, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109], "changelog": 111, "channel": 71, "chawla": [2, 3, 70], "check": [28, 111], "check_": 111, "check_result": [14, 21], "checkout": 28, "chen": 109, "choic": [6, 20, 110], "choos": [20, 43, 44, 70], "chosen": [44, 73], "circl": 12, "circleci": [1, 6, 7, 8, 9, 14, 16, 18, 21], "circular": [33, 92, 109], "citat": 109, "cite": 109, "citeseerx": 109, "cjlin": 7, "clariti": 110, "class": [4, 9, 14, 16, 20, 21, 25, 31, 32, 33, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110], "class_threshold": [72, 73, 86], "class_weight": 21, "classic": 18, "classif": [2, 3, 6, 7, 8, 9, 11, 16, 23, 24, 26, 29, 31, 33, 34, 36, 38, 40, 43, 47, 49, 51, 53, 54, 55, 61, 63, 67, 70, 92, 109, 113], "classifi": [11, 16, 17, 18, 19, 21, 33, 36, 37, 42, 68, 70, 74, 75, 77, 84, 93, 104, 109, 113], "classificationtechniqu": 109, "classregularizedotmap": 31, "classregularizerotmap": 21, "classregularizerotmappingadapt": [16, 21, 110], "claus": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 109], "clf": [13, 14, 15, 16, 17, 18, 20, 21], "clf_jcpot": 14, "clf_on_subspac": 18, "clf_otda": 16, "clf_otda_linear": 16, "clf_otda_sinkhorn": 16, "clf_otds_classreg": 16, "click": 28, "clone": [6, 7, 8, 9, 12, 18, 21, 28, 91, 110], "close": 12, "closer": [17, 53, 54], "closest": [22, 110], "closest_point": 22, "cluster": [68, 69, 70, 71, 73, 86, 95], "cluster_std": 69, "cm": [17, 18, 21, 25], "cm_bright": 21, "cmap": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "cmap_cv": 25, "cmap_data": 25, "cmap_domain": 25, "co": 22, "code": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 109, 110], "coef0": [21, 45, 46], "colla": [18, 109], "collabor": [28, 109], "collect": [72, 74, 77, 78, 80, 82, 84], "color": [12, 17, 18, 21, 22, 24, 25], "color_": 22, "color_0": 22, "color_1": 22, "color_unlabel": 22, "colorbar": 3, "colormap": [1, 17, 18], "com": [7, 17, 18, 28, 109, 111], "comb": 22, "combin": 110, "come": [25, 28, 99], "command": 28, "commit": 28, "committ": 28, "common": [28, 110], "compar": [13, 24, 28, 110, 111], "comparison": [11, 23, 29, 31, 34, 36, 38, 40, 43, 47, 49, 51, 53, 55, 61, 63, 67, 70, 113], "compat": [20, 100, 109, 110, 111], "complement": 99, "complet": [28, 91, 111], "compli": 28, "complic": 110, "compon": [61, 62, 63, 64, 65, 66, 67, 109], "compos": [25, 99], "compromis": 28, "comput": [13, 14, 16, 17, 18, 22, 24, 29, 30, 43, 44, 52, 53, 54, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 97, 98, 109, 110, 111], "compute_weight": 17, "con": 109, "concaten": [12, 110], "concentr": [28, 48, 109], "concept": [2, 3, 20, 70, 110], "concept_drift": [2, 3, 13, 14, 15, 16, 20, 21, 24, 25, 26, 70], "condit": [49, 50, 51, 52, 74, 75, 109], "confer": [14, 18, 61, 62, 65, 66, 72, 73, 80, 81, 84, 85, 86, 89, 97, 109], "confus": [82, 83, 90, 109], "consid": [28, 53, 54, 72, 73, 86, 108, 110], "consider": 110, "consist": [1, 2, 3, 4, 12, 28, 95], "constant": [18, 65, 66, 70, 73, 76, 83, 86, 87, 90, 93], "construct": [6, 7, 8, 9, 18, 21, 53, 54, 91], "constructor": 91, "consum": 91, "contact": 18, "contain": [29, 31, 34, 36, 38, 40, 43, 45, 47, 49, 51, 53, 54, 55, 61, 63, 65, 67, 103, 104, 108, 110], "context": [53, 54], "contour": 17, "contrast": [72, 73, 86, 109], "contribut": 109, "contributor": 111, "control": [22, 95, 99], "conv1": 9, "conv2": 9, "conv2d": 9, "convei": 21, "conveni": 110, "convent": [68, 69, 70, 71, 110], "converg": [14, 16, 21, 31, 32, 38, 39, 42, 55, 56], "convolut": 109, "coolwarm": 25, "copi": [6, 7, 8, 9, 18, 21, 28, 91], "coral": [7, 20, 21, 49, 78, 79, 88, 109, 111], "coraladapt": [20, 21, 109, 110], "coraladapter__reg": [20, 109], "core": [28, 110], "correct": [17, 28, 45, 46, 109], "correl": [7, 29, 30, 78, 79, 88, 96, 109], "correspond": [14, 42, 71, 106], "could": [16, 110], "count": 17, "coupl": [103, 104], "coupling_": 16, "courti": [13, 16, 31, 32, 38, 39, 42, 47, 55, 56, 80, 81, 89, 109], "cov_source_": 41, "cov_source_inv_sqrt_": 30, "cov_target_": 41, "cov_target_sqrt_": 30, "covari": [2, 3, 11, 12, 19, 29, 30, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 53, 67, 70, 79, 94, 104, 107, 109, 113], "covariate_shift": [2, 3, 21, 70, 110, 112], "cover": 110, "coverag": 28, "cpu": 9, "creat": [9, 12, 17, 18, 20, 22, 24, 25, 26, 28, 74, 77, 84, 89, 95, 109, 110], "creation": [43, 44, 61, 62, 68, 69, 70, 71], "criterion": [6, 7, 8, 43, 44, 45, 46, 49, 50, 51, 52, 72, 74, 75, 77, 78, 80, 81, 82, 84, 89], "cross": [11, 24, 26, 27, 43, 44, 70, 93, 94, 99, 100, 101, 102, 109, 110, 113], "cross_entropy_loss": 93, "cross_val_scor": [11, 20, 27, 38, 70, 91, 98, 104, 109, 110, 112, 113], "cross_valid": 110, "crosscovari": 75, "crossentropyloss": [6, 7, 8, 9, 72, 74, 77, 78, 80, 82, 84, 89], "csie": 7, "cuda": 9, "current": [12, 28, 109], "curv": 22, "custom": 91, "cv": [20, 21, 24, 25, 26, 43, 44, 100, 109, 110, 111, 112], "cv_arg": 25, "cv_results_": 26, "cvf": [72, 73, 86, 109], "cvpr": [18, 65, 66, 109], "d": [16, 18, 21, 22, 31, 32, 38, 39, 47, 55, 56, 67, 109], "da": [8, 10, 12, 14, 17, 18, 23, 24, 25, 26, 29, 31, 34, 36, 38, 40, 43, 47, 49, 51, 53, 55, 61, 63, 67, 70, 72, 74, 77, 78, 79, 80, 82, 84, 105, 111, 112, 113], "da_dataset": 110, "da_shufflesplit": 102, "daestim": 0, "damodaran": [80, 81, 89, 109], "dan": [76, 109, 111], "dann": 109, "dapeng": 95, "darrel": 109, "dasvm": [11, 19, 33, 68, 92, 104, 109, 113], "data": [1, 2, 3, 4, 12, 17, 18, 20, 21, 24, 25, 28, 29, 30, 32, 35, 37, 39, 41, 44, 45, 46, 48, 50, 52, 54, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 78, 79, 86, 88, 89, 93, 94, 99, 100, 101, 103, 104, 108, 109, 110, 112], "dataload": 9, "datapoint": 12, "datas": 25, "dataset": [5, 19, 21, 24, 25, 26, 29, 31, 34, 36, 38, 40, 43, 44, 45, 46, 47, 49, 53, 55, 61, 62, 63, 65, 67, 96, 97, 98, 99, 100, 104, 107, 112, 113], "dataset2": 25, "de": [17, 109], "deal": [18, 110], "decid": [53, 54], "decis": [12, 13, 14, 15, 21, 53, 54], "decision_boundari": 12, "decision_funct": [12, 33, 57, 58, 59, 60], "decision_function_shap": 21, "decisionboundarydisplai": [16, 17, 18, 21, 26], "decomposit": 20, "deep": [6, 7, 8, 10, 93, 96, 110, 111, 113], "deepcor": [9, 79, 88, 90, 109, 111], "deepcoralloss": 9, "deepjdot": [81, 89, 109, 111], "def": [2, 3, 15, 17, 18, 22, 25], "default": [13, 17, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110], "default_selector": [20, 91], "defin": [17, 22, 25, 43, 44, 53, 54, 86, 87, 110, 112], "degre": [21, 45, 46], "delta_f": [4, 71], "demonstr": [28, 110], "densiti": [21, 34, 35, 44, 46, 52, 53, 94, 97, 109], "densityratio": 109, "densityreweight": [17, 21, 51, 53, 110, 112], "densityreweightadapt": [21, 110], "depend": [25, 53, 54, 99, 108, 109], "deprec": 6, "deriv": [17, 110], "describ": [18, 28, 73], "descript": [2, 3, 28, 68, 69, 70, 71, 110], "design": [20, 101, 110, 111], "desir": 28, "detach": [6, 7, 8, 9, 18, 21], "detail": [2, 3, 17, 18, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 66, 70, 85, 92, 93, 94, 95, 96, 97, 109, 110], "determin": [43, 44, 61, 62, 68, 69, 70, 71, 93], "dev": [109, 111], "develop": [28, 109], "devi": [80, 81, 89, 109], "deviat": [68, 69, 70, 71], "devic": 9, "diagon": [47, 48], "dict": [17, 18, 53, 54, 68, 69, 70, 71, 103, 106], "dict_kei": 110, "dictionari": [20, 68, 69, 70, 71, 106, 110], "did": [14, 16, 21], "differ": [12, 14, 20, 21, 25, 52, 66, 67, 71, 100, 110, 112], "dilat": 9, "dim": 6, "dimens": 6, "dimension": [18, 105], "ding": [18, 65, 66, 109], "direct": [17, 43, 44, 109], "directli": [26, 91], "directori": [28, 91], "disc_classifi": 84, "discard": [33, 72, 73, 86], "discr": 21, "discrep": [18, 46, 50, 52, 73, 81, 84, 85, 86], "discrimin": [36, 84, 85, 109], "discriminatorreweight": [17, 21], "discriminatorreweightadapt": [21, 110], "discuss": 109, "disi": 109, "disk": 28, "dispar": [84, 85], "dissimilar": 111, "distanc": [53, 54, 56, 64, 72, 73, 76, 79, 80, 81, 83, 86, 87, 89, 90], "distance_metr": [53, 54], "distance_threshold": [72, 73, 86], "distinct": 110, "distribut": [1, 2, 3, 4, 12, 13, 16, 17, 18, 21, 25, 42, 48, 52, 70, 80, 81, 89, 109, 110, 112], "diverg": [10, 11, 17, 18, 44, 46, 52, 67, 75, 78, 81, 89, 109, 113], "divid": [69, 88, 90], "do": [12, 24, 26, 28, 110, 111, 112], "doc": [28, 111], "docstr": [28, 102, 111], "doctest": 28, "document": [25, 53, 54, 94, 95, 98, 109, 111], "doe": [14, 20, 21, 28, 91, 110, 112], "doesn": [53, 54], "doi": 109, "domain": [0, 5, 10, 13, 14, 19, 20, 25, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113], "domain_classifi": [21, 36, 37, 74, 77, 84, 93], "domain_classifier_": 37, "domain_criterion": [74, 75, 77], "domain_label": 57, "domain_nam": [68, 69, 70, 71, 110], "domain_pred_": [73, 75, 85], "domain_pred_t": [73, 75, 85], "domain_sourc": 1, "domain_target": 1, "domainandlabelstratifiedsubsampletransform": 111, "domainawar": 110, "domainawarecriterion": 9, "domainawaredataset": [68, 69, 70, 71, 110], "domainawareestim": 110, "domainawaremodul": 9, "domainawarenet": [9, 111], "domainbalanceddataload": 9, "domainonlydataload": 111, "domainonlysampl": 111, "domains_idx": 106, "domainshufflesplit": 25, "domainstratifiedsubsampletransform": 111, "domainsubsampl": 111, "don": 110, "done": [14, 16, 20, 22, 24, 109, 110, 112], "dot": 22, "dots_class": 22, "dots_keep": 22, "dots_rot": 22, "download": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "dpi": 22, "draw_": 22, "drawn": 25, "drift": [2, 3, 20, 70], "dropout": 9, "dropout1": 9, "dropout2": 9, "ds_cnt": 21, "dslr": 110, "dtype": [18, 21], "due": [13, 14, 15], "duplic": 28, "dur": [6, 7, 8, 9], "dure": [20, 26, 53, 54, 72, 74, 77, 78, 80, 82, 84, 110], "e": [12, 18, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 59, 60, 74, 75, 77, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 109], "each": [1, 2, 3, 4, 20, 25, 33, 35, 37, 41, 42, 44, 46, 52, 53, 54, 57, 58, 59, 60, 66, 68, 69, 70, 71, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110], "earth": 56, "easier": 110, "eccv": [7, 78, 79, 80, 81, 82, 83, 88, 89, 90, 109], "edg": 111, "edit": 28, "editor": 28, "editsec": 17, "edu": [3, 7, 17, 18, 109], "eduardo": 109, "effect": [17, 18, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110], "effici": [53, 54], "eigenvalu": 18, "eigenvector": [18, 64], "eigvects_": 64, "either": 69, "elaps": 91, "element": [53, 54, 68, 69, 70, 71], "elig": 28, "els": [9, 12, 17, 18, 21, 22], "email": 28, "embed": [74, 109], "emd": 22, "empir": 48, "empti": [108, 111], "enabl": 91, "enable_metadata_rout": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "encapsul": 91, "encod": [20, 85], "end": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 70], "engin": [18, 67, 109], "enhanc": [28, 111], "ensur": [1, 2, 3, 4, 17, 21, 28], "entiti": 110, "entitl": [53, 54], "entrop": [21, 31, 32, 38, 39], "entropi": [20, 26, 93, 96, 97, 109], "entropicotmap": [21, 24, 26, 110, 112], "entropicotmappingadapt": [16, 21, 110], "entropicotmappingadapter__reg_": 26, "enumer": [21, 22, 25, 102], "ep": [16, 17, 18, 21, 26, 45, 46, 73, 76, 83, 86, 87, 90], "epoch": [6, 7, 8, 9], "epsilon": [12, 93, 111], "eq": 97, "equal": [52, 53, 54, 63, 64, 65, 66, 67, 69], "equip": [12, 33], "equival": [53, 54], "error": [7, 20, 28, 31, 32, 35, 37, 38, 39, 41, 44, 46, 52, 54, 55, 56, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109], "estim": [12, 13, 14, 17, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 109, 112], "estimator_": 42, "estimator_no_da": 24, "et": [17, 18, 43, 44, 49, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 84, 85, 87, 93, 94, 95, 96, 97], "etc": [12, 28, 109], "euclidean": [53, 54], "euclidean_dist": [53, 54], "european": [80, 81, 89, 109], "evalu": [13, 14, 15, 24, 26, 94, 95, 98, 110, 112], "even": [42, 91, 108, 110], "everi": [28, 69], "evolut": 12, "exact": 92, "exactli": 110, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 54, 108, 110, 113], "except": [28, 103, 104], "exdb": 7, "execut": [5, 10, 19, 23, 27, 110, 113], "exist": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 70, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "expect": [28, 53, 54], "experienc": 28, "explan": 28, "explicit": 110, "explor": 18, "expos": 110, "extent": [13, 14], "extract": [7, 106, 107], "extract_source_indic": 17, "extractor": [77, 84], "f": [1, 2, 3, 4, 12, 13, 14, 16, 17, 18, 20, 24, 25, 26, 70, 102, 109], "factori": 22, "fail": [7, 28, 110], "fals": [6, 7, 8, 9, 17, 18, 21, 22, 24, 25, 29, 30, 33, 35, 37, 41, 42, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 78, 79, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 110], "famili": 22, "far": [72, 73, 86], "fc1": [6, 7, 8, 9], "fc2": 9, "featur": [1, 2, 3, 16, 17, 18, 28, 42, 65, 66, 69, 73, 75, 76, 77, 79, 84, 86, 87, 88, 89, 93, 100, 103, 104, 105, 109, 111], "features_": [73, 75, 76, 79, 81, 86, 87, 89], "features_t": [73, 75, 76, 79, 81, 86, 87, 89], "features_target": 88, "feel": [28, 109, 110], "fei": 109, "fellow": 109, "feng": [29, 30, 109], "fernand": 109, "fernando": [18, 61, 62, 109], "ferrari": [48, 109], "fetch": 110, "fetch_all_office31_surf": 110, "fetch_office31_surf_al": 110, "fetcher": 110, "few": [109, 110], "ff0000": 21, "ffa056": [17, 18], "fig": [1, 2, 3, 4, 22, 25], "figsiz": [1, 2, 3, 4, 12, 16, 17, 18, 21, 22, 24, 25], "figur": [12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 28], "file": [5, 10, 11, 19, 23, 27, 113], "fill": 25, "filterwarn": 26, "final": [20, 21, 67, 109], "final_angl": 22, "find": [14, 17, 26, 44, 46, 50, 52], "first": [12, 17, 21, 24, 25, 26, 28, 101, 108, 109, 110], "fisher": 18, "fit": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 91, 94, 109, 110, 112], "fit_param": [110, 112], "fit_predict": 110, "fit_transform": 14, "fix": [28, 29, 30, 40, 41, 42, 67, 69, 111], "fixtur": 111, "flamari": [13, 14, 15, 16, 20, 31, 32, 38, 39, 42, 47, 48, 55, 56, 80, 81, 89, 109], "flda": [21, 67], "flip": [92, 93, 94, 96, 97, 98], "float": [29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 95, 96, 97, 99], "float64": [13, 14, 15, 16, 18, 21], "florent": 109, "flow": 110, "fluctuat": 110, "fly": 110, "fold": [25, 43, 44, 99, 102], "folder": 28, "follow": [16, 17, 18, 20, 25, 28, 68, 69, 70, 71, 74, 77, 84, 85, 101, 109, 110], "font": 22, "fontsiz": [1, 2, 3, 12, 17, 18, 22, 25], "forbidden": 7, "forc": [53, 54], "fork": 28, "form": [25, 91, 92, 101], "format": [25, 28, 109], "forward": [9, 73, 75, 76, 79, 81, 83, 85], "found": [28, 110], "fr": 18, "framework": [109, 110], "frank": [17, 45, 46], "fred": 109, "free": [28, 109, 110], "frequenc": [4, 71], "friend": 28, "frobeniu": [88, 90], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 52, 53, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 86, 91, 95, 99, 102, 108, 109, 110, 112, 113], "from_estim": [16, 17, 18, 21, 26], "full": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 109, 111], "function": [17, 18, 20, 25, 28, 36, 37, 40, 41, 42, 43, 44, 45, 46, 53, 54, 61, 62, 68, 69, 70, 71, 83, 91, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111, 112], "further": [12, 28, 53, 54], "g": [2, 3, 16, 18, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 59, 60, 65, 66, 70, 72, 73, 74, 77, 84, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 109], "g_": 50, "galleri": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 109, 113], "gamma": [17, 21, 43, 44, 45, 46, 49, 50, 51, 52, 70, 84, 85], "gang": 109, "ganin": [77, 109], "gaussian": [21, 37, 40, 41, 47, 48, 49, 50, 68, 69, 70, 71, 72, 73, 76, 86, 87, 109], "gaussiannb": 91, "gaussianreweight": [17, 20, 21], "gaussianreweightadapt": [20, 21, 109, 110], "gca": 16, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 11, 20, 21, 23, 24, 25, 26, 28, 43, 44, 61, 62, 68, 69, 70, 71, 74, 77, 84, 93, 95, 100, 105, 109, 110, 111, 113], "geng": [18, 67, 109], "germain": 109, "get": [17, 20, 22, 110], "get_domain": 21, "get_estim": [16, 17, 18, 57, 60], "get_multidomain_data": 15, "get_n_split": [100, 102], "gist": 28, "git": [28, 109], "github": [28, 109, 111], "give": [16, 28], "given": [2, 3, 12, 35, 37, 38, 39, 41, 43, 44, 46, 52, 54, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110], "glad": 28, "glossari": [53, 54], "gmail": [17, 18], "gnassoun": [6, 7, 8, 9, 22, 109], "gnassounou2024skada": 109, "go": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 110], "goal": [12, 17, 18], "good": [28, 92, 93, 94, 96, 97, 98], "gradient": [9, 21, 67], "grai": [12, 14], "grain": 21, "gramfort": 109, "grant": 28, "graph": [53, 54, 109], "great": 28, "greater": [53, 54], "greater_is_bett": [92, 93, 94, 95, 96, 97, 98], "greatli": 28, "grei": 1, "gretton": [17, 45, 46, 109], "grid": [26, 109], "grid_search": [20, 26, 109], "gridsearchcv": [11, 20, 27, 38, 70, 94, 96, 109, 110, 112, 113], "ground": [31, 32, 38, 39, 55, 56], "group": 102, "guarante": 42, "guess": 24, "guiba": [14, 109], "guid": [28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 111], "guidelin": 28, "gz": 7, "h": [17, 109], "h_": 50, "ha": [6, 12, 25, 31, 32, 35, 37, 38, 39, 41, 44, 46, 52, 54, 55, 56, 57, 58, 59, 60, 74, 77, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110], "habrard": [13, 42, 109], "hand": 28, "handl": [12, 20, 28, 111], "haobo": 109, "harder": 75, "harmon": 111, "hauptmann": [72, 73, 86, 109], "have": [12, 18, 25, 28, 53, 54, 68, 69, 70, 71, 84, 103, 104, 108, 110, 111, 112], "height": 110, "help": 28, "helper": [16, 110], "here": [2, 3, 12, 16, 20, 102, 109], "herrera": [2, 3, 70], "hide": 22, "hidetoshi": [17, 36, 37, 40, 41, 109], "hierarch": 101, "high": [28, 92, 93, 94, 96, 97, 98, 110, 112], "higher": 95, "highest": 64, "highlight": 28, "hilbert": 18, "hing": [13, 21], "hisashi": 109, "ho": 109, "hold": 28, "home": [1, 6, 7, 8, 9, 14, 16, 18, 21], "hook": 28, "horizontalalign": [17, 18, 21], "how": [11, 13, 14, 23, 25, 29, 30, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 70, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 109, 110, 113], "howev": 12, "hstack": 15, "html": 28, "http": [7, 17, 109, 111], "hu": [95, 109], "huang": [17, 45, 46, 109], "hyperparamet": 109, "i": [1, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 28, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112], "ic": 95, "ice_typ": 95, "iclr": 96, "icml": [49, 50, 51, 52, 76, 87, 93], "idea": [16, 17, 44, 46, 52], "ident": [100, 103, 104], "idx": 17, "idx1": 7, "idx3": 7, "ieee": [16, 17, 18, 31, 32, 33, 38, 39, 47, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 72, 73, 86, 92, 109], "ievgen": 109, "ignor": [1, 26, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110], "ii": 25, "iii": 109, "illustr": [1, 2, 3, 4, 6, 7, 8, 9, 12, 15, 20, 21, 24, 25, 26, 28, 109], "imag": [110, 112], "impact": [53, 54], "implement": [17, 18, 28, 73, 101, 110], "implicit": 6, "import": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 43, 44, 46, 52, 53, 54, 91, 94, 99, 102, 109, 110, 112], "importanceweightedscor": [26, 110, 111], "importantli": 20, "improv": [12, 17, 36, 37, 40, 41, 109, 111], "imshow": [13, 14], "in_featur": 9, "includ": [6, 20, 24, 26, 28, 91, 99, 109, 110], "include_all_target": 110, "inclus": 28, "incomplet": 28, "increas": [14, 16, 21], "independ": [18, 70], "index": [25, 102, 105, 106, 109, 110, 111], "index_source_delet": 33, "index_target_ad": 33, "indic": [25, 28, 53, 54, 68, 69, 70, 71, 99, 100, 101, 106, 107], "indices_source_delet": 12, "indices_target_ad": 12, "indx_sort": 25, "infer": [17, 36, 37, 40, 41, 108, 109], "influenc": [53, 54], "inform": [13, 28, 42, 109], "initi": [9, 75, 110, 112], "inner": [31, 32], "inplac": 9, "input": [9, 17, 20, 44, 46, 52, 53, 54, 74, 77, 84, 103, 104, 105, 109, 111], "insid": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "inspect": [16, 17, 18, 21, 26, 91], "inspir": 28, "instabl": 93, "instal": 28, "instanc": [18, 20, 42, 43, 44, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 77, 78, 80, 82, 84, 91, 93, 95, 99, 109], "instanti": [74, 77, 84], "instead": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111], "institut": [17, 109], "instruct": 28, "int": [31, 32, 33, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 84, 86, 93, 95, 99, 100, 102], "integ": [20, 68, 69, 70, 71, 93, 100, 110], "integr": [91, 110], "intel": 109, "intellig": [16, 31, 32, 33, 38, 39, 47, 55, 56, 92, 109], "inter": 95, "interest": 109, "interfac": [91, 110], "intern": [14, 17, 18, 53, 54, 61, 62, 84, 85, 97, 109], "intra": 95, "introduc": [110, 111], "intuit": [21, 28], "invers": [30, 53, 54], "involv": 28, "io": 109, "ipynb": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "is_avail": 9, "is_fit": 9, "ism": 17, "isotrop": 69, "issu": [28, 109, 111], "ist": 109, "item": [9, 17, 18, 28, 102], "iter": [9, 13, 14, 16, 21, 25, 31, 32, 33, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 65, 66, 67, 99, 100, 110], "its": [13, 14, 15, 17, 44, 52, 110], "j": [2, 3, 12, 13, 14, 16, 17, 18, 45, 46, 65, 66, 70, 109], "januari": [14, 109], "jcpot": 111, "jcpotlabelpropadapt": 14, "jdot": [11, 19, 21, 42, 70, 104, 109, 113], "jdotclassifi": [13, 21], "jdotregressor": 13, "jialin": [18, 63, 64], "jiang": [72, 73, 86, 109], "jianmin": [82, 83, 90, 109], "jiashi": [29, 30, 109], "jin": [82, 83, 90, 109], "job": [53, 54, 110], "joblib": [53, 54, 91], "joint": [13, 42, 65, 66, 80, 81, 89, 109], "jordan": 109, "journal": [17, 36, 37, 40, 41, 77, 94, 109], "jp": 17, "junbo": 109, "june": 109, "jupyt": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "just": 21, "k": [12, 13, 17, 18, 22, 24, 33, 45, 46, 48, 109, 111], "k_": 64, "kachaiev": [17, 18, 109], "kachayev": [17, 18], "kaichao": 93, "kanamori": 109, "kang": [72, 73, 86, 109], "kashima": [17, 109], "kate": [7, 29, 30, 78, 79, 88, 109], "kawanab": [17, 109], "kd_tree": [53, 54], "kdtree": [53, 54], "keep": 28, "kei": [17, 18, 106, 110], "kellenberg": [80, 81, 89, 109], "kept": [61, 62], "kernel": [12, 13, 14, 16, 18, 21, 31, 43, 44, 45, 46, 49, 50, 51, 52, 63, 64, 65, 66, 67, 70, 72, 73, 76, 86, 87], "kernel_ridg": [13, 14], "kernel_s": 9, "kerneldens": [17, 21, 34, 35, 94], "kernelridg": [13, 14], "keyword": [53, 54], "kim": 109, "kind": 14, "kl": [17, 44], "klau": 109, "kliepreweight": [21, 44, 109], "kliepreweightadapt": [21, 110], "kmean": [73, 86], "kmmreweight": [17, 46, 109], "knn": [53, 54], "know": 12, "knowledg": [18, 28, 67, 109], "krauledat": 109, "krr": [13, 14], "kullback": [17, 44], "kun": [49, 50, 51, 52], "kuniaki": 97, "kwarg": [6, 33, 42, 44, 57, 58, 59, 60, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93], "kwok": 109, "l": [14, 33, 72, 73, 86, 92, 109], "l1": [31, 32, 53, 54], "l1l2": [31, 32], "l2": [31, 32, 42, 53, 54], "l_p": [53, 54], "label": [2, 3, 4, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 31, 32, 35, 37, 41, 42, 44, 46, 49, 50, 51, 52, 54, 57, 68, 69, 70, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 86, 89, 91, 92, 93, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "lalou": [25, 109], "laplac": [53, 54], "laplace_smooth": [17, 21, 53, 54], "larg": [38, 39, 55, 56, 110], "largest": 74, "larochel": 109, "last": [20, 53, 77, 84, 91], "latter": [92, 93, 94, 96, 97, 98], "laviolett": 109, "layer": [72, 73, 74, 77, 78, 80, 82, 84], "layer_nam": [6, 7, 8, 9, 72, 74, 77, 78, 80, 82, 84], "lda": 18, "leaf": [53, 54], "leaf_siz": [21, 53, 54], "learn": [13, 14, 17, 20, 25, 28, 42, 46, 50, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 76, 77, 84, 85, 87, 91, 94, 100, 110, 111, 112], "least": [28, 42, 102, 108], "leav": 100, "leaveonedomainout": [25, 110], "lecun": 7, "ledoit": [29, 30, 40, 41], "left": [12, 25], "legend": [4, 12, 13, 14, 15, 24, 25], "lei": 109, "leibler": [17, 44], "lemma": [29, 30, 40, 41], "lempitski": 109, "len": [12, 17, 18, 21, 22, 25, 104, 108], "length": [67, 69, 103, 104, 108], "length_scal": [21, 67], "length_step": 22, "less": [53, 54, 63, 64, 65, 66, 67], "let": [25, 110, 112], "level": 110, "lexsort": 25, "liang": 109, "lib": [6, 14, 16, 21], "librari": [109, 110], "libsvmtool": 7, "licens": [3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25], "liew": 109, "like": [20, 28, 35, 37, 41, 43, 44, 46, 50, 51, 52, 54, 68, 69, 70, 71, 72, 73, 76, 86, 87, 93, 100, 103, 104, 105, 106, 107, 108, 110, 112], "likelihood": [17, 36, 37, 40, 41, 43, 44, 109], "lim": 16, "limit": 110, "line": 12, "line2d": 12, "linear": [9, 11, 12, 16, 19, 21, 47, 48, 50, 70, 91, 104, 109, 113], "linear_model": [13, 14, 15, 17, 20, 109, 110, 112], "linearmong": 109, "linearotmap": 21, "linearotmappingadapt": [16, 21, 110], "linearregress": 42, "linestyl": 24, "linewidth": 22, "link": 28, "linspac": [4, 12, 13, 14, 18, 22], "lint": 28, "list": [12, 18, 25, 28, 42, 44, 53, 54, 72, 91, 104, 108, 110], "listedcolormap": [17, 18, 21], "literatur": 28, "liu": 109, "live": 28, "ll": [25, 108], "load": [110, 112], "load_mnist_usp": [6, 7, 8, 9], "loc": [12, 21, 25], "local": [6, 14, 16, 21, 28], "locat": [12, 50, 69], "lodo": 25, "log": [17, 36, 37, 38, 39, 40, 41, 55, 56, 109, 111], "logist": 14, "logisticregress": [12, 13, 14, 15, 17, 20, 21, 36, 37, 43, 45, 93, 109, 110, 112], "loglog": [38, 39, 55, 56], "logo": [11, 23, 111, 113], "logreg": 14, "loison": 109, "long": [18, 65, 66, 74, 75, 76, 82, 83, 87, 90, 109], "longer": 110, "loog": [17, 109], "look": [17, 28, 110], "loop": [9, 31, 32, 109], "loss": [9, 13, 18, 42, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 93, 94, 96, 97, 98, 111], "loss_fn": 9, "loss_func": 93, "loss_ot": 13, "loss_tgt_label": 13, "lounici": [48, 109], "low": [92, 93, 94, 96, 97, 98, 110], "lower": [12, 13, 14, 15, 18, 21], "lowercas": 91, "lp": [14, 21, 31, 32], "lpl1": [21, 31, 32], "lpp": 67, "lr": [6, 7, 8, 9], "lst_loss_ot_": 42, "lst_loss_tgt_labels_": 42, "lstrip": [17, 18, 21], "lw": 25, "m": [17, 18, 33, 65, 66, 92, 109], "mach": 109, "machin": [14, 16, 17, 31, 32, 33, 38, 39, 47, 53, 54, 55, 56, 77, 84, 85, 92, 94, 109], "made": [99, 102], "magic": 28, "mai": [28, 53, 54, 100, 109], "mail": 28, "main": [12, 28], "maintain": 109, "make": [25, 28, 68, 71, 75, 100, 109, 110, 112], "make_da_pipelin": [14, 15, 16, 20, 24, 109, 110, 111], "make_dataset": [4, 21], "make_dataset_from_moons_distribut": [1, 12], "make_pipelin": 20, "make_shifted_dataset": [1, 2, 3, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 110, 112], "make_variable_frequency_dataset": 4, "mandat": 110, "manhattan_dist": [53, 54], "manner": 28, "map": [16, 18, 21, 47, 48, 49, 50, 109], "marconcini": [33, 92, 109], "margin": [12, 84, 85], "margin_lin": 12, "mark": [18, 110], "markdown": 28, "marker": [12, 15, 18, 22, 25, 110], "markers": 12, "masashi": [17, 43, 44, 94, 109], "mask": [25, 110], "match": [13, 46, 65, 66, 109], "math": 22, "mathelin": [17, 109], "mathemat": [17, 28, 109], "matplotlib": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28], "matrix": [49, 50, 51, 52, 53, 54, 70, 89], "mattia": 109, "matur": 28, "mauric": 109, "max": [3, 13, 16, 17, 18, 21, 22, 38, 39, 42, 55, 56, 111], "max_epoch": [6, 7, 8, 9], "max_featur": 74, "max_inner_it": [21, 31, 32], "max_it": [17, 21, 31, 32, 33, 38, 39, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 65, 66, 67], "max_len": [17, 18], "max_n_split": [100, 110], "maxim": [17, 33, 65, 66, 67], "maximum": [18, 21, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 74], "maxpool": 9, "maxpool2d": 9, "mb": [5, 10, 19, 23, 27, 113], "mboula": 109, "mcc": [83, 111], "md": 111, "mdd": [85, 111], "mean": [13, 14, 15, 18, 20, 22, 24, 41, 46, 50, 52, 53, 54, 70, 92, 93, 94, 96, 97, 98, 110, 111, 112], "mean_source_": [30, 41], "mean_squared_error": [13, 14], "mean_target_": [30, 41], "mean_test_scor": 26, "measur": 81, "mechan": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "median": [38, 39, 55, 56, 73, 76, 83, 86, 87, 90], "mellot": 109, "mem": [5, 10, 19, 23, 27, 113], "member": 109, "memori": [53, 54, 91], "mention": 28, "merg": [25, 28, 108], "meshgrid": [13, 14], "messag": 28, "meta": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110], "metadata": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "metadata_rout": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "method": [1, 2, 3, 4, 10, 12, 19, 20, 23, 25, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 70, 72, 75, 77, 78, 79, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 112, 113], "metric": [13, 14, 20, 21, 24, 26, 31, 32, 38, 39, 42, 53, 54, 55, 56], "metric_param": [21, 53, 54], "michel": 109, "might": [14, 16, 42], "min": [18, 21, 22, 61, 62], "mingsheng": [74, 75, 76, 82, 83, 87, 90, 109], "minim": [17, 44, 46, 50, 52, 75, 85, 96, 109], "minimum": [31, 32, 38, 39, 72, 73, 82, 83, 86, 90, 109], "minkowski": [21, 53, 54], "minkowski_dist": [53, 54], "minut": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "misc": 109, "mix": [95, 109], "mixup": 95, "mixval": [95, 111], "mixvalscor": 111, "mline": 12, "mlpregressor": 42, "mmd": [18, 21, 46, 50, 51, 52, 76, 87, 109], "mmdlsconsmap": [21, 50], "mmdlsconsmappingadapt": 21, "mmdtarsreweight": [21, 52], "mmdtarsreweightadapt": [21, 111], "mnist": [6, 7, 8, 9], "mnist_dataset": [6, 7, 8, 9], "mnist_target": [6, 7, 8, 9], "mnisttouspsnet": [6, 7, 8, 9], "mode": 105, "model": [9, 13, 17, 43, 44, 73, 86, 90, 93, 94, 95, 98, 109, 111], "model_select": [20, 24, 25, 26, 109, 110, 112], "modern": 22, "modif": 28, "modifi": [25, 111], "modified_fil": 28, "modul": [6, 7, 8, 9, 72, 74, 77, 78, 80, 82, 84, 109, 111], "module_": 9, "mong": [11, 19, 47, 48, 70, 91, 104, 109, 111, 113], "mongealign": 111, "montesuma": 109, "month": 109, "moon": [12, 68], "more": [12, 14, 17, 20, 28, 53, 54, 109, 110], "moreau": 109, "moreno": [2, 3, 70], "morerio": [96, 109], "most": [18, 25, 53, 54], "mostli": 110, "motoaki": 109, "move": 110, "mover": 56, "mrg": [28, 111], "mse": [13, 14, 42], "mse_": [13, 14], "mse_t": [13, 14], "mu": [18, 21, 63, 64, 67], "mu_regress": 70, "muandet": 109, "much": [13, 14, 15, 28], "multi": [1, 11, 19, 70, 72, 73, 86, 87, 91, 104, 109, 110, 111, 113], "multiclass": [2, 7, 13, 14, 15, 70], "multilinear": 75, "multilinearmongealignmentadapt": 15, "multinomi": 13, "multipl": [1, 2, 3, 4, 12, 20, 21, 43, 44, 61, 62, 68, 69, 70, 71, 93, 103, 105, 110], "multipli": 70, "murino": 109, "must": [20, 53, 54, 69, 96, 102, 108, 109], "my": 28, "m\u00fcller": 109, "n": [2, 3, 13, 15, 16, 17, 18, 22, 25, 31, 32, 38, 39, 42, 47, 55, 56, 70, 88, 90, 105, 109], "n_center": [21, 43, 44, 69], "n_channel": [4, 71], "n_class": [4, 6, 7, 8, 9, 50, 52, 71, 74, 84], "n_compon": [18, 20, 21, 61, 62, 63, 64, 65, 66, 67, 110], "n_dot": 22, "n_featur": [30, 35, 37, 41, 44, 46, 50, 52, 54, 61, 62, 69, 100, 103, 104, 105, 108], "n_frequenc": [4, 71], "n_frequency_sourc": 71, "n_iter_max": [21, 42], "n_job": [21, 53, 54], "n_neighbor": [21, 53, 54], "n_sampl": [6, 7, 8, 9, 16, 35, 37, 41, 44, 46, 50, 52, 54, 61, 62, 69, 70, 96, 100, 103, 104, 105, 106, 107, 108], "n_samples_sourc": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 45, 46, 68, 70, 71, 110, 112], "n_samples_target": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 68, 70, 71, 110, 112], "n_sourc": 15, "n_split": [24, 25, 26, 99, 100, 101, 102, 110, 112], "n_splits_lodo": 25, "n_target": 15, "n_tot_sourc": 16, "n_tot_target": 16, "naive_bay": 91, "nakajima": [17, 109], "name": [17, 18, 20, 21, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 59, 60, 68, 69, 70, 71, 72, 74, 77, 78, 80, 82, 84, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110], "named_step": [16, 91], "names_map": 25, "nan": [25, 105, 108], "narr": 28, "natur": [21, 53, 54, 70], "nd": 111, "ndarrai": [68, 69, 70, 71, 88, 89, 90, 96, 100, 108], "nearest": [52, 53, 54, 109], "nearestneighborreweight": [17, 21], "nearestneighborreweightadapt": 21, "necessari": [13, 28, 42, 110, 112], "necessarili": 21, "necessit": 110, "need": [20, 28, 93, 110], "neg": [68, 69, 70, 71, 109, 110], "neighbor": [21, 52, 53, 54, 109], "neighborhood": [53, 54, 97, 109], "neither": 110, "netherland": 109, "network": [18, 63, 64, 72, 73, 74, 75, 76, 77, 85, 86, 87, 109], "neural": [13, 18, 42, 63, 64, 77, 109], "neuralnetclassifi": [6, 7, 8], "neurip": [17, 43, 44, 74, 75, 95, 109], "never": [28, 91], "new": [12, 64, 110, 111], "next": [7, 110], "ngole": 109, "nicola": [80, 81, 89, 109], "nip": [17, 42, 45, 46, 109], "nn": [6, 7, 8, 9, 72, 74, 77, 78, 80, 82, 84], "nois": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 68, 69, 70, 71, 110, 112], "non": [28, 68, 69, 70, 71, 108, 110], "none": [9, 15, 17, 18, 21, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112], "nonzero": [53, 54], "noplot": 28, "norm": [21, 31, 32, 38, 39, 55, 56, 67, 88, 90], "normal": [17, 38, 39, 55, 56, 109], "note": [13, 20, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110], "notebook": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "notic": [12, 109], "now": [12, 13, 25, 110, 112], "np": [1, 4, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 70, 99, 100, 102, 108], "nt": 15, "ntu": 7, "num_featur": [6, 74, 77, 84], "number": [14, 16, 17, 25, 28, 31, 32, 33, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 86, 93, 95, 99, 100, 102, 108, 110], "numer": [38, 39, 55, 56, 73, 76, 83, 86, 87, 90, 93], "numitermax": [14, 16, 21], "numpi": [1, 4, 12, 13, 14, 15, 17, 18, 20, 22, 24, 25, 28, 99, 102], "o": [12, 15, 22, 109], "object": [12, 25, 29, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 112], "observ": [34, 35, 94], "occur": [38, 39, 55, 56], "octob": 109, "odonnat": 109, "odot": 50, "off": [22, 28, 42, 65, 66], "offer": [110, 112], "office31": 110, "often": 28, "oleksii": [17, 18, 109], "onc": [18, 25, 101, 110], "one": [1, 18, 20, 28, 53, 54, 68, 70, 71, 96, 108, 109, 110, 112], "ones": [15, 18, 20, 99, 102], "onli": [12, 20, 24, 25, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 59, 60, 70, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 111], "onto": 18, "open": [28, 109], "oper": [28, 48], "optim": [9, 10, 11, 13, 14, 17, 19, 21, 31, 32, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 67, 70, 80, 81, 89, 91, 104, 109, 113], "optimali": [17, 18], "option": [29, 31, 32, 34, 35, 36, 37, 38, 39, 41, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 73, 76, 78, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110], "orang": 25, "order": [110, 111], "org": 109, "organ": 20, "origin": [13, 14, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110], "ossci": 7, "ot": [14, 16, 21, 28, 32, 39, 42, 47, 48, 55, 56, 89, 109], "ot_transport_": [16, 32, 39, 48, 56], "otda": [11, 19, 32, 39, 48, 55, 56, 70, 91, 104, 109, 113], "other": [17, 25, 28, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 59, 60, 71, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110], "otherwis": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 68, 69, 70, 71, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110], "otlabelprop": 21, "otlabelpropadapt": [14, 21], "otmap": [16, 21], "otmappingadapt": [16, 21, 110], "ou": 111, "our": [25, 53, 54], "out": [12, 100, 109], "out_featur": 9, "outcom": [92, 93, 94, 96, 97, 98], "output": [9, 20, 28, 43, 44, 61, 62, 68, 69, 70, 71, 72, 74, 77, 78, 80, 82, 84, 90, 93, 110], "over": [21, 93], "overfit": [110, 112], "overrid": [53, 54], "overwrit": 20, "ovr": 21, "p": [9, 17, 18, 21, 52, 53, 54, 65, 66, 91, 109], "p_": 17, "p_sourc": [44, 46, 52], "p_target": [44, 46, 52], "pack": [18, 24, 25, 110], "pack_lodo": [25, 110], "pack_test": [6, 7, 8, 9, 25, 26, 110], "pack_train": [6, 7, 8, 9, 18, 21, 24, 25, 26, 110], "packag": [6, 14, 16, 21], "pad": 9, "page": [17, 18, 28, 53, 54, 65, 66, 67, 109], "pair": [68, 69, 70, 71, 108, 110], "pami": 109, "pan": [18, 63, 64, 109], "paper": [97, 109], "paragraph": 28, "parallel": [53, 54], "parallel_backend": [53, 54], "param": [20, 24, 109, 110, 111], "param_entropicotmappingadapter__reg_": 26, "param_grid": [20, 109], "paramet": [1, 14, 16, 20, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112], "part": [21, 109], "partial_fit": [57, 58, 59, 60], "particularli": 18, "pass": [9, 20, 24, 28, 35, 37, 41, 43, 44, 46, 52, 53, 54, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 74, 77, 84, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110], "patch": 25, "path": 91, "pattern": [2, 3, 16, 18, 29, 30, 31, 32, 33, 38, 39, 47, 55, 56, 65, 66, 70, 72, 73, 86, 92, 109], "paul": 109, "pca": [18, 20, 61, 62, 63, 64, 65, 66, 67, 110], "pca_source_": 62, "pca_target_": 62, "pdf": [17, 22, 28, 109], "peak": 71, "pep8": 28, "per": [20, 33, 100, 110], "per_domain": 91, "percentag": [25, 99, 102], "perdomain": [20, 110], "perdomainselector": 110, "perform": [13, 14, 15, 17, 18, 20, 24, 26, 28, 89, 91, 110], "permit": 91, "perspect": 109, "phase": 109, "pick": [28, 110], "pietro": 96, "pillow": 28, "pip": [28, 109], "pipe": [20, 109, 110], "pipe_perdomain": 20, "pipe_train_on_sourc": 20, "pipelin": [17, 21, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109], "place": 28, "plai": 110, "plan": [14, 16, 17, 36, 37, 40, 41, 109], "platform": 28, "pleas": [28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109], "plot": [5, 11, 16, 20, 21, 22, 25, 26, 68, 70, 71, 104, 113], "plot_adversari": [6, 10, 113], "plot_cross_val_score_for_da": [24, 27, 113], "plot_cross_validation_for_da": [25, 27, 113], "plot_cv_indic": 25, "plot_dasvm": [12, 19, 113], "plot_dataset_from_moons_distribut": [1, 5, 113], "plot_diverg": [7, 10, 113], "plot_gridsearch_for_da": [26, 27, 113], "plot_how_to_use_skada": [20, 23, 113], "plot_jdot_da": [13, 19, 113], "plot_label_prop_da": [14, 19, 113], "plot_lodo_indic": 25, "plot_method": 17, "plot_method_comparison": [21, 23, 113], "plot_monge_alignment_da": [15, 19, 113], "plot_optimal_transport": [8, 10, 113], "plot_optimal_transport_da": [16, 19, 113], "plot_reweight": [17, 19, 113], "plot_shifted_dataset": [2, 3, 5, 113], "plot_shifted_dataset_regress": [3, 5, 113], "plot_skada_logo": [22, 23, 113], "plot_st_shuffle_indic": 25, "plot_subspac": [18, 19, 113], "plot_subspace_and_classifi": 18, "plot_training_method": [9, 10, 113], "plot_variable_frequency_dataset": [4, 5, 113], "plot_weights_and_classifi": 17, "plt": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "plug": 110, "pmlr": [14, 109], "point": [12, 17, 18, 21, 22, 26, 28, 33, 42, 53, 54, 68, 69, 70, 71], "poli": 12, "polytechniqu": [3, 17, 18], "pos_sourc": [1, 12, 68], "pos_target": [1, 12, 68], "posit": [12, 53, 54, 68, 109, 110], "possibl": [2, 3, 12, 28, 29, 30, 40, 41, 53, 54, 67, 110], "possibli": 110, "pot": [22, 28], "power": [53, 54], "pp": [14, 72, 73, 86, 109], "pr": [28, 111], "practic": [28, 110], "pre": [28, 73, 86], "precis": [38, 39], "precomput": [53, 54], "predict": [12, 13, 14, 16, 17, 18, 20, 21, 26, 34, 36, 37, 40, 41, 42, 43, 45, 51, 53, 54, 57, 58, 59, 60, 61, 63, 65, 73, 75, 83, 92, 93, 96, 109, 110], "predict_log_proba": [57, 58, 59, 60], "predict_proba": [57, 58, 59, 60, 110, 111], "predictionentropyscor": [20, 26, 109, 110], "prefer": 28, "prefix": 28, "prepar": [24, 25, 26, 110], "preprint": [48, 109], "preprocess": [20, 21, 91, 109], "presenc": 105, "present": [12, 28], "preserv": [13, 25, 99, 102], "prevent": [53, 54, 111], "previou": 18, "previous": 110, "prgn": 25, "print": [1, 4, 9, 13, 14, 15, 17, 18, 20, 21, 24, 26, 28, 42, 66, 67, 91, 99, 102], "print_scores_as_t": [17, 18], "prior": [28, 91, 109], "probabl": [17, 20, 21, 26, 93], "probe": [95, 109], "problem": [12, 25, 31, 32, 33, 38, 39, 42, 44, 53, 54, 55, 56, 63, 64, 67, 92, 100, 109, 110], "procedur": 44, "proceed": [72, 73, 86, 109], "process": [13, 17, 42, 53, 54, 93, 95, 109, 110], "processor": [53, 54], "produc": [0, 99], "profil": 28, "program": 28, "progress": [12, 28], "project": [1, 6, 7, 8, 9, 18, 21, 28, 64], "propag": [11, 19, 21, 70, 71, 91, 104, 109, 113], "properli": 28, "proport": [14, 99], "propos": [14, 42, 47, 48, 72, 73, 86, 87, 97], "provid": [1, 20, 28, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 59, 60, 74, 77, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 109, 110], "psd": 4, "psu": 109, "public": 28, "publish": 109, "purpos": 17, "push": 28, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 110, 113], "pypi": 109, "pyplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26], "pytest": [28, 110], "python": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28], "python3": [6, 14, 16, 21], "pytorch": [72, 74, 77, 78, 80, 82, 84], "q": 109, "quadrat": 42, "queri": [53, 54], "quick": 109, "quickli": 28, "r": [2, 3, 13, 14, 16, 22, 31, 32, 38, 39, 42, 47, 48, 55, 56, 70, 109], "r82": 109, "radian": 22, "raeder": [2, 3, 70], "rais": [20, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "rakotomamonji": [13, 16, 31, 32, 38, 39, 42, 47, 55, 56, 109], "rand": [15, 22], "randint": [1, 4], "randn": 15, "random": [1, 2, 3, 4, 15, 21, 22, 24, 43, 44, 61, 62, 68, 69, 70, 71, 93, 95, 99, 100, 102], "random_se": [1, 4, 12, 17, 18, 21, 24, 25, 26, 110, 112], "random_st": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 43, 44, 61, 62, 68, 69, 70, 71, 93, 95, 99, 100, 101, 102, 110, 112], "randomli": [25, 110], "randomst": [22, 43, 44, 61, 62, 68, 69, 70, 71, 93, 95, 99], "rang": [4, 9, 12, 13, 15, 16, 18, 22, 25, 110], "rather": [6, 7, 8, 9, 18, 21], "ratio": [17, 70, 109], "ravel": [13, 14], "raw": 7, "rbf": [13, 14, 16, 18, 21, 31, 43, 44, 45, 46, 63, 64, 65, 66, 67, 70], "rcparam": 22, "rdbu": [17, 18, 21, 25], "re": [34, 35, 36, 37, 40, 41, 53, 54, 99], "reach": [14, 21, 109], "reader": 28, "readi": [24, 28, 110], "readm": 111, "real": 21, "reason": 110, "receiv": 28, "recent": 111, "recognit": [2, 3, 18, 29, 30, 65, 66, 70, 72, 73, 86, 109], "recommend": [6, 7, 8, 9, 18, 21, 28], "reconstruct": 110, "record": 28, "recov": 16, "red": 12, "redko": 109, "reduc": [76, 79, 81, 83, 93], "reduct": [80, 81, 96], "redund": 111, "ref": 18, "refer": [28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 110], "reflect": [110, 112], "reg": [6, 7, 9, 14, 16, 21, 29, 30, 40, 41, 47, 48, 51, 52, 67, 72, 74, 77, 78, 80, 82, 84], "reg_": [16, 21, 24, 26, 31, 32, 38, 39], "reg_cl": [8, 16, 21, 31, 32, 80, 81, 89], "reg_cor": 20, "reg_dist": [8, 80, 81, 89], "reg_k": [21, 49, 50], "reg_m": [21, 49, 50], "reglog": [13, 14], "regress": [3, 28, 42, 70], "regression_scaling_const": 70, "regressor": [11, 19, 42, 70, 104, 109, 113], "regular": [14, 16, 18, 20, 26, 29, 30, 31, 32, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 63, 64, 67, 72, 74, 77, 78, 80, 81, 82, 84, 89, 109], "regulari": [26, 111], "relat": 110, "releas": 109, "relev": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "relu": 9, "relu1": 9, "relu2": 9, "relu3": 9, "remain": [25, 101], "rememb": 33, "remi": [13, 14, 15, 16, 20, 80, 81, 89], "remov": [12, 75, 111], "rep1": 109, "repid": 109, "replac": [2, 3], "repo": 28, "report": 28, "repositori": 28, "repres": [12, 18, 53, 54, 99, 110], "represent": [75, 81, 93], "reproduc": [18, 28, 43, 44, 61, 62, 68, 69, 70, 71, 93], "request": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110], "requir": [20, 38, 39, 53, 54, 91, 109, 110], "requires_grad": [18, 21], "requires_grad_": [6, 7, 8, 9, 18, 21], "research": [77, 94, 109], "reshap": [13, 14, 18, 111], "resolv": 28, "respect": [50, 68, 69, 70, 71, 110], "response_method": [16, 17, 18, 21, 26], "restructuredtext": 28, "result": [25, 26, 28, 53, 54, 100], "result_cod": [14, 21], "result_code_str": [14, 21], "retain": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "retrain": 92, "return": [6, 15, 22, 25, 29, 31, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110], "return_dataset": [6, 7, 8, 9, 18, 21, 24, 25, 26, 68, 69, 70, 71], "return_x_i": [68, 69, 70, 71, 110], "reus": [110, 112], "review": 28, "reweight": [11, 18, 19, 20, 21, 34, 36, 40, 43, 45, 46, 51, 52, 53, 65, 66, 70, 104, 107, 109, 113], "rflamari": 111, "ridg": [13, 14, 42], "right": [3, 17, 18, 21, 25, 28, 97, 109], "risk": 42, "rng": 22, "robert": 109, "robust": 14, "rodriguez": [2, 3, 70], "root": 30, "rotat": 25, "rotated_curv": 22, "rotation_angl": 22, "rotation_cent": 22, "rotation_matrix": 22, "round": 22, "rout": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "row": [1, 2, 3], "rsda": 99, "rslab": 109, "ruben": [3, 12, 17, 18, 109], "rule": 28, "run": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 53, 54, 110], "running_loss": 9, "rustamov": [14, 109], "r\u00e9mi": 109, "s2": [25, 110], "s3": 7, "saenko": [7, 29, 30, 78, 79, 88, 109], "saito": [97, 109], "salt": 21, "same": [1, 2, 3, 4, 12, 13, 14, 18, 21, 24, 25, 35, 37, 41, 44, 46, 52, 53, 54, 84, 92, 103, 104, 105, 110], "sampl": [2, 3, 13, 14, 16, 17, 18, 20, 25, 28, 35, 45, 46, 54, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 86, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112], "sample_domain": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 68, 69, 70, 71, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "sample_domain_": 20, "sample_domain_lodo": 25, "sample_domain_t": 20, "sample_domain_test": [6, 7, 8, 9, 110], "sample_domain_train": [18, 110], "sample_domaini": 15, "sample_select": 70, "sample_weight": [17, 20, 21, 89, 103, 104, 109, 110, 111], "sampler": 111, "save": 22, "save_estim": [12, 33], "save_indic": [12, 33], "savefig": 22, "scalar": [70, 105, 111], "scale": [21, 50, 67, 82, 83, 90], "scan": 105, "scatter": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26], "scenario": 110, "sch\u00f6lkopf": [17, 45, 46, 109], "scikit": [20, 25, 28, 42, 91, 110, 111, 112], "scipi": [28, 45, 46, 53, 54], "sclaroff": 109, "score": [6, 7, 8, 12, 15, 16, 21, 24, 26, 57, 58, 59, 60, 70, 92, 93, 94, 95, 96, 97, 98, 109], "scorer": [20, 24, 26, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111], "scores_dict": [17, 18], "scores_no_da": 24, "scores_sup": 24, "script": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28], "search": [26, 53, 54, 109], "sebban": 109, "second": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 108], "section": [50, 51, 52, 110], "see": [2, 3, 12, 13, 14, 17, 18, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 79, 80, 81, 82, 83, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110], "seed": [1, 2, 3, 4, 15, 21], "seek": [18, 28], "seem": 28, "seen": 110, "select": [17, 25, 43, 44, 45, 46, 58, 59, 70, 93, 95, 109, 111, 112], "select_domain": [16, 110], "selector": [20, 91], "selectsourc": 20, "selectsourcetarget": 20, "self": [6, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "semi": [12, 14, 21, 109], "semi_label": 12, "send": 28, "separ": [24, 70, 105, 110], "septemb": [80, 81, 89], "sequenc": [68, 69, 70, 71, 103, 104, 108], "serv": [65, 66, 110], "set": [12, 17, 21, 25, 45, 46, 53, 54, 61, 62, 68, 69, 70, 71, 91, 97, 99, 100, 101, 110, 112], "set_config": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "set_decision_function_request": [57, 58, 59, 60], "set_fit_request": [17, 20, 21, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 109], "set_fit_requir": 109, "set_label": 3, "set_partial_fit_request": [57, 58, 59, 60], "set_predict_log_proba_request": [57, 58, 59, 60], "set_predict_proba_request": [57, 58, 59, 60], "set_predict_request": [57, 58, 59, 60], "set_score_request": [57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 110], "set_split_request": [99, 100, 101, 102], "set_titl": [1, 2, 3, 4, 12, 17, 18, 25], "set_transform_request": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60], "set_xlabel": [1, 2, 3, 4], "set_xlim": [12, 17, 18, 21], "set_xtick": [17, 18, 21], "set_ylabel": [1, 2, 3, 4, 21], "set_ylim": [12, 17, 18, 21], "set_ytick": [17, 18, 21], "setup": [10, 11, 78, 79, 113], "sever": [20, 21, 44, 110, 112], "shallow": 111, "shape": [12, 13, 14, 15, 16, 17, 18, 20, 22, 28, 30, 35, 37, 41, 44, 46, 50, 52, 53, 54, 69, 70, 96, 100, 103, 104, 105, 106, 107, 108], "share": [21, 91, 110], "sharei": [1, 2, 3, 4, 25], "sharex": [1, 2, 3, 4], "shift": [5, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25, 26, 34, 36, 37, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 61, 63, 65, 67, 68, 69, 70, 71, 94, 104, 107, 109, 110, 111, 112, 113], "shimodaira": [17, 36, 37, 40, 41, 109], "shinichi": 109, "ship": 110, "short": 20, "shorthand": 91, "should": [21, 28, 33, 35, 37, 41, 42, 44, 46, 52, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 74, 77, 80, 81, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 110], "show": [1, 2, 3, 4, 12, 13, 14, 17, 18, 21, 24, 25, 26, 53, 54], "showcas": 110, "shown": [110, 112], "shrink": 21, "shrinkag": [29, 30, 40, 41, 67], "shuffl": [69, 99, 101, 102], "shufflesplit": [24, 26, 110, 112], "si": [18, 67, 109], "sigma": [15, 70, 72, 73, 76, 86, 87], "sigma_ch": [4, 71], "sigma_freq": 71, "sigma_regress": 70, "sign": [92, 93, 94, 96, 97, 98], "signal": [4, 17, 53, 54, 71, 109], "signatur": [93, 94, 95, 98], "signific": 111, "similar": [97, 110], "similarli": [20, 110], "simpl": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 110], "simplest": 110, "simpli": 110, "simplifi": 110, "simultan": 110, "sin": 22, "sinc": [25, 108, 110], "singl": [20, 93, 101, 105, 110], "singleton": 101, "sinkhorn": [16, 31, 32, 38, 39], "sinno": [18, 63, 64], "site": [6, 14, 16, 21], "size": [17, 18, 21, 53, 54, 71, 74, 77, 84, 99], "skada": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 27, 110, 112, 113], "skada_logo": 22, "skada_logo_ful": 22, "skada_logo_full_whit": 22, "skip": 110, "sklearn": [12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 26, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 57, 58, 59, 60, 73, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110, 112], "skorch": [6, 7, 8, 109], "sleep": 109, "small": [28, 73, 76, 83, 86, 87, 90, 93], "smola": [17, 45, 46, 109], "smooth": [17, 45, 46, 53, 54, 111], "smooth_weight": [17, 45, 46], "snippet": 28, "so": [12, 18, 20, 110], "soft": [97, 109], "softmax": [6, 83], "softneighborhooddens": 110, "sol_": [13, 42], "solid": 21, "solid_capstyl": 22, "solomon": [14, 109], "solut": [18, 22, 42, 44, 64], "solv": [42, 43, 44], "solver": [16, 17, 22, 31, 32, 45, 46], "some": [0, 18, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "someth": 28, "sort": [25, 28], "sourc": [5, 6, 7, 8, 9, 11, 12, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113], "source_dict": 103, "source_idx": [106, 107, 110], "source_mark": [12, 18], "source_scor": 92, "source_target_split": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 24], "source_weights_": [46, 52], "sourceonli": 111, "sourcetargetselector": 110, "sourcetargetshufflesplit": [20, 25, 109, 110], "sourcetensor": [6, 7, 8, 9, 18, 21], "spa": [109, 111], "space": [17, 18, 74, 110], "spars": [53, 54], "spatial": [53, 54], "special": 110, "specif": [20, 28, 71, 75, 106, 110], "specifi": [91, 96, 103, 104, 105, 106, 107, 108], "spectral": 109, "speed": [53, 54], "spheric": 111, "sphericalkmean": 86, "sphinx": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28], "sphinx_gallery_thumbnail_numb": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25], "split": [20, 21, 24, 25, 43, 44, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112], "split_source_target": [103, 106], "splitter": [20, 25, 100], "springer": [80, 81, 89, 109], "sqeuclidean": [21, 31, 32, 38, 39, 55, 56], "sqrt": [45, 46], "squar": [12, 30, 42, 53, 54], "stabil": [73, 76, 83, 86, 87, 90, 111], "stack": 110, "standard": [53, 54, 68, 69, 70, 71, 110], "standardscal": [20, 91, 109, 110], "start": [20, 28, 109, 110, 112], "start_length": 22, "state": 12, "static": 110, "statist": [17, 36, 37, 40, 41, 109], "std": [13, 14, 20, 24, 71], "step": [9, 12, 16, 18, 21, 28, 33, 91], "still": 110, "stop": [31, 32, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 65, 66, 67], "store": [17, 18, 53, 54, 109], "str": [17, 18, 31, 32, 35, 37, 38, 39, 41, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 70, 72, 74, 77, 78, 80, 82, 84, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "straightforward": 110, "strategi": [18, 24, 26, 33, 43, 44, 92, 109], "strategylorenzo": 109, "stratifi": 102, "stratifieddomainshufflesplit": 25, "stratifieddomainsubsampl": 111, "stride": 9, "string": [45, 46, 53, 54, 91, 94, 95, 98], "strongli": 28, "structur": 110, "sub": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "subj_1": 110, "subj_12": 110, "subj_3": 110, "subject": [17, 18, 109], "submit": 28, "subplot": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "subplots_adjust": [1, 2, 3, 4, 25], "subsampl": 111, "subsequ": [20, 109], "subset": 103, "subspac": [2, 3, 11, 19, 21, 61, 62, 63, 64, 65, 67, 70, 104, 109, 113], "subspace_estim": 18, "subspacealign": [18, 21, 109], "subspacealignmentadapt": [21, 61, 110], "sugiyama": [17, 43, 44, 94, 109], "suit": 110, "suitabl": 17, "sum": [12, 22, 96], "sun": [7, 18, 29, 30, 65, 66, 78, 79, 88, 109], "supervis": [14, 24, 98, 100, 109, 110], "supervisedscor": [24, 110, 112], "support": [13, 80, 81], "supspac": 18, "suptitl": [1, 2, 3, 4, 12, 17, 18, 25], "sure": [12, 28], "suzuki": [17, 109], "svc": [12, 14, 15, 16, 18, 20, 21, 24, 26, 31, 33], "svg": 22, "svm": [12, 13, 14, 16, 18, 20, 21, 24, 26], "sy": 28, "synthet": 21, "system": [13, 28, 42, 109], "t": [2, 3, 7, 13, 16, 17, 18, 21, 22, 24, 25, 26, 50, 53, 54, 70, 82, 83, 90, 97, 109, 110, 111], "t10k": 7, "t2": [25, 110], "t_valu": 22, "tab10": [1, 2, 13, 14, 15, 16, 20], "taiji": 109, "takafumi": 109, "take": [17, 20, 53, 54, 110, 111], "taken": [12, 21, 44, 68, 69, 70, 71], "tao": [18, 67, 109], "tar": [21, 109], "target": [5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 29, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 79, 81, 83, 85, 86, 87, 88, 89, 90, 92, 94, 95, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "target_criterion": [80, 81], "target_dict": 103, "target_idx": [106, 110], "target_kmean": [73, 86], "target_label": [24, 25, 98, 110], "target_mark": [12, 18], "target_sample_weight": 89, "target_shift": [2, 3, 14, 21, 70], "targetaccuracyscor": [24, 110, 112], "targetonli": 111, "task": [6, 7, 8, 9, 13, 16, 28, 42, 85], "tca": [18, 21, 109], "team": [28, 109], "techniqu": [12, 33, 92, 109], "temperatur": [82, 83, 90, 97], "tensor": [6, 7, 8, 9, 18, 21, 86, 87, 88, 89, 90], "term": [80, 81, 89], "test": [0, 17, 21, 24, 25, 28, 99, 100, 101, 102, 109, 111, 112], "test_cv": 110, "test_index": [99, 102], "test_map": 110, "test_offic": 110, "test_pipelin": 110, "test_reweight": 110, "test_samples_gener": 110, "test_scor": 110, "test_siz": [24, 26, 99, 100, 101, 102, 110, 112], "test_subspac": 110, "teterwak": 109, "text": [12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 28], "textsf": 22, "tgnassou": 111, "than": [6, 7, 8, 9, 13, 17, 18, 21, 53, 54, 84], "thank": [24, 28], "thei": [12, 108, 110], "them": [53, 54, 110], "theme": 110, "theo": 109, "theoret": 42, "theori": [84, 85, 109], "therefor": 91, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 33, 35, 37, 41, 42, 44, 46, 52, 53, 54, 57, 58, 59, 60, 73, 75, 76, 79, 81, 83, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110, 111, 112], "thoma": 109, "those": [12, 20, 53, 54, 110], "though": 110, "three": 85, "threshold": [31, 32, 66, 67, 72, 73, 86], "through": [81, 85], "thu": [12, 17, 18, 25, 53, 54], "th\u00e9o": [6, 7, 8, 9, 22, 109], "tight": 22, "tight_layout": [18, 21, 22, 25], "time": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 91, 108], "titl": [2, 3, 13, 14, 15, 16, 20, 28, 109], "tjm": [18, 65, 66], "todo": 9, "togeth": [91, 110], "tol": [21, 24, 31, 32, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 65, 66, 67], "toler": [42, 43, 44, 45, 46, 49, 50, 51, 52], "tool": [28, 110], "toolbox": [22, 109], "top": 28, "torch": [6, 7, 8, 18, 21, 72, 74, 75, 77, 78, 80, 81, 82, 84, 89], "torr": [2, 3, 70], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 68, 69, 70, 71, 113], "toward": [93, 109], "tr": 25, "traceback": 28, "track": 28, "tracker": 28, "trade": [42, 65, 66], "tradeoff": [18, 65, 66], "train": [10, 11, 12, 16, 17, 18, 20, 21, 24, 25, 72, 74, 77, 78, 79, 80, 82, 84, 85, 99, 100, 101, 102, 109, 110, 112, 113], "train_index": [99, 102], "train_loss": [6, 7, 8, 9], "train_siz": [99, 100, 101, 102], "train_split": [6, 7, 8, 9], "train_test_split": 93, "tran": 109, "transact": [16, 18, 31, 32, 33, 38, 39, 47, 55, 56, 63, 64, 67, 92, 109], "transfer": [63, 64, 65, 66, 67, 76, 87, 109], "transfercomponentanalysi": [18, 21], "transfercomponentanalysisadapt": [21, 63, 110], "transferjointmatch": 18, "transferjointmatchingadapt": 65, "transfersubspacelearn": [18, 21], "transfersubspacelearningadapt": 21, "transform": [15, 16, 18, 20, 35, 37, 41, 44, 46, 50, 52, 54, 57, 58, 59, 60, 91, 109, 110, 111], "translat": [69, 70], "transpar": [21, 22], "transport": [10, 11, 13, 19, 31, 32, 38, 39, 42, 47, 48, 55, 56, 70, 80, 81, 89, 91, 104, 109, 113], "tree": [53, 54], "tri": [17, 75, 85], "trigger": 91, "true": [6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 29, 30, 33, 35, 37, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 73, 78, 79, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 109, 110], "try": [7, 14, 17, 21, 111], "tsang": 109, "tsl": [18, 21], "tt": 25, "tuia": [16, 31, 32, 38, 39, 47, 55, 56, 80, 81, 89, 109], "tune": [97, 109], "tupl": [68, 69, 70, 71, 91, 103, 110], "tutori": 28, "tuytelaar": 109, "tw": 7, "two": [17, 18, 28, 53, 54, 66, 67, 106, 109, 110, 111, 112], "type": [2, 3, 25, 28, 91, 95, 108, 109], "typic": [74, 110], "u": [16, 28, 70], "ubyt": 7, "unchang": [35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "uncom": 111, "under": [17, 28, 36, 37, 40, 41, 49, 50, 51, 52, 109], "under_sampl": 99, "understand": 91, "unifi": [2, 3, 70, 109], "uniform": [21, 53, 54, 89], "uniniti": [80, 81], "uninstanti": [74, 77, 84], "uniqu": [1, 106, 110, 111], "unit": 74, "unitn": 109, "unlabel": [17, 45, 46, 109], "unless": [53, 54], "unpredict": 42, "unseen": 110, "unsupervis": [18, 29, 30, 61, 62, 65, 66, 72, 73, 80, 81, 86, 89, 93, 95, 96, 97, 109], "up": [28, 101], "updat": [22, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 75, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 111], "update_predict": 110, "upper": [45, 46], "url": 109, "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 28, 35, 37, 44, 52, 54, 59, 62, 64, 66, 72, 73, 74, 75, 81, 82, 84, 86, 87, 89, 92, 93, 95, 97, 105, 109, 110, 112, 113], "usag": [28, 110], "user": [28, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109], "userwarn": [1, 6, 7, 8, 9, 14, 16, 18, 21], "usetex": 22, "usp": [6, 7, 8, 9], "ustinova": 109, "util": [17, 18, 21, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111], "v": [2, 3, 17, 18, 70, 109], "va": 25, "val": 109, "valid": [24, 26, 27, 33, 43, 44, 53, 54, 70, 92, 93, 94, 97, 99, 100, 101, 102, 105, 109, 110, 112, 113], "valu": [3, 12, 21, 29, 30, 33, 38, 39, 40, 41, 42, 53, 54, 55, 56, 66, 67, 69, 70, 96, 97, 99, 105, 106, 108, 110], "var_smooth": 91, "variabl": [100, 103, 104, 105], "variat": 42, "vector": [13, 53, 54], "verbos": [13, 21, 42, 66, 67, 91], "veri": 25, "verifi": 28, "versatil": [82, 83, 90, 109], "version": [25, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109], "vertic": 25, "via": [1, 18, 63, 64, 75, 97, 109], "view": [2, 3, 70], "viewabl": 28, "virgini": 109, "vision": [18, 29, 30, 61, 62, 65, 66, 72, 73, 80, 81, 86, 89, 97, 109], "visit": 109, "visual": [11, 18, 20, 27, 61, 62, 70, 99, 100, 101, 102, 109, 113], "visualis": 4, "vmax": [1, 2, 3, 12, 13, 14, 15, 16, 20, 25], "vmin": [12, 25], "von": [17, 109], "vstack": 15, "w": [17, 22, 44, 46, 50, 109], "w_": 50, "wa": [1, 4, 14, 68, 69, 70, 71], "wai": [28, 97, 109, 110, 112], "wang": [18, 65, 66, 82, 83, 90, 109], "want": [14, 16, 26, 53, 54], "warn": [14, 16, 18, 21, 26, 109], "wasn": 111, "wasserstein": [14, 31, 32, 38, 39, 55, 56, 109], "wave": 28, "we": [2, 3, 13, 14, 15, 16, 20, 22, 24, 25, 26, 28, 53, 54, 70, 105, 108, 109, 110, 112], "web": 28, "webcam": 110, "webcam_idx": 110, "weight": [17, 20, 21, 34, 35, 36, 37, 40, 41, 45, 46, 52, 53, 54, 75, 89, 93, 94, 109, 110], "weight_estim": [17, 21, 34, 35, 94], "weight_estimator_source_": [35, 94], "weight_estimator_target_": [35, 94], "well": [12, 14, 20, 28, 53, 54, 110], "were": [12, 110], "what": [16, 20, 28], "when": [12, 17, 18, 20, 28, 33, 52, 53, 54, 65, 66, 67, 68, 69, 70, 71, 91, 110, 111], "where": [12, 18, 28, 50, 68, 69, 70, 71, 100, 106, 109, 110], "whether": [92, 93, 94, 95, 96, 97, 98, 103, 106], "which": [12, 16, 17, 18, 20, 25, 28, 53, 54, 70, 71, 109, 110], "while": [12, 13, 25, 42, 91, 100, 101, 110, 112], "white": 22, "whole": 20, "whose": [72, 74, 77, 78, 80, 82, 84], "why": 28, "width": 110, "wip": 28, "wish": 28, "with_mean": 91, "with_std": 91, "within": [91, 110], "without": [9, 12, 17, 18, 21, 24, 28, 109, 110], "wolf": [17, 29, 30, 40, 41, 45, 46], "won": [17, 18, 110], "work": [14, 17, 18, 20, 28, 35, 37, 41, 44, 46, 52, 53, 54, 57, 58, 59, 60, 74, 77, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 110, 111], "workflow": [28, 110], "workshop": [7, 17, 53, 54, 78, 79, 88, 109], "would": [109, 110], "wrap": [20, 91], "wrapper": 20, "write": 28, "www": [7, 17], "x": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 35, 37, 41, 44, 46, 50, 52, 53, 54, 68, 69, 70, 71, 94, 95, 98, 99, 100, 102, 105, 108, 109, 110, 112], "x0": [18, 21], "x_": [12, 18], "x_adapt": [15, 16], "x_adapted_classreg": 16, "x_adapted_linear": 16, "x_adapted_sinkhorn": 16, "x_dict": 9, "x_lodo": 25, "x_max": [17, 18, 21], "x_min": [17, 18, 21], "x_point": 12, "x_sourc": [1, 2, 3, 4, 16, 24, 108, 111], "x_source_": [46, 50, 52, 64], "x_source_adapt": 16, "x_source_adapted_classreg": 16, "x_source_adapted_linear": 16, "x_source_adapted_sinkhorn": 16, "x_subj1": 110, "x_subj12": 110, "x_subj3": 110, "x_t": 12, "x_target": [1, 2, 3, 4, 16, 24, 26, 108, 110, 112], "x_target_": 64, "x_test": [6, 7, 8, 9, 110], "x_train": [18, 110], "xi": 15, "xiao": 109, "ximei": [82, 83, 90, 109], "xlabel": [24, 26], "xlim": [12, 22, 25], "xs_subspac": 18, "xt": [12, 13, 14, 15, 17, 18, 20, 21, 109], "xt_adapt": 18, "xt_subspac": 18, "xue": 109, "xx": [13, 14], "xxx": 102, "y": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 35, 37, 41, 44, 46, 50, 52, 54, 68, 69, 70, 71, 72, 73, 86, 90, 92, 93, 94, 95, 98, 99, 100, 102, 105, 108, 109, 110, 112], "y_": [18, 73, 81, 86, 89], "y_axi": 22, "y_lodo": 25, "y_max": [17, 18, 21], "y_min": [17, 18, 21], "y_point": 12, "y_pred": [92, 93], "y_pred_": [73, 85], "y_pred_t": [73, 81, 83, 85, 89], "y_sourc": [1, 2, 3, 4, 16, 24, 108], "y_subj1": 110, "y_subj12": 110, "y_subj3": 110, "y_target": [1, 2, 3, 4, 16, 24, 26, 108, 110, 112], "y_test": [6, 7, 8, 9, 110], "y_train": [18, 110], "y_true": 93, "yang": [72, 73, 86, 109], "yani": [25, 109], "yanislal": 111, "yann": 7, "yaroslav": 77, "year": 109, "yerr": 24, "yet": 109, "yh": 14, "yht": 14, "yi": 15, "yield": 100, "ying": [82, 83, 90, 109], "ylabel": 26, "ylim": [12, 25], "you": [14, 16, 20, 28, 35, 37, 41, 44, 46, 52, 54, 57, 58, 59, 60, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110], "your": [28, 109, 110], "yourlogin": 28, "ypred": 109, "ys_pred": [13, 14], "yt": [12, 13, 14, 15, 17, 18, 20, 21], "yt_pred": [13, 14, 20], "ytick": [24, 25], "yticklabel": 25, "yu": [18, 65, 66, 109], "yuchen": [84, 85], "yy": [13, 14], "z": [13, 14, 70, 109], "z_jcpot": 14, "zenodo": 111, "zero": 9, "zero_grad": 9, "zhang": [49, 50, 51, 52, 84, 85, 109], "zhao": 109, "zhiqe": 109, "zip": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 102], "zjdot": [13, 14]}, "titles": ["API and modules", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Plot dataset source domain and shifted target domain", "Computation times", "Adversarial domain adaptation methods.", "Divergence domain adaptation methods.", "Optimal transport domain adaptation methods.", "Training setup for deep DA method.", "Computation times", "Examples gallery", "DASVM classifier example", "JDOT Regressor and Classifier examples", "Label Propagation methods", "Multi-domain Linear Monge Alignment", "Optimal Transport Domain Adaptation (OTDA)", "Reweighting method example on covariate shift dataset", "Subspace method example on subspace shift dataset", "Computation times", "How to use SKADA", "Comparison of DA classification methods", "SKADA logo generation", "Computation times", "Using cross_val_score with skada", "Visualizing cross-validation behavior in skada", "Using GridSearchCV with skada", "Computation times", "Contributing to SKADA", "skada.CORAL", "skada.CORALAdapter", "skada.ClassRegularizerOTMapping", "skada.ClassRegularizerOTMappingAdapter", "skada.DASVMClassifier", "skada.DensityReweight", "skada.DensityReweightAdapter", "skada.DiscriminatorReweight", "skada.DiscriminatorReweightAdapter", "skada.EntropicOTMapping", "skada.EntropicOTMappingAdapter", "skada.GaussianReweight", "skada.GaussianReweightAdapter", "skada.JDOTRegressor", "skada.KLIEPReweight", "skada.KLIEPReweightAdapter", "skada.KMMReweight", "skada.KMMReweightAdapter", "skada.LinearOTMapping", "skada.LinearOTMappingAdapter", "skada.MMDLSConSMapping", "skada.MMDLSConSMappingAdapter", "skada.MMDTarSReweight", "skada.MMDTarSReweightAdapter", "skada.NearestNeighborReweight", "skada.NearestNeighborReweightAdapter", "skada.OTMapping", "skada.OTMappingAdapter", "skada.PerDomain", "skada.SelectSource", "skada.SelectTarget", "skada.Shared", "skada.SubspaceAlignment", "skada.SubspaceAlignmentAdapter", "skada.TransferComponentAnalysis", "skada.TransferComponentAnalysisAdapter", "skada.TransferJointMatching", "skada.TransferJointMatchingAdapter", "skada.TransferSubspaceLearning", "skada.datasets.make_dataset_from_moons_distribution", "skada.datasets.make_shifted_blobs", "skada.datasets.make_shifted_datasets", "skada.datasets.make_variable_frequency_dataset", "skada.deep.CAN", "skada.deep.CANLoss", "skada.deep.CDAN", "skada.deep.CDANLoss", "skada.deep.DANLoss", "skada.deep.DANN", "skada.deep.DeepCoral", "skada.deep.DeepCoralLoss", "skada.deep.DeepJDOT", "skada.deep.DeepJDOTLoss", "skada.deep.MCC", "skada.deep.MCCLoss", "skada.deep.MDD", "skada.deep.MDDLoss", "skada.deep.losses.cdd_loss", "skada.deep.losses.dan_loss", "skada.deep.losses.deepcoral_loss", "skada.deep.losses.deepjdot_loss", "skada.deep.losses.mcc_loss", "skada.make_da_pipeline", "skada.metrics.CircularValidation", "skada.metrics.DeepEmbeddedValidation", "skada.metrics.ImportanceWeightedScorer", "skada.metrics.MixValScorer", "skada.metrics.PredictionEntropyScorer", "skada.metrics.SoftNeighborhoodDensity", "skada.metrics.SupervisedScorer", "skada.model_selection.DomainShuffleSplit", "skada.model_selection.LeaveOneDomainOut", "skada.model_selection.SourceTargetShuffleSplit", "skada.model_selection.StratifiedDomainShuffleSplit", "skada.per_domain_split", "skada.source_target_split", "skada.utils.check_X_y_domain", "skada.utils.extract_domains_indices", "skada.utils.extract_source_indices", "skada.utils.source_target_merge", "SKADA: SciKit Domain Adaptation", "Users Guide", "Release of SKADA", "Metrics: Compute score for domain adaptation problems", "Computation times"], "titleterms": {"": 111, "0": 111, "2": [12, 17, 18], "2d": [12, 17, 18], "4": 111, "The": 18, "acknowledg": 109, "adapt": [6, 7, 8, 11, 15, 16, 17, 18, 20, 109, 110, 112], "advanc": 20, "adversari": 6, "algorithm": 109, "align": [0, 15, 18], "analysi": 18, "api": 0, "behavior": 25, "between": [17, 18], "bug": 28, "can": 72, "canloss": 73, "cdan": 74, "cdanloss": 75, "cdd_loss": 86, "chang": 111, "check_x_y_domain": 105, "checklist": 28, "circularvalid": 92, "class": [12, 17, 18], "classic": [6, 7, 8], "classif": [13, 14, 15, 21], "classifi": [12, 13, 14, 15, 20], "classregularizerotmap": 31, "classregularizerotmappingadapt": 32, "comparison": [17, 18, 21], "compat": 0, "compon": 18, "comput": [5, 10, 19, 23, 27, 112, 113], "concept": [13, 14, 15, 16], "content": 109, "contribut": 28, "contributor": 28, "coral": 29, "coraladapt": 30, "covari": 17, "cross": [20, 25], "cross_val_scor": 24, "da": [0, 9, 11, 16, 20, 21, 109, 110], "dan_loss": 87, "danloss": 76, "dann": [6, 77], "dasvm": 12, "dasvmclassifi": [12, 33], "data": [13, 14, 15], "dataset": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 68, 69, 70, 71, 110], "deep": [0, 9, 11, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 109], "deepcor": [7, 78], "deepcoral_loss": 88, "deepcoralloss": 79, "deepembeddedvalid": 93, "deepjdot": [8, 80], "deepjdot_loss": 89, "deepjdotloss": 81, "densiti": 17, "densityreweight": 34, "densityreweightadapt": 35, "differ": 16, "discr": 17, "discriminatorreweight": 36, "discriminatorreweightadapt": 37, "diverg": 7, "document": 28, "doe": 16, "domain": [1, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 18, 109, 110, 112], "domainshufflesplit": 99, "drift": [13, 14, 15, 16], "entropicotmap": 38, "entropicotmappingadapt": 39, "estim": [20, 110], "exampl": [11, 12, 13, 17, 18, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 60, 61, 63, 65, 67, 68, 70, 71, 77, 78, 79, 80, 91, 94, 96, 98, 99, 100, 101, 102, 104, 107, 109], "extract_domains_indic": 106, "extract_source_indic": 107, "file": 28, "full": 14, "galleri": 11, "gaussian": 17, "gaussianreweight": 40, "gaussianreweightadapt": 41, "gener": [12, 13, 14, 15, 16, 17, 18, 22], "grid": 20, "gridsearchcv": 26, "guid": 110, "how": [16, 20, 28], "illustr": [13, 14, 16, 17, 18], "imag": [6, 7, 8, 9], "implement": 109, "importanceweightedscor": 94, "indic": 109, "instal": 109, "jcpot": 14, "jdot": 13, "jdotregressor": 42, "joint": 18, "kernel": 17, "kliepreweight": [17, 43], "kliepreweightadapt": 44, "kmmreweight": 45, "kmmreweightadapt": 46, "labe": 14, "label": [12, 14], "labelprop": 14, "learn": [0, 11, 18, 109], "leaveonedomainout": 100, "licens": 109, "linear": 15, "linearotmap": 47, "linearotmappingadapt": 48, "load": [6, 7, 8, 9], "logo": 22, "loss": [0, 86, 87, 88, 89, 90], "main": 0, "make_da_pipelin": 91, "make_dataset_from_moons_distribut": 68, "make_shifted_blob": 69, "make_shifted_dataset": 70, "make_variable_frequency_dataset": 71, "map": 0, "match": [17, 18], "mcc": 82, "mcc_loss": 90, "mccloss": 83, "mdd": 84, "mddloss": 85, "mean": 17, "method": [0, 6, 7, 8, 9, 11, 14, 16, 17, 18, 21], "metric": [0, 92, 93, 94, 95, 96, 97, 98, 109, 110, 112], "mixvalscor": 95, "mmdlsconsmap": 49, "mmdlsconsmappingadapt": 50, "mmdtarsreweight": 51, "mmdtarsreweightadapt": 52, "model": [0, 6, 7, 8, 14, 110], "model_select": [0, 99, 100, 101, 102], "modul": 0, "mong": 15, "multi": 15, "nearest": 17, "nearestneighborreweight": 53, "nearestneighborreweightadapt": 54, "neighbor": 17, "new": 28, "optim": [8, 16], "ot": 13, "otda": 16, "other": 0, "otmap": 55, "otmappingadapt": 56, "our": [12, 17, 18], "paramet": 9, "per_domain_split": 103, "perdomain": 57, "pipelin": [0, 20, 110], "plan": 13, "plot": [1, 2, 3, 4, 12, 13, 14, 15, 17, 18], "predictionentropyscor": 96, "problem": [16, 17, 18, 112], "procedur": 11, "propag": 14, "pull": 28, "pytorch": 109, "refer": 109, "regress": [13, 14], "regressor": [13, 14], "releas": 111, "request": 28, "reweight": [0, 17], "sampl": [0, 110], "scikit": 109, "score": [17, 18, 20, 110, 112], "search": 20, "select": [0, 110], "selector": 110, "selectsourc": 58, "selecttarget": 59, "setup": 9, "share": 60, "shift": [1, 2, 3, 4, 17, 18], "short": 109, "skada": [0, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111], "skorch": 9, "softneighborhooddens": 97, "sourc": [1, 2, 3, 4, 13, 14, 15], "source_target_merg": 108, "source_target_split": 104, "sourcetargetshufflesplit": 101, "splitter": 110, "stratifieddomainshufflesplit": 102, "subspac": 18, "subspacealign": 61, "subspacealignmentadapt": 62, "supervisedscor": 98, "svc": 13, "tabl": 109, "target": [1, 2, 3, 4, 12], "test": 110, "time": [5, 10, 19, 23, 27, 110, 113], "tip": 28, "torch": [0, 9], "train": [6, 7, 8, 9, 13, 14, 15], "transfer": 18, "transfercomponentanalysi": 63, "transfercomponentanalysisadapt": 64, "transferjointmatch": 65, "transferjointmatchingadapt": 66, "transfersubspacelearn": 67, "transport": [8, 16], "us": [20, 24, 26, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 60, 61, 63, 65, 67, 68, 70, 71, 77, 78, 79, 80, 91, 94, 96, 98, 99, 100, 101, 102, 104, 107], "usag": 12, "user": 110, "util": [0, 105, 106, 107, 108], "v0": 111, "valid": [11, 20, 25], "visual": 25, "we": [12, 17, 18], "what": 111, "work": 16}})