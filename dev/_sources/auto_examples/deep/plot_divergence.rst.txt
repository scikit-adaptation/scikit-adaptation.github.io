
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/deep/plot_divergence.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_deep_plot_divergence.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_deep_plot_divergence.py:


Divergence domain adaptation methods.
==========================================

This example illustrates the DeepCoral method from [1]
on a simple image classification task.

.. [1]  Baochen Sun and Kate Saenko. Deep coral:
        Correlation alignment for deep domain
        adaptation. In ECCV Workshops, 2016.

.. GENERATED FROM PYTHON SOURCE LINES 13-18

.. code-block:: Python

    # Author: Théo Gnassounou
    #
    # License: BSD 3-Clause
    # sphinx_gallery_thumbnail_number = 4








.. GENERATED FROM PYTHON SOURCE LINES 19-26

.. code-block:: Python

    from skorch import NeuralNetClassifier
    from torch import nn

    from skada.datasets import load_mnist_usps
    from skada.deep import DeepCoral
    from skada.deep.modules import MNISTtoUSPSNet








.. GENERATED FROM PYTHON SOURCE LINES 27-29

Load the image datasets
----------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 29-34

.. code-block:: Python


    dataset = load_mnist_usps(n_classes=2, n_samples=0.5, return_dataset=True)
    X, y, sample_domain = dataset.pack_train(as_sources=["mnist"], as_targets=["usps"])
    X_test, y_test, sample_domain_test = dataset.pack_test(as_targets=["usps"])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz
    Failed to download (trying next):
    HTTP Error 403: Forbidden

    Downloading https://ossci-datasets.s3.amazonaws.com/mnist/train-images-idx3-ubyte.gz
    Downloading https://ossci-datasets.s3.amazonaws.com/mnist/train-images-idx3-ubyte.gz to ./datasets/MNIST/raw/train-images-idx3-ubyte.gz
      0%|          | 0/9912422 [00:00<?, ?it/s]    100%|██████████| 9912422/9912422 [00:00<00:00, 134816679.19it/s]
    Extracting ./datasets/MNIST/raw/train-images-idx3-ubyte.gz to ./datasets/MNIST/raw

    Downloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz
    Failed to download (trying next):
    HTTP Error 403: Forbidden

    Downloading https://ossci-datasets.s3.amazonaws.com/mnist/train-labels-idx1-ubyte.gz
    Downloading https://ossci-datasets.s3.amazonaws.com/mnist/train-labels-idx1-ubyte.gz to ./datasets/MNIST/raw/train-labels-idx1-ubyte.gz
      0%|          | 0/28881 [00:00<?, ?it/s]    100%|██████████| 28881/28881 [00:00<00:00, 79225437.43it/s]
    Extracting ./datasets/MNIST/raw/train-labels-idx1-ubyte.gz to ./datasets/MNIST/raw

    Downloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz
    Failed to download (trying next):
    HTTP Error 403: Forbidden

    Downloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-images-idx3-ubyte.gz
    Downloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-images-idx3-ubyte.gz to ./datasets/MNIST/raw/t10k-images-idx3-ubyte.gz
      0%|          | 0/1648877 [00:00<?, ?it/s]    100%|██████████| 1648877/1648877 [00:00<00:00, 185189219.35it/s]
    Extracting ./datasets/MNIST/raw/t10k-images-idx3-ubyte.gz to ./datasets/MNIST/raw

    Downloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz
    Failed to download (trying next):
    HTTP Error 403: Forbidden

    Downloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-labels-idx1-ubyte.gz
    Downloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-labels-idx1-ubyte.gz to ./datasets/MNIST/raw/t10k-labels-idx1-ubyte.gz
      0%|          | 0/4542 [00:00<?, ?it/s]    100%|██████████| 4542/4542 [00:00<00:00, 14270059.00it/s]
    Extracting ./datasets/MNIST/raw/t10k-labels-idx1-ubyte.gz to ./datasets/MNIST/raw

    /home/circleci/project/skada/datasets/_mnist_usps.py:72: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
      mnist_target = torch.tensor(mnist_dataset.targets)
    Downloading https://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/multiclass/usps.t.bz2 to ./datasets/usps.t.bz2
      0%|          | 0/1831726 [00:00<?, ?it/s]      2%|▏         | 32768/1831726 [00:00<00:11, 162863.40it/s]      4%|▎         | 65536/1831726 [00:00<00:17, 101888.33it/s]      5%|▌         | 98304/1831726 [00:00<00:14, 122835.21it/s]     11%|█         | 196608/1831726 [00:01<00:08, 182497.75it/s]     13%|█▎        | 229376/1831726 [00:01<00:09, 177279.78it/s]     16%|█▌        | 294912/1831726 [00:01<00:07, 217332.06it/s]     18%|█▊        | 327680/1831726 [00:01<00:07, 202001.52it/s]     20%|█▉        | 360448/1831726 [00:02<00:07, 190759.96it/s]     21%|██▏       | 393216/1831726 [00:02<00:07, 182560.86it/s]     25%|██▌       | 458752/1831726 [00:02<00:06, 223942.76it/s]     27%|██▋       | 491520/1831726 [00:02<00:06, 205811.64it/s]     29%|██▊       | 524288/1831726 [00:02<00:06, 193035.78it/s]     30%|███       | 557056/1831726 [00:03<00:06, 183897.88it/s]     34%|███▍      | 622592/1831726 [00:03<00:05, 225843.64it/s]     36%|███▌      | 655360/1831726 [00:03<00:05, 206890.07it/s]     38%|███▊      | 688128/1831726 [00:03<00:05, 193619.68it/s]     39%|███▉      | 720896/1831726 [00:03<00:06, 184286.67it/s]     41%|████      | 753664/1831726 [00:04<00:06, 177744.89it/s]     45%|████▍     | 819200/1831726 [00:04<00:04, 221612.35it/s]     47%|████▋     | 851968/1831726 [00:04<00:04, 203807.99it/s]     48%|████▊     | 884736/1831726 [00:04<00:04, 191308.56it/s]     52%|█████▏    | 950272/1831726 [00:04<00:03, 231236.77it/s]     54%|█████▎    | 983040/1831726 [00:05<00:04, 210687.86it/s]     55%|█████▌    | 1015808/1831726 [00:05<00:04, 196390.58it/s]     59%|█████▉    | 1081344/1831726 [00:05<00:03, 234588.71it/s]     61%|██████    | 1114112/1831726 [00:05<00:03, 213041.96it/s]     64%|██████▍   | 1179648/1831726 [00:05<00:02, 246317.58it/s]     66%|██████▌   | 1212416/1831726 [00:06<00:02, 221292.34it/s]     70%|██████▉   | 1277952/1831726 [00:06<00:02, 252088.35it/s]     72%|███████▏  | 1310720/1831726 [00:06<00:02, 225319.06it/s]     75%|███████▌  | 1376256/1831726 [00:06<00:01, 254955.18it/s]     77%|███████▋  | 1409024/1831726 [00:06<00:01, 227496.41it/s]     81%|████████  | 1474560/1831726 [00:07<00:01, 256538.32it/s]     82%|████████▏ | 1507328/1831726 [00:07<00:01, 228345.25it/s]     86%|████████▌ | 1572864/1831726 [00:07<00:01, 257149.59it/s]     89%|████████▉ | 1638400/1831726 [00:07<00:00, 277367.77it/s]     91%|█████████ | 1671168/1831726 [00:07<00:00, 242949.85it/s]     95%|█████████▍| 1736704/1831726 [00:08<00:00, 267481.39it/s]     98%|█████████▊| 1802240/1831726 [00:08<00:00, 284655.26it/s]    100%|██████████| 1831726/1831726 [00:08<00:00, 221253.06it/s]




.. GENERATED FROM PYTHON SOURCE LINES 35-37

Train a classic model
----------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 37-48

.. code-block:: Python

    model = NeuralNetClassifier(
        MNISTtoUSPSNet(),
        criterion=nn.CrossEntropyLoss(),
        batch_size=128,
        max_epochs=5,
        train_split=False,
        lr=1e-2,
    )
    model.fit(X[sample_domain > 0], y[sample_domain > 0])
    model.score(X_test, y=y_test)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      epoch    train_loss     dur
    -------  ------------  ------
          1        1.5673  4.3025
          2        0.2467  3.4094
          3        0.0877  3.6964
          4        0.0519  3.6943
          5        0.0319  3.7984

    0.9356913183279743



.. GENERATED FROM PYTHON SOURCE LINES 49-51

Train a DeepCoral model
----------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 51-62

.. code-block:: Python

    model = DeepCoral(
        MNISTtoUSPSNet(),
        layer_name="fc1",
        batch_size=128,
        max_epochs=5,
        train_split=False,
        reg=1,
        lr=1e-2,
    )
    model.fit(X, y, sample_domain=sample_domain)
    model.score(X_test, y_test, sample_domain=sample_domain_test)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      epoch    train_loss     dur
    -------  ------------  ------
          1        1.4990  6.7930
          2        0.3750  7.6929
          3        0.1682  8.1983
          4        0.1196  8.1009
          5        0.0932  8.4986

    0.8681672025723473




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 13.183 seconds)


.. _sphx_glr_download_auto_examples_deep_plot_divergence.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_divergence.ipynb <plot_divergence.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_divergence.py <plot_divergence.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
